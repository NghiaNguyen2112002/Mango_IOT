
Mango_Garden.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008554  08000110  08000110  00010110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000600  08008668  08008668  00018668  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008c68  08008c68  000201ec  2**0
                  CONTENTS
  4 .ARM          00000000  08008c68  08008c68  000201ec  2**0
                  CONTENTS
  5 .preinit_array 00000000  08008c68  08008c68  000201ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008c68  08008c68  00018c68  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08008c6c  08008c6c  00018c6c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001ec  20000000  08008c70  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000294  200001ec  08008e5c  000201ec  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000480  08008e5c  00020480  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201ec  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000fd80  00000000  00000000  00020215  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000287b  00000000  00000000  0002ff95  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000010e8  00000000  00000000  00032810  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000fe0  00000000  00000000  000338f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a250  00000000  00000000  000348d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001415c  00000000  00000000  0004eb28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008ec87  00000000  00000000  00062c84  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000f190b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005a94  00000000  00000000  000f195c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001ec 	.word	0x200001ec
 800012c:	00000000 	.word	0x00000000
 8000130:	0800864c 	.word	0x0800864c

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001f0 	.word	0x200001f0
 800014c:	0800864c 	.word	0x0800864c

08000150 <strcmp>:
 8000150:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000154:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000158:	2a01      	cmp	r2, #1
 800015a:	bf28      	it	cs
 800015c:	429a      	cmpcs	r2, r3
 800015e:	d0f7      	beq.n	8000150 <strcmp>
 8000160:	1ad0      	subs	r0, r2, r3
 8000162:	4770      	bx	lr

08000164 <strlen>:
 8000164:	4603      	mov	r3, r0
 8000166:	f813 2b01 	ldrb.w	r2, [r3], #1
 800016a:	2a00      	cmp	r2, #0
 800016c:	d1fb      	bne.n	8000166 <strlen+0x2>
 800016e:	1a18      	subs	r0, r3, r0
 8000170:	3801      	subs	r0, #1
 8000172:	4770      	bx	lr

08000174 <__aeabi_fmul>:
 8000174:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000178:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 800017c:	bf1e      	ittt	ne
 800017e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000182:	ea92 0f0c 	teqne	r2, ip
 8000186:	ea93 0f0c 	teqne	r3, ip
 800018a:	d06f      	beq.n	800026c <__aeabi_fmul+0xf8>
 800018c:	441a      	add	r2, r3
 800018e:	ea80 0c01 	eor.w	ip, r0, r1
 8000192:	0240      	lsls	r0, r0, #9
 8000194:	bf18      	it	ne
 8000196:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 800019a:	d01e      	beq.n	80001da <__aeabi_fmul+0x66>
 800019c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80001a0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80001a4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80001a8:	fba0 3101 	umull	r3, r1, r0, r1
 80001ac:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 80001b0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80001b4:	bf3e      	ittt	cc
 80001b6:	0049      	lslcc	r1, r1, #1
 80001b8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80001bc:	005b      	lslcc	r3, r3, #1
 80001be:	ea40 0001 	orr.w	r0, r0, r1
 80001c2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80001c6:	2afd      	cmp	r2, #253	; 0xfd
 80001c8:	d81d      	bhi.n	8000206 <__aeabi_fmul+0x92>
 80001ca:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80001ce:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80001d2:	bf08      	it	eq
 80001d4:	f020 0001 	biceq.w	r0, r0, #1
 80001d8:	4770      	bx	lr
 80001da:	f090 0f00 	teq	r0, #0
 80001de:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80001e2:	bf08      	it	eq
 80001e4:	0249      	lsleq	r1, r1, #9
 80001e6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80001ea:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80001ee:	3a7f      	subs	r2, #127	; 0x7f
 80001f0:	bfc2      	ittt	gt
 80001f2:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80001f6:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80001fa:	4770      	bxgt	lr
 80001fc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000200:	f04f 0300 	mov.w	r3, #0
 8000204:	3a01      	subs	r2, #1
 8000206:	dc5d      	bgt.n	80002c4 <__aeabi_fmul+0x150>
 8000208:	f112 0f19 	cmn.w	r2, #25
 800020c:	bfdc      	itt	le
 800020e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000212:	4770      	bxle	lr
 8000214:	f1c2 0200 	rsb	r2, r2, #0
 8000218:	0041      	lsls	r1, r0, #1
 800021a:	fa21 f102 	lsr.w	r1, r1, r2
 800021e:	f1c2 0220 	rsb	r2, r2, #32
 8000222:	fa00 fc02 	lsl.w	ip, r0, r2
 8000226:	ea5f 0031 	movs.w	r0, r1, rrx
 800022a:	f140 0000 	adc.w	r0, r0, #0
 800022e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000232:	bf08      	it	eq
 8000234:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000238:	4770      	bx	lr
 800023a:	f092 0f00 	teq	r2, #0
 800023e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000242:	bf02      	ittt	eq
 8000244:	0040      	lsleq	r0, r0, #1
 8000246:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800024a:	3a01      	subeq	r2, #1
 800024c:	d0f9      	beq.n	8000242 <__aeabi_fmul+0xce>
 800024e:	ea40 000c 	orr.w	r0, r0, ip
 8000252:	f093 0f00 	teq	r3, #0
 8000256:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800025a:	bf02      	ittt	eq
 800025c:	0049      	lsleq	r1, r1, #1
 800025e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000262:	3b01      	subeq	r3, #1
 8000264:	d0f9      	beq.n	800025a <__aeabi_fmul+0xe6>
 8000266:	ea41 010c 	orr.w	r1, r1, ip
 800026a:	e78f      	b.n	800018c <__aeabi_fmul+0x18>
 800026c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000270:	ea92 0f0c 	teq	r2, ip
 8000274:	bf18      	it	ne
 8000276:	ea93 0f0c 	teqne	r3, ip
 800027a:	d00a      	beq.n	8000292 <__aeabi_fmul+0x11e>
 800027c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000280:	bf18      	it	ne
 8000282:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000286:	d1d8      	bne.n	800023a <__aeabi_fmul+0xc6>
 8000288:	ea80 0001 	eor.w	r0, r0, r1
 800028c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000290:	4770      	bx	lr
 8000292:	f090 0f00 	teq	r0, #0
 8000296:	bf17      	itett	ne
 8000298:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 800029c:	4608      	moveq	r0, r1
 800029e:	f091 0f00 	teqne	r1, #0
 80002a2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 80002a6:	d014      	beq.n	80002d2 <__aeabi_fmul+0x15e>
 80002a8:	ea92 0f0c 	teq	r2, ip
 80002ac:	d101      	bne.n	80002b2 <__aeabi_fmul+0x13e>
 80002ae:	0242      	lsls	r2, r0, #9
 80002b0:	d10f      	bne.n	80002d2 <__aeabi_fmul+0x15e>
 80002b2:	ea93 0f0c 	teq	r3, ip
 80002b6:	d103      	bne.n	80002c0 <__aeabi_fmul+0x14c>
 80002b8:	024b      	lsls	r3, r1, #9
 80002ba:	bf18      	it	ne
 80002bc:	4608      	movne	r0, r1
 80002be:	d108      	bne.n	80002d2 <__aeabi_fmul+0x15e>
 80002c0:	ea80 0001 	eor.w	r0, r0, r1
 80002c4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80002c8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80002cc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80002d0:	4770      	bx	lr
 80002d2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80002d6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80002da:	4770      	bx	lr

080002dc <__aeabi_drsub>:
 80002dc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002e0:	e002      	b.n	80002e8 <__adddf3>
 80002e2:	bf00      	nop

080002e4 <__aeabi_dsub>:
 80002e4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002e8 <__adddf3>:
 80002e8:	b530      	push	{r4, r5, lr}
 80002ea:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002ee:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002f2:	ea94 0f05 	teq	r4, r5
 80002f6:	bf08      	it	eq
 80002f8:	ea90 0f02 	teqeq	r0, r2
 80002fc:	bf1f      	itttt	ne
 80002fe:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000302:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000306:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800030a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800030e:	f000 80e2 	beq.w	80004d6 <__adddf3+0x1ee>
 8000312:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000316:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800031a:	bfb8      	it	lt
 800031c:	426d      	neglt	r5, r5
 800031e:	dd0c      	ble.n	800033a <__adddf3+0x52>
 8000320:	442c      	add	r4, r5
 8000322:	ea80 0202 	eor.w	r2, r0, r2
 8000326:	ea81 0303 	eor.w	r3, r1, r3
 800032a:	ea82 0000 	eor.w	r0, r2, r0
 800032e:	ea83 0101 	eor.w	r1, r3, r1
 8000332:	ea80 0202 	eor.w	r2, r0, r2
 8000336:	ea81 0303 	eor.w	r3, r1, r3
 800033a:	2d36      	cmp	r5, #54	; 0x36
 800033c:	bf88      	it	hi
 800033e:	bd30      	pophi	{r4, r5, pc}
 8000340:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000344:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000348:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 800034c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000350:	d002      	beq.n	8000358 <__adddf3+0x70>
 8000352:	4240      	negs	r0, r0
 8000354:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000358:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 800035c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000360:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000364:	d002      	beq.n	800036c <__adddf3+0x84>
 8000366:	4252      	negs	r2, r2
 8000368:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800036c:	ea94 0f05 	teq	r4, r5
 8000370:	f000 80a7 	beq.w	80004c2 <__adddf3+0x1da>
 8000374:	f1a4 0401 	sub.w	r4, r4, #1
 8000378:	f1d5 0e20 	rsbs	lr, r5, #32
 800037c:	db0d      	blt.n	800039a <__adddf3+0xb2>
 800037e:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000382:	fa22 f205 	lsr.w	r2, r2, r5
 8000386:	1880      	adds	r0, r0, r2
 8000388:	f141 0100 	adc.w	r1, r1, #0
 800038c:	fa03 f20e 	lsl.w	r2, r3, lr
 8000390:	1880      	adds	r0, r0, r2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	4159      	adcs	r1, r3
 8000398:	e00e      	b.n	80003b8 <__adddf3+0xd0>
 800039a:	f1a5 0520 	sub.w	r5, r5, #32
 800039e:	f10e 0e20 	add.w	lr, lr, #32
 80003a2:	2a01      	cmp	r2, #1
 80003a4:	fa03 fc0e 	lsl.w	ip, r3, lr
 80003a8:	bf28      	it	cs
 80003aa:	f04c 0c02 	orrcs.w	ip, ip, #2
 80003ae:	fa43 f305 	asr.w	r3, r3, r5
 80003b2:	18c0      	adds	r0, r0, r3
 80003b4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003b8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003bc:	d507      	bpl.n	80003ce <__adddf3+0xe6>
 80003be:	f04f 0e00 	mov.w	lr, #0
 80003c2:	f1dc 0c00 	rsbs	ip, ip, #0
 80003c6:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ca:	eb6e 0101 	sbc.w	r1, lr, r1
 80003ce:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003d2:	d31b      	bcc.n	800040c <__adddf3+0x124>
 80003d4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003d8:	d30c      	bcc.n	80003f4 <__adddf3+0x10c>
 80003da:	0849      	lsrs	r1, r1, #1
 80003dc:	ea5f 0030 	movs.w	r0, r0, rrx
 80003e0:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003e4:	f104 0401 	add.w	r4, r4, #1
 80003e8:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003ec:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003f0:	f080 809a 	bcs.w	8000528 <__adddf3+0x240>
 80003f4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003f8:	bf08      	it	eq
 80003fa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003fe:	f150 0000 	adcs.w	r0, r0, #0
 8000402:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000406:	ea41 0105 	orr.w	r1, r1, r5
 800040a:	bd30      	pop	{r4, r5, pc}
 800040c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000410:	4140      	adcs	r0, r0
 8000412:	eb41 0101 	adc.w	r1, r1, r1
 8000416:	3c01      	subs	r4, #1
 8000418:	bf28      	it	cs
 800041a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800041e:	d2e9      	bcs.n	80003f4 <__adddf3+0x10c>
 8000420:	f091 0f00 	teq	r1, #0
 8000424:	bf04      	itt	eq
 8000426:	4601      	moveq	r1, r0
 8000428:	2000      	moveq	r0, #0
 800042a:	fab1 f381 	clz	r3, r1
 800042e:	bf08      	it	eq
 8000430:	3320      	addeq	r3, #32
 8000432:	f1a3 030b 	sub.w	r3, r3, #11
 8000436:	f1b3 0220 	subs.w	r2, r3, #32
 800043a:	da0c      	bge.n	8000456 <__adddf3+0x16e>
 800043c:	320c      	adds	r2, #12
 800043e:	dd08      	ble.n	8000452 <__adddf3+0x16a>
 8000440:	f102 0c14 	add.w	ip, r2, #20
 8000444:	f1c2 020c 	rsb	r2, r2, #12
 8000448:	fa01 f00c 	lsl.w	r0, r1, ip
 800044c:	fa21 f102 	lsr.w	r1, r1, r2
 8000450:	e00c      	b.n	800046c <__adddf3+0x184>
 8000452:	f102 0214 	add.w	r2, r2, #20
 8000456:	bfd8      	it	le
 8000458:	f1c2 0c20 	rsble	ip, r2, #32
 800045c:	fa01 f102 	lsl.w	r1, r1, r2
 8000460:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000464:	bfdc      	itt	le
 8000466:	ea41 010c 	orrle.w	r1, r1, ip
 800046a:	4090      	lslle	r0, r2
 800046c:	1ae4      	subs	r4, r4, r3
 800046e:	bfa2      	ittt	ge
 8000470:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000474:	4329      	orrge	r1, r5
 8000476:	bd30      	popge	{r4, r5, pc}
 8000478:	ea6f 0404 	mvn.w	r4, r4
 800047c:	3c1f      	subs	r4, #31
 800047e:	da1c      	bge.n	80004ba <__adddf3+0x1d2>
 8000480:	340c      	adds	r4, #12
 8000482:	dc0e      	bgt.n	80004a2 <__adddf3+0x1ba>
 8000484:	f104 0414 	add.w	r4, r4, #20
 8000488:	f1c4 0220 	rsb	r2, r4, #32
 800048c:	fa20 f004 	lsr.w	r0, r0, r4
 8000490:	fa01 f302 	lsl.w	r3, r1, r2
 8000494:	ea40 0003 	orr.w	r0, r0, r3
 8000498:	fa21 f304 	lsr.w	r3, r1, r4
 800049c:	ea45 0103 	orr.w	r1, r5, r3
 80004a0:	bd30      	pop	{r4, r5, pc}
 80004a2:	f1c4 040c 	rsb	r4, r4, #12
 80004a6:	f1c4 0220 	rsb	r2, r4, #32
 80004aa:	fa20 f002 	lsr.w	r0, r0, r2
 80004ae:	fa01 f304 	lsl.w	r3, r1, r4
 80004b2:	ea40 0003 	orr.w	r0, r0, r3
 80004b6:	4629      	mov	r1, r5
 80004b8:	bd30      	pop	{r4, r5, pc}
 80004ba:	fa21 f004 	lsr.w	r0, r1, r4
 80004be:	4629      	mov	r1, r5
 80004c0:	bd30      	pop	{r4, r5, pc}
 80004c2:	f094 0f00 	teq	r4, #0
 80004c6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ca:	bf06      	itte	eq
 80004cc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004d0:	3401      	addeq	r4, #1
 80004d2:	3d01      	subne	r5, #1
 80004d4:	e74e      	b.n	8000374 <__adddf3+0x8c>
 80004d6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004da:	bf18      	it	ne
 80004dc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004e0:	d029      	beq.n	8000536 <__adddf3+0x24e>
 80004e2:	ea94 0f05 	teq	r4, r5
 80004e6:	bf08      	it	eq
 80004e8:	ea90 0f02 	teqeq	r0, r2
 80004ec:	d005      	beq.n	80004fa <__adddf3+0x212>
 80004ee:	ea54 0c00 	orrs.w	ip, r4, r0
 80004f2:	bf04      	itt	eq
 80004f4:	4619      	moveq	r1, r3
 80004f6:	4610      	moveq	r0, r2
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea91 0f03 	teq	r1, r3
 80004fe:	bf1e      	ittt	ne
 8000500:	2100      	movne	r1, #0
 8000502:	2000      	movne	r0, #0
 8000504:	bd30      	popne	{r4, r5, pc}
 8000506:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800050a:	d105      	bne.n	8000518 <__adddf3+0x230>
 800050c:	0040      	lsls	r0, r0, #1
 800050e:	4149      	adcs	r1, r1
 8000510:	bf28      	it	cs
 8000512:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000516:	bd30      	pop	{r4, r5, pc}
 8000518:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 800051c:	bf3c      	itt	cc
 800051e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000522:	bd30      	popcc	{r4, r5, pc}
 8000524:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000528:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800052c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000530:	f04f 0000 	mov.w	r0, #0
 8000534:	bd30      	pop	{r4, r5, pc}
 8000536:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800053a:	bf1a      	itte	ne
 800053c:	4619      	movne	r1, r3
 800053e:	4610      	movne	r0, r2
 8000540:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000544:	bf1c      	itt	ne
 8000546:	460b      	movne	r3, r1
 8000548:	4602      	movne	r2, r0
 800054a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800054e:	bf06      	itte	eq
 8000550:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000554:	ea91 0f03 	teqeq	r1, r3
 8000558:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 800055c:	bd30      	pop	{r4, r5, pc}
 800055e:	bf00      	nop

08000560 <__aeabi_ui2d>:
 8000560:	f090 0f00 	teq	r0, #0
 8000564:	bf04      	itt	eq
 8000566:	2100      	moveq	r1, #0
 8000568:	4770      	bxeq	lr
 800056a:	b530      	push	{r4, r5, lr}
 800056c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000570:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000574:	f04f 0500 	mov.w	r5, #0
 8000578:	f04f 0100 	mov.w	r1, #0
 800057c:	e750      	b.n	8000420 <__adddf3+0x138>
 800057e:	bf00      	nop

08000580 <__aeabi_i2d>:
 8000580:	f090 0f00 	teq	r0, #0
 8000584:	bf04      	itt	eq
 8000586:	2100      	moveq	r1, #0
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000590:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000594:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000598:	bf48      	it	mi
 800059a:	4240      	negmi	r0, r0
 800059c:	f04f 0100 	mov.w	r1, #0
 80005a0:	e73e      	b.n	8000420 <__adddf3+0x138>
 80005a2:	bf00      	nop

080005a4 <__aeabi_f2d>:
 80005a4:	0042      	lsls	r2, r0, #1
 80005a6:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80005aa:	ea4f 0131 	mov.w	r1, r1, rrx
 80005ae:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80005b2:	bf1f      	itttt	ne
 80005b4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80005b8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005bc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005c0:	4770      	bxne	lr
 80005c2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005c6:	bf08      	it	eq
 80005c8:	4770      	bxeq	lr
 80005ca:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005ce:	bf04      	itt	eq
 80005d0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005d4:	4770      	bxeq	lr
 80005d6:	b530      	push	{r4, r5, lr}
 80005d8:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005dc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005e0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005e4:	e71c      	b.n	8000420 <__adddf3+0x138>
 80005e6:	bf00      	nop

080005e8 <__aeabi_ul2d>:
 80005e8:	ea50 0201 	orrs.w	r2, r0, r1
 80005ec:	bf08      	it	eq
 80005ee:	4770      	bxeq	lr
 80005f0:	b530      	push	{r4, r5, lr}
 80005f2:	f04f 0500 	mov.w	r5, #0
 80005f6:	e00a      	b.n	800060e <__aeabi_l2d+0x16>

080005f8 <__aeabi_l2d>:
 80005f8:	ea50 0201 	orrs.w	r2, r0, r1
 80005fc:	bf08      	it	eq
 80005fe:	4770      	bxeq	lr
 8000600:	b530      	push	{r4, r5, lr}
 8000602:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000606:	d502      	bpl.n	800060e <__aeabi_l2d+0x16>
 8000608:	4240      	negs	r0, r0
 800060a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800060e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000612:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000616:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800061a:	f43f aed8 	beq.w	80003ce <__adddf3+0xe6>
 800061e:	f04f 0203 	mov.w	r2, #3
 8000622:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000626:	bf18      	it	ne
 8000628:	3203      	addne	r2, #3
 800062a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800062e:	bf18      	it	ne
 8000630:	3203      	addne	r2, #3
 8000632:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000636:	f1c2 0320 	rsb	r3, r2, #32
 800063a:	fa00 fc03 	lsl.w	ip, r0, r3
 800063e:	fa20 f002 	lsr.w	r0, r0, r2
 8000642:	fa01 fe03 	lsl.w	lr, r1, r3
 8000646:	ea40 000e 	orr.w	r0, r0, lr
 800064a:	fa21 f102 	lsr.w	r1, r1, r2
 800064e:	4414      	add	r4, r2
 8000650:	e6bd      	b.n	80003ce <__adddf3+0xe6>
 8000652:	bf00      	nop

08000654 <__aeabi_dmul>:
 8000654:	b570      	push	{r4, r5, r6, lr}
 8000656:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800065a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800065e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000662:	bf1d      	ittte	ne
 8000664:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000668:	ea94 0f0c 	teqne	r4, ip
 800066c:	ea95 0f0c 	teqne	r5, ip
 8000670:	f000 f8de 	bleq	8000830 <__aeabi_dmul+0x1dc>
 8000674:	442c      	add	r4, r5
 8000676:	ea81 0603 	eor.w	r6, r1, r3
 800067a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800067e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000682:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000686:	bf18      	it	ne
 8000688:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 800068c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000690:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000694:	d038      	beq.n	8000708 <__aeabi_dmul+0xb4>
 8000696:	fba0 ce02 	umull	ip, lr, r0, r2
 800069a:	f04f 0500 	mov.w	r5, #0
 800069e:	fbe1 e502 	umlal	lr, r5, r1, r2
 80006a2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80006a6:	fbe0 e503 	umlal	lr, r5, r0, r3
 80006aa:	f04f 0600 	mov.w	r6, #0
 80006ae:	fbe1 5603 	umlal	r5, r6, r1, r3
 80006b2:	f09c 0f00 	teq	ip, #0
 80006b6:	bf18      	it	ne
 80006b8:	f04e 0e01 	orrne.w	lr, lr, #1
 80006bc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006c0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006c4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006c8:	d204      	bcs.n	80006d4 <__aeabi_dmul+0x80>
 80006ca:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006ce:	416d      	adcs	r5, r5
 80006d0:	eb46 0606 	adc.w	r6, r6, r6
 80006d4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006d8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006dc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006e0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006e4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006e8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006ec:	bf88      	it	hi
 80006ee:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006f2:	d81e      	bhi.n	8000732 <__aeabi_dmul+0xde>
 80006f4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006f8:	bf08      	it	eq
 80006fa:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006fe:	f150 0000 	adcs.w	r0, r0, #0
 8000702:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000706:	bd70      	pop	{r4, r5, r6, pc}
 8000708:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 800070c:	ea46 0101 	orr.w	r1, r6, r1
 8000710:	ea40 0002 	orr.w	r0, r0, r2
 8000714:	ea81 0103 	eor.w	r1, r1, r3
 8000718:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 800071c:	bfc2      	ittt	gt
 800071e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000722:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000726:	bd70      	popgt	{r4, r5, r6, pc}
 8000728:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800072c:	f04f 0e00 	mov.w	lr, #0
 8000730:	3c01      	subs	r4, #1
 8000732:	f300 80ab 	bgt.w	800088c <__aeabi_dmul+0x238>
 8000736:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800073a:	bfde      	ittt	le
 800073c:	2000      	movle	r0, #0
 800073e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000742:	bd70      	pople	{r4, r5, r6, pc}
 8000744:	f1c4 0400 	rsb	r4, r4, #0
 8000748:	3c20      	subs	r4, #32
 800074a:	da35      	bge.n	80007b8 <__aeabi_dmul+0x164>
 800074c:	340c      	adds	r4, #12
 800074e:	dc1b      	bgt.n	8000788 <__aeabi_dmul+0x134>
 8000750:	f104 0414 	add.w	r4, r4, #20
 8000754:	f1c4 0520 	rsb	r5, r4, #32
 8000758:	fa00 f305 	lsl.w	r3, r0, r5
 800075c:	fa20 f004 	lsr.w	r0, r0, r4
 8000760:	fa01 f205 	lsl.w	r2, r1, r5
 8000764:	ea40 0002 	orr.w	r0, r0, r2
 8000768:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 800076c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000770:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000774:	fa21 f604 	lsr.w	r6, r1, r4
 8000778:	eb42 0106 	adc.w	r1, r2, r6
 800077c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000780:	bf08      	it	eq
 8000782:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000786:	bd70      	pop	{r4, r5, r6, pc}
 8000788:	f1c4 040c 	rsb	r4, r4, #12
 800078c:	f1c4 0520 	rsb	r5, r4, #32
 8000790:	fa00 f304 	lsl.w	r3, r0, r4
 8000794:	fa20 f005 	lsr.w	r0, r0, r5
 8000798:	fa01 f204 	lsl.w	r2, r1, r4
 800079c:	ea40 0002 	orr.w	r0, r0, r2
 80007a0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007a4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80007a8:	f141 0100 	adc.w	r1, r1, #0
 80007ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007b0:	bf08      	it	eq
 80007b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b6:	bd70      	pop	{r4, r5, r6, pc}
 80007b8:	f1c4 0520 	rsb	r5, r4, #32
 80007bc:	fa00 f205 	lsl.w	r2, r0, r5
 80007c0:	ea4e 0e02 	orr.w	lr, lr, r2
 80007c4:	fa20 f304 	lsr.w	r3, r0, r4
 80007c8:	fa01 f205 	lsl.w	r2, r1, r5
 80007cc:	ea43 0302 	orr.w	r3, r3, r2
 80007d0:	fa21 f004 	lsr.w	r0, r1, r4
 80007d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007d8:	fa21 f204 	lsr.w	r2, r1, r4
 80007dc:	ea20 0002 	bic.w	r0, r0, r2
 80007e0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007e4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007e8:	bf08      	it	eq
 80007ea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007ee:	bd70      	pop	{r4, r5, r6, pc}
 80007f0:	f094 0f00 	teq	r4, #0
 80007f4:	d10f      	bne.n	8000816 <__aeabi_dmul+0x1c2>
 80007f6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007fa:	0040      	lsls	r0, r0, #1
 80007fc:	eb41 0101 	adc.w	r1, r1, r1
 8000800:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000804:	bf08      	it	eq
 8000806:	3c01      	subeq	r4, #1
 8000808:	d0f7      	beq.n	80007fa <__aeabi_dmul+0x1a6>
 800080a:	ea41 0106 	orr.w	r1, r1, r6
 800080e:	f095 0f00 	teq	r5, #0
 8000812:	bf18      	it	ne
 8000814:	4770      	bxne	lr
 8000816:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800081a:	0052      	lsls	r2, r2, #1
 800081c:	eb43 0303 	adc.w	r3, r3, r3
 8000820:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000824:	bf08      	it	eq
 8000826:	3d01      	subeq	r5, #1
 8000828:	d0f7      	beq.n	800081a <__aeabi_dmul+0x1c6>
 800082a:	ea43 0306 	orr.w	r3, r3, r6
 800082e:	4770      	bx	lr
 8000830:	ea94 0f0c 	teq	r4, ip
 8000834:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000838:	bf18      	it	ne
 800083a:	ea95 0f0c 	teqne	r5, ip
 800083e:	d00c      	beq.n	800085a <__aeabi_dmul+0x206>
 8000840:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000844:	bf18      	it	ne
 8000846:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084a:	d1d1      	bne.n	80007f0 <__aeabi_dmul+0x19c>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f04f 0000 	mov.w	r0, #0
 8000858:	bd70      	pop	{r4, r5, r6, pc}
 800085a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800085e:	bf06      	itte	eq
 8000860:	4610      	moveq	r0, r2
 8000862:	4619      	moveq	r1, r3
 8000864:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000868:	d019      	beq.n	800089e <__aeabi_dmul+0x24a>
 800086a:	ea94 0f0c 	teq	r4, ip
 800086e:	d102      	bne.n	8000876 <__aeabi_dmul+0x222>
 8000870:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000874:	d113      	bne.n	800089e <__aeabi_dmul+0x24a>
 8000876:	ea95 0f0c 	teq	r5, ip
 800087a:	d105      	bne.n	8000888 <__aeabi_dmul+0x234>
 800087c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000880:	bf1c      	itt	ne
 8000882:	4610      	movne	r0, r2
 8000884:	4619      	movne	r1, r3
 8000886:	d10a      	bne.n	800089e <__aeabi_dmul+0x24a>
 8000888:	ea81 0103 	eor.w	r1, r1, r3
 800088c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000890:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000894:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000898:	f04f 0000 	mov.w	r0, #0
 800089c:	bd70      	pop	{r4, r5, r6, pc}
 800089e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80008a2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80008a6:	bd70      	pop	{r4, r5, r6, pc}

080008a8 <__aeabi_ddiv>:
 80008a8:	b570      	push	{r4, r5, r6, lr}
 80008aa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80008ae:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80008b2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80008b6:	bf1d      	ittte	ne
 80008b8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008bc:	ea94 0f0c 	teqne	r4, ip
 80008c0:	ea95 0f0c 	teqne	r5, ip
 80008c4:	f000 f8a7 	bleq	8000a16 <__aeabi_ddiv+0x16e>
 80008c8:	eba4 0405 	sub.w	r4, r4, r5
 80008cc:	ea81 0e03 	eor.w	lr, r1, r3
 80008d0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d4:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008d8:	f000 8088 	beq.w	80009ec <__aeabi_ddiv+0x144>
 80008dc:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008e0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008e4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008e8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008ec:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008f0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008f4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008f8:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008fc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000900:	429d      	cmp	r5, r3
 8000902:	bf08      	it	eq
 8000904:	4296      	cmpeq	r6, r2
 8000906:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800090a:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800090e:	d202      	bcs.n	8000916 <__aeabi_ddiv+0x6e>
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	1ab6      	subs	r6, r6, r2
 8000918:	eb65 0503 	sbc.w	r5, r5, r3
 800091c:	085b      	lsrs	r3, r3, #1
 800091e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000922:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000926:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800092a:	ebb6 0e02 	subs.w	lr, r6, r2
 800092e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000932:	bf22      	ittt	cs
 8000934:	1ab6      	subcs	r6, r6, r2
 8000936:	4675      	movcs	r5, lr
 8000938:	ea40 000c 	orrcs.w	r0, r0, ip
 800093c:	085b      	lsrs	r3, r3, #1
 800093e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000942:	ebb6 0e02 	subs.w	lr, r6, r2
 8000946:	eb75 0e03 	sbcs.w	lr, r5, r3
 800094a:	bf22      	ittt	cs
 800094c:	1ab6      	subcs	r6, r6, r2
 800094e:	4675      	movcs	r5, lr
 8000950:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000954:	085b      	lsrs	r3, r3, #1
 8000956:	ea4f 0232 	mov.w	r2, r2, rrx
 800095a:	ebb6 0e02 	subs.w	lr, r6, r2
 800095e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000962:	bf22      	ittt	cs
 8000964:	1ab6      	subcs	r6, r6, r2
 8000966:	4675      	movcs	r5, lr
 8000968:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 800096c:	085b      	lsrs	r3, r3, #1
 800096e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000972:	ebb6 0e02 	subs.w	lr, r6, r2
 8000976:	eb75 0e03 	sbcs.w	lr, r5, r3
 800097a:	bf22      	ittt	cs
 800097c:	1ab6      	subcs	r6, r6, r2
 800097e:	4675      	movcs	r5, lr
 8000980:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000984:	ea55 0e06 	orrs.w	lr, r5, r6
 8000988:	d018      	beq.n	80009bc <__aeabi_ddiv+0x114>
 800098a:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800098e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000992:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000996:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800099a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800099e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80009a2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80009a6:	d1c0      	bne.n	800092a <__aeabi_ddiv+0x82>
 80009a8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009ac:	d10b      	bne.n	80009c6 <__aeabi_ddiv+0x11e>
 80009ae:	ea41 0100 	orr.w	r1, r1, r0
 80009b2:	f04f 0000 	mov.w	r0, #0
 80009b6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80009ba:	e7b6      	b.n	800092a <__aeabi_ddiv+0x82>
 80009bc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009c0:	bf04      	itt	eq
 80009c2:	4301      	orreq	r1, r0
 80009c4:	2000      	moveq	r0, #0
 80009c6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ca:	bf88      	it	hi
 80009cc:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009d0:	f63f aeaf 	bhi.w	8000732 <__aeabi_dmul+0xde>
 80009d4:	ebb5 0c03 	subs.w	ip, r5, r3
 80009d8:	bf04      	itt	eq
 80009da:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009e2:	f150 0000 	adcs.w	r0, r0, #0
 80009e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ea:	bd70      	pop	{r4, r5, r6, pc}
 80009ec:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009f0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009f4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009f8:	bfc2      	ittt	gt
 80009fa:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009fe:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000a02:	bd70      	popgt	{r4, r5, r6, pc}
 8000a04:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a08:	f04f 0e00 	mov.w	lr, #0
 8000a0c:	3c01      	subs	r4, #1
 8000a0e:	e690      	b.n	8000732 <__aeabi_dmul+0xde>
 8000a10:	ea45 0e06 	orr.w	lr, r5, r6
 8000a14:	e68d      	b.n	8000732 <__aeabi_dmul+0xde>
 8000a16:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a1a:	ea94 0f0c 	teq	r4, ip
 8000a1e:	bf08      	it	eq
 8000a20:	ea95 0f0c 	teqeq	r5, ip
 8000a24:	f43f af3b 	beq.w	800089e <__aeabi_dmul+0x24a>
 8000a28:	ea94 0f0c 	teq	r4, ip
 8000a2c:	d10a      	bne.n	8000a44 <__aeabi_ddiv+0x19c>
 8000a2e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a32:	f47f af34 	bne.w	800089e <__aeabi_dmul+0x24a>
 8000a36:	ea95 0f0c 	teq	r5, ip
 8000a3a:	f47f af25 	bne.w	8000888 <__aeabi_dmul+0x234>
 8000a3e:	4610      	mov	r0, r2
 8000a40:	4619      	mov	r1, r3
 8000a42:	e72c      	b.n	800089e <__aeabi_dmul+0x24a>
 8000a44:	ea95 0f0c 	teq	r5, ip
 8000a48:	d106      	bne.n	8000a58 <__aeabi_ddiv+0x1b0>
 8000a4a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a4e:	f43f aefd 	beq.w	800084c <__aeabi_dmul+0x1f8>
 8000a52:	4610      	mov	r0, r2
 8000a54:	4619      	mov	r1, r3
 8000a56:	e722      	b.n	800089e <__aeabi_dmul+0x24a>
 8000a58:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a5c:	bf18      	it	ne
 8000a5e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a62:	f47f aec5 	bne.w	80007f0 <__aeabi_dmul+0x19c>
 8000a66:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a6a:	f47f af0d 	bne.w	8000888 <__aeabi_dmul+0x234>
 8000a6e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a72:	f47f aeeb 	bne.w	800084c <__aeabi_dmul+0x1f8>
 8000a76:	e712      	b.n	800089e <__aeabi_dmul+0x24a>

08000a78 <__gedf2>:
 8000a78:	f04f 3cff 	mov.w	ip, #4294967295
 8000a7c:	e006      	b.n	8000a8c <__cmpdf2+0x4>
 8000a7e:	bf00      	nop

08000a80 <__ledf2>:
 8000a80:	f04f 0c01 	mov.w	ip, #1
 8000a84:	e002      	b.n	8000a8c <__cmpdf2+0x4>
 8000a86:	bf00      	nop

08000a88 <__cmpdf2>:
 8000a88:	f04f 0c01 	mov.w	ip, #1
 8000a8c:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a9c:	bf18      	it	ne
 8000a9e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000aa2:	d01b      	beq.n	8000adc <__cmpdf2+0x54>
 8000aa4:	b001      	add	sp, #4
 8000aa6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000aaa:	bf0c      	ite	eq
 8000aac:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000ab0:	ea91 0f03 	teqne	r1, r3
 8000ab4:	bf02      	ittt	eq
 8000ab6:	ea90 0f02 	teqeq	r0, r2
 8000aba:	2000      	moveq	r0, #0
 8000abc:	4770      	bxeq	lr
 8000abe:	f110 0f00 	cmn.w	r0, #0
 8000ac2:	ea91 0f03 	teq	r1, r3
 8000ac6:	bf58      	it	pl
 8000ac8:	4299      	cmppl	r1, r3
 8000aca:	bf08      	it	eq
 8000acc:	4290      	cmpeq	r0, r2
 8000ace:	bf2c      	ite	cs
 8000ad0:	17d8      	asrcs	r0, r3, #31
 8000ad2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000ad6:	f040 0001 	orr.w	r0, r0, #1
 8000ada:	4770      	bx	lr
 8000adc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ae0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ae4:	d102      	bne.n	8000aec <__cmpdf2+0x64>
 8000ae6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aea:	d107      	bne.n	8000afc <__cmpdf2+0x74>
 8000aec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000af0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000af4:	d1d6      	bne.n	8000aa4 <__cmpdf2+0x1c>
 8000af6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000afa:	d0d3      	beq.n	8000aa4 <__cmpdf2+0x1c>
 8000afc:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000b00:	4770      	bx	lr
 8000b02:	bf00      	nop

08000b04 <__aeabi_cdrcmple>:
 8000b04:	4684      	mov	ip, r0
 8000b06:	4610      	mov	r0, r2
 8000b08:	4662      	mov	r2, ip
 8000b0a:	468c      	mov	ip, r1
 8000b0c:	4619      	mov	r1, r3
 8000b0e:	4663      	mov	r3, ip
 8000b10:	e000      	b.n	8000b14 <__aeabi_cdcmpeq>
 8000b12:	bf00      	nop

08000b14 <__aeabi_cdcmpeq>:
 8000b14:	b501      	push	{r0, lr}
 8000b16:	f7ff ffb7 	bl	8000a88 <__cmpdf2>
 8000b1a:	2800      	cmp	r0, #0
 8000b1c:	bf48      	it	mi
 8000b1e:	f110 0f00 	cmnmi.w	r0, #0
 8000b22:	bd01      	pop	{r0, pc}

08000b24 <__aeabi_dcmpeq>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff fff4 	bl	8000b14 <__aeabi_cdcmpeq>
 8000b2c:	bf0c      	ite	eq
 8000b2e:	2001      	moveq	r0, #1
 8000b30:	2000      	movne	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmplt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffea 	bl	8000b14 <__aeabi_cdcmpeq>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmple>:
 8000b4c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b50:	f7ff ffe0 	bl	8000b14 <__aeabi_cdcmpeq>
 8000b54:	bf94      	ite	ls
 8000b56:	2001      	movls	r0, #1
 8000b58:	2000      	movhi	r0, #0
 8000b5a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b5e:	bf00      	nop

08000b60 <__aeabi_dcmpge>:
 8000b60:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b64:	f7ff ffce 	bl	8000b04 <__aeabi_cdrcmple>
 8000b68:	bf94      	ite	ls
 8000b6a:	2001      	movls	r0, #1
 8000b6c:	2000      	movhi	r0, #0
 8000b6e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b72:	bf00      	nop

08000b74 <__aeabi_dcmpgt>:
 8000b74:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b78:	f7ff ffc4 	bl	8000b04 <__aeabi_cdrcmple>
 8000b7c:	bf34      	ite	cc
 8000b7e:	2001      	movcc	r0, #1
 8000b80:	2000      	movcs	r0, #0
 8000b82:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b86:	bf00      	nop

08000b88 <__aeabi_dcmpun>:
 8000b88:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b8c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b90:	d102      	bne.n	8000b98 <__aeabi_dcmpun+0x10>
 8000b92:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b96:	d10a      	bne.n	8000bae <__aeabi_dcmpun+0x26>
 8000b98:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b9c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ba0:	d102      	bne.n	8000ba8 <__aeabi_dcmpun+0x20>
 8000ba2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ba6:	d102      	bne.n	8000bae <__aeabi_dcmpun+0x26>
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	f04f 0001 	mov.w	r0, #1
 8000bb2:	4770      	bx	lr

08000bb4 <__aeabi_d2uiz>:
 8000bb4:	004a      	lsls	r2, r1, #1
 8000bb6:	d211      	bcs.n	8000bdc <__aeabi_d2uiz+0x28>
 8000bb8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bbc:	d211      	bcs.n	8000be2 <__aeabi_d2uiz+0x2e>
 8000bbe:	d50d      	bpl.n	8000bdc <__aeabi_d2uiz+0x28>
 8000bc0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bc4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bc8:	d40e      	bmi.n	8000be8 <__aeabi_d2uiz+0x34>
 8000bca:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bce:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bd2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bd6:	fa23 f002 	lsr.w	r0, r3, r2
 8000bda:	4770      	bx	lr
 8000bdc:	f04f 0000 	mov.w	r0, #0
 8000be0:	4770      	bx	lr
 8000be2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000be6:	d102      	bne.n	8000bee <__aeabi_d2uiz+0x3a>
 8000be8:	f04f 30ff 	mov.w	r0, #4294967295
 8000bec:	4770      	bx	lr
 8000bee:	f04f 0000 	mov.w	r0, #0
 8000bf2:	4770      	bx	lr

08000bf4 <__aeabi_d2f>:
 8000bf4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bf8:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bfc:	bf24      	itt	cs
 8000bfe:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c02:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c06:	d90d      	bls.n	8000c24 <__aeabi_d2f+0x30>
 8000c08:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c0c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c10:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c14:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c18:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c1c:	bf08      	it	eq
 8000c1e:	f020 0001 	biceq.w	r0, r0, #1
 8000c22:	4770      	bx	lr
 8000c24:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c28:	d121      	bne.n	8000c6e <__aeabi_d2f+0x7a>
 8000c2a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c2e:	bfbc      	itt	lt
 8000c30:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c34:	4770      	bxlt	lr
 8000c36:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c3a:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c3e:	f1c2 0218 	rsb	r2, r2, #24
 8000c42:	f1c2 0c20 	rsb	ip, r2, #32
 8000c46:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c4a:	fa20 f002 	lsr.w	r0, r0, r2
 8000c4e:	bf18      	it	ne
 8000c50:	f040 0001 	orrne.w	r0, r0, #1
 8000c54:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c58:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c5c:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c60:	ea40 000c 	orr.w	r0, r0, ip
 8000c64:	fa23 f302 	lsr.w	r3, r3, r2
 8000c68:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c6c:	e7cc      	b.n	8000c08 <__aeabi_d2f+0x14>
 8000c6e:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c72:	d107      	bne.n	8000c84 <__aeabi_d2f+0x90>
 8000c74:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c78:	bf1e      	ittt	ne
 8000c7a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c7e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c82:	4770      	bxne	lr
 8000c84:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c88:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c8c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c90:	4770      	bx	lr
 8000c92:	bf00      	nop

08000c94 <__aeabi_frsub>:
 8000c94:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000c98:	e002      	b.n	8000ca0 <__addsf3>
 8000c9a:	bf00      	nop

08000c9c <__aeabi_fsub>:
 8000c9c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000ca0 <__addsf3>:
 8000ca0:	0042      	lsls	r2, r0, #1
 8000ca2:	bf1f      	itttt	ne
 8000ca4:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000ca8:	ea92 0f03 	teqne	r2, r3
 8000cac:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000cb0:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000cb4:	d06a      	beq.n	8000d8c <__addsf3+0xec>
 8000cb6:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000cba:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000cbe:	bfc1      	itttt	gt
 8000cc0:	18d2      	addgt	r2, r2, r3
 8000cc2:	4041      	eorgt	r1, r0
 8000cc4:	4048      	eorgt	r0, r1
 8000cc6:	4041      	eorgt	r1, r0
 8000cc8:	bfb8      	it	lt
 8000cca:	425b      	neglt	r3, r3
 8000ccc:	2b19      	cmp	r3, #25
 8000cce:	bf88      	it	hi
 8000cd0:	4770      	bxhi	lr
 8000cd2:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000cd6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cda:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000cde:	bf18      	it	ne
 8000ce0:	4240      	negne	r0, r0
 8000ce2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000ce6:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000cea:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000cee:	bf18      	it	ne
 8000cf0:	4249      	negne	r1, r1
 8000cf2:	ea92 0f03 	teq	r2, r3
 8000cf6:	d03f      	beq.n	8000d78 <__addsf3+0xd8>
 8000cf8:	f1a2 0201 	sub.w	r2, r2, #1
 8000cfc:	fa41 fc03 	asr.w	ip, r1, r3
 8000d00:	eb10 000c 	adds.w	r0, r0, ip
 8000d04:	f1c3 0320 	rsb	r3, r3, #32
 8000d08:	fa01 f103 	lsl.w	r1, r1, r3
 8000d0c:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000d10:	d502      	bpl.n	8000d18 <__addsf3+0x78>
 8000d12:	4249      	negs	r1, r1
 8000d14:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000d18:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000d1c:	d313      	bcc.n	8000d46 <__addsf3+0xa6>
 8000d1e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000d22:	d306      	bcc.n	8000d32 <__addsf3+0x92>
 8000d24:	0840      	lsrs	r0, r0, #1
 8000d26:	ea4f 0131 	mov.w	r1, r1, rrx
 8000d2a:	f102 0201 	add.w	r2, r2, #1
 8000d2e:	2afe      	cmp	r2, #254	; 0xfe
 8000d30:	d251      	bcs.n	8000dd6 <__addsf3+0x136>
 8000d32:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000d36:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000d3a:	bf08      	it	eq
 8000d3c:	f020 0001 	biceq.w	r0, r0, #1
 8000d40:	ea40 0003 	orr.w	r0, r0, r3
 8000d44:	4770      	bx	lr
 8000d46:	0049      	lsls	r1, r1, #1
 8000d48:	eb40 0000 	adc.w	r0, r0, r0
 8000d4c:	3a01      	subs	r2, #1
 8000d4e:	bf28      	it	cs
 8000d50:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000d54:	d2ed      	bcs.n	8000d32 <__addsf3+0x92>
 8000d56:	fab0 fc80 	clz	ip, r0
 8000d5a:	f1ac 0c08 	sub.w	ip, ip, #8
 8000d5e:	ebb2 020c 	subs.w	r2, r2, ip
 8000d62:	fa00 f00c 	lsl.w	r0, r0, ip
 8000d66:	bfaa      	itet	ge
 8000d68:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000d6c:	4252      	neglt	r2, r2
 8000d6e:	4318      	orrge	r0, r3
 8000d70:	bfbc      	itt	lt
 8000d72:	40d0      	lsrlt	r0, r2
 8000d74:	4318      	orrlt	r0, r3
 8000d76:	4770      	bx	lr
 8000d78:	f092 0f00 	teq	r2, #0
 8000d7c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000d80:	bf06      	itte	eq
 8000d82:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000d86:	3201      	addeq	r2, #1
 8000d88:	3b01      	subne	r3, #1
 8000d8a:	e7b5      	b.n	8000cf8 <__addsf3+0x58>
 8000d8c:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000d90:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000d94:	bf18      	it	ne
 8000d96:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000d9a:	d021      	beq.n	8000de0 <__addsf3+0x140>
 8000d9c:	ea92 0f03 	teq	r2, r3
 8000da0:	d004      	beq.n	8000dac <__addsf3+0x10c>
 8000da2:	f092 0f00 	teq	r2, #0
 8000da6:	bf08      	it	eq
 8000da8:	4608      	moveq	r0, r1
 8000daa:	4770      	bx	lr
 8000dac:	ea90 0f01 	teq	r0, r1
 8000db0:	bf1c      	itt	ne
 8000db2:	2000      	movne	r0, #0
 8000db4:	4770      	bxne	lr
 8000db6:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000dba:	d104      	bne.n	8000dc6 <__addsf3+0x126>
 8000dbc:	0040      	lsls	r0, r0, #1
 8000dbe:	bf28      	it	cs
 8000dc0:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000dc4:	4770      	bx	lr
 8000dc6:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000dca:	bf3c      	itt	cc
 8000dcc:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000dd0:	4770      	bxcc	lr
 8000dd2:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000dd6:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000dda:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000dde:	4770      	bx	lr
 8000de0:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000de4:	bf16      	itet	ne
 8000de6:	4608      	movne	r0, r1
 8000de8:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000dec:	4601      	movne	r1, r0
 8000dee:	0242      	lsls	r2, r0, #9
 8000df0:	bf06      	itte	eq
 8000df2:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000df6:	ea90 0f01 	teqeq	r0, r1
 8000dfa:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000dfe:	4770      	bx	lr

08000e00 <__aeabi_ui2f>:
 8000e00:	f04f 0300 	mov.w	r3, #0
 8000e04:	e004      	b.n	8000e10 <__aeabi_i2f+0x8>
 8000e06:	bf00      	nop

08000e08 <__aeabi_i2f>:
 8000e08:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000e0c:	bf48      	it	mi
 8000e0e:	4240      	negmi	r0, r0
 8000e10:	ea5f 0c00 	movs.w	ip, r0
 8000e14:	bf08      	it	eq
 8000e16:	4770      	bxeq	lr
 8000e18:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000e1c:	4601      	mov	r1, r0
 8000e1e:	f04f 0000 	mov.w	r0, #0
 8000e22:	e01c      	b.n	8000e5e <__aeabi_l2f+0x2a>

08000e24 <__aeabi_ul2f>:
 8000e24:	ea50 0201 	orrs.w	r2, r0, r1
 8000e28:	bf08      	it	eq
 8000e2a:	4770      	bxeq	lr
 8000e2c:	f04f 0300 	mov.w	r3, #0
 8000e30:	e00a      	b.n	8000e48 <__aeabi_l2f+0x14>
 8000e32:	bf00      	nop

08000e34 <__aeabi_l2f>:
 8000e34:	ea50 0201 	orrs.w	r2, r0, r1
 8000e38:	bf08      	it	eq
 8000e3a:	4770      	bxeq	lr
 8000e3c:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000e40:	d502      	bpl.n	8000e48 <__aeabi_l2f+0x14>
 8000e42:	4240      	negs	r0, r0
 8000e44:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000e48:	ea5f 0c01 	movs.w	ip, r1
 8000e4c:	bf02      	ittt	eq
 8000e4e:	4684      	moveq	ip, r0
 8000e50:	4601      	moveq	r1, r0
 8000e52:	2000      	moveq	r0, #0
 8000e54:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000e58:	bf08      	it	eq
 8000e5a:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000e5e:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000e62:	fabc f28c 	clz	r2, ip
 8000e66:	3a08      	subs	r2, #8
 8000e68:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000e6c:	db10      	blt.n	8000e90 <__aeabi_l2f+0x5c>
 8000e6e:	fa01 fc02 	lsl.w	ip, r1, r2
 8000e72:	4463      	add	r3, ip
 8000e74:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e78:	f1c2 0220 	rsb	r2, r2, #32
 8000e7c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000e80:	fa20 f202 	lsr.w	r2, r0, r2
 8000e84:	eb43 0002 	adc.w	r0, r3, r2
 8000e88:	bf08      	it	eq
 8000e8a:	f020 0001 	biceq.w	r0, r0, #1
 8000e8e:	4770      	bx	lr
 8000e90:	f102 0220 	add.w	r2, r2, #32
 8000e94:	fa01 fc02 	lsl.w	ip, r1, r2
 8000e98:	f1c2 0220 	rsb	r2, r2, #32
 8000e9c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000ea0:	fa21 f202 	lsr.w	r2, r1, r2
 8000ea4:	eb43 0002 	adc.w	r0, r3, r2
 8000ea8:	bf08      	it	eq
 8000eaa:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000eae:	4770      	bx	lr

08000eb0 <__gesf2>:
 8000eb0:	f04f 3cff 	mov.w	ip, #4294967295
 8000eb4:	e006      	b.n	8000ec4 <__cmpsf2+0x4>
 8000eb6:	bf00      	nop

08000eb8 <__lesf2>:
 8000eb8:	f04f 0c01 	mov.w	ip, #1
 8000ebc:	e002      	b.n	8000ec4 <__cmpsf2+0x4>
 8000ebe:	bf00      	nop

08000ec0 <__cmpsf2>:
 8000ec0:	f04f 0c01 	mov.w	ip, #1
 8000ec4:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000ec8:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000ecc:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000ed0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000ed4:	bf18      	it	ne
 8000ed6:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000eda:	d011      	beq.n	8000f00 <__cmpsf2+0x40>
 8000edc:	b001      	add	sp, #4
 8000ede:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8000ee2:	bf18      	it	ne
 8000ee4:	ea90 0f01 	teqne	r0, r1
 8000ee8:	bf58      	it	pl
 8000eea:	ebb2 0003 	subspl.w	r0, r2, r3
 8000eee:	bf88      	it	hi
 8000ef0:	17c8      	asrhi	r0, r1, #31
 8000ef2:	bf38      	it	cc
 8000ef4:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8000ef8:	bf18      	it	ne
 8000efa:	f040 0001 	orrne.w	r0, r0, #1
 8000efe:	4770      	bx	lr
 8000f00:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000f04:	d102      	bne.n	8000f0c <__cmpsf2+0x4c>
 8000f06:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000f0a:	d105      	bne.n	8000f18 <__cmpsf2+0x58>
 8000f0c:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8000f10:	d1e4      	bne.n	8000edc <__cmpsf2+0x1c>
 8000f12:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000f16:	d0e1      	beq.n	8000edc <__cmpsf2+0x1c>
 8000f18:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000f1c:	4770      	bx	lr
 8000f1e:	bf00      	nop

08000f20 <__aeabi_cfrcmple>:
 8000f20:	4684      	mov	ip, r0
 8000f22:	4608      	mov	r0, r1
 8000f24:	4661      	mov	r1, ip
 8000f26:	e7ff      	b.n	8000f28 <__aeabi_cfcmpeq>

08000f28 <__aeabi_cfcmpeq>:
 8000f28:	b50f      	push	{r0, r1, r2, r3, lr}
 8000f2a:	f7ff ffc9 	bl	8000ec0 <__cmpsf2>
 8000f2e:	2800      	cmp	r0, #0
 8000f30:	bf48      	it	mi
 8000f32:	f110 0f00 	cmnmi.w	r0, #0
 8000f36:	bd0f      	pop	{r0, r1, r2, r3, pc}

08000f38 <__aeabi_fcmpeq>:
 8000f38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000f3c:	f7ff fff4 	bl	8000f28 <__aeabi_cfcmpeq>
 8000f40:	bf0c      	ite	eq
 8000f42:	2001      	moveq	r0, #1
 8000f44:	2000      	movne	r0, #0
 8000f46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000f4a:	bf00      	nop

08000f4c <__aeabi_fcmplt>:
 8000f4c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000f50:	f7ff ffea 	bl	8000f28 <__aeabi_cfcmpeq>
 8000f54:	bf34      	ite	cc
 8000f56:	2001      	movcc	r0, #1
 8000f58:	2000      	movcs	r0, #0
 8000f5a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000f5e:	bf00      	nop

08000f60 <__aeabi_fcmple>:
 8000f60:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000f64:	f7ff ffe0 	bl	8000f28 <__aeabi_cfcmpeq>
 8000f68:	bf94      	ite	ls
 8000f6a:	2001      	movls	r0, #1
 8000f6c:	2000      	movhi	r0, #0
 8000f6e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000f72:	bf00      	nop

08000f74 <__aeabi_fcmpge>:
 8000f74:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000f78:	f7ff ffd2 	bl	8000f20 <__aeabi_cfrcmple>
 8000f7c:	bf94      	ite	ls
 8000f7e:	2001      	movls	r0, #1
 8000f80:	2000      	movhi	r0, #0
 8000f82:	f85d fb08 	ldr.w	pc, [sp], #8
 8000f86:	bf00      	nop

08000f88 <__aeabi_fcmpgt>:
 8000f88:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000f8c:	f7ff ffc8 	bl	8000f20 <__aeabi_cfrcmple>
 8000f90:	bf34      	ite	cc
 8000f92:	2001      	movcc	r0, #1
 8000f94:	2000      	movcs	r0, #0
 8000f96:	f85d fb08 	ldr.w	pc, [sp], #8
 8000f9a:	bf00      	nop

08000f9c <__aeabi_fcmpun>:
 8000f9c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000fa0:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000fa4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000fa8:	d102      	bne.n	8000fb0 <__aeabi_fcmpun+0x14>
 8000faa:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000fae:	d108      	bne.n	8000fc2 <__aeabi_fcmpun+0x26>
 8000fb0:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8000fb4:	d102      	bne.n	8000fbc <__aeabi_fcmpun+0x20>
 8000fb6:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000fba:	d102      	bne.n	8000fc2 <__aeabi_fcmpun+0x26>
 8000fbc:	f04f 0000 	mov.w	r0, #0
 8000fc0:	4770      	bx	lr
 8000fc2:	f04f 0001 	mov.w	r0, #1
 8000fc6:	4770      	bx	lr

08000fc8 <__aeabi_f2uiz>:
 8000fc8:	0042      	lsls	r2, r0, #1
 8000fca:	d20e      	bcs.n	8000fea <__aeabi_f2uiz+0x22>
 8000fcc:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8000fd0:	d30b      	bcc.n	8000fea <__aeabi_f2uiz+0x22>
 8000fd2:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8000fd6:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000fda:	d409      	bmi.n	8000ff0 <__aeabi_f2uiz+0x28>
 8000fdc:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000fe0:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000fe4:	fa23 f002 	lsr.w	r0, r3, r2
 8000fe8:	4770      	bx	lr
 8000fea:	f04f 0000 	mov.w	r0, #0
 8000fee:	4770      	bx	lr
 8000ff0:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8000ff4:	d101      	bne.n	8000ffa <__aeabi_f2uiz+0x32>
 8000ff6:	0242      	lsls	r2, r0, #9
 8000ff8:	d102      	bne.n	8001000 <__aeabi_f2uiz+0x38>
 8000ffa:	f04f 30ff 	mov.w	r0, #4294967295
 8000ffe:	4770      	bx	lr
 8001000:	f04f 0000 	mov.w	r0, #0
 8001004:	4770      	bx	lr
 8001006:	bf00      	nop

08001008 <__aeabi_d2lz>:
 8001008:	b538      	push	{r3, r4, r5, lr}
 800100a:	4605      	mov	r5, r0
 800100c:	460c      	mov	r4, r1
 800100e:	2200      	movs	r2, #0
 8001010:	2300      	movs	r3, #0
 8001012:	4628      	mov	r0, r5
 8001014:	4621      	mov	r1, r4
 8001016:	f7ff fd8f 	bl	8000b38 <__aeabi_dcmplt>
 800101a:	b928      	cbnz	r0, 8001028 <__aeabi_d2lz+0x20>
 800101c:	4628      	mov	r0, r5
 800101e:	4621      	mov	r1, r4
 8001020:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001024:	f000 b80a 	b.w	800103c <__aeabi_d2ulz>
 8001028:	4628      	mov	r0, r5
 800102a:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 800102e:	f000 f805 	bl	800103c <__aeabi_d2ulz>
 8001032:	4240      	negs	r0, r0
 8001034:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001038:	bd38      	pop	{r3, r4, r5, pc}
 800103a:	bf00      	nop

0800103c <__aeabi_d2ulz>:
 800103c:	b5d0      	push	{r4, r6, r7, lr}
 800103e:	2200      	movs	r2, #0
 8001040:	4b0b      	ldr	r3, [pc, #44]	; (8001070 <__aeabi_d2ulz+0x34>)
 8001042:	4606      	mov	r6, r0
 8001044:	460f      	mov	r7, r1
 8001046:	f7ff fb05 	bl	8000654 <__aeabi_dmul>
 800104a:	f7ff fdb3 	bl	8000bb4 <__aeabi_d2uiz>
 800104e:	4604      	mov	r4, r0
 8001050:	f7ff fa86 	bl	8000560 <__aeabi_ui2d>
 8001054:	2200      	movs	r2, #0
 8001056:	4b07      	ldr	r3, [pc, #28]	; (8001074 <__aeabi_d2ulz+0x38>)
 8001058:	f7ff fafc 	bl	8000654 <__aeabi_dmul>
 800105c:	4602      	mov	r2, r0
 800105e:	460b      	mov	r3, r1
 8001060:	4630      	mov	r0, r6
 8001062:	4639      	mov	r1, r7
 8001064:	f7ff f93e 	bl	80002e4 <__aeabi_dsub>
 8001068:	f7ff fda4 	bl	8000bb4 <__aeabi_d2uiz>
 800106c:	4621      	mov	r1, r4
 800106e:	bdd0      	pop	{r4, r6, r7, pc}
 8001070:	3df00000 	.word	0x3df00000
 8001074:	41f00000 	.word	0x41f00000

08001078 <ProcessMsg>:
uint8_t flag_config_wf, flag_connect_wf, flag_display;

uint8_t* msg;


void ProcessMsg(char* msg){
 8001078:	b590      	push	{r4, r7, lr}
 800107a:	b085      	sub	sp, #20
 800107c:	af00      	add	r7, sp, #0
 800107e:	6078      	str	r0, [r7, #4]
	uint8_t i = 0, node_id;
 8001080:	2300      	movs	r3, #0
 8001082:	73fb      	strb	r3, [r7, #15]
		10    "P"
		11    30
		12    "K"
		13    40
*/
	token = strtok(msg, ":,{}");
 8001084:	4951      	ldr	r1, [pc, #324]	; (80011cc <ProcessMsg+0x154>)
 8001086:	6878      	ldr	r0, [r7, #4]
 8001088:	f005 fa74 	bl	8006574 <strtok>
 800108c:	60b8      	str	r0, [r7, #8]

	for(i = 0; (i < 100) && (token != NULL); i++){
 800108e:	2300      	movs	r3, #0
 8001090:	73fb      	strb	r3, [r7, #15]
 8001092:	e090      	b.n	80011b6 <ProcessMsg+0x13e>
		if(i == 1) {
 8001094:	7bfb      	ldrb	r3, [r7, #15]
 8001096:	2b01      	cmp	r3, #1
 8001098:	d118      	bne.n	80010cc <ProcessMsg+0x54>
			node_id = atoi(token);
 800109a:	68b8      	ldr	r0, [r7, #8]
 800109c:	f004 fadb 	bl	8005656 <atoi>
 80010a0:	4603      	mov	r3, r0
 80010a2:	73bb      	strb	r3, [r7, #14]
			_Data_node[node_id].node_id = node_id;
 80010a4:	7bba      	ldrb	r2, [r7, #14]
 80010a6:	494a      	ldr	r1, [pc, #296]	; (80011d0 <ProcessMsg+0x158>)
 80010a8:	4613      	mov	r3, r2
 80010aa:	009b      	lsls	r3, r3, #2
 80010ac:	4413      	add	r3, r2
 80010ae:	009b      	lsls	r3, r3, #2
 80010b0:	440b      	add	r3, r1
 80010b2:	7bba      	ldrb	r2, [r7, #14]
 80010b4:	701a      	strb	r2, [r3, #0]
			_Data_node[node_id].is_connected = 1;
 80010b6:	7bba      	ldrb	r2, [r7, #14]
 80010b8:	4945      	ldr	r1, [pc, #276]	; (80011d0 <ProcessMsg+0x158>)
 80010ba:	4613      	mov	r3, r2
 80010bc:	009b      	lsls	r3, r3, #2
 80010be:	4413      	add	r3, r2
 80010c0:	009b      	lsls	r3, r3, #2
 80010c2:	440b      	add	r3, r1
 80010c4:	3310      	adds	r3, #16
 80010c6:	2201      	movs	r2, #1
 80010c8:	701a      	strb	r2, [r3, #0]
 80010ca:	e06c      	b.n	80011a6 <ProcessMsg+0x12e>
		}
		else if(i == 3) _Data_node[node_id].temp = atoff(token);
 80010cc:	7bfb      	ldrb	r3, [r7, #15]
 80010ce:	2b03      	cmp	r3, #3
 80010d0:	d10d      	bne.n	80010ee <ProcessMsg+0x76>
 80010d2:	7bbc      	ldrb	r4, [r7, #14]
 80010d4:	68b8      	ldr	r0, [r7, #8]
 80010d6:	f004 fabb 	bl	8005650 <atoff>
 80010da:	4602      	mov	r2, r0
 80010dc:	493c      	ldr	r1, [pc, #240]	; (80011d0 <ProcessMsg+0x158>)
 80010de:	4623      	mov	r3, r4
 80010e0:	009b      	lsls	r3, r3, #2
 80010e2:	4423      	add	r3, r4
 80010e4:	009b      	lsls	r3, r3, #2
 80010e6:	440b      	add	r3, r1
 80010e8:	3304      	adds	r3, #4
 80010ea:	601a      	str	r2, [r3, #0]
 80010ec:	e05b      	b.n	80011a6 <ProcessMsg+0x12e>
		else if(i == 5) _Data_node[node_id].humid = atoff(token);
 80010ee:	7bfb      	ldrb	r3, [r7, #15]
 80010f0:	2b05      	cmp	r3, #5
 80010f2:	d10d      	bne.n	8001110 <ProcessMsg+0x98>
 80010f4:	7bbc      	ldrb	r4, [r7, #14]
 80010f6:	68b8      	ldr	r0, [r7, #8]
 80010f8:	f004 faaa 	bl	8005650 <atoff>
 80010fc:	4602      	mov	r2, r0
 80010fe:	4934      	ldr	r1, [pc, #208]	; (80011d0 <ProcessMsg+0x158>)
 8001100:	4623      	mov	r3, r4
 8001102:	009b      	lsls	r3, r3, #2
 8001104:	4423      	add	r3, r4
 8001106:	009b      	lsls	r3, r3, #2
 8001108:	440b      	add	r3, r1
 800110a:	3308      	adds	r3, #8
 800110c:	601a      	str	r2, [r3, #0]
 800110e:	e04a      	b.n	80011a6 <ProcessMsg+0x12e>
		else if(i == 7) _Data_node[node_id].adc = atoi(token);
 8001110:	7bfb      	ldrb	r3, [r7, #15]
 8001112:	2b07      	cmp	r3, #7
 8001114:	d10f      	bne.n	8001136 <ProcessMsg+0xbe>
 8001116:	68b8      	ldr	r0, [r7, #8]
 8001118:	f004 fa9d 	bl	8005656 <atoi>
 800111c:	4603      	mov	r3, r0
 800111e:	7bba      	ldrb	r2, [r7, #14]
 8001120:	b2d8      	uxtb	r0, r3
 8001122:	492b      	ldr	r1, [pc, #172]	; (80011d0 <ProcessMsg+0x158>)
 8001124:	4613      	mov	r3, r2
 8001126:	009b      	lsls	r3, r3, #2
 8001128:	4413      	add	r3, r2
 800112a:	009b      	lsls	r3, r3, #2
 800112c:	440b      	add	r3, r1
 800112e:	330c      	adds	r3, #12
 8001130:	4602      	mov	r2, r0
 8001132:	701a      	strb	r2, [r3, #0]
 8001134:	e037      	b.n	80011a6 <ProcessMsg+0x12e>
		else if(i == 9) _Data_node[node_id].nito = atoi(token);
 8001136:	7bfb      	ldrb	r3, [r7, #15]
 8001138:	2b09      	cmp	r3, #9
 800113a:	d10f      	bne.n	800115c <ProcessMsg+0xe4>
 800113c:	68b8      	ldr	r0, [r7, #8]
 800113e:	f004 fa8a 	bl	8005656 <atoi>
 8001142:	4603      	mov	r3, r0
 8001144:	7bba      	ldrb	r2, [r7, #14]
 8001146:	b2d8      	uxtb	r0, r3
 8001148:	4921      	ldr	r1, [pc, #132]	; (80011d0 <ProcessMsg+0x158>)
 800114a:	4613      	mov	r3, r2
 800114c:	009b      	lsls	r3, r3, #2
 800114e:	4413      	add	r3, r2
 8001150:	009b      	lsls	r3, r3, #2
 8001152:	440b      	add	r3, r1
 8001154:	330d      	adds	r3, #13
 8001156:	4602      	mov	r2, r0
 8001158:	701a      	strb	r2, [r3, #0]
 800115a:	e024      	b.n	80011a6 <ProcessMsg+0x12e>
		else if(i == 11) _Data_node[node_id].photpho = atoi(token);
 800115c:	7bfb      	ldrb	r3, [r7, #15]
 800115e:	2b0b      	cmp	r3, #11
 8001160:	d10f      	bne.n	8001182 <ProcessMsg+0x10a>
 8001162:	68b8      	ldr	r0, [r7, #8]
 8001164:	f004 fa77 	bl	8005656 <atoi>
 8001168:	4603      	mov	r3, r0
 800116a:	7bba      	ldrb	r2, [r7, #14]
 800116c:	b2d8      	uxtb	r0, r3
 800116e:	4918      	ldr	r1, [pc, #96]	; (80011d0 <ProcessMsg+0x158>)
 8001170:	4613      	mov	r3, r2
 8001172:	009b      	lsls	r3, r3, #2
 8001174:	4413      	add	r3, r2
 8001176:	009b      	lsls	r3, r3, #2
 8001178:	440b      	add	r3, r1
 800117a:	330e      	adds	r3, #14
 800117c:	4602      	mov	r2, r0
 800117e:	701a      	strb	r2, [r3, #0]
 8001180:	e011      	b.n	80011a6 <ProcessMsg+0x12e>
		else if(i == 13) _Data_node[node_id].kali = atoi(token);
 8001182:	7bfb      	ldrb	r3, [r7, #15]
 8001184:	2b0d      	cmp	r3, #13
 8001186:	d10e      	bne.n	80011a6 <ProcessMsg+0x12e>
 8001188:	68b8      	ldr	r0, [r7, #8]
 800118a:	f004 fa64 	bl	8005656 <atoi>
 800118e:	4603      	mov	r3, r0
 8001190:	7bba      	ldrb	r2, [r7, #14]
 8001192:	b2d8      	uxtb	r0, r3
 8001194:	490e      	ldr	r1, [pc, #56]	; (80011d0 <ProcessMsg+0x158>)
 8001196:	4613      	mov	r3, r2
 8001198:	009b      	lsls	r3, r3, #2
 800119a:	4413      	add	r3, r2
 800119c:	009b      	lsls	r3, r3, #2
 800119e:	440b      	add	r3, r1
 80011a0:	330f      	adds	r3, #15
 80011a2:	4602      	mov	r2, r0
 80011a4:	701a      	strb	r2, [r3, #0]
		token = strtok(NULL, ":,{}");
 80011a6:	4909      	ldr	r1, [pc, #36]	; (80011cc <ProcessMsg+0x154>)
 80011a8:	2000      	movs	r0, #0
 80011aa:	f005 f9e3 	bl	8006574 <strtok>
 80011ae:	60b8      	str	r0, [r7, #8]
	for(i = 0; (i < 100) && (token != NULL); i++){
 80011b0:	7bfb      	ldrb	r3, [r7, #15]
 80011b2:	3301      	adds	r3, #1
 80011b4:	73fb      	strb	r3, [r7, #15]
 80011b6:	7bfb      	ldrb	r3, [r7, #15]
 80011b8:	2b63      	cmp	r3, #99	; 0x63
 80011ba:	d803      	bhi.n	80011c4 <ProcessMsg+0x14c>
 80011bc:	68bb      	ldr	r3, [r7, #8]
 80011be:	2b00      	cmp	r3, #0
 80011c0:	f47f af68 	bne.w	8001094 <ProcessMsg+0x1c>
	}
}
 80011c4:	bf00      	nop
 80011c6:	3714      	adds	r7, #20
 80011c8:	46bd      	mov	sp, r7
 80011ca:	bd90      	pop	{r4, r7, pc}
 80011cc:	08008668 	.word	0x08008668
 80011d0:	20000210 	.word	0x20000210

080011d4 <FSM_Init>:

//==================HIGH LEVEL FUNCTION==================//
void FSM_Init(void){
 80011d4:	b480      	push	{r7}
 80011d6:	af00      	add	r7, sp, #0
	mode_data = INIT;
 80011d8:	4b07      	ldr	r3, [pc, #28]	; (80011f8 <FSM_Init+0x24>)
 80011da:	2200      	movs	r2, #0
 80011dc:	701a      	strb	r2, [r3, #0]
	mode_lcd = INIT;
 80011de:	4b07      	ldr	r3, [pc, #28]	; (80011fc <FSM_Init+0x28>)
 80011e0:	2200      	movs	r2, #0
 80011e2:	701a      	strb	r2, [r3, #0]

	node_turn = 0;
 80011e4:	4b06      	ldr	r3, [pc, #24]	; (8001200 <FSM_Init+0x2c>)
 80011e6:	2200      	movs	r2, #0
 80011e8:	701a      	strb	r2, [r3, #0]
	_time_screen = 50;
 80011ea:	4b06      	ldr	r3, [pc, #24]	; (8001204 <FSM_Init+0x30>)
 80011ec:	2232      	movs	r2, #50	; 0x32
 80011ee:	801a      	strh	r2, [r3, #0]

}
 80011f0:	bf00      	nop
 80011f2:	46bd      	mov	sp, r7
 80011f4:	bc80      	pop	{r7}
 80011f6:	4770      	bx	lr
 80011f8:	20000209 	.word	0x20000209
 80011fc:	20000208 	.word	0x20000208
 8001200:	2000020a 	.word	0x2000020a
 8001204:	20000240 	.word	0x20000240

08001208 <FSM_LcdDisplay>:

void FSM_LcdDisplay(void){
 8001208:	b580      	push	{r7, lr}
 800120a:	af00      	add	r7, sp, #0
	switch(mode_lcd){
 800120c:	4bbc      	ldr	r3, [pc, #752]	; (8001500 <FSM_LcdDisplay+0x2f8>)
 800120e:	781b      	ldrb	r3, [r3, #0]
 8001210:	2b08      	cmp	r3, #8
 8001212:	f200 82c7 	bhi.w	80017a4 <FSM_LcdDisplay+0x59c>
 8001216:	a201      	add	r2, pc, #4	; (adr r2, 800121c <FSM_LcdDisplay+0x14>)
 8001218:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800121c:	08001241 	.word	0x08001241
 8001220:	08001281 	.word	0x08001281
 8001224:	08001377 	.word	0x08001377
 8001228:	0800148b 	.word	0x0800148b
 800122c:	080015e1 	.word	0x080015e1
 8001230:	08001653 	.word	0x08001653
 8001234:	08001693 	.word	0x08001693
 8001238:	080016b1 	.word	0x080016b1
 800123c:	080016f3 	.word	0x080016f3
	case INIT:
		CLCD_PrintStringBuffer(0, 0, SCREEN_INIT_0);
 8001240:	4ab0      	ldr	r2, [pc, #704]	; (8001504 <FSM_LcdDisplay+0x2fc>)
 8001242:	2100      	movs	r1, #0
 8001244:	2000      	movs	r0, #0
 8001246:	f000 fd5f 	bl	8001d08 <CLCD_PrintStringBuffer>
		CLCD_PrintStringBuffer(1, 0, SCREEN_INIT_1);
 800124a:	4aaf      	ldr	r2, [pc, #700]	; (8001508 <FSM_LcdDisplay+0x300>)
 800124c:	2100      	movs	r1, #0
 800124e:	2001      	movs	r0, #1
 8001250:	f000 fd5a 	bl	8001d08 <CLCD_PrintStringBuffer>

		if(_time_screen < 5){
 8001254:	4bad      	ldr	r3, [pc, #692]	; (800150c <FSM_LcdDisplay+0x304>)
 8001256:	881b      	ldrh	r3, [r3, #0]
 8001258:	2b04      	cmp	r3, #4
 800125a:	f200 82a7 	bhi.w	80017ac <FSM_LcdDisplay+0x5a4>
			CLCD_PrintStringBuffer(0, 0, SCREEN_WIFI_CONNECTING_0);
 800125e:	4aac      	ldr	r2, [pc, #688]	; (8001510 <FSM_LcdDisplay+0x308>)
 8001260:	2100      	movs	r1, #0
 8001262:	2000      	movs	r0, #0
 8001264:	f000 fd50 	bl	8001d08 <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_WIFI_CONNECTING_1);
 8001268:	4aa7      	ldr	r2, [pc, #668]	; (8001508 <FSM_LcdDisplay+0x300>)
 800126a:	2100      	movs	r1, #0
 800126c:	2001      	movs	r0, #1
 800126e:	f000 fd4b 	bl	8001d08 <CLCD_PrintStringBuffer>

			UESP_SendMsg(CMD_CONNECT_WF);
 8001272:	48a8      	ldr	r0, [pc, #672]	; (8001514 <FSM_LcdDisplay+0x30c>)
 8001274:	f001 fbee 	bl	8002a54 <UESP_SendMsg>

//			mode_lcd = DISPLAY_CONNECT_WF;
			mode_lcd = READY_DISPLAY;
 8001278:	4ba1      	ldr	r3, [pc, #644]	; (8001500 <FSM_LcdDisplay+0x2f8>)
 800127a:	2201      	movs	r2, #1
 800127c:	701a      	strb	r2, [r3, #0]
		}
		break;
 800127e:	e295      	b.n	80017ac <FSM_LcdDisplay+0x5a4>
	case READY_DISPLAY:

//		if(_Data_node[node_turn].is_connected > 0){
		if(strcmp(UESP_GetMsg(), DISCONNECT_WF) == 0){
 8001280:	f001 fc04 	bl	8002a8c <UESP_GetMsg>
 8001284:	4603      	mov	r3, r0
 8001286:	49a4      	ldr	r1, [pc, #656]	; (8001518 <FSM_LcdDisplay+0x310>)
 8001288:	4618      	mov	r0, r3
 800128a:	f7fe ff61 	bl	8000150 <strcmp>
 800128e:	4603      	mov	r3, r0
 8001290:	2b00      	cmp	r3, #0
 8001292:	d110      	bne.n	80012b6 <FSM_LcdDisplay+0xae>
			CLCD_PrintStringBuffer(0, 0, SCREEN_WIFI_CONNECTING_0);
 8001294:	4a9e      	ldr	r2, [pc, #632]	; (8001510 <FSM_LcdDisplay+0x308>)
 8001296:	2100      	movs	r1, #0
 8001298:	2000      	movs	r0, #0
 800129a:	f000 fd35 	bl	8001d08 <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_WIFI_CONNECTING_1);
 800129e:	4a9a      	ldr	r2, [pc, #616]	; (8001508 <FSM_LcdDisplay+0x300>)
 80012a0:	2100      	movs	r1, #0
 80012a2:	2001      	movs	r0, #1
 80012a4:	f000 fd30 	bl	8001d08 <CLCD_PrintStringBuffer>

			UESP_SendMsg(CMD_CONNECT_WF);
 80012a8:	489a      	ldr	r0, [pc, #616]	; (8001514 <FSM_LcdDisplay+0x30c>)
 80012aa:	f001 fbd3 	bl	8002a54 <UESP_SendMsg>

			mode_lcd = DISPLAY_CONNECT_WF;
 80012ae:	4b94      	ldr	r3, [pc, #592]	; (8001500 <FSM_LcdDisplay+0x2f8>)
 80012b0:	2208      	movs	r2, #8
 80012b2:	701a      	strb	r2, [r3, #0]
			mode_lcd = DISPLAY_DHT;
		}
		else{
			mode_lcd = TURN_NEXT_NODE;
		}
		break;
 80012b4:	e287      	b.n	80017c6 <FSM_LcdDisplay+0x5be>
		else if(IN_IsPressed_ms(BT_CONFIG, 2000)){
 80012b6:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80012ba:	2000      	movs	r0, #0
 80012bc:	f000 fb54 	bl	8001968 <IN_IsPressed_ms>
 80012c0:	4603      	mov	r3, r0
 80012c2:	2b00      	cmp	r3, #0
 80012c4:	d00d      	beq.n	80012e2 <FSM_LcdDisplay+0xda>
			CLCD_PrintStringBuffer(0, 0, SCREEN_CONFIG_WIFI_0);
 80012c6:	4a95      	ldr	r2, [pc, #596]	; (800151c <FSM_LcdDisplay+0x314>)
 80012c8:	2100      	movs	r1, #0
 80012ca:	2000      	movs	r0, #0
 80012cc:	f000 fd1c 	bl	8001d08 <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_CONFIG_WIFI_1);
 80012d0:	4a8d      	ldr	r2, [pc, #564]	; (8001508 <FSM_LcdDisplay+0x300>)
 80012d2:	2100      	movs	r1, #0
 80012d4:	2001      	movs	r0, #1
 80012d6:	f000 fd17 	bl	8001d08 <CLCD_PrintStringBuffer>
			mode_lcd = DISPLAY_CONFIG_WF;
 80012da:	4b89      	ldr	r3, [pc, #548]	; (8001500 <FSM_LcdDisplay+0x2f8>)
 80012dc:	2207      	movs	r2, #7
 80012de:	701a      	strb	r2, [r3, #0]
		break;
 80012e0:	e271      	b.n	80017c6 <FSM_LcdDisplay+0x5be>
		else if(_Data_node[node_turn].is_connected){
 80012e2:	4b8f      	ldr	r3, [pc, #572]	; (8001520 <FSM_LcdDisplay+0x318>)
 80012e4:	781b      	ldrb	r3, [r3, #0]
 80012e6:	4619      	mov	r1, r3
 80012e8:	4a8e      	ldr	r2, [pc, #568]	; (8001524 <FSM_LcdDisplay+0x31c>)
 80012ea:	460b      	mov	r3, r1
 80012ec:	009b      	lsls	r3, r3, #2
 80012ee:	440b      	add	r3, r1
 80012f0:	009b      	lsls	r3, r3, #2
 80012f2:	4413      	add	r3, r2
 80012f4:	3310      	adds	r3, #16
 80012f6:	781b      	ldrb	r3, [r3, #0]
 80012f8:	2b00      	cmp	r3, #0
 80012fa:	d038      	beq.n	800136e <FSM_LcdDisplay+0x166>
			_time_screen = TIME_SCREEN;
 80012fc:	4b83      	ldr	r3, [pc, #524]	; (800150c <FSM_LcdDisplay+0x304>)
 80012fe:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8001302:	801a      	strh	r2, [r3, #0]
			CLCD_PrintStringBuffer(0, 0, SCREEN_TEMP_HUMI_0);
 8001304:	4a88      	ldr	r2, [pc, #544]	; (8001528 <FSM_LcdDisplay+0x320>)
 8001306:	2100      	movs	r1, #0
 8001308:	2000      	movs	r0, #0
 800130a:	f000 fcfd 	bl	8001d08 <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_TEMP_HUMI_1);
 800130e:	4a87      	ldr	r2, [pc, #540]	; (800152c <FSM_LcdDisplay+0x324>)
 8001310:	2100      	movs	r1, #0
 8001312:	2001      	movs	r0, #1
 8001314:	f000 fcf8 	bl	8001d08 <CLCD_PrintStringBuffer>
			CLCD_PrintCharBuffer(0, INDEX_LCD_CEL_SYMBOL, 0xDF);
 8001318:	22df      	movs	r2, #223	; 0xdf
 800131a:	210e      	movs	r1, #14
 800131c:	2000      	movs	r0, #0
 800131e:	f000 fcb7 	bl	8001c90 <CLCD_PrintCharBuffer>
			CLCD_PrintCharBuffer(0, 0, _Data_node[node_turn].node_id + '0');
 8001322:	4b7f      	ldr	r3, [pc, #508]	; (8001520 <FSM_LcdDisplay+0x318>)
 8001324:	781b      	ldrb	r3, [r3, #0]
 8001326:	4619      	mov	r1, r3
 8001328:	4a7e      	ldr	r2, [pc, #504]	; (8001524 <FSM_LcdDisplay+0x31c>)
 800132a:	460b      	mov	r3, r1
 800132c:	009b      	lsls	r3, r3, #2
 800132e:	440b      	add	r3, r1
 8001330:	009b      	lsls	r3, r3, #2
 8001332:	4413      	add	r3, r2
 8001334:	781b      	ldrb	r3, [r3, #0]
 8001336:	3330      	adds	r3, #48	; 0x30
 8001338:	b2db      	uxtb	r3, r3
 800133a:	461a      	mov	r2, r3
 800133c:	2100      	movs	r1, #0
 800133e:	2000      	movs	r0, #0
 8001340:	f000 fca6 	bl	8001c90 <CLCD_PrintCharBuffer>
			CLCD_PrintCharBuffer(1, 0, _Data_node[node_turn].node_id + '0');
 8001344:	4b76      	ldr	r3, [pc, #472]	; (8001520 <FSM_LcdDisplay+0x318>)
 8001346:	781b      	ldrb	r3, [r3, #0]
 8001348:	4619      	mov	r1, r3
 800134a:	4a76      	ldr	r2, [pc, #472]	; (8001524 <FSM_LcdDisplay+0x31c>)
 800134c:	460b      	mov	r3, r1
 800134e:	009b      	lsls	r3, r3, #2
 8001350:	440b      	add	r3, r1
 8001352:	009b      	lsls	r3, r3, #2
 8001354:	4413      	add	r3, r2
 8001356:	781b      	ldrb	r3, [r3, #0]
 8001358:	3330      	adds	r3, #48	; 0x30
 800135a:	b2db      	uxtb	r3, r3
 800135c:	461a      	mov	r2, r3
 800135e:	2100      	movs	r1, #0
 8001360:	2001      	movs	r0, #1
 8001362:	f000 fc95 	bl	8001c90 <CLCD_PrintCharBuffer>
			mode_lcd = DISPLAY_DHT;
 8001366:	4b66      	ldr	r3, [pc, #408]	; (8001500 <FSM_LcdDisplay+0x2f8>)
 8001368:	2202      	movs	r2, #2
 800136a:	701a      	strb	r2, [r3, #0]
		break;
 800136c:	e22b      	b.n	80017c6 <FSM_LcdDisplay+0x5be>
			mode_lcd = TURN_NEXT_NODE;
 800136e:	4b64      	ldr	r3, [pc, #400]	; (8001500 <FSM_LcdDisplay+0x2f8>)
 8001370:	2206      	movs	r2, #6
 8001372:	701a      	strb	r2, [r3, #0]
		break;
 8001374:	e227      	b.n	80017c6 <FSM_LcdDisplay+0x5be>
	case DISPLAY_DHT:
		CLCD_PrintFloatBuffer(0, INDEX_LCD_TEMP, _Data_node[node_turn].temp);
 8001376:	4b6a      	ldr	r3, [pc, #424]	; (8001520 <FSM_LcdDisplay+0x318>)
 8001378:	781b      	ldrb	r3, [r3, #0]
 800137a:	4619      	mov	r1, r3
 800137c:	4a69      	ldr	r2, [pc, #420]	; (8001524 <FSM_LcdDisplay+0x31c>)
 800137e:	460b      	mov	r3, r1
 8001380:	009b      	lsls	r3, r3, #2
 8001382:	440b      	add	r3, r1
 8001384:	009b      	lsls	r3, r3, #2
 8001386:	4413      	add	r3, r2
 8001388:	3304      	adds	r3, #4
 800138a:	681b      	ldr	r3, [r3, #0]
 800138c:	461a      	mov	r2, r3
 800138e:	2109      	movs	r1, #9
 8001390:	2000      	movs	r0, #0
 8001392:	f000 fd63 	bl	8001e5c <CLCD_PrintFloatBuffer>
		CLCD_PrintFloatBuffer(1, INDEX_LCD_HUMI, _Data_node[node_turn].humid);
 8001396:	4b62      	ldr	r3, [pc, #392]	; (8001520 <FSM_LcdDisplay+0x318>)
 8001398:	781b      	ldrb	r3, [r3, #0]
 800139a:	4619      	mov	r1, r3
 800139c:	4a61      	ldr	r2, [pc, #388]	; (8001524 <FSM_LcdDisplay+0x31c>)
 800139e:	460b      	mov	r3, r1
 80013a0:	009b      	lsls	r3, r3, #2
 80013a2:	440b      	add	r3, r1
 80013a4:	009b      	lsls	r3, r3, #2
 80013a6:	4413      	add	r3, r2
 80013a8:	3308      	adds	r3, #8
 80013aa:	681b      	ldr	r3, [r3, #0]
 80013ac:	461a      	mov	r2, r3
 80013ae:	2109      	movs	r1, #9
 80013b0:	2001      	movs	r0, #1
 80013b2:	f000 fd53 	bl	8001e5c <CLCD_PrintFloatBuffer>

		if(strcmp(UESP_GetMsg(), DISCONNECT_WF) == 0){
 80013b6:	f001 fb69 	bl	8002a8c <UESP_GetMsg>
 80013ba:	4603      	mov	r3, r0
 80013bc:	4956      	ldr	r1, [pc, #344]	; (8001518 <FSM_LcdDisplay+0x310>)
 80013be:	4618      	mov	r0, r3
 80013c0:	f7fe fec6 	bl	8000150 <strcmp>
 80013c4:	4603      	mov	r3, r0
 80013c6:	2b00      	cmp	r3, #0
 80013c8:	d10d      	bne.n	80013e6 <FSM_LcdDisplay+0x1de>
			CLCD_PrintStringBuffer(0, 0, SCREEN_WIFI_CONNECTING_0);
 80013ca:	4a51      	ldr	r2, [pc, #324]	; (8001510 <FSM_LcdDisplay+0x308>)
 80013cc:	2100      	movs	r1, #0
 80013ce:	2000      	movs	r0, #0
 80013d0:	f000 fc9a 	bl	8001d08 <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_WIFI_CONNECTING_1);
 80013d4:	4a4c      	ldr	r2, [pc, #304]	; (8001508 <FSM_LcdDisplay+0x300>)
 80013d6:	2100      	movs	r1, #0
 80013d8:	2001      	movs	r0, #1
 80013da:	f000 fc95 	bl	8001d08 <CLCD_PrintStringBuffer>
			mode_lcd = DISPLAY_CONNECT_WF;
 80013de:	4b48      	ldr	r3, [pc, #288]	; (8001500 <FSM_LcdDisplay+0x2f8>)
 80013e0:	2208      	movs	r2, #8
 80013e2:	701a      	strb	r2, [r3, #0]
			CLCD_PrintCharBuffer(0, 0, _Data_node[node_turn].node_id + '0');
			CLCD_PrintCharBuffer(1, 0, _Data_node[node_turn].node_id + '0');

			mode_lcd = DISPLAY_SOILHUMID_NITO;
		}
		break;
 80013e4:	e1e4      	b.n	80017b0 <FSM_LcdDisplay+0x5a8>
		else if(IN_IsPressed_ms(BT_CONFIG, 2000)){
 80013e6:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80013ea:	2000      	movs	r0, #0
 80013ec:	f000 fabc 	bl	8001968 <IN_IsPressed_ms>
 80013f0:	4603      	mov	r3, r0
 80013f2:	2b00      	cmp	r3, #0
 80013f4:	d010      	beq.n	8001418 <FSM_LcdDisplay+0x210>
			CLCD_PrintStringBuffer(0, 0, SCREEN_CONFIG_WIFI_0);
 80013f6:	4a49      	ldr	r2, [pc, #292]	; (800151c <FSM_LcdDisplay+0x314>)
 80013f8:	2100      	movs	r1, #0
 80013fa:	2000      	movs	r0, #0
 80013fc:	f000 fc84 	bl	8001d08 <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_CONFIG_WIFI_1);
 8001400:	4a41      	ldr	r2, [pc, #260]	; (8001508 <FSM_LcdDisplay+0x300>)
 8001402:	2100      	movs	r1, #0
 8001404:	2001      	movs	r0, #1
 8001406:	f000 fc7f 	bl	8001d08 <CLCD_PrintStringBuffer>
			UESP_SendMsg(CMD_CONFIG_WF);
 800140a:	4849      	ldr	r0, [pc, #292]	; (8001530 <FSM_LcdDisplay+0x328>)
 800140c:	f001 fb22 	bl	8002a54 <UESP_SendMsg>
			mode_lcd = DISPLAY_CONFIG_WF;
 8001410:	4b3b      	ldr	r3, [pc, #236]	; (8001500 <FSM_LcdDisplay+0x2f8>)
 8001412:	2207      	movs	r2, #7
 8001414:	701a      	strb	r2, [r3, #0]
		break;
 8001416:	e1cb      	b.n	80017b0 <FSM_LcdDisplay+0x5a8>
		else if(_time_screen < 5){
 8001418:	4b3c      	ldr	r3, [pc, #240]	; (800150c <FSM_LcdDisplay+0x304>)
 800141a:	881b      	ldrh	r3, [r3, #0]
 800141c:	2b04      	cmp	r3, #4
 800141e:	f200 81c7 	bhi.w	80017b0 <FSM_LcdDisplay+0x5a8>
			_time_screen = TIME_SCREEN;
 8001422:	4b3a      	ldr	r3, [pc, #232]	; (800150c <FSM_LcdDisplay+0x304>)
 8001424:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8001428:	801a      	strh	r2, [r3, #0]
			CLCD_PrintStringBuffer(0, 0, SCREEN_SOILHUMID_NITO_0);
 800142a:	4a42      	ldr	r2, [pc, #264]	; (8001534 <FSM_LcdDisplay+0x32c>)
 800142c:	2100      	movs	r1, #0
 800142e:	2000      	movs	r0, #0
 8001430:	f000 fc6a 	bl	8001d08 <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_SOILHUMID_NITO_1);
 8001434:	4a40      	ldr	r2, [pc, #256]	; (8001538 <FSM_LcdDisplay+0x330>)
 8001436:	2100      	movs	r1, #0
 8001438:	2001      	movs	r0, #1
 800143a:	f000 fc65 	bl	8001d08 <CLCD_PrintStringBuffer>
			CLCD_PrintCharBuffer(0, 0, _Data_node[node_turn].node_id + '0');
 800143e:	4b38      	ldr	r3, [pc, #224]	; (8001520 <FSM_LcdDisplay+0x318>)
 8001440:	781b      	ldrb	r3, [r3, #0]
 8001442:	4619      	mov	r1, r3
 8001444:	4a37      	ldr	r2, [pc, #220]	; (8001524 <FSM_LcdDisplay+0x31c>)
 8001446:	460b      	mov	r3, r1
 8001448:	009b      	lsls	r3, r3, #2
 800144a:	440b      	add	r3, r1
 800144c:	009b      	lsls	r3, r3, #2
 800144e:	4413      	add	r3, r2
 8001450:	781b      	ldrb	r3, [r3, #0]
 8001452:	3330      	adds	r3, #48	; 0x30
 8001454:	b2db      	uxtb	r3, r3
 8001456:	461a      	mov	r2, r3
 8001458:	2100      	movs	r1, #0
 800145a:	2000      	movs	r0, #0
 800145c:	f000 fc18 	bl	8001c90 <CLCD_PrintCharBuffer>
			CLCD_PrintCharBuffer(1, 0, _Data_node[node_turn].node_id + '0');
 8001460:	4b2f      	ldr	r3, [pc, #188]	; (8001520 <FSM_LcdDisplay+0x318>)
 8001462:	781b      	ldrb	r3, [r3, #0]
 8001464:	4619      	mov	r1, r3
 8001466:	4a2f      	ldr	r2, [pc, #188]	; (8001524 <FSM_LcdDisplay+0x31c>)
 8001468:	460b      	mov	r3, r1
 800146a:	009b      	lsls	r3, r3, #2
 800146c:	440b      	add	r3, r1
 800146e:	009b      	lsls	r3, r3, #2
 8001470:	4413      	add	r3, r2
 8001472:	781b      	ldrb	r3, [r3, #0]
 8001474:	3330      	adds	r3, #48	; 0x30
 8001476:	b2db      	uxtb	r3, r3
 8001478:	461a      	mov	r2, r3
 800147a:	2100      	movs	r1, #0
 800147c:	2001      	movs	r0, #1
 800147e:	f000 fc07 	bl	8001c90 <CLCD_PrintCharBuffer>
			mode_lcd = DISPLAY_SOILHUMID_NITO;
 8001482:	4b1f      	ldr	r3, [pc, #124]	; (8001500 <FSM_LcdDisplay+0x2f8>)
 8001484:	2203      	movs	r2, #3
 8001486:	701a      	strb	r2, [r3, #0]
		break;
 8001488:	e192      	b.n	80017b0 <FSM_LcdDisplay+0x5a8>
	case DISPLAY_SOILHUMID_NITO:
		CLCD_PrintNumBuffer(0, INDEX_LCD_SHUMI, _Data_node[node_turn].adc);
 800148a:	4b25      	ldr	r3, [pc, #148]	; (8001520 <FSM_LcdDisplay+0x318>)
 800148c:	781b      	ldrb	r3, [r3, #0]
 800148e:	4619      	mov	r1, r3
 8001490:	4a24      	ldr	r2, [pc, #144]	; (8001524 <FSM_LcdDisplay+0x31c>)
 8001492:	460b      	mov	r3, r1
 8001494:	009b      	lsls	r3, r3, #2
 8001496:	440b      	add	r3, r1
 8001498:	009b      	lsls	r3, r3, #2
 800149a:	4413      	add	r3, r2
 800149c:	330c      	adds	r3, #12
 800149e:	781b      	ldrb	r3, [r3, #0]
 80014a0:	b21b      	sxth	r3, r3
 80014a2:	461a      	mov	r2, r3
 80014a4:	2109      	movs	r1, #9
 80014a6:	2000      	movs	r0, #0
 80014a8:	f000 fc64 	bl	8001d74 <CLCD_PrintNumBuffer>
		CLCD_PrintNumBuffer(1, INDEX_LCD_N, _Data_node[node_turn].nito);
 80014ac:	4b1c      	ldr	r3, [pc, #112]	; (8001520 <FSM_LcdDisplay+0x318>)
 80014ae:	781b      	ldrb	r3, [r3, #0]
 80014b0:	4619      	mov	r1, r3
 80014b2:	4a1c      	ldr	r2, [pc, #112]	; (8001524 <FSM_LcdDisplay+0x31c>)
 80014b4:	460b      	mov	r3, r1
 80014b6:	009b      	lsls	r3, r3, #2
 80014b8:	440b      	add	r3, r1
 80014ba:	009b      	lsls	r3, r3, #2
 80014bc:	4413      	add	r3, r2
 80014be:	330d      	adds	r3, #13
 80014c0:	781b      	ldrb	r3, [r3, #0]
 80014c2:	b21b      	sxth	r3, r3
 80014c4:	461a      	mov	r2, r3
 80014c6:	2105      	movs	r1, #5
 80014c8:	2001      	movs	r0, #1
 80014ca:	f000 fc53 	bl	8001d74 <CLCD_PrintNumBuffer>

		if(strcmp(UESP_GetMsg(), DISCONNECT_WF) == 0){
 80014ce:	f001 fadd 	bl	8002a8c <UESP_GetMsg>
 80014d2:	4603      	mov	r3, r0
 80014d4:	4910      	ldr	r1, [pc, #64]	; (8001518 <FSM_LcdDisplay+0x310>)
 80014d6:	4618      	mov	r0, r3
 80014d8:	f7fe fe3a 	bl	8000150 <strcmp>
 80014dc:	4603      	mov	r3, r0
 80014de:	2b00      	cmp	r3, #0
 80014e0:	d12c      	bne.n	800153c <FSM_LcdDisplay+0x334>
			CLCD_PrintStringBuffer(0, 0, SCREEN_WIFI_CONNECTING_0);
 80014e2:	4a0b      	ldr	r2, [pc, #44]	; (8001510 <FSM_LcdDisplay+0x308>)
 80014e4:	2100      	movs	r1, #0
 80014e6:	2000      	movs	r0, #0
 80014e8:	f000 fc0e 	bl	8001d08 <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_WIFI_CONNECTING_1);
 80014ec:	4a06      	ldr	r2, [pc, #24]	; (8001508 <FSM_LcdDisplay+0x300>)
 80014ee:	2100      	movs	r1, #0
 80014f0:	2001      	movs	r0, #1
 80014f2:	f000 fc09 	bl	8001d08 <CLCD_PrintStringBuffer>
			mode_lcd = DISPLAY_CONNECT_WF;
 80014f6:	4b02      	ldr	r3, [pc, #8]	; (8001500 <FSM_LcdDisplay+0x2f8>)
 80014f8:	2208      	movs	r2, #8
 80014fa:	701a      	strb	r2, [r3, #0]
			CLCD_PrintCharBuffer(0, 0, _Data_node[node_turn].node_id + '0');
			CLCD_PrintCharBuffer(1, 0, _Data_node[node_turn].node_id + '0');

			mode_lcd = DISPLAY_PHOTPHO_KALI;
		}
		break;
 80014fc:	e15a      	b.n	80017b4 <FSM_LcdDisplay+0x5ac>
 80014fe:	bf00      	nop
 8001500:	20000208 	.word	0x20000208
 8001504:	08008670 	.word	0x08008670
 8001508:	08008684 	.word	0x08008684
 800150c:	20000240 	.word	0x20000240
 8001510:	08008698 	.word	0x08008698
 8001514:	080086ac 	.word	0x080086ac
 8001518:	080086b4 	.word	0x080086b4
 800151c:	080086c0 	.word	0x080086c0
 8001520:	2000020a 	.word	0x2000020a
 8001524:	20000210 	.word	0x20000210
 8001528:	080086d4 	.word	0x080086d4
 800152c:	080086e8 	.word	0x080086e8
 8001530:	080086fc 	.word	0x080086fc
 8001534:	08008704 	.word	0x08008704
 8001538:	08008718 	.word	0x08008718
		else if(IN_IsPressed_ms(BT_CONFIG, 2000)){
 800153c:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001540:	2000      	movs	r0, #0
 8001542:	f000 fa11 	bl	8001968 <IN_IsPressed_ms>
 8001546:	4603      	mov	r3, r0
 8001548:	2b00      	cmp	r3, #0
 800154a:	d010      	beq.n	800156e <FSM_LcdDisplay+0x366>
			CLCD_PrintStringBuffer(0, 0, SCREEN_CONFIG_WIFI_0);
 800154c:	4a9f      	ldr	r2, [pc, #636]	; (80017cc <FSM_LcdDisplay+0x5c4>)
 800154e:	2100      	movs	r1, #0
 8001550:	2000      	movs	r0, #0
 8001552:	f000 fbd9 	bl	8001d08 <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_CONFIG_WIFI_1);
 8001556:	4a9e      	ldr	r2, [pc, #632]	; (80017d0 <FSM_LcdDisplay+0x5c8>)
 8001558:	2100      	movs	r1, #0
 800155a:	2001      	movs	r0, #1
 800155c:	f000 fbd4 	bl	8001d08 <CLCD_PrintStringBuffer>
			UESP_SendMsg(CMD_CONFIG_WF);
 8001560:	489c      	ldr	r0, [pc, #624]	; (80017d4 <FSM_LcdDisplay+0x5cc>)
 8001562:	f001 fa77 	bl	8002a54 <UESP_SendMsg>
			mode_lcd = DISPLAY_CONFIG_WF;
 8001566:	4b9c      	ldr	r3, [pc, #624]	; (80017d8 <FSM_LcdDisplay+0x5d0>)
 8001568:	2207      	movs	r2, #7
 800156a:	701a      	strb	r2, [r3, #0]
		break;
 800156c:	e122      	b.n	80017b4 <FSM_LcdDisplay+0x5ac>
		else if(_time_screen < 5){
 800156e:	4b9b      	ldr	r3, [pc, #620]	; (80017dc <FSM_LcdDisplay+0x5d4>)
 8001570:	881b      	ldrh	r3, [r3, #0]
 8001572:	2b04      	cmp	r3, #4
 8001574:	f200 811e 	bhi.w	80017b4 <FSM_LcdDisplay+0x5ac>
			_time_screen = TIME_SCREEN;
 8001578:	4b98      	ldr	r3, [pc, #608]	; (80017dc <FSM_LcdDisplay+0x5d4>)
 800157a:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800157e:	801a      	strh	r2, [r3, #0]
			CLCD_PrintStringBuffer(0, 0, SCREEN_PHOTPHO_KALI_0);
 8001580:	4a97      	ldr	r2, [pc, #604]	; (80017e0 <FSM_LcdDisplay+0x5d8>)
 8001582:	2100      	movs	r1, #0
 8001584:	2000      	movs	r0, #0
 8001586:	f000 fbbf 	bl	8001d08 <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_PHOTPHO_KALI_1);
 800158a:	4a96      	ldr	r2, [pc, #600]	; (80017e4 <FSM_LcdDisplay+0x5dc>)
 800158c:	2100      	movs	r1, #0
 800158e:	2001      	movs	r0, #1
 8001590:	f000 fbba 	bl	8001d08 <CLCD_PrintStringBuffer>
			CLCD_PrintCharBuffer(0, 0, _Data_node[node_turn].node_id + '0');
 8001594:	4b94      	ldr	r3, [pc, #592]	; (80017e8 <FSM_LcdDisplay+0x5e0>)
 8001596:	781b      	ldrb	r3, [r3, #0]
 8001598:	4619      	mov	r1, r3
 800159a:	4a94      	ldr	r2, [pc, #592]	; (80017ec <FSM_LcdDisplay+0x5e4>)
 800159c:	460b      	mov	r3, r1
 800159e:	009b      	lsls	r3, r3, #2
 80015a0:	440b      	add	r3, r1
 80015a2:	009b      	lsls	r3, r3, #2
 80015a4:	4413      	add	r3, r2
 80015a6:	781b      	ldrb	r3, [r3, #0]
 80015a8:	3330      	adds	r3, #48	; 0x30
 80015aa:	b2db      	uxtb	r3, r3
 80015ac:	461a      	mov	r2, r3
 80015ae:	2100      	movs	r1, #0
 80015b0:	2000      	movs	r0, #0
 80015b2:	f000 fb6d 	bl	8001c90 <CLCD_PrintCharBuffer>
			CLCD_PrintCharBuffer(1, 0, _Data_node[node_turn].node_id + '0');
 80015b6:	4b8c      	ldr	r3, [pc, #560]	; (80017e8 <FSM_LcdDisplay+0x5e0>)
 80015b8:	781b      	ldrb	r3, [r3, #0]
 80015ba:	4619      	mov	r1, r3
 80015bc:	4a8b      	ldr	r2, [pc, #556]	; (80017ec <FSM_LcdDisplay+0x5e4>)
 80015be:	460b      	mov	r3, r1
 80015c0:	009b      	lsls	r3, r3, #2
 80015c2:	440b      	add	r3, r1
 80015c4:	009b      	lsls	r3, r3, #2
 80015c6:	4413      	add	r3, r2
 80015c8:	781b      	ldrb	r3, [r3, #0]
 80015ca:	3330      	adds	r3, #48	; 0x30
 80015cc:	b2db      	uxtb	r3, r3
 80015ce:	461a      	mov	r2, r3
 80015d0:	2100      	movs	r1, #0
 80015d2:	2001      	movs	r0, #1
 80015d4:	f000 fb5c 	bl	8001c90 <CLCD_PrintCharBuffer>
			mode_lcd = DISPLAY_PHOTPHO_KALI;
 80015d8:	4b7f      	ldr	r3, [pc, #508]	; (80017d8 <FSM_LcdDisplay+0x5d0>)
 80015da:	2204      	movs	r2, #4
 80015dc:	701a      	strb	r2, [r3, #0]
		break;
 80015de:	e0e9      	b.n	80017b4 <FSM_LcdDisplay+0x5ac>
	case DISPLAY_PHOTPHO_KALI:
		CLCD_PrintNumBuffer(0, INDEX_LCD_P, _Data_node[node_turn].photpho);
 80015e0:	4b81      	ldr	r3, [pc, #516]	; (80017e8 <FSM_LcdDisplay+0x5e0>)
 80015e2:	781b      	ldrb	r3, [r3, #0]
 80015e4:	4619      	mov	r1, r3
 80015e6:	4a81      	ldr	r2, [pc, #516]	; (80017ec <FSM_LcdDisplay+0x5e4>)
 80015e8:	460b      	mov	r3, r1
 80015ea:	009b      	lsls	r3, r3, #2
 80015ec:	440b      	add	r3, r1
 80015ee:	009b      	lsls	r3, r3, #2
 80015f0:	4413      	add	r3, r2
 80015f2:	330e      	adds	r3, #14
 80015f4:	781b      	ldrb	r3, [r3, #0]
 80015f6:	b21b      	sxth	r3, r3
 80015f8:	461a      	mov	r2, r3
 80015fa:	2105      	movs	r1, #5
 80015fc:	2000      	movs	r0, #0
 80015fe:	f000 fbb9 	bl	8001d74 <CLCD_PrintNumBuffer>
		CLCD_PrintNumBuffer(1, INDEX_LCD_K, _Data_node[node_turn].kali);
 8001602:	4b79      	ldr	r3, [pc, #484]	; (80017e8 <FSM_LcdDisplay+0x5e0>)
 8001604:	781b      	ldrb	r3, [r3, #0]
 8001606:	4619      	mov	r1, r3
 8001608:	4a78      	ldr	r2, [pc, #480]	; (80017ec <FSM_LcdDisplay+0x5e4>)
 800160a:	460b      	mov	r3, r1
 800160c:	009b      	lsls	r3, r3, #2
 800160e:	440b      	add	r3, r1
 8001610:	009b      	lsls	r3, r3, #2
 8001612:	4413      	add	r3, r2
 8001614:	330f      	adds	r3, #15
 8001616:	781b      	ldrb	r3, [r3, #0]
 8001618:	b21b      	sxth	r3, r3
 800161a:	461a      	mov	r2, r3
 800161c:	2105      	movs	r1, #5
 800161e:	2001      	movs	r0, #1
 8001620:	f000 fba8 	bl	8001d74 <CLCD_PrintNumBuffer>

		if(_time_screen < 5){
 8001624:	4b6d      	ldr	r3, [pc, #436]	; (80017dc <FSM_LcdDisplay+0x5d4>)
 8001626:	881b      	ldrh	r3, [r3, #0]
 8001628:	2b04      	cmp	r3, #4
 800162a:	f200 80c5 	bhi.w	80017b8 <FSM_LcdDisplay+0x5b0>
			_time_screen = TIME_SCREEN;
 800162e:	4b6b      	ldr	r3, [pc, #428]	; (80017dc <FSM_LcdDisplay+0x5d4>)
 8001630:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8001634:	801a      	strh	r2, [r3, #0]
			CLCD_PrintStringBuffer(0, 0, SCREEN_RELAY_CUR_0);
 8001636:	4a6e      	ldr	r2, [pc, #440]	; (80017f0 <FSM_LcdDisplay+0x5e8>)
 8001638:	2100      	movs	r1, #0
 800163a:	2000      	movs	r0, #0
 800163c:	f000 fb64 	bl	8001d08 <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_RELAY_CUR_1);
 8001640:	4a6c      	ldr	r2, [pc, #432]	; (80017f4 <FSM_LcdDisplay+0x5ec>)
 8001642:	2100      	movs	r1, #0
 8001644:	2001      	movs	r0, #1
 8001646:	f000 fb5f 	bl	8001d08 <CLCD_PrintStringBuffer>

			mode_lcd = DISPLAY_RELAY_CUR;
 800164a:	4b63      	ldr	r3, [pc, #396]	; (80017d8 <FSM_LcdDisplay+0x5d0>)
 800164c:	2205      	movs	r2, #5
 800164e:	701a      	strb	r2, [r3, #0]
		}
		break;
 8001650:	e0b2      	b.n	80017b8 <FSM_LcdDisplay+0x5b0>
	case DISPLAY_RELAY_CUR:
		CLCD_PrintStringBuffer(0, INDEX_LCD_RELAY, RELAYSTATESTR(_Data_gateway.relay));
 8001652:	4b69      	ldr	r3, [pc, #420]	; (80017f8 <FSM_LcdDisplay+0x5f0>)
 8001654:	781b      	ldrb	r3, [r3, #0]
 8001656:	2b00      	cmp	r3, #0
 8001658:	d001      	beq.n	800165e <FSM_LcdDisplay+0x456>
 800165a:	4b68      	ldr	r3, [pc, #416]	; (80017fc <FSM_LcdDisplay+0x5f4>)
 800165c:	e000      	b.n	8001660 <FSM_LcdDisplay+0x458>
 800165e:	4b68      	ldr	r3, [pc, #416]	; (8001800 <FSM_LcdDisplay+0x5f8>)
 8001660:	461a      	mov	r2, r3
 8001662:	2107      	movs	r1, #7
 8001664:	2000      	movs	r0, #0
 8001666:	f000 fb4f 	bl	8001d08 <CLCD_PrintStringBuffer>
		CLCD_PrintFloatBuffer(1, INDEX_LCD_CUR, _Data_gateway.cur);
 800166a:	4b63      	ldr	r3, [pc, #396]	; (80017f8 <FSM_LcdDisplay+0x5f0>)
 800166c:	685b      	ldr	r3, [r3, #4]
 800166e:	461a      	mov	r2, r3
 8001670:	2105      	movs	r1, #5
 8001672:	2001      	movs	r0, #1
 8001674:	f000 fbf2 	bl	8001e5c <CLCD_PrintFloatBuffer>
		if(_time_screen < 5){
 8001678:	4b58      	ldr	r3, [pc, #352]	; (80017dc <FSM_LcdDisplay+0x5d4>)
 800167a:	881b      	ldrh	r3, [r3, #0]
 800167c:	2b04      	cmp	r3, #4
 800167e:	f200 809d 	bhi.w	80017bc <FSM_LcdDisplay+0x5b4>
			_time_screen = TIME_SCREEN;
 8001682:	4b56      	ldr	r3, [pc, #344]	; (80017dc <FSM_LcdDisplay+0x5d4>)
 8001684:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8001688:	801a      	strh	r2, [r3, #0]
			mode_lcd = TURN_NEXT_NODE;
 800168a:	4b53      	ldr	r3, [pc, #332]	; (80017d8 <FSM_LcdDisplay+0x5d0>)
 800168c:	2206      	movs	r2, #6
 800168e:	701a      	strb	r2, [r3, #0]
		}
		break;
 8001690:	e094      	b.n	80017bc <FSM_LcdDisplay+0x5b4>
	case TURN_NEXT_NODE:

		node_turn = (node_turn + 1) % NO_OF_NODES;
 8001692:	4b55      	ldr	r3, [pc, #340]	; (80017e8 <FSM_LcdDisplay+0x5e0>)
 8001694:	781b      	ldrb	r3, [r3, #0]
 8001696:	3301      	adds	r3, #1
 8001698:	2b00      	cmp	r3, #0
 800169a:	f003 0301 	and.w	r3, r3, #1
 800169e:	bfb8      	it	lt
 80016a0:	425b      	neglt	r3, r3
 80016a2:	b2da      	uxtb	r2, r3
 80016a4:	4b50      	ldr	r3, [pc, #320]	; (80017e8 <FSM_LcdDisplay+0x5e0>)
 80016a6:	701a      	strb	r2, [r3, #0]

		mode_lcd = READY_DISPLAY;
 80016a8:	4b4b      	ldr	r3, [pc, #300]	; (80017d8 <FSM_LcdDisplay+0x5d0>)
 80016aa:	2201      	movs	r2, #1
 80016ac:	701a      	strb	r2, [r3, #0]
		break;
 80016ae:	e08a      	b.n	80017c6 <FSM_LcdDisplay+0x5be>
	case DISPLAY_CONFIG_WF:

		if((strcmp(UESP_GetMsg(), CONFIG_WF_SUCCESS) == 0) || IN_IsPressed(BT_CONFIG)) {
 80016b0:	f001 f9ec 	bl	8002a8c <UESP_GetMsg>
 80016b4:	4603      	mov	r3, r0
 80016b6:	4953      	ldr	r1, [pc, #332]	; (8001804 <FSM_LcdDisplay+0x5fc>)
 80016b8:	4618      	mov	r0, r3
 80016ba:	f7fe fd49 	bl	8000150 <strcmp>
 80016be:	4603      	mov	r3, r0
 80016c0:	2b00      	cmp	r3, #0
 80016c2:	d005      	beq.n	80016d0 <FSM_LcdDisplay+0x4c8>
 80016c4:	2000      	movs	r0, #0
 80016c6:	f000 f93b 	bl	8001940 <IN_IsPressed>
 80016ca:	4603      	mov	r3, r0
 80016cc:	2b00      	cmp	r3, #0
 80016ce:	d077      	beq.n	80017c0 <FSM_LcdDisplay+0x5b8>
			CLCD_PrintStringBuffer(0, 0, SCREEN_WIFI_CONNECTING_0);
 80016d0:	4a4d      	ldr	r2, [pc, #308]	; (8001808 <FSM_LcdDisplay+0x600>)
 80016d2:	2100      	movs	r1, #0
 80016d4:	2000      	movs	r0, #0
 80016d6:	f000 fb17 	bl	8001d08 <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_WIFI_CONNECTING_1);
 80016da:	4a3d      	ldr	r2, [pc, #244]	; (80017d0 <FSM_LcdDisplay+0x5c8>)
 80016dc:	2100      	movs	r1, #0
 80016de:	2001      	movs	r0, #1
 80016e0:	f000 fb12 	bl	8001d08 <CLCD_PrintStringBuffer>

			UESP_SendMsg(CMD_CONNECT_WF);
 80016e4:	4849      	ldr	r0, [pc, #292]	; (800180c <FSM_LcdDisplay+0x604>)
 80016e6:	f001 f9b5 	bl	8002a54 <UESP_SendMsg>

			mode_lcd = DISPLAY_CONNECT_WF;
 80016ea:	4b3b      	ldr	r3, [pc, #236]	; (80017d8 <FSM_LcdDisplay+0x5d0>)
 80016ec:	2208      	movs	r2, #8
 80016ee:	701a      	strb	r2, [r3, #0]
		}
		break;
 80016f0:	e066      	b.n	80017c0 <FSM_LcdDisplay+0x5b8>
	case DISPLAY_CONNECT_WF:
		//every 500ms print a '.'
		CLCD_PrintCharBuffer(1, 6 + (_counter_time_elapsed/10) % 5, '.');
 80016f2:	4b47      	ldr	r3, [pc, #284]	; (8001810 <FSM_LcdDisplay+0x608>)
 80016f4:	881b      	ldrh	r3, [r3, #0]
 80016f6:	4a47      	ldr	r2, [pc, #284]	; (8001814 <FSM_LcdDisplay+0x60c>)
 80016f8:	fba2 2303 	umull	r2, r3, r2, r3
 80016fc:	08db      	lsrs	r3, r3, #3
 80016fe:	b29a      	uxth	r2, r3
 8001700:	4b44      	ldr	r3, [pc, #272]	; (8001814 <FSM_LcdDisplay+0x60c>)
 8001702:	fba3 1302 	umull	r1, r3, r3, r2
 8001706:	0899      	lsrs	r1, r3, #2
 8001708:	460b      	mov	r3, r1
 800170a:	009b      	lsls	r3, r3, #2
 800170c:	440b      	add	r3, r1
 800170e:	1ad3      	subs	r3, r2, r3
 8001710:	b29b      	uxth	r3, r3
 8001712:	b2db      	uxtb	r3, r3
 8001714:	3306      	adds	r3, #6
 8001716:	b2db      	uxtb	r3, r3
 8001718:	222e      	movs	r2, #46	; 0x2e
 800171a:	4619      	mov	r1, r3
 800171c:	2001      	movs	r0, #1
 800171e:	f000 fab7 	bl	8001c90 <CLCD_PrintCharBuffer>
		if((_counter_time_elapsed/10) % 5 == 4) CLCD_PrintStringBuffer(1, 0, SCREEN_WIFI_CONNECTING_1);
 8001722:	4b3b      	ldr	r3, [pc, #236]	; (8001810 <FSM_LcdDisplay+0x608>)
 8001724:	881b      	ldrh	r3, [r3, #0]
 8001726:	4a3b      	ldr	r2, [pc, #236]	; (8001814 <FSM_LcdDisplay+0x60c>)
 8001728:	fba2 2303 	umull	r2, r3, r2, r3
 800172c:	08db      	lsrs	r3, r3, #3
 800172e:	b29a      	uxth	r2, r3
 8001730:	4b38      	ldr	r3, [pc, #224]	; (8001814 <FSM_LcdDisplay+0x60c>)
 8001732:	fba3 1302 	umull	r1, r3, r3, r2
 8001736:	0899      	lsrs	r1, r3, #2
 8001738:	460b      	mov	r3, r1
 800173a:	009b      	lsls	r3, r3, #2
 800173c:	440b      	add	r3, r1
 800173e:	1ad3      	subs	r3, r2, r3
 8001740:	b29b      	uxth	r3, r3
 8001742:	2b04      	cmp	r3, #4
 8001744:	d104      	bne.n	8001750 <FSM_LcdDisplay+0x548>
 8001746:	4a22      	ldr	r2, [pc, #136]	; (80017d0 <FSM_LcdDisplay+0x5c8>)
 8001748:	2100      	movs	r1, #0
 800174a:	2001      	movs	r0, #1
 800174c:	f000 fadc 	bl	8001d08 <CLCD_PrintStringBuffer>

		if(IN_IsPressed_ms(BT_CONFIG, 2000)){
 8001750:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001754:	2000      	movs	r0, #0
 8001756:	f000 f907 	bl	8001968 <IN_IsPressed_ms>
 800175a:	4603      	mov	r3, r0
 800175c:	2b00      	cmp	r3, #0
 800175e:	d010      	beq.n	8001782 <FSM_LcdDisplay+0x57a>
			CLCD_PrintStringBuffer(0, 0, SCREEN_CONFIG_WIFI_0);
 8001760:	4a1a      	ldr	r2, [pc, #104]	; (80017cc <FSM_LcdDisplay+0x5c4>)
 8001762:	2100      	movs	r1, #0
 8001764:	2000      	movs	r0, #0
 8001766:	f000 facf 	bl	8001d08 <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_CONFIG_WIFI_1);
 800176a:	4a19      	ldr	r2, [pc, #100]	; (80017d0 <FSM_LcdDisplay+0x5c8>)
 800176c:	2100      	movs	r1, #0
 800176e:	2001      	movs	r0, #1
 8001770:	f000 faca 	bl	8001d08 <CLCD_PrintStringBuffer>

			UESP_SendMsg(CMD_CONFIG_WF);
 8001774:	4817      	ldr	r0, [pc, #92]	; (80017d4 <FSM_LcdDisplay+0x5cc>)
 8001776:	f001 f96d 	bl	8002a54 <UESP_SendMsg>

			mode_lcd = DISPLAY_CONFIG_WF;
 800177a:	4b17      	ldr	r3, [pc, #92]	; (80017d8 <FSM_LcdDisplay+0x5d0>)
 800177c:	2207      	movs	r2, #7
 800177e:	701a      	strb	r2, [r3, #0]
		}
		else if(strcmp(UESP_GetMsg(), CONNECT_WF_SUCCESS) == 0) {
			UESP_SendMsg(CMD_TRANSMIT_DATA);
			mode_lcd = READY_DISPLAY;
		}
		break;
 8001780:	e020      	b.n	80017c4 <FSM_LcdDisplay+0x5bc>
		else if(strcmp(UESP_GetMsg(), CONNECT_WF_SUCCESS) == 0) {
 8001782:	f001 f983 	bl	8002a8c <UESP_GetMsg>
 8001786:	4603      	mov	r3, r0
 8001788:	4923      	ldr	r1, [pc, #140]	; (8001818 <FSM_LcdDisplay+0x610>)
 800178a:	4618      	mov	r0, r3
 800178c:	f7fe fce0 	bl	8000150 <strcmp>
 8001790:	4603      	mov	r3, r0
 8001792:	2b00      	cmp	r3, #0
 8001794:	d116      	bne.n	80017c4 <FSM_LcdDisplay+0x5bc>
			UESP_SendMsg(CMD_TRANSMIT_DATA);
 8001796:	4821      	ldr	r0, [pc, #132]	; (800181c <FSM_LcdDisplay+0x614>)
 8001798:	f001 f95c 	bl	8002a54 <UESP_SendMsg>
			mode_lcd = READY_DISPLAY;
 800179c:	4b0e      	ldr	r3, [pc, #56]	; (80017d8 <FSM_LcdDisplay+0x5d0>)
 800179e:	2201      	movs	r2, #1
 80017a0:	701a      	strb	r2, [r3, #0]
		break;
 80017a2:	e00f      	b.n	80017c4 <FSM_LcdDisplay+0x5bc>
	default:
		mode_lcd = INIT;
 80017a4:	4b0c      	ldr	r3, [pc, #48]	; (80017d8 <FSM_LcdDisplay+0x5d0>)
 80017a6:	2200      	movs	r2, #0
 80017a8:	701a      	strb	r2, [r3, #0]
	}

}
 80017aa:	e00c      	b.n	80017c6 <FSM_LcdDisplay+0x5be>
		break;
 80017ac:	bf00      	nop
 80017ae:	e00a      	b.n	80017c6 <FSM_LcdDisplay+0x5be>
		break;
 80017b0:	bf00      	nop
 80017b2:	e008      	b.n	80017c6 <FSM_LcdDisplay+0x5be>
		break;
 80017b4:	bf00      	nop
 80017b6:	e006      	b.n	80017c6 <FSM_LcdDisplay+0x5be>
		break;
 80017b8:	bf00      	nop
 80017ba:	e004      	b.n	80017c6 <FSM_LcdDisplay+0x5be>
		break;
 80017bc:	bf00      	nop
 80017be:	e002      	b.n	80017c6 <FSM_LcdDisplay+0x5be>
		break;
 80017c0:	bf00      	nop
 80017c2:	e000      	b.n	80017c6 <FSM_LcdDisplay+0x5be>
		break;
 80017c4:	bf00      	nop
}
 80017c6:	bf00      	nop
 80017c8:	bd80      	pop	{r7, pc}
 80017ca:	bf00      	nop
 80017cc:	080086c0 	.word	0x080086c0
 80017d0:	08008684 	.word	0x08008684
 80017d4:	080086fc 	.word	0x080086fc
 80017d8:	20000208 	.word	0x20000208
 80017dc:	20000240 	.word	0x20000240
 80017e0:	0800872c 	.word	0x0800872c
 80017e4:	08008740 	.word	0x08008740
 80017e8:	2000020a 	.word	0x2000020a
 80017ec:	20000210 	.word	0x20000210
 80017f0:	08008754 	.word	0x08008754
 80017f4:	08008768 	.word	0x08008768
 80017f8:	20000238 	.word	0x20000238
 80017fc:	0800877c 	.word	0x0800877c
 8001800:	08008780 	.word	0x08008780
 8001804:	08008784 	.word	0x08008784
 8001808:	08008698 	.word	0x08008698
 800180c:	080086ac 	.word	0x080086ac
 8001810:	20000244 	.word	0x20000244
 8001814:	cccccccd 	.word	0xcccccccd
 8001818:	08008794 	.word	0x08008794
 800181c:	080087a4 	.word	0x080087a4

08001820 <FSM_DataTransfer>:

void FSM_DataTransfer(void){
 8001820:	b580      	push	{r7, lr}
 8001822:	af00      	add	r7, sp, #0
	switch(mode_data){
 8001824:	4b1e      	ldr	r3, [pc, #120]	; (80018a0 <FSM_DataTransfer+0x80>)
 8001826:	781b      	ldrb	r3, [r3, #0]
 8001828:	2b02      	cmp	r3, #2
 800182a:	d012      	beq.n	8001852 <FSM_DataTransfer+0x32>
 800182c:	2b02      	cmp	r3, #2
 800182e:	dc30      	bgt.n	8001892 <FSM_DataTransfer+0x72>
 8001830:	2b00      	cmp	r3, #0
 8001832:	d002      	beq.n	800183a <FSM_DataTransfer+0x1a>
 8001834:	2b01      	cmp	r3, #1
 8001836:	d008      	beq.n	800184a <FSM_DataTransfer+0x2a>
 8001838:	e02b      	b.n	8001892 <FSM_DataTransfer+0x72>
	case INIT:

		_time_read_data = TIME_READ_DATA;
 800183a:	4b1a      	ldr	r3, [pc, #104]	; (80018a4 <FSM_DataTransfer+0x84>)
 800183c:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8001840:	801a      	strh	r2, [r3, #0]
		mode_data = TRANSMIT_DATA;
 8001842:	4b17      	ldr	r3, [pc, #92]	; (80018a0 <FSM_DataTransfer+0x80>)
 8001844:	2202      	movs	r2, #2
 8001846:	701a      	strb	r2, [r3, #0]
		break;
 8001848:	e028      	b.n	800189c <FSM_DataTransfer+0x7c>
	case READ_DATA:

		mode_data = TRANSMIT_DATA;
 800184a:	4b15      	ldr	r3, [pc, #84]	; (80018a0 <FSM_DataTransfer+0x80>)
 800184c:	2202      	movs	r2, #2
 800184e:	701a      	strb	r2, [r3, #0]
		break;
 8001850:	e024      	b.n	800189c <FSM_DataTransfer+0x7c>
	case TRANSMIT_DATA:
//		if(ULORA_IsReceivedMsg()) {
		if(UESP_IsReceivedMsg()){
 8001852:	f001 f911 	bl	8002a78 <UESP_IsReceivedMsg>
 8001856:	4603      	mov	r3, r0
 8001858:	2b00      	cmp	r3, #0
 800185a:	d00e      	beq.n	800187a <FSM_DataTransfer+0x5a>
			//	process data received from lora
			//	=> stm32 send to esp => esp send to server
//			msg = ULORA_GetMsg();
			msg = UESP_GetMsg();
 800185c:	f001 f916 	bl	8002a8c <UESP_GetMsg>
 8001860:	4603      	mov	r3, r0
 8001862:	4a11      	ldr	r2, [pc, #68]	; (80018a8 <FSM_DataTransfer+0x88>)
 8001864:	6013      	str	r3, [r2, #0]
			ProcessMsg(msg);
 8001866:	4b10      	ldr	r3, [pc, #64]	; (80018a8 <FSM_DataTransfer+0x88>)
 8001868:	681b      	ldr	r3, [r3, #0]
 800186a:	4618      	mov	r0, r3
 800186c:	f7ff fc04 	bl	8001078 <ProcessMsg>

			UESP_SendMsg(msg);
 8001870:	4b0d      	ldr	r3, [pc, #52]	; (80018a8 <FSM_DataTransfer+0x88>)
 8001872:	681b      	ldr	r3, [r3, #0]
 8001874:	4618      	mov	r0, r3
 8001876:	f001 f8ed 	bl	8002a54 <UESP_SendMsg>
		}

		if(_time_read_data < 5) {
 800187a:	4b0a      	ldr	r3, [pc, #40]	; (80018a4 <FSM_DataTransfer+0x84>)
 800187c:	881b      	ldrh	r3, [r3, #0]
 800187e:	2b04      	cmp	r3, #4
 8001880:	d80b      	bhi.n	800189a <FSM_DataTransfer+0x7a>
			_time_read_data = TIME_READ_DATA;
 8001882:	4b08      	ldr	r3, [pc, #32]	; (80018a4 <FSM_DataTransfer+0x84>)
 8001884:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8001888:	801a      	strh	r2, [r3, #0]
			mode_data = READ_DATA;
 800188a:	4b05      	ldr	r3, [pc, #20]	; (80018a0 <FSM_DataTransfer+0x80>)
 800188c:	2201      	movs	r2, #1
 800188e:	701a      	strb	r2, [r3, #0]
		}
		break;
 8001890:	e003      	b.n	800189a <FSM_DataTransfer+0x7a>
	default:
		mode_data = INIT;
 8001892:	4b03      	ldr	r3, [pc, #12]	; (80018a0 <FSM_DataTransfer+0x80>)
 8001894:	2200      	movs	r2, #0
 8001896:	701a      	strb	r2, [r3, #0]
	}

}
 8001898:	e000      	b.n	800189c <FSM_DataTransfer+0x7c>
		break;
 800189a:	bf00      	nop
}
 800189c:	bf00      	nop
 800189e:	bd80      	pop	{r7, pc}
 80018a0:	20000209 	.word	0x20000209
 80018a4:	20000242 	.word	0x20000242
 80018a8:	2000020c 	.word	0x2000020c

080018ac <IN_ReadButton>:
void IN_Init(void){

}

//this function is called every 50ms
void IN_ReadButton(void){
 80018ac:	b580      	push	{r7, lr}
 80018ae:	b082      	sub	sp, #8
 80018b0:	af00      	add	r7, sp, #0
	for(uint8_t i = 0; i < NO_OF_BUTTONS; i++){
 80018b2:	2300      	movs	r3, #0
 80018b4:	71fb      	strb	r3, [r7, #7]
 80018b6:	e033      	b.n	8001920 <IN_ReadButton+0x74>
		if(HAL_GPIO_ReadPin(PORT_BUTTON[i], PIN_BUTTON[i]) == BUTTON_IS_PRESSED){
 80018b8:	79fb      	ldrb	r3, [r7, #7]
 80018ba:	4a1d      	ldr	r2, [pc, #116]	; (8001930 <IN_ReadButton+0x84>)
 80018bc:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80018c0:	79fb      	ldrb	r3, [r7, #7]
 80018c2:	491c      	ldr	r1, [pc, #112]	; (8001934 <IN_ReadButton+0x88>)
 80018c4:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80018c8:	4619      	mov	r1, r3
 80018ca:	4610      	mov	r0, r2
 80018cc:	f001 fce2 	bl	8003294 <HAL_GPIO_ReadPin>
 80018d0:	4603      	mov	r3, r0
 80018d2:	2b00      	cmp	r3, #0
 80018d4:	d109      	bne.n	80018ea <IN_ReadButton+0x3e>
			Counter_button_press[i]++;
 80018d6:	79fb      	ldrb	r3, [r7, #7]
 80018d8:	4a17      	ldr	r2, [pc, #92]	; (8001938 <IN_ReadButton+0x8c>)
 80018da:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 80018de:	3201      	adds	r2, #1
 80018e0:	b291      	uxth	r1, r2
 80018e2:	4a15      	ldr	r2, [pc, #84]	; (8001938 <IN_ReadButton+0x8c>)
 80018e4:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 80018e8:	e017      	b.n	800191a <IN_ReadButton+0x6e>
		}
		else {
			Counter_button_press[i] = 0;
 80018ea:	79fb      	ldrb	r3, [r7, #7]
 80018ec:	4a12      	ldr	r2, [pc, #72]	; (8001938 <IN_ReadButton+0x8c>)
 80018ee:	2100      	movs	r1, #0
 80018f0:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			Flag_for_button_press[i] = (Counter_button_press[i] > 0) && (Counter_button_press[i] < 10);
 80018f4:	79fb      	ldrb	r3, [r7, #7]
 80018f6:	4a10      	ldr	r2, [pc, #64]	; (8001938 <IN_ReadButton+0x8c>)
 80018f8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80018fc:	2b00      	cmp	r3, #0
 80018fe:	d007      	beq.n	8001910 <IN_ReadButton+0x64>
 8001900:	79fb      	ldrb	r3, [r7, #7]
 8001902:	4a0d      	ldr	r2, [pc, #52]	; (8001938 <IN_ReadButton+0x8c>)
 8001904:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001908:	2b09      	cmp	r3, #9
 800190a:	d801      	bhi.n	8001910 <IN_ReadButton+0x64>
 800190c:	2201      	movs	r2, #1
 800190e:	e000      	b.n	8001912 <IN_ReadButton+0x66>
 8001910:	2200      	movs	r2, #0
 8001912:	79fb      	ldrb	r3, [r7, #7]
 8001914:	b2d1      	uxtb	r1, r2
 8001916:	4a09      	ldr	r2, [pc, #36]	; (800193c <IN_ReadButton+0x90>)
 8001918:	54d1      	strb	r1, [r2, r3]
	for(uint8_t i = 0; i < NO_OF_BUTTONS; i++){
 800191a:	79fb      	ldrb	r3, [r7, #7]
 800191c:	3301      	adds	r3, #1
 800191e:	71fb      	strb	r3, [r7, #7]
 8001920:	79fb      	ldrb	r3, [r7, #7]
 8001922:	2b00      	cmp	r3, #0
 8001924:	d0c8      	beq.n	80018b8 <IN_ReadButton+0xc>
		}
	}
}
 8001926:	bf00      	nop
 8001928:	bf00      	nop
 800192a:	3708      	adds	r7, #8
 800192c:	46bd      	mov	sp, r7
 800192e:	bd80      	pop	{r7, pc}
 8001930:	20000000 	.word	0x20000000
 8001934:	20000004 	.word	0x20000004
 8001938:	2000024c 	.word	0x2000024c
 800193c:	20000248 	.word	0x20000248

08001940 <IN_IsPressed>:

uint8_t IN_IsPressed(uint8_t index){
 8001940:	b480      	push	{r7}
 8001942:	b083      	sub	sp, #12
 8001944:	af00      	add	r7, sp, #0
 8001946:	4603      	mov	r3, r0
 8001948:	71fb      	strb	r3, [r7, #7]
	if(index >= NO_OF_BUTTONS) return 0;
 800194a:	79fb      	ldrb	r3, [r7, #7]
 800194c:	2b00      	cmp	r3, #0
 800194e:	d001      	beq.n	8001954 <IN_IsPressed+0x14>
 8001950:	2300      	movs	r3, #0
 8001952:	e002      	b.n	800195a <IN_IsPressed+0x1a>

	return Flag_for_button_press[index];
 8001954:	79fb      	ldrb	r3, [r7, #7]
 8001956:	4a03      	ldr	r2, [pc, #12]	; (8001964 <IN_IsPressed+0x24>)
 8001958:	5cd3      	ldrb	r3, [r2, r3]
}
 800195a:	4618      	mov	r0, r3
 800195c:	370c      	adds	r7, #12
 800195e:	46bd      	mov	sp, r7
 8001960:	bc80      	pop	{r7}
 8001962:	4770      	bx	lr
 8001964:	20000248 	.word	0x20000248

08001968 <IN_IsPressed_ms>:

uint8_t IN_IsPressed_ms(uint8_t index, uint16_t duration){
 8001968:	b480      	push	{r7}
 800196a:	b083      	sub	sp, #12
 800196c:	af00      	add	r7, sp, #0
 800196e:	4603      	mov	r3, r0
 8001970:	460a      	mov	r2, r1
 8001972:	71fb      	strb	r3, [r7, #7]
 8001974:	4613      	mov	r3, r2
 8001976:	80bb      	strh	r3, [r7, #4]
	if(index >= NO_OF_BUTTONS) return 0;
 8001978:	79fb      	ldrb	r3, [r7, #7]
 800197a:	2b00      	cmp	r3, #0
 800197c:	d001      	beq.n	8001982 <IN_IsPressed_ms+0x1a>
 800197e:	2300      	movs	r3, #0
 8001980:	e00e      	b.n	80019a0 <IN_IsPressed_ms+0x38>

	//button is read every 50ms -> counter += 1 every 50ms if button is held
	return Counter_button_press[index] >= (duration / 50);
 8001982:	79fb      	ldrb	r3, [r7, #7]
 8001984:	4a09      	ldr	r2, [pc, #36]	; (80019ac <IN_IsPressed_ms+0x44>)
 8001986:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 800198a:	88bb      	ldrh	r3, [r7, #4]
 800198c:	4908      	ldr	r1, [pc, #32]	; (80019b0 <IN_IsPressed_ms+0x48>)
 800198e:	fba1 1303 	umull	r1, r3, r1, r3
 8001992:	091b      	lsrs	r3, r3, #4
 8001994:	b29b      	uxth	r3, r3
 8001996:	429a      	cmp	r2, r3
 8001998:	bf2c      	ite	cs
 800199a:	2301      	movcs	r3, #1
 800199c:	2300      	movcc	r3, #0
 800199e:	b2db      	uxtb	r3, r3
}
 80019a0:	4618      	mov	r0, r3
 80019a2:	370c      	adds	r7, #12
 80019a4:	46bd      	mov	sp, r7
 80019a6:	bc80      	pop	{r7}
 80019a8:	4770      	bx	lr
 80019aa:	bf00      	nop
 80019ac:	2000024c 	.word	0x2000024c
 80019b0:	51eb851f 	.word	0x51eb851f

080019b4 <Delay>:

CLCD_I2C_Name LCD;

uint8_t currentCol, currentRow;

static void Delay(uint16_t time){
 80019b4:	b580      	push	{r7, lr}
 80019b6:	b082      	sub	sp, #8
 80019b8:	af00      	add	r7, sp, #0
 80019ba:	4603      	mov	r3, r0
 80019bc:	80fb      	strh	r3, [r7, #6]
	HAL_Delay(time);
 80019be:	88fb      	ldrh	r3, [r7, #6]
 80019c0:	4618      	mov	r0, r3
 80019c2:	f001 f901 	bl	8002bc8 <HAL_Delay>
}
 80019c6:	bf00      	nop
 80019c8:	3708      	adds	r7, #8
 80019ca:	46bd      	mov	sp, r7
 80019cc:	bd80      	pop	{r7, pc}
	...

080019d0 <WriteI2C>:


static void WriteI2C(uint8_t data, uint8_t mode){
 80019d0:	b580      	push	{r7, lr}
 80019d2:	b086      	sub	sp, #24
 80019d4:	af02      	add	r7, sp, #8
 80019d6:	4603      	mov	r3, r0
 80019d8:	460a      	mov	r2, r1
 80019da:	71fb      	strb	r3, [r7, #7]
 80019dc:	4613      	mov	r3, r2
 80019de:	71bb      	strb	r3, [r7, #6]
	uint8_t dataH, dataL;
	uint8_t data_I2C[4];

	dataH = data & 0xF0;
 80019e0:	79fb      	ldrb	r3, [r7, #7]
 80019e2:	f023 030f 	bic.w	r3, r3, #15
 80019e6:	73fb      	strb	r3, [r7, #15]
	dataL = (data << 4) & 0xF0;
 80019e8:	79fb      	ldrb	r3, [r7, #7]
 80019ea:	011b      	lsls	r3, r3, #4
 80019ec:	73bb      	strb	r3, [r7, #14]

	if(LCD.BACKLIGHT){
 80019ee:	4b1c      	ldr	r3, [pc, #112]	; (8001a60 <WriteI2C+0x90>)
 80019f0:	7adb      	ldrb	r3, [r3, #11]
 80019f2:	2b00      	cmp	r3, #0
 80019f4:	d007      	beq.n	8001a06 <WriteI2C+0x36>
		dataH |= LCD_BACKLIGHT;
 80019f6:	7bfb      	ldrb	r3, [r7, #15]
 80019f8:	f043 0308 	orr.w	r3, r3, #8
 80019fc:	73fb      	strb	r3, [r7, #15]
		dataL |= LCD_BACKLIGHT;
 80019fe:	7bbb      	ldrb	r3, [r7, #14]
 8001a00:	f043 0308 	orr.w	r3, r3, #8
 8001a04:	73bb      	strb	r3, [r7, #14]
	}

	if(mode == LCD_DATA){
 8001a06:	79bb      	ldrb	r3, [r7, #6]
 8001a08:	2b01      	cmp	r3, #1
 8001a0a:	d107      	bne.n	8001a1c <WriteI2C+0x4c>
		dataH |= LCD_RS;
 8001a0c:	7bfb      	ldrb	r3, [r7, #15]
 8001a0e:	f043 0301 	orr.w	r3, r3, #1
 8001a12:	73fb      	strb	r3, [r7, #15]
		dataL |= LCD_RS;
 8001a14:	7bbb      	ldrb	r3, [r7, #14]
 8001a16:	f043 0301 	orr.w	r3, r3, #1
 8001a1a:	73bb      	strb	r3, [r7, #14]
	}

	data_I2C[0] = dataH | LCD_EN;
 8001a1c:	7bfb      	ldrb	r3, [r7, #15]
 8001a1e:	f043 0304 	orr.w	r3, r3, #4
 8001a22:	b2db      	uxtb	r3, r3
 8001a24:	723b      	strb	r3, [r7, #8]
	data_I2C[1] = dataH;
 8001a26:	7bfb      	ldrb	r3, [r7, #15]
 8001a28:	727b      	strb	r3, [r7, #9]
	data_I2C[2] = dataL | LCD_EN;
 8001a2a:	7bbb      	ldrb	r3, [r7, #14]
 8001a2c:	f043 0304 	orr.w	r3, r3, #4
 8001a30:	b2db      	uxtb	r3, r3
 8001a32:	72bb      	strb	r3, [r7, #10]
	data_I2C[3] = dataL;
 8001a34:	7bbb      	ldrb	r3, [r7, #14]
 8001a36:	72fb      	strb	r3, [r7, #11]

	HAL_I2C_Master_Transmit(LCD.I2C, LCD.ADDRESS << 1, (uint8_t*)data_I2C, 4, 1000);
 8001a38:	4b09      	ldr	r3, [pc, #36]	; (8001a60 <WriteI2C+0x90>)
 8001a3a:	6818      	ldr	r0, [r3, #0]
 8001a3c:	4b08      	ldr	r3, [pc, #32]	; (8001a60 <WriteI2C+0x90>)
 8001a3e:	791b      	ldrb	r3, [r3, #4]
 8001a40:	b29b      	uxth	r3, r3
 8001a42:	005b      	lsls	r3, r3, #1
 8001a44:	b299      	uxth	r1, r3
 8001a46:	f107 0208 	add.w	r2, r7, #8
 8001a4a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001a4e:	9300      	str	r3, [sp, #0]
 8001a50:	2304      	movs	r3, #4
 8001a52:	f001 fdab 	bl	80035ac <HAL_I2C_Master_Transmit>
}
 8001a56:	bf00      	nop
 8001a58:	3710      	adds	r7, #16
 8001a5a:	46bd      	mov	sp, r7
 8001a5c:	bd80      	pop	{r7, pc}
 8001a5e:	bf00      	nop
 8001a60:	20000254 	.word	0x20000254

08001a64 <CLCD_Init>:



//===========================HIGH LEVEL FUNCTION===========================//
void CLCD_Init(I2C_HandleTypeDef* I2C, uint8_t address, uint8_t row, uint8_t col){
 8001a64:	b580      	push	{r7, lr}
 8001a66:	b084      	sub	sp, #16
 8001a68:	af00      	add	r7, sp, #0
 8001a6a:	6078      	str	r0, [r7, #4]
 8001a6c:	4608      	mov	r0, r1
 8001a6e:	4611      	mov	r1, r2
 8001a70:	461a      	mov	r2, r3
 8001a72:	4603      	mov	r3, r0
 8001a74:	70fb      	strb	r3, [r7, #3]
 8001a76:	460b      	mov	r3, r1
 8001a78:	70bb      	strb	r3, [r7, #2]
 8001a7a:	4613      	mov	r3, r2
 8001a7c:	707b      	strb	r3, [r7, #1]
	uint8_t i;
	LCD.I2C = I2C;
 8001a7e:	4a4a      	ldr	r2, [pc, #296]	; (8001ba8 <CLCD_Init+0x144>)
 8001a80:	687b      	ldr	r3, [r7, #4]
 8001a82:	6013      	str	r3, [r2, #0]
	LCD.ADDRESS = address;
 8001a84:	4a48      	ldr	r2, [pc, #288]	; (8001ba8 <CLCD_Init+0x144>)
 8001a86:	78fb      	ldrb	r3, [r7, #3]
 8001a88:	7113      	strb	r3, [r2, #4]
	LCD.COL = col;
 8001a8a:	4a47      	ldr	r2, [pc, #284]	; (8001ba8 <CLCD_Init+0x144>)
 8001a8c:	787b      	ldrb	r3, [r7, #1]
 8001a8e:	7153      	strb	r3, [r2, #5]
	LCD.ROW = row;
 8001a90:	4a45      	ldr	r2, [pc, #276]	; (8001ba8 <CLCD_Init+0x144>)
 8001a92:	78bb      	ldrb	r3, [r7, #2]
 8001a94:	7193      	strb	r3, [r2, #6]

	LCD.FUNCTIONSET = LCD_FUNCTIONSET | LCD_4BITMODE | LCD_2LINE | LCD_5x8DOTS;
 8001a96:	4b44      	ldr	r3, [pc, #272]	; (8001ba8 <CLCD_Init+0x144>)
 8001a98:	2228      	movs	r2, #40	; 0x28
 8001a9a:	721a      	strb	r2, [r3, #8]
	LCD.ENTRYMODE = LCD_ENTRYMODESET | LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
 8001a9c:	4b42      	ldr	r3, [pc, #264]	; (8001ba8 <CLCD_Init+0x144>)
 8001a9e:	2206      	movs	r2, #6
 8001aa0:	71da      	strb	r2, [r3, #7]
	LCD.DISPLAYCTRL = LCD_DISPLAYCONTROL | LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;
 8001aa2:	4b41      	ldr	r3, [pc, #260]	; (8001ba8 <CLCD_Init+0x144>)
 8001aa4:	220c      	movs	r2, #12
 8001aa6:	725a      	strb	r2, [r3, #9]
	LCD.CURSORSHIFT = LCD_CURSORSHIFT | LCD_CURSORMOVE | LCD_MOVERIGHT;
 8001aa8:	4b3f      	ldr	r3, [pc, #252]	; (8001ba8 <CLCD_Init+0x144>)
 8001aaa:	2214      	movs	r2, #20
 8001aac:	729a      	strb	r2, [r3, #10]
	LCD.BACKLIGHT = LCD_BACKLIGHT;
 8001aae:	4b3e      	ldr	r3, [pc, #248]	; (8001ba8 <CLCD_Init+0x144>)
 8001ab0:	2208      	movs	r2, #8
 8001ab2:	72da      	strb	r2, [r3, #11]

	Delay(50);
 8001ab4:	2032      	movs	r0, #50	; 0x32
 8001ab6:	f7ff ff7d 	bl	80019b4 <Delay>

	if(Lcd_buffer != NULL) free(Lcd_buffer);
 8001aba:	4b3c      	ldr	r3, [pc, #240]	; (8001bac <CLCD_Init+0x148>)
 8001abc:	681b      	ldr	r3, [r3, #0]
 8001abe:	2b00      	cmp	r3, #0
 8001ac0:	d004      	beq.n	8001acc <CLCD_Init+0x68>
 8001ac2:	4b3a      	ldr	r3, [pc, #232]	; (8001bac <CLCD_Init+0x148>)
 8001ac4:	681b      	ldr	r3, [r3, #0]
 8001ac6:	4618      	mov	r0, r3
 8001ac8:	f003 fdfc 	bl	80056c4 <free>
	Lcd_buffer = (uint8_t*)malloc(row * col * 8);
 8001acc:	78bb      	ldrb	r3, [r7, #2]
 8001ace:	787a      	ldrb	r2, [r7, #1]
 8001ad0:	fb02 f303 	mul.w	r3, r2, r3
 8001ad4:	00db      	lsls	r3, r3, #3
 8001ad6:	4618      	mov	r0, r3
 8001ad8:	f003 fdec 	bl	80056b4 <malloc>
 8001adc:	4603      	mov	r3, r0
 8001ade:	461a      	mov	r2, r3
 8001ae0:	4b32      	ldr	r3, [pc, #200]	; (8001bac <CLCD_Init+0x148>)
 8001ae2:	601a      	str	r2, [r3, #0]

	for(i = 0; i < LCD.ROW * LCD.COL; i++) Lcd_buffer[i] = ' ';
 8001ae4:	2300      	movs	r3, #0
 8001ae6:	73fb      	strb	r3, [r7, #15]
 8001ae8:	e008      	b.n	8001afc <CLCD_Init+0x98>
 8001aea:	4b30      	ldr	r3, [pc, #192]	; (8001bac <CLCD_Init+0x148>)
 8001aec:	681a      	ldr	r2, [r3, #0]
 8001aee:	7bfb      	ldrb	r3, [r7, #15]
 8001af0:	4413      	add	r3, r2
 8001af2:	2220      	movs	r2, #32
 8001af4:	701a      	strb	r2, [r3, #0]
 8001af6:	7bfb      	ldrb	r3, [r7, #15]
 8001af8:	3301      	adds	r3, #1
 8001afa:	73fb      	strb	r3, [r7, #15]
 8001afc:	7bfa      	ldrb	r2, [r7, #15]
 8001afe:	4b2a      	ldr	r3, [pc, #168]	; (8001ba8 <CLCD_Init+0x144>)
 8001b00:	799b      	ldrb	r3, [r3, #6]
 8001b02:	4619      	mov	r1, r3
 8001b04:	4b28      	ldr	r3, [pc, #160]	; (8001ba8 <CLCD_Init+0x144>)
 8001b06:	795b      	ldrb	r3, [r3, #5]
 8001b08:	fb01 f303 	mul.w	r3, r1, r3
 8001b0c:	429a      	cmp	r2, r3
 8001b0e:	dbec      	blt.n	8001aea <CLCD_Init+0x86>

	WriteI2C(0x33, LCD_COMMAND);
 8001b10:	2100      	movs	r1, #0
 8001b12:	2033      	movs	r0, #51	; 0x33
 8001b14:	f7ff ff5c 	bl	80019d0 <WriteI2C>
//	Delay(5);
	WriteI2C(0x33, LCD_COMMAND);
 8001b18:	2100      	movs	r1, #0
 8001b1a:	2033      	movs	r0, #51	; 0x33
 8001b1c:	f7ff ff58 	bl	80019d0 <WriteI2C>
	Delay(5);
 8001b20:	2005      	movs	r0, #5
 8001b22:	f7ff ff47 	bl	80019b4 <Delay>
	WriteI2C(0x32, LCD_COMMAND);
 8001b26:	2100      	movs	r1, #0
 8001b28:	2032      	movs	r0, #50	; 0x32
 8001b2a:	f7ff ff51 	bl	80019d0 <WriteI2C>
	Delay(5);
 8001b2e:	2005      	movs	r0, #5
 8001b30:	f7ff ff40 	bl	80019b4 <Delay>
	WriteI2C(0x20, LCD_COMMAND);
 8001b34:	2100      	movs	r1, #0
 8001b36:	2020      	movs	r0, #32
 8001b38:	f7ff ff4a 	bl	80019d0 <WriteI2C>
	Delay(5);
 8001b3c:	2005      	movs	r0, #5
 8001b3e:	f7ff ff39 	bl	80019b4 <Delay>

//	config lcd
	WriteI2C(LCD.ENTRYMODE, LCD_COMMAND);
 8001b42:	4b19      	ldr	r3, [pc, #100]	; (8001ba8 <CLCD_Init+0x144>)
 8001b44:	79db      	ldrb	r3, [r3, #7]
 8001b46:	2100      	movs	r1, #0
 8001b48:	4618      	mov	r0, r3
 8001b4a:	f7ff ff41 	bl	80019d0 <WriteI2C>
	Delay(1);
 8001b4e:	2001      	movs	r0, #1
 8001b50:	f7ff ff30 	bl	80019b4 <Delay>
	WriteI2C(LCD.DISPLAYCTRL, LCD_COMMAND);
 8001b54:	4b14      	ldr	r3, [pc, #80]	; (8001ba8 <CLCD_Init+0x144>)
 8001b56:	7a5b      	ldrb	r3, [r3, #9]
 8001b58:	2100      	movs	r1, #0
 8001b5a:	4618      	mov	r0, r3
 8001b5c:	f7ff ff38 	bl	80019d0 <WriteI2C>
	Delay(1);
 8001b60:	2001      	movs	r0, #1
 8001b62:	f7ff ff27 	bl	80019b4 <Delay>
	WriteI2C(LCD.CURSORSHIFT, LCD_COMMAND);
 8001b66:	4b10      	ldr	r3, [pc, #64]	; (8001ba8 <CLCD_Init+0x144>)
 8001b68:	7a9b      	ldrb	r3, [r3, #10]
 8001b6a:	2100      	movs	r1, #0
 8001b6c:	4618      	mov	r0, r3
 8001b6e:	f7ff ff2f 	bl	80019d0 <WriteI2C>
	Delay(1);
 8001b72:	2001      	movs	r0, #1
 8001b74:	f7ff ff1e 	bl	80019b4 <Delay>
	WriteI2C(LCD.FUNCTIONSET, LCD_COMMAND);
 8001b78:	4b0b      	ldr	r3, [pc, #44]	; (8001ba8 <CLCD_Init+0x144>)
 8001b7a:	7a1b      	ldrb	r3, [r3, #8]
 8001b7c:	2100      	movs	r1, #0
 8001b7e:	4618      	mov	r0, r3
 8001b80:	f7ff ff26 	bl	80019d0 <WriteI2C>
	Delay(1);
 8001b84:	2001      	movs	r0, #1
 8001b86:	f7ff ff15 	bl	80019b4 <Delay>

	WriteI2C(LCD_CLEARDISPLAY, LCD_COMMAND);
 8001b8a:	2100      	movs	r1, #0
 8001b8c:	2001      	movs	r0, #1
 8001b8e:	f7ff ff1f 	bl	80019d0 <WriteI2C>
	Delay(1);
 8001b92:	2001      	movs	r0, #1
 8001b94:	f7ff ff0e 	bl	80019b4 <Delay>

	WriteI2C(LCD_RETURNHOME, LCD_COMMAND);
 8001b98:	2100      	movs	r1, #0
 8001b9a:	2002      	movs	r0, #2
 8001b9c:	f7ff ff18 	bl	80019d0 <WriteI2C>
}
 8001ba0:	bf00      	nop
 8001ba2:	3710      	adds	r7, #16
 8001ba4:	46bd      	mov	sp, r7
 8001ba6:	bd80      	pop	{r7, pc}
 8001ba8:	20000254 	.word	0x20000254
 8001bac:	20000250 	.word	0x20000250

08001bb0 <SetCursor>:

void SetCursor(uint8_t row, uint8_t col){
 8001bb0:	b580      	push	{r7, lr}
 8001bb2:	b084      	sub	sp, #16
 8001bb4:	af00      	add	r7, sp, #0
 8001bb6:	4603      	mov	r3, r0
 8001bb8:	460a      	mov	r2, r1
 8001bba:	71fb      	strb	r3, [r7, #7]
 8001bbc:	4613      	mov	r3, r2
 8001bbe:	71bb      	strb	r3, [r7, #6]
	uint8_t address_dram = 0x00;
 8001bc0:	2300      	movs	r3, #0
 8001bc2:	73fb      	strb	r3, [r7, #15]

	row = row % LCD.ROW;
 8001bc4:	4b1d      	ldr	r3, [pc, #116]	; (8001c3c <SetCursor+0x8c>)
 8001bc6:	799a      	ldrb	r2, [r3, #6]
 8001bc8:	79fb      	ldrb	r3, [r7, #7]
 8001bca:	fbb3 f1f2 	udiv	r1, r3, r2
 8001bce:	fb01 f202 	mul.w	r2, r1, r2
 8001bd2:	1a9b      	subs	r3, r3, r2
 8001bd4:	71fb      	strb	r3, [r7, #7]
	col = col % LCD.COL;
 8001bd6:	4b19      	ldr	r3, [pc, #100]	; (8001c3c <SetCursor+0x8c>)
 8001bd8:	795a      	ldrb	r2, [r3, #5]
 8001bda:	79bb      	ldrb	r3, [r7, #6]
 8001bdc:	fbb3 f1f2 	udiv	r1, r3, r2
 8001be0:	fb01 f202 	mul.w	r2, r1, r2
 8001be4:	1a9b      	subs	r3, r3, r2
 8001be6:	71bb      	strb	r3, [r7, #6]

	switch(row){
 8001be8:	79fb      	ldrb	r3, [r7, #7]
 8001bea:	2b03      	cmp	r3, #3
 8001bec:	d819      	bhi.n	8001c22 <SetCursor+0x72>
 8001bee:	a201      	add	r2, pc, #4	; (adr r2, 8001bf4 <SetCursor+0x44>)
 8001bf0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001bf4:	08001c05 	.word	0x08001c05
 8001bf8:	08001c0b 	.word	0x08001c0b
 8001bfc:	08001c13 	.word	0x08001c13
 8001c00:	08001c1b 	.word	0x08001c1b
	case 0:
		address_dram = 0x00 + col;
 8001c04:	79bb      	ldrb	r3, [r7, #6]
 8001c06:	73fb      	strb	r3, [r7, #15]
		break;
 8001c08:	e00b      	b.n	8001c22 <SetCursor+0x72>
	case 1:
		address_dram = 0x40 + col;
 8001c0a:	79bb      	ldrb	r3, [r7, #6]
 8001c0c:	3340      	adds	r3, #64	; 0x40
 8001c0e:	73fb      	strb	r3, [r7, #15]
		break;
 8001c10:	e007      	b.n	8001c22 <SetCursor+0x72>
	case 2:
		address_dram = 0x14 + col;
 8001c12:	79bb      	ldrb	r3, [r7, #6]
 8001c14:	3314      	adds	r3, #20
 8001c16:	73fb      	strb	r3, [r7, #15]
		break;
 8001c18:	e003      	b.n	8001c22 <SetCursor+0x72>
	case 3:
		address_dram = 0x54 + col;
 8001c1a:	79bb      	ldrb	r3, [r7, #6]
 8001c1c:	3354      	adds	r3, #84	; 0x54
 8001c1e:	73fb      	strb	r3, [r7, #15]
		break;
 8001c20:	bf00      	nop
	}

	WriteI2C(LCD_SETDDRAMADDR | address_dram, LCD_COMMAND);
 8001c22:	7bfb      	ldrb	r3, [r7, #15]
 8001c24:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8001c28:	b2db      	uxtb	r3, r3
 8001c2a:	2100      	movs	r1, #0
 8001c2c:	4618      	mov	r0, r3
 8001c2e:	f7ff fecf 	bl	80019d0 <WriteI2C>
}
 8001c32:	bf00      	nop
 8001c34:	3710      	adds	r7, #16
 8001c36:	46bd      	mov	sp, r7
 8001c38:	bd80      	pop	{r7, pc}
 8001c3a:	bf00      	nop
 8001c3c:	20000254 	.word	0x20000254

08001c40 <UpdateCharBuffer>:

void UpdateCharBuffer(uint8_t c){
 8001c40:	b480      	push	{r7}
 8001c42:	b083      	sub	sp, #12
 8001c44:	af00      	add	r7, sp, #0
 8001c46:	4603      	mov	r3, r0
 8001c48:	71fb      	strb	r3, [r7, #7]
	Lcd_buffer[currentRow * LCD.COL + currentCol] = c;
 8001c4a:	4b0d      	ldr	r3, [pc, #52]	; (8001c80 <UpdateCharBuffer+0x40>)
 8001c4c:	681b      	ldr	r3, [r3, #0]
 8001c4e:	4a0d      	ldr	r2, [pc, #52]	; (8001c84 <UpdateCharBuffer+0x44>)
 8001c50:	7812      	ldrb	r2, [r2, #0]
 8001c52:	4611      	mov	r1, r2
 8001c54:	4a0c      	ldr	r2, [pc, #48]	; (8001c88 <UpdateCharBuffer+0x48>)
 8001c56:	7952      	ldrb	r2, [r2, #5]
 8001c58:	fb01 f202 	mul.w	r2, r1, r2
 8001c5c:	490b      	ldr	r1, [pc, #44]	; (8001c8c <UpdateCharBuffer+0x4c>)
 8001c5e:	7809      	ldrb	r1, [r1, #0]
 8001c60:	440a      	add	r2, r1
 8001c62:	4413      	add	r3, r2
 8001c64:	79fa      	ldrb	r2, [r7, #7]
 8001c66:	701a      	strb	r2, [r3, #0]
	currentCol++;
 8001c68:	4b08      	ldr	r3, [pc, #32]	; (8001c8c <UpdateCharBuffer+0x4c>)
 8001c6a:	781b      	ldrb	r3, [r3, #0]
 8001c6c:	3301      	adds	r3, #1
 8001c6e:	b2da      	uxtb	r2, r3
 8001c70:	4b06      	ldr	r3, [pc, #24]	; (8001c8c <UpdateCharBuffer+0x4c>)
 8001c72:	701a      	strb	r2, [r3, #0]
}
 8001c74:	bf00      	nop
 8001c76:	370c      	adds	r7, #12
 8001c78:	46bd      	mov	sp, r7
 8001c7a:	bc80      	pop	{r7}
 8001c7c:	4770      	bx	lr
 8001c7e:	bf00      	nop
 8001c80:	20000250 	.word	0x20000250
 8001c84:	20000261 	.word	0x20000261
 8001c88:	20000254 	.word	0x20000254
 8001c8c:	20000260 	.word	0x20000260

08001c90 <CLCD_PrintCharBuffer>:

void CLCD_PrintCharBuffer(uint8_t row, uint8_t col, char c){
 8001c90:	b480      	push	{r7}
 8001c92:	b083      	sub	sp, #12
 8001c94:	af00      	add	r7, sp, #0
 8001c96:	4603      	mov	r3, r0
 8001c98:	71fb      	strb	r3, [r7, #7]
 8001c9a:	460b      	mov	r3, r1
 8001c9c:	71bb      	strb	r3, [r7, #6]
 8001c9e:	4613      	mov	r3, r2
 8001ca0:	717b      	strb	r3, [r7, #5]
	currentRow = row % LCD.ROW;
 8001ca2:	4b15      	ldr	r3, [pc, #84]	; (8001cf8 <CLCD_PrintCharBuffer+0x68>)
 8001ca4:	799a      	ldrb	r2, [r3, #6]
 8001ca6:	79fb      	ldrb	r3, [r7, #7]
 8001ca8:	fbb3 f1f2 	udiv	r1, r3, r2
 8001cac:	fb01 f202 	mul.w	r2, r1, r2
 8001cb0:	1a9b      	subs	r3, r3, r2
 8001cb2:	b2da      	uxtb	r2, r3
 8001cb4:	4b11      	ldr	r3, [pc, #68]	; (8001cfc <CLCD_PrintCharBuffer+0x6c>)
 8001cb6:	701a      	strb	r2, [r3, #0]
	currentCol = col % LCD.COL;
 8001cb8:	4b0f      	ldr	r3, [pc, #60]	; (8001cf8 <CLCD_PrintCharBuffer+0x68>)
 8001cba:	795a      	ldrb	r2, [r3, #5]
 8001cbc:	79bb      	ldrb	r3, [r7, #6]
 8001cbe:	fbb3 f1f2 	udiv	r1, r3, r2
 8001cc2:	fb01 f202 	mul.w	r2, r1, r2
 8001cc6:	1a9b      	subs	r3, r3, r2
 8001cc8:	b2da      	uxtb	r2, r3
 8001cca:	4b0d      	ldr	r3, [pc, #52]	; (8001d00 <CLCD_PrintCharBuffer+0x70>)
 8001ccc:	701a      	strb	r2, [r3, #0]
	Lcd_buffer[currentRow * LCD.COL + currentCol] = c;
 8001cce:	4b0d      	ldr	r3, [pc, #52]	; (8001d04 <CLCD_PrintCharBuffer+0x74>)
 8001cd0:	681b      	ldr	r3, [r3, #0]
 8001cd2:	4a0a      	ldr	r2, [pc, #40]	; (8001cfc <CLCD_PrintCharBuffer+0x6c>)
 8001cd4:	7812      	ldrb	r2, [r2, #0]
 8001cd6:	4611      	mov	r1, r2
 8001cd8:	4a07      	ldr	r2, [pc, #28]	; (8001cf8 <CLCD_PrintCharBuffer+0x68>)
 8001cda:	7952      	ldrb	r2, [r2, #5]
 8001cdc:	fb01 f202 	mul.w	r2, r1, r2
 8001ce0:	4907      	ldr	r1, [pc, #28]	; (8001d00 <CLCD_PrintCharBuffer+0x70>)
 8001ce2:	7809      	ldrb	r1, [r1, #0]
 8001ce4:	440a      	add	r2, r1
 8001ce6:	4413      	add	r3, r2
 8001ce8:	797a      	ldrb	r2, [r7, #5]
 8001cea:	701a      	strb	r2, [r3, #0]
}
 8001cec:	bf00      	nop
 8001cee:	370c      	adds	r7, #12
 8001cf0:	46bd      	mov	sp, r7
 8001cf2:	bc80      	pop	{r7}
 8001cf4:	4770      	bx	lr
 8001cf6:	bf00      	nop
 8001cf8:	20000254 	.word	0x20000254
 8001cfc:	20000261 	.word	0x20000261
 8001d00:	20000260 	.word	0x20000260
 8001d04:	20000250 	.word	0x20000250

08001d08 <CLCD_PrintStringBuffer>:

void CLCD_PrintStringBuffer(uint8_t row, uint8_t col, char* str){
 8001d08:	b580      	push	{r7, lr}
 8001d0a:	b082      	sub	sp, #8
 8001d0c:	af00      	add	r7, sp, #0
 8001d0e:	4603      	mov	r3, r0
 8001d10:	603a      	str	r2, [r7, #0]
 8001d12:	71fb      	strb	r3, [r7, #7]
 8001d14:	460b      	mov	r3, r1
 8001d16:	71bb      	strb	r3, [r7, #6]
	currentRow = row % LCD.ROW;
 8001d18:	4b13      	ldr	r3, [pc, #76]	; (8001d68 <CLCD_PrintStringBuffer+0x60>)
 8001d1a:	799a      	ldrb	r2, [r3, #6]
 8001d1c:	79fb      	ldrb	r3, [r7, #7]
 8001d1e:	fbb3 f1f2 	udiv	r1, r3, r2
 8001d22:	fb01 f202 	mul.w	r2, r1, r2
 8001d26:	1a9b      	subs	r3, r3, r2
 8001d28:	b2da      	uxtb	r2, r3
 8001d2a:	4b10      	ldr	r3, [pc, #64]	; (8001d6c <CLCD_PrintStringBuffer+0x64>)
 8001d2c:	701a      	strb	r2, [r3, #0]
	currentCol = col % LCD.COL;
 8001d2e:	4b0e      	ldr	r3, [pc, #56]	; (8001d68 <CLCD_PrintStringBuffer+0x60>)
 8001d30:	795a      	ldrb	r2, [r3, #5]
 8001d32:	79bb      	ldrb	r3, [r7, #6]
 8001d34:	fbb3 f1f2 	udiv	r1, r3, r2
 8001d38:	fb01 f202 	mul.w	r2, r1, r2
 8001d3c:	1a9b      	subs	r3, r3, r2
 8001d3e:	b2da      	uxtb	r2, r3
 8001d40:	4b0b      	ldr	r3, [pc, #44]	; (8001d70 <CLCD_PrintStringBuffer+0x68>)
 8001d42:	701a      	strb	r2, [r3, #0]
	while(*str){
 8001d44:	e006      	b.n	8001d54 <CLCD_PrintStringBuffer+0x4c>
		UpdateCharBuffer(*str++);
 8001d46:	683b      	ldr	r3, [r7, #0]
 8001d48:	1c5a      	adds	r2, r3, #1
 8001d4a:	603a      	str	r2, [r7, #0]
 8001d4c:	781b      	ldrb	r3, [r3, #0]
 8001d4e:	4618      	mov	r0, r3
 8001d50:	f7ff ff76 	bl	8001c40 <UpdateCharBuffer>
	while(*str){
 8001d54:	683b      	ldr	r3, [r7, #0]
 8001d56:	781b      	ldrb	r3, [r3, #0]
 8001d58:	2b00      	cmp	r3, #0
 8001d5a:	d1f4      	bne.n	8001d46 <CLCD_PrintStringBuffer+0x3e>
	}
}
 8001d5c:	bf00      	nop
 8001d5e:	bf00      	nop
 8001d60:	3708      	adds	r7, #8
 8001d62:	46bd      	mov	sp, r7
 8001d64:	bd80      	pop	{r7, pc}
 8001d66:	bf00      	nop
 8001d68:	20000254 	.word	0x20000254
 8001d6c:	20000261 	.word	0x20000261
 8001d70:	20000260 	.word	0x20000260

08001d74 <CLCD_PrintNumBuffer>:

void CLCD_PrintNumBuffer(uint8_t row, uint8_t col, int16_t num){
 8001d74:	b580      	push	{r7, lr}
 8001d76:	b084      	sub	sp, #16
 8001d78:	af00      	add	r7, sp, #0
 8001d7a:	4603      	mov	r3, r0
 8001d7c:	71fb      	strb	r3, [r7, #7]
 8001d7e:	460b      	mov	r3, r1
 8001d80:	71bb      	strb	r3, [r7, #6]
 8001d82:	4613      	mov	r3, r2
 8001d84:	80bb      	strh	r3, [r7, #4]
    char flag_num = 0;
 8001d86:	2300      	movs	r3, #0
 8001d88:	73fb      	strb	r3, [r7, #15]
    unsigned char i;
    unsigned long power_of_10 = 1000000000;
 8001d8a:	4b30      	ldr	r3, [pc, #192]	; (8001e4c <CLCD_PrintNumBuffer+0xd8>)
 8001d8c:	60bb      	str	r3, [r7, #8]
    currentRow = row % 2;
 8001d8e:	79fb      	ldrb	r3, [r7, #7]
 8001d90:	f003 0301 	and.w	r3, r3, #1
 8001d94:	b2da      	uxtb	r2, r3
 8001d96:	4b2e      	ldr	r3, [pc, #184]	; (8001e50 <CLCD_PrintNumBuffer+0xdc>)
 8001d98:	701a      	strb	r2, [r3, #0]
    currentCol = col % 16;
 8001d9a:	79bb      	ldrb	r3, [r7, #6]
 8001d9c:	f003 030f 	and.w	r3, r3, #15
 8001da0:	b2da      	uxtb	r2, r3
 8001da2:	4b2c      	ldr	r3, [pc, #176]	; (8001e54 <CLCD_PrintNumBuffer+0xe0>)
 8001da4:	701a      	strb	r2, [r3, #0]

    if(num < 0) {
 8001da6:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8001daa:	2b00      	cmp	r3, #0
 8001dac:	da07      	bge.n	8001dbe <CLCD_PrintNumBuffer+0x4a>
        num *= -1;
 8001dae:	88bb      	ldrh	r3, [r7, #4]
 8001db0:	425b      	negs	r3, r3
 8001db2:	b29b      	uxth	r3, r3
 8001db4:	80bb      	strh	r3, [r7, #4]
        UpdateCharBuffer('-');
 8001db6:	202d      	movs	r0, #45	; 0x2d
 8001db8:	f7ff ff42 	bl	8001c40 <UpdateCharBuffer>
 8001dbc:	e011      	b.n	8001de2 <CLCD_PrintNumBuffer+0x6e>
    }
    else if(num == 0){
 8001dbe:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8001dc2:	2b00      	cmp	r3, #0
 8001dc4:	d106      	bne.n	8001dd4 <CLCD_PrintNumBuffer+0x60>
    	UpdateCharBuffer('0');
 8001dc6:	2030      	movs	r0, #48	; 0x30
 8001dc8:	f7ff ff3a 	bl	8001c40 <UpdateCharBuffer>
    	UpdateCharBuffer('0');
 8001dcc:	2030      	movs	r0, #48	; 0x30
 8001dce:	f7ff ff37 	bl	8001c40 <UpdateCharBuffer>
//        UpdateCharBuffer(' ');
//        UpdateCharBuffer(' ');
        return;
 8001dd2:	e038      	b.n	8001e46 <CLCD_PrintNumBuffer+0xd2>
    }

    else if(num < 10){
 8001dd4:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8001dd8:	2b09      	cmp	r3, #9
 8001dda:	dc02      	bgt.n	8001de2 <CLCD_PrintNumBuffer+0x6e>
        UpdateCharBuffer('0');
 8001ddc:	2030      	movs	r0, #48	; 0x30
 8001dde:	f7ff ff2f 	bl	8001c40 <UpdateCharBuffer>
//        UpdateCharBuffer(num + '0');
    }

    for(i = 10; i > 0; i--){
 8001de2:	230a      	movs	r3, #10
 8001de4:	73bb      	strb	r3, [r7, #14]
 8001de6:	e02b      	b.n	8001e40 <CLCD_PrintNumBuffer+0xcc>
        if( (num / power_of_10) != 0){
 8001de8:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8001dec:	68ba      	ldr	r2, [r7, #8]
 8001dee:	429a      	cmp	r2, r3
 8001df0:	d80d      	bhi.n	8001e0e <CLCD_PrintNumBuffer+0x9a>
            flag_num = 1;
 8001df2:	2301      	movs	r3, #1
 8001df4:	73fb      	strb	r3, [r7, #15]
            UpdateCharBuffer(num / power_of_10 + '0');
 8001df6:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8001dfa:	68bb      	ldr	r3, [r7, #8]
 8001dfc:	fbb2 f3f3 	udiv	r3, r2, r3
 8001e00:	b2db      	uxtb	r3, r3
 8001e02:	3330      	adds	r3, #48	; 0x30
 8001e04:	b2db      	uxtb	r3, r3
 8001e06:	4618      	mov	r0, r3
 8001e08:	f7ff ff1a 	bl	8001c40 <UpdateCharBuffer>
 8001e0c:	e005      	b.n	8001e1a <CLCD_PrintNumBuffer+0xa6>
        }
        else{
            if(flag_num != 0) UpdateCharBuffer('0');
 8001e0e:	7bfb      	ldrb	r3, [r7, #15]
 8001e10:	2b00      	cmp	r3, #0
 8001e12:	d002      	beq.n	8001e1a <CLCD_PrintNumBuffer+0xa6>
 8001e14:	2030      	movs	r0, #48	; 0x30
 8001e16:	f7ff ff13 	bl	8001c40 <UpdateCharBuffer>
        }
        num %= power_of_10;
 8001e1a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8001e1e:	68ba      	ldr	r2, [r7, #8]
 8001e20:	fbb3 f2f2 	udiv	r2, r3, r2
 8001e24:	68b9      	ldr	r1, [r7, #8]
 8001e26:	fb01 f202 	mul.w	r2, r1, r2
 8001e2a:	1a9b      	subs	r3, r3, r2
 8001e2c:	80bb      	strh	r3, [r7, #4]
        power_of_10 /= 10;
 8001e2e:	68bb      	ldr	r3, [r7, #8]
 8001e30:	4a09      	ldr	r2, [pc, #36]	; (8001e58 <CLCD_PrintNumBuffer+0xe4>)
 8001e32:	fba2 2303 	umull	r2, r3, r2, r3
 8001e36:	08db      	lsrs	r3, r3, #3
 8001e38:	60bb      	str	r3, [r7, #8]
    for(i = 10; i > 0; i--){
 8001e3a:	7bbb      	ldrb	r3, [r7, #14]
 8001e3c:	3b01      	subs	r3, #1
 8001e3e:	73bb      	strb	r3, [r7, #14]
 8001e40:	7bbb      	ldrb	r3, [r7, #14]
 8001e42:	2b00      	cmp	r3, #0
 8001e44:	d1d0      	bne.n	8001de8 <CLCD_PrintNumBuffer+0x74>
    }

//    UpdateCharBuffer(' ');
//    UpdateCharBuffer(' ');
}
 8001e46:	3710      	adds	r7, #16
 8001e48:	46bd      	mov	sp, r7
 8001e4a:	bd80      	pop	{r7, pc}
 8001e4c:	3b9aca00 	.word	0x3b9aca00
 8001e50:	20000261 	.word	0x20000261
 8001e54:	20000260 	.word	0x20000260
 8001e58:	cccccccd 	.word	0xcccccccd

08001e5c <CLCD_PrintFloatBuffer>:

void CLCD_PrintFloatBuffer(uint8_t row, uint8_t col, float f){
 8001e5c:	b580      	push	{r7, lr}
 8001e5e:	b084      	sub	sp, #16
 8001e60:	af00      	add	r7, sp, #0
 8001e62:	4603      	mov	r3, r0
 8001e64:	603a      	str	r2, [r7, #0]
 8001e66:	71fb      	strb	r3, [r7, #7]
 8001e68:	460b      	mov	r3, r1
 8001e6a:	71bb      	strb	r3, [r7, #6]
	uint8_t integer_part, decimal_part;

	if(f >= 100) return;
 8001e6c:	492f      	ldr	r1, [pc, #188]	; (8001f2c <CLCD_PrintFloatBuffer+0xd0>)
 8001e6e:	6838      	ldr	r0, [r7, #0]
 8001e70:	f7ff f880 	bl	8000f74 <__aeabi_fcmpge>
 8001e74:	4603      	mov	r3, r0
 8001e76:	2b00      	cmp	r3, #0
 8001e78:	d153      	bne.n	8001f22 <CLCD_PrintFloatBuffer+0xc6>

    currentRow = row % 2;
 8001e7a:	79fb      	ldrb	r3, [r7, #7]
 8001e7c:	f003 0301 	and.w	r3, r3, #1
 8001e80:	b2da      	uxtb	r2, r3
 8001e82:	4b2b      	ldr	r3, [pc, #172]	; (8001f30 <CLCD_PrintFloatBuffer+0xd4>)
 8001e84:	701a      	strb	r2, [r3, #0]
    currentCol = col % 16;
 8001e86:	79bb      	ldrb	r3, [r7, #6]
 8001e88:	f003 030f 	and.w	r3, r3, #15
 8001e8c:	b2da      	uxtb	r2, r3
 8001e8e:	4b29      	ldr	r3, [pc, #164]	; (8001f34 <CLCD_PrintFloatBuffer+0xd8>)
 8001e90:	701a      	strb	r2, [r3, #0]

    integer_part = (uint8_t) f;
 8001e92:	6838      	ldr	r0, [r7, #0]
 8001e94:	f7ff f898 	bl	8000fc8 <__aeabi_f2uiz>
 8001e98:	4603      	mov	r3, r0
 8001e9a:	73fb      	strb	r3, [r7, #15]
    decimal_part = (uint8_t) ((f - integer_part)*10);
 8001e9c:	7bfb      	ldrb	r3, [r7, #15]
 8001e9e:	4618      	mov	r0, r3
 8001ea0:	f7fe ffb2 	bl	8000e08 <__aeabi_i2f>
 8001ea4:	4603      	mov	r3, r0
 8001ea6:	4619      	mov	r1, r3
 8001ea8:	6838      	ldr	r0, [r7, #0]
 8001eaa:	f7fe fef7 	bl	8000c9c <__aeabi_fsub>
 8001eae:	4603      	mov	r3, r0
 8001eb0:	4921      	ldr	r1, [pc, #132]	; (8001f38 <CLCD_PrintFloatBuffer+0xdc>)
 8001eb2:	4618      	mov	r0, r3
 8001eb4:	f7fe f95e 	bl	8000174 <__aeabi_fmul>
 8001eb8:	4603      	mov	r3, r0
 8001eba:	4618      	mov	r0, r3
 8001ebc:	f7ff f884 	bl	8000fc8 <__aeabi_f2uiz>
 8001ec0:	4603      	mov	r3, r0
 8001ec2:	73bb      	strb	r3, [r7, #14]

    UpdateCharBuffer(integer_part / 10 + '0');
 8001ec4:	7bfb      	ldrb	r3, [r7, #15]
 8001ec6:	4a1d      	ldr	r2, [pc, #116]	; (8001f3c <CLCD_PrintFloatBuffer+0xe0>)
 8001ec8:	fba2 2303 	umull	r2, r3, r2, r3
 8001ecc:	08db      	lsrs	r3, r3, #3
 8001ece:	b2db      	uxtb	r3, r3
 8001ed0:	3330      	adds	r3, #48	; 0x30
 8001ed2:	b2db      	uxtb	r3, r3
 8001ed4:	4618      	mov	r0, r3
 8001ed6:	f7ff feb3 	bl	8001c40 <UpdateCharBuffer>
    UpdateCharBuffer(integer_part % 10 + '0');
 8001eda:	7bfa      	ldrb	r2, [r7, #15]
 8001edc:	4b17      	ldr	r3, [pc, #92]	; (8001f3c <CLCD_PrintFloatBuffer+0xe0>)
 8001ede:	fba3 1302 	umull	r1, r3, r3, r2
 8001ee2:	08d9      	lsrs	r1, r3, #3
 8001ee4:	460b      	mov	r3, r1
 8001ee6:	009b      	lsls	r3, r3, #2
 8001ee8:	440b      	add	r3, r1
 8001eea:	005b      	lsls	r3, r3, #1
 8001eec:	1ad3      	subs	r3, r2, r3
 8001eee:	b2db      	uxtb	r3, r3
 8001ef0:	3330      	adds	r3, #48	; 0x30
 8001ef2:	b2db      	uxtb	r3, r3
 8001ef4:	4618      	mov	r0, r3
 8001ef6:	f7ff fea3 	bl	8001c40 <UpdateCharBuffer>
    UpdateCharBuffer('.');
 8001efa:	202e      	movs	r0, #46	; 0x2e
 8001efc:	f7ff fea0 	bl	8001c40 <UpdateCharBuffer>
    UpdateCharBuffer(decimal_part % 10 + '0');
 8001f00:	7bba      	ldrb	r2, [r7, #14]
 8001f02:	4b0e      	ldr	r3, [pc, #56]	; (8001f3c <CLCD_PrintFloatBuffer+0xe0>)
 8001f04:	fba3 1302 	umull	r1, r3, r3, r2
 8001f08:	08d9      	lsrs	r1, r3, #3
 8001f0a:	460b      	mov	r3, r1
 8001f0c:	009b      	lsls	r3, r3, #2
 8001f0e:	440b      	add	r3, r1
 8001f10:	005b      	lsls	r3, r3, #1
 8001f12:	1ad3      	subs	r3, r2, r3
 8001f14:	b2db      	uxtb	r3, r3
 8001f16:	3330      	adds	r3, #48	; 0x30
 8001f18:	b2db      	uxtb	r3, r3
 8001f1a:	4618      	mov	r0, r3
 8001f1c:	f7ff fe90 	bl	8001c40 <UpdateCharBuffer>
 8001f20:	e000      	b.n	8001f24 <CLCD_PrintFloatBuffer+0xc8>
	if(f >= 100) return;
 8001f22:	bf00      	nop
}
 8001f24:	3710      	adds	r7, #16
 8001f26:	46bd      	mov	sp, r7
 8001f28:	bd80      	pop	{r7, pc}
 8001f2a:	bf00      	nop
 8001f2c:	42c80000 	.word	0x42c80000
 8001f30:	20000261 	.word	0x20000261
 8001f34:	20000260 	.word	0x20000260
 8001f38:	41200000 	.word	0x41200000
 8001f3c:	cccccccd 	.word	0xcccccccd

08001f40 <CLCD_DisplayScreen>:
	uint8_t i;

	for(i = 0; i < LCD.ROW * LCD.COL; i++) Lcd_buffer[i] = ' ';
}

void CLCD_DisplayScreen(void){
 8001f40:	b580      	push	{r7, lr}
 8001f42:	b082      	sub	sp, #8
 8001f44:	af00      	add	r7, sp, #0
	uint8_t i, j;

	for(i = 0; i < LCD.ROW; i++){
 8001f46:	2300      	movs	r3, #0
 8001f48:	71fb      	strb	r3, [r7, #7]
 8001f4a:	e021      	b.n	8001f90 <CLCD_DisplayScreen+0x50>
		SetCursor(i, 0);
 8001f4c:	79fb      	ldrb	r3, [r7, #7]
 8001f4e:	2100      	movs	r1, #0
 8001f50:	4618      	mov	r0, r3
 8001f52:	f7ff fe2d 	bl	8001bb0 <SetCursor>
		for(j = 0; j < LCD.COL; j++){
 8001f56:	2300      	movs	r3, #0
 8001f58:	71bb      	strb	r3, [r7, #6]
 8001f5a:	e011      	b.n	8001f80 <CLCD_DisplayScreen+0x40>
			WriteI2C(Lcd_buffer[i * LCD.COL + j], LCD_DATA);
 8001f5c:	4b11      	ldr	r3, [pc, #68]	; (8001fa4 <CLCD_DisplayScreen+0x64>)
 8001f5e:	681b      	ldr	r3, [r3, #0]
 8001f60:	79fa      	ldrb	r2, [r7, #7]
 8001f62:	4911      	ldr	r1, [pc, #68]	; (8001fa8 <CLCD_DisplayScreen+0x68>)
 8001f64:	7949      	ldrb	r1, [r1, #5]
 8001f66:	fb02 f101 	mul.w	r1, r2, r1
 8001f6a:	79ba      	ldrb	r2, [r7, #6]
 8001f6c:	440a      	add	r2, r1
 8001f6e:	4413      	add	r3, r2
 8001f70:	781b      	ldrb	r3, [r3, #0]
 8001f72:	2101      	movs	r1, #1
 8001f74:	4618      	mov	r0, r3
 8001f76:	f7ff fd2b 	bl	80019d0 <WriteI2C>
		for(j = 0; j < LCD.COL; j++){
 8001f7a:	79bb      	ldrb	r3, [r7, #6]
 8001f7c:	3301      	adds	r3, #1
 8001f7e:	71bb      	strb	r3, [r7, #6]
 8001f80:	4b09      	ldr	r3, [pc, #36]	; (8001fa8 <CLCD_DisplayScreen+0x68>)
 8001f82:	795b      	ldrb	r3, [r3, #5]
 8001f84:	79ba      	ldrb	r2, [r7, #6]
 8001f86:	429a      	cmp	r2, r3
 8001f88:	d3e8      	bcc.n	8001f5c <CLCD_DisplayScreen+0x1c>
	for(i = 0; i < LCD.ROW; i++){
 8001f8a:	79fb      	ldrb	r3, [r7, #7]
 8001f8c:	3301      	adds	r3, #1
 8001f8e:	71fb      	strb	r3, [r7, #7]
 8001f90:	4b05      	ldr	r3, [pc, #20]	; (8001fa8 <CLCD_DisplayScreen+0x68>)
 8001f92:	799b      	ldrb	r3, [r3, #6]
 8001f94:	79fa      	ldrb	r2, [r7, #7]
 8001f96:	429a      	cmp	r2, r3
 8001f98:	d3d8      	bcc.n	8001f4c <CLCD_DisplayScreen+0xc>
		}
	}
}
 8001f9a:	bf00      	nop
 8001f9c:	bf00      	nop
 8001f9e:	3708      	adds	r7, #8
 8001fa0:	46bd      	mov	sp, r7
 8001fa2:	bd80      	pop	{r7, pc}
 8001fa4:	20000250 	.word	0x20000250
 8001fa8:	20000254 	.word	0x20000254

08001fac <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001fac:	b580      	push	{r7, lr}
 8001fae:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001fb0:	f000 fda8 	bl	8002b04 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001fb4:	f000 f86a 	bl	800208c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001fb8:	f000 f972 	bl	80022a0 <MX_GPIO_Init>
  MX_I2C1_Init();
 8001fbc:	f000 f8a2 	bl	8002104 <MX_I2C1_Init>
  MX_USART1_UART_Init();
 8001fc0:	f000 f91a 	bl	80021f8 <MX_USART1_UART_Init>
  MX_TIM2_Init();
 8001fc4:	f000 f8cc 	bl	8002160 <MX_TIM2_Init>
  MX_USART2_UART_Init();
 8001fc8:	f000 f940 	bl	800224c <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
//  IN_Init();
  CLCD_Init(&hi2c1, 0x3F, 2, 16);
 8001fcc:	2310      	movs	r3, #16
 8001fce:	2202      	movs	r2, #2
 8001fd0:	213f      	movs	r1, #63	; 0x3f
 8001fd2:	4825      	ldr	r0, [pc, #148]	; (8002068 <main+0xbc>)
 8001fd4:	f7ff fd46 	bl	8001a64 <CLCD_Init>

  UART_Init(&huart1, &huart2);
 8001fd8:	4924      	ldr	r1, [pc, #144]	; (800206c <main+0xc0>)
 8001fda:	4825      	ldr	r0, [pc, #148]	; (8002070 <main+0xc4>)
 8001fdc:	f000 fcfe 	bl	80029dc <UART_Init>
  FSM_Init();
 8001fe0:	f7ff f8f8 	bl	80011d4 <FSM_Init>

  TM_Init(&htim2);
 8001fe4:	4823      	ldr	r0, [pc, #140]	; (8002074 <main+0xc8>)
 8001fe6:	f000 fc25 	bl	8002834 <TM_Init>
  TM_SetTime(50);
 8001fea:	2032      	movs	r0, #50	; 0x32
 8001fec:	f000 fc42 	bl	8002874 <TM_SetTime>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  if(TM_IsFlag()){
 8001ff0:	f000 fc62 	bl	80028b8 <TM_IsFlag>
 8001ff4:	4603      	mov	r3, r0
 8001ff6:	2b00      	cmp	r3, #0
 8001ff8:	d0fa      	beq.n	8001ff0 <main+0x44>
		  _counter_time_elapsed += 1;
 8001ffa:	4b1f      	ldr	r3, [pc, #124]	; (8002078 <main+0xcc>)
 8001ffc:	881b      	ldrh	r3, [r3, #0]
 8001ffe:	3301      	adds	r3, #1
 8002000:	b29a      	uxth	r2, r3
 8002002:	4b1d      	ldr	r3, [pc, #116]	; (8002078 <main+0xcc>)
 8002004:	801a      	strh	r2, [r3, #0]

		  IN_ReadButton();
 8002006:	f7ff fc51 	bl	80018ac <IN_ReadButton>

		  if(_time_screen >= 5) _time_screen -= 5;
 800200a:	4b1c      	ldr	r3, [pc, #112]	; (800207c <main+0xd0>)
 800200c:	881b      	ldrh	r3, [r3, #0]
 800200e:	2b04      	cmp	r3, #4
 8002010:	d905      	bls.n	800201e <main+0x72>
 8002012:	4b1a      	ldr	r3, [pc, #104]	; (800207c <main+0xd0>)
 8002014:	881b      	ldrh	r3, [r3, #0]
 8002016:	3b05      	subs	r3, #5
 8002018:	b29a      	uxth	r2, r3
 800201a:	4b18      	ldr	r3, [pc, #96]	; (800207c <main+0xd0>)
 800201c:	801a      	strh	r2, [r3, #0]
		  if(_time_read_data >= 5) _time_read_data -= 5;
 800201e:	4b18      	ldr	r3, [pc, #96]	; (8002080 <main+0xd4>)
 8002020:	881b      	ldrh	r3, [r3, #0]
 8002022:	2b04      	cmp	r3, #4
 8002024:	d905      	bls.n	8002032 <main+0x86>
 8002026:	4b16      	ldr	r3, [pc, #88]	; (8002080 <main+0xd4>)
 8002028:	881b      	ldrh	r3, [r3, #0]
 800202a:	3b05      	subs	r3, #5
 800202c:	b29a      	uxth	r2, r3
 800202e:	4b14      	ldr	r3, [pc, #80]	; (8002080 <main+0xd4>)
 8002030:	801a      	strh	r2, [r3, #0]

		  FSM_DataTransfer();
 8002032:	f7ff fbf5 	bl	8001820 <FSM_DataTransfer>
		  FSM_LcdDisplay();
 8002036:	f7ff f8e7 	bl	8001208 <FSM_LcdDisplay>

		  if(_counter_time_elapsed % 10 == 0) HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 800203a:	4b0f      	ldr	r3, [pc, #60]	; (8002078 <main+0xcc>)
 800203c:	881a      	ldrh	r2, [r3, #0]
 800203e:	4b11      	ldr	r3, [pc, #68]	; (8002084 <main+0xd8>)
 8002040:	fba3 1302 	umull	r1, r3, r3, r2
 8002044:	08d9      	lsrs	r1, r3, #3
 8002046:	460b      	mov	r3, r1
 8002048:	009b      	lsls	r3, r3, #2
 800204a:	440b      	add	r3, r1
 800204c:	005b      	lsls	r3, r3, #1
 800204e:	1ad3      	subs	r3, r2, r3
 8002050:	b29b      	uxth	r3, r3
 8002052:	2b00      	cmp	r3, #0
 8002054:	d104      	bne.n	8002060 <main+0xb4>
 8002056:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800205a:	480b      	ldr	r0, [pc, #44]	; (8002088 <main+0xdc>)
 800205c:	f001 f949 	bl	80032f2 <HAL_GPIO_TogglePin>

		  CLCD_DisplayScreen();
 8002060:	f7ff ff6e 	bl	8001f40 <CLCD_DisplayScreen>
	  if(TM_IsFlag()){
 8002064:	e7c4      	b.n	8001ff0 <main+0x44>
 8002066:	bf00      	nop
 8002068:	20000264 	.word	0x20000264
 800206c:	20000344 	.word	0x20000344
 8002070:	20000300 	.word	0x20000300
 8002074:	200002b8 	.word	0x200002b8
 8002078:	20000244 	.word	0x20000244
 800207c:	20000240 	.word	0x20000240
 8002080:	20000242 	.word	0x20000242
 8002084:	cccccccd 	.word	0xcccccccd
 8002088:	40011000 	.word	0x40011000

0800208c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800208c:	b580      	push	{r7, lr}
 800208e:	b090      	sub	sp, #64	; 0x40
 8002090:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002092:	f107 0318 	add.w	r3, r7, #24
 8002096:	2228      	movs	r2, #40	; 0x28
 8002098:	2100      	movs	r1, #0
 800209a:	4618      	mov	r0, r3
 800209c:	f003 fb1a 	bl	80056d4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80020a0:	1d3b      	adds	r3, r7, #4
 80020a2:	2200      	movs	r2, #0
 80020a4:	601a      	str	r2, [r3, #0]
 80020a6:	605a      	str	r2, [r3, #4]
 80020a8:	609a      	str	r2, [r3, #8]
 80020aa:	60da      	str	r2, [r3, #12]
 80020ac:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80020ae:	2302      	movs	r3, #2
 80020b0:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80020b2:	2301      	movs	r3, #1
 80020b4:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80020b6:	2310      	movs	r3, #16
 80020b8:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80020ba:	2300      	movs	r3, #0
 80020bc:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80020be:	f107 0318 	add.w	r3, r7, #24
 80020c2:	4618      	mov	r0, r3
 80020c4:	f001 fd78 	bl	8003bb8 <HAL_RCC_OscConfig>
 80020c8:	4603      	mov	r3, r0
 80020ca:	2b00      	cmp	r3, #0
 80020cc:	d001      	beq.n	80020d2 <SystemClock_Config+0x46>
  {
    Error_Handler();
 80020ce:	f000 f941 	bl	8002354 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80020d2:	230f      	movs	r3, #15
 80020d4:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80020d6:	2300      	movs	r3, #0
 80020d8:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80020da:	2300      	movs	r3, #0
 80020dc:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80020de:	2300      	movs	r3, #0
 80020e0:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80020e2:	2300      	movs	r3, #0
 80020e4:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80020e6:	1d3b      	adds	r3, r7, #4
 80020e8:	2100      	movs	r1, #0
 80020ea:	4618      	mov	r0, r3
 80020ec:	f001 ffe6 	bl	80040bc <HAL_RCC_ClockConfig>
 80020f0:	4603      	mov	r3, r0
 80020f2:	2b00      	cmp	r3, #0
 80020f4:	d001      	beq.n	80020fa <SystemClock_Config+0x6e>
  {
    Error_Handler();
 80020f6:	f000 f92d 	bl	8002354 <Error_Handler>
  }
}
 80020fa:	bf00      	nop
 80020fc:	3740      	adds	r7, #64	; 0x40
 80020fe:	46bd      	mov	sp, r7
 8002100:	bd80      	pop	{r7, pc}
	...

08002104 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8002104:	b580      	push	{r7, lr}
 8002106:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8002108:	4b12      	ldr	r3, [pc, #72]	; (8002154 <MX_I2C1_Init+0x50>)
 800210a:	4a13      	ldr	r2, [pc, #76]	; (8002158 <MX_I2C1_Init+0x54>)
 800210c:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 800210e:	4b11      	ldr	r3, [pc, #68]	; (8002154 <MX_I2C1_Init+0x50>)
 8002110:	4a12      	ldr	r2, [pc, #72]	; (800215c <MX_I2C1_Init+0x58>)
 8002112:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8002114:	4b0f      	ldr	r3, [pc, #60]	; (8002154 <MX_I2C1_Init+0x50>)
 8002116:	2200      	movs	r2, #0
 8002118:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 800211a:	4b0e      	ldr	r3, [pc, #56]	; (8002154 <MX_I2C1_Init+0x50>)
 800211c:	2200      	movs	r2, #0
 800211e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8002120:	4b0c      	ldr	r3, [pc, #48]	; (8002154 <MX_I2C1_Init+0x50>)
 8002122:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8002126:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002128:	4b0a      	ldr	r3, [pc, #40]	; (8002154 <MX_I2C1_Init+0x50>)
 800212a:	2200      	movs	r2, #0
 800212c:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 800212e:	4b09      	ldr	r3, [pc, #36]	; (8002154 <MX_I2C1_Init+0x50>)
 8002130:	2200      	movs	r2, #0
 8002132:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002134:	4b07      	ldr	r3, [pc, #28]	; (8002154 <MX_I2C1_Init+0x50>)
 8002136:	2200      	movs	r2, #0
 8002138:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800213a:	4b06      	ldr	r3, [pc, #24]	; (8002154 <MX_I2C1_Init+0x50>)
 800213c:	2200      	movs	r2, #0
 800213e:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8002140:	4804      	ldr	r0, [pc, #16]	; (8002154 <MX_I2C1_Init+0x50>)
 8002142:	f001 f8ef 	bl	8003324 <HAL_I2C_Init>
 8002146:	4603      	mov	r3, r0
 8002148:	2b00      	cmp	r3, #0
 800214a:	d001      	beq.n	8002150 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 800214c:	f000 f902 	bl	8002354 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8002150:	bf00      	nop
 8002152:	bd80      	pop	{r7, pc}
 8002154:	20000264 	.word	0x20000264
 8002158:	40005400 	.word	0x40005400
 800215c:	000186a0 	.word	0x000186a0

08002160 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8002160:	b580      	push	{r7, lr}
 8002162:	b086      	sub	sp, #24
 8002164:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002166:	f107 0308 	add.w	r3, r7, #8
 800216a:	2200      	movs	r2, #0
 800216c:	601a      	str	r2, [r3, #0]
 800216e:	605a      	str	r2, [r3, #4]
 8002170:	609a      	str	r2, [r3, #8]
 8002172:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002174:	463b      	mov	r3, r7
 8002176:	2200      	movs	r2, #0
 8002178:	601a      	str	r2, [r3, #0]
 800217a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800217c:	4b1d      	ldr	r3, [pc, #116]	; (80021f4 <MX_TIM2_Init+0x94>)
 800217e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002182:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7999;
 8002184:	4b1b      	ldr	r3, [pc, #108]	; (80021f4 <MX_TIM2_Init+0x94>)
 8002186:	f641 723f 	movw	r2, #7999	; 0x1f3f
 800218a:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800218c:	4b19      	ldr	r3, [pc, #100]	; (80021f4 <MX_TIM2_Init+0x94>)
 800218e:	2200      	movs	r2, #0
 8002190:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 49;
 8002192:	4b18      	ldr	r3, [pc, #96]	; (80021f4 <MX_TIM2_Init+0x94>)
 8002194:	2231      	movs	r2, #49	; 0x31
 8002196:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002198:	4b16      	ldr	r3, [pc, #88]	; (80021f4 <MX_TIM2_Init+0x94>)
 800219a:	2200      	movs	r2, #0
 800219c:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800219e:	4b15      	ldr	r3, [pc, #84]	; (80021f4 <MX_TIM2_Init+0x94>)
 80021a0:	2280      	movs	r2, #128	; 0x80
 80021a2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80021a4:	4813      	ldr	r0, [pc, #76]	; (80021f4 <MX_TIM2_Init+0x94>)
 80021a6:	f002 f921 	bl	80043ec <HAL_TIM_Base_Init>
 80021aa:	4603      	mov	r3, r0
 80021ac:	2b00      	cmp	r3, #0
 80021ae:	d001      	beq.n	80021b4 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 80021b0:	f000 f8d0 	bl	8002354 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80021b4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80021b8:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80021ba:	f107 0308 	add.w	r3, r7, #8
 80021be:	4619      	mov	r1, r3
 80021c0:	480c      	ldr	r0, [pc, #48]	; (80021f4 <MX_TIM2_Init+0x94>)
 80021c2:	f002 fabd 	bl	8004740 <HAL_TIM_ConfigClockSource>
 80021c6:	4603      	mov	r3, r0
 80021c8:	2b00      	cmp	r3, #0
 80021ca:	d001      	beq.n	80021d0 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 80021cc:	f000 f8c2 	bl	8002354 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80021d0:	2300      	movs	r3, #0
 80021d2:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80021d4:	2300      	movs	r3, #0
 80021d6:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80021d8:	463b      	mov	r3, r7
 80021da:	4619      	mov	r1, r3
 80021dc:	4805      	ldr	r0, [pc, #20]	; (80021f4 <MX_TIM2_Init+0x94>)
 80021de:	f002 fc8f 	bl	8004b00 <HAL_TIMEx_MasterConfigSynchronization>
 80021e2:	4603      	mov	r3, r0
 80021e4:	2b00      	cmp	r3, #0
 80021e6:	d001      	beq.n	80021ec <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 80021e8:	f000 f8b4 	bl	8002354 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80021ec:	bf00      	nop
 80021ee:	3718      	adds	r7, #24
 80021f0:	46bd      	mov	sp, r7
 80021f2:	bd80      	pop	{r7, pc}
 80021f4:	200002b8 	.word	0x200002b8

080021f8 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80021f8:	b580      	push	{r7, lr}
 80021fa:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80021fc:	4b11      	ldr	r3, [pc, #68]	; (8002244 <MX_USART1_UART_Init+0x4c>)
 80021fe:	4a12      	ldr	r2, [pc, #72]	; (8002248 <MX_USART1_UART_Init+0x50>)
 8002200:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 8002202:	4b10      	ldr	r3, [pc, #64]	; (8002244 <MX_USART1_UART_Init+0x4c>)
 8002204:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8002208:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800220a:	4b0e      	ldr	r3, [pc, #56]	; (8002244 <MX_USART1_UART_Init+0x4c>)
 800220c:	2200      	movs	r2, #0
 800220e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8002210:	4b0c      	ldr	r3, [pc, #48]	; (8002244 <MX_USART1_UART_Init+0x4c>)
 8002212:	2200      	movs	r2, #0
 8002214:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8002216:	4b0b      	ldr	r3, [pc, #44]	; (8002244 <MX_USART1_UART_Init+0x4c>)
 8002218:	2200      	movs	r2, #0
 800221a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 800221c:	4b09      	ldr	r3, [pc, #36]	; (8002244 <MX_USART1_UART_Init+0x4c>)
 800221e:	220c      	movs	r2, #12
 8002220:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002222:	4b08      	ldr	r3, [pc, #32]	; (8002244 <MX_USART1_UART_Init+0x4c>)
 8002224:	2200      	movs	r2, #0
 8002226:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002228:	4b06      	ldr	r3, [pc, #24]	; (8002244 <MX_USART1_UART_Init+0x4c>)
 800222a:	2200      	movs	r2, #0
 800222c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800222e:	4805      	ldr	r0, [pc, #20]	; (8002244 <MX_USART1_UART_Init+0x4c>)
 8002230:	f002 fcd6 	bl	8004be0 <HAL_UART_Init>
 8002234:	4603      	mov	r3, r0
 8002236:	2b00      	cmp	r3, #0
 8002238:	d001      	beq.n	800223e <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 800223a:	f000 f88b 	bl	8002354 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800223e:	bf00      	nop
 8002240:	bd80      	pop	{r7, pc}
 8002242:	bf00      	nop
 8002244:	20000300 	.word	0x20000300
 8002248:	40013800 	.word	0x40013800

0800224c <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 800224c:	b580      	push	{r7, lr}
 800224e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8002250:	4b11      	ldr	r3, [pc, #68]	; (8002298 <MX_USART2_UART_Init+0x4c>)
 8002252:	4a12      	ldr	r2, [pc, #72]	; (800229c <MX_USART2_UART_Init+0x50>)
 8002254:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8002256:	4b10      	ldr	r3, [pc, #64]	; (8002298 <MX_USART2_UART_Init+0x4c>)
 8002258:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 800225c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800225e:	4b0e      	ldr	r3, [pc, #56]	; (8002298 <MX_USART2_UART_Init+0x4c>)
 8002260:	2200      	movs	r2, #0
 8002262:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002264:	4b0c      	ldr	r3, [pc, #48]	; (8002298 <MX_USART2_UART_Init+0x4c>)
 8002266:	2200      	movs	r2, #0
 8002268:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800226a:	4b0b      	ldr	r3, [pc, #44]	; (8002298 <MX_USART2_UART_Init+0x4c>)
 800226c:	2200      	movs	r2, #0
 800226e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002270:	4b09      	ldr	r3, [pc, #36]	; (8002298 <MX_USART2_UART_Init+0x4c>)
 8002272:	220c      	movs	r2, #12
 8002274:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002276:	4b08      	ldr	r3, [pc, #32]	; (8002298 <MX_USART2_UART_Init+0x4c>)
 8002278:	2200      	movs	r2, #0
 800227a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 800227c:	4b06      	ldr	r3, [pc, #24]	; (8002298 <MX_USART2_UART_Init+0x4c>)
 800227e:	2200      	movs	r2, #0
 8002280:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002282:	4805      	ldr	r0, [pc, #20]	; (8002298 <MX_USART2_UART_Init+0x4c>)
 8002284:	f002 fcac 	bl	8004be0 <HAL_UART_Init>
 8002288:	4603      	mov	r3, r0
 800228a:	2b00      	cmp	r3, #0
 800228c:	d001      	beq.n	8002292 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 800228e:	f000 f861 	bl	8002354 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8002292:	bf00      	nop
 8002294:	bd80      	pop	{r7, pc}
 8002296:	bf00      	nop
 8002298:	20000344 	.word	0x20000344
 800229c:	40004400 	.word	0x40004400

080022a0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80022a0:	b580      	push	{r7, lr}
 80022a2:	b088      	sub	sp, #32
 80022a4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80022a6:	f107 0310 	add.w	r3, r7, #16
 80022aa:	2200      	movs	r2, #0
 80022ac:	601a      	str	r2, [r3, #0]
 80022ae:	605a      	str	r2, [r3, #4]
 80022b0:	609a      	str	r2, [r3, #8]
 80022b2:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80022b4:	4b24      	ldr	r3, [pc, #144]	; (8002348 <MX_GPIO_Init+0xa8>)
 80022b6:	699b      	ldr	r3, [r3, #24]
 80022b8:	4a23      	ldr	r2, [pc, #140]	; (8002348 <MX_GPIO_Init+0xa8>)
 80022ba:	f043 0310 	orr.w	r3, r3, #16
 80022be:	6193      	str	r3, [r2, #24]
 80022c0:	4b21      	ldr	r3, [pc, #132]	; (8002348 <MX_GPIO_Init+0xa8>)
 80022c2:	699b      	ldr	r3, [r3, #24]
 80022c4:	f003 0310 	and.w	r3, r3, #16
 80022c8:	60fb      	str	r3, [r7, #12]
 80022ca:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80022cc:	4b1e      	ldr	r3, [pc, #120]	; (8002348 <MX_GPIO_Init+0xa8>)
 80022ce:	699b      	ldr	r3, [r3, #24]
 80022d0:	4a1d      	ldr	r2, [pc, #116]	; (8002348 <MX_GPIO_Init+0xa8>)
 80022d2:	f043 0304 	orr.w	r3, r3, #4
 80022d6:	6193      	str	r3, [r2, #24]
 80022d8:	4b1b      	ldr	r3, [pc, #108]	; (8002348 <MX_GPIO_Init+0xa8>)
 80022da:	699b      	ldr	r3, [r3, #24]
 80022dc:	f003 0304 	and.w	r3, r3, #4
 80022e0:	60bb      	str	r3, [r7, #8]
 80022e2:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80022e4:	4b18      	ldr	r3, [pc, #96]	; (8002348 <MX_GPIO_Init+0xa8>)
 80022e6:	699b      	ldr	r3, [r3, #24]
 80022e8:	4a17      	ldr	r2, [pc, #92]	; (8002348 <MX_GPIO_Init+0xa8>)
 80022ea:	f043 0308 	orr.w	r3, r3, #8
 80022ee:	6193      	str	r3, [r2, #24]
 80022f0:	4b15      	ldr	r3, [pc, #84]	; (8002348 <MX_GPIO_Init+0xa8>)
 80022f2:	699b      	ldr	r3, [r3, #24]
 80022f4:	f003 0308 	and.w	r3, r3, #8
 80022f8:	607b      	str	r3, [r7, #4]
 80022fa:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 80022fc:	2200      	movs	r2, #0
 80022fe:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002302:	4812      	ldr	r0, [pc, #72]	; (800234c <MX_GPIO_Init+0xac>)
 8002304:	f000 ffdd 	bl	80032c2 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_Pin */
  GPIO_InitStruct.Pin = LED_Pin;
 8002308:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800230c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800230e:	2301      	movs	r3, #1
 8002310:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002312:	2301      	movs	r3, #1
 8002314:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002316:	2302      	movs	r3, #2
 8002318:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 800231a:	f107 0310 	add.w	r3, r7, #16
 800231e:	4619      	mov	r1, r3
 8002320:	480a      	ldr	r0, [pc, #40]	; (800234c <MX_GPIO_Init+0xac>)
 8002322:	f000 fe33 	bl	8002f8c <HAL_GPIO_Init>

  /*Configure GPIO pin : BT0_Pin */
  GPIO_InitStruct.Pin = BT0_Pin;
 8002326:	2320      	movs	r3, #32
 8002328:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800232a:	2300      	movs	r3, #0
 800232c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800232e:	2301      	movs	r3, #1
 8002330:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(BT0_GPIO_Port, &GPIO_InitStruct);
 8002332:	f107 0310 	add.w	r3, r7, #16
 8002336:	4619      	mov	r1, r3
 8002338:	4805      	ldr	r0, [pc, #20]	; (8002350 <MX_GPIO_Init+0xb0>)
 800233a:	f000 fe27 	bl	8002f8c <HAL_GPIO_Init>

}
 800233e:	bf00      	nop
 8002340:	3720      	adds	r7, #32
 8002342:	46bd      	mov	sp, r7
 8002344:	bd80      	pop	{r7, pc}
 8002346:	bf00      	nop
 8002348:	40021000 	.word	0x40021000
 800234c:	40011000 	.word	0x40011000
 8002350:	40010800 	.word	0x40010800

08002354 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002354:	b480      	push	{r7}
 8002356:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002358:	b672      	cpsid	i
}
 800235a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800235c:	e7fe      	b.n	800235c <Error_Handler+0x8>
	...

08002360 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002360:	b480      	push	{r7}
 8002362:	b085      	sub	sp, #20
 8002364:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8002366:	4b15      	ldr	r3, [pc, #84]	; (80023bc <HAL_MspInit+0x5c>)
 8002368:	699b      	ldr	r3, [r3, #24]
 800236a:	4a14      	ldr	r2, [pc, #80]	; (80023bc <HAL_MspInit+0x5c>)
 800236c:	f043 0301 	orr.w	r3, r3, #1
 8002370:	6193      	str	r3, [r2, #24]
 8002372:	4b12      	ldr	r3, [pc, #72]	; (80023bc <HAL_MspInit+0x5c>)
 8002374:	699b      	ldr	r3, [r3, #24]
 8002376:	f003 0301 	and.w	r3, r3, #1
 800237a:	60bb      	str	r3, [r7, #8]
 800237c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 800237e:	4b0f      	ldr	r3, [pc, #60]	; (80023bc <HAL_MspInit+0x5c>)
 8002380:	69db      	ldr	r3, [r3, #28]
 8002382:	4a0e      	ldr	r2, [pc, #56]	; (80023bc <HAL_MspInit+0x5c>)
 8002384:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002388:	61d3      	str	r3, [r2, #28]
 800238a:	4b0c      	ldr	r3, [pc, #48]	; (80023bc <HAL_MspInit+0x5c>)
 800238c:	69db      	ldr	r3, [r3, #28]
 800238e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002392:	607b      	str	r3, [r7, #4]
 8002394:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8002396:	4b0a      	ldr	r3, [pc, #40]	; (80023c0 <HAL_MspInit+0x60>)
 8002398:	685b      	ldr	r3, [r3, #4]
 800239a:	60fb      	str	r3, [r7, #12]
 800239c:	68fb      	ldr	r3, [r7, #12]
 800239e:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80023a2:	60fb      	str	r3, [r7, #12]
 80023a4:	68fb      	ldr	r3, [r7, #12]
 80023a6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80023aa:	60fb      	str	r3, [r7, #12]
 80023ac:	4a04      	ldr	r2, [pc, #16]	; (80023c0 <HAL_MspInit+0x60>)
 80023ae:	68fb      	ldr	r3, [r7, #12]
 80023b0:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80023b2:	bf00      	nop
 80023b4:	3714      	adds	r7, #20
 80023b6:	46bd      	mov	sp, r7
 80023b8:	bc80      	pop	{r7}
 80023ba:	4770      	bx	lr
 80023bc:	40021000 	.word	0x40021000
 80023c0:	40010000 	.word	0x40010000

080023c4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80023c4:	b580      	push	{r7, lr}
 80023c6:	b088      	sub	sp, #32
 80023c8:	af00      	add	r7, sp, #0
 80023ca:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80023cc:	f107 0310 	add.w	r3, r7, #16
 80023d0:	2200      	movs	r2, #0
 80023d2:	601a      	str	r2, [r3, #0]
 80023d4:	605a      	str	r2, [r3, #4]
 80023d6:	609a      	str	r2, [r3, #8]
 80023d8:	60da      	str	r2, [r3, #12]
  if(hi2c->Instance==I2C1)
 80023da:	687b      	ldr	r3, [r7, #4]
 80023dc:	681b      	ldr	r3, [r3, #0]
 80023de:	4a15      	ldr	r2, [pc, #84]	; (8002434 <HAL_I2C_MspInit+0x70>)
 80023e0:	4293      	cmp	r3, r2
 80023e2:	d123      	bne.n	800242c <HAL_I2C_MspInit+0x68>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80023e4:	4b14      	ldr	r3, [pc, #80]	; (8002438 <HAL_I2C_MspInit+0x74>)
 80023e6:	699b      	ldr	r3, [r3, #24]
 80023e8:	4a13      	ldr	r2, [pc, #76]	; (8002438 <HAL_I2C_MspInit+0x74>)
 80023ea:	f043 0308 	orr.w	r3, r3, #8
 80023ee:	6193      	str	r3, [r2, #24]
 80023f0:	4b11      	ldr	r3, [pc, #68]	; (8002438 <HAL_I2C_MspInit+0x74>)
 80023f2:	699b      	ldr	r3, [r3, #24]
 80023f4:	f003 0308 	and.w	r3, r3, #8
 80023f8:	60fb      	str	r3, [r7, #12]
 80023fa:	68fb      	ldr	r3, [r7, #12]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80023fc:	23c0      	movs	r3, #192	; 0xc0
 80023fe:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002400:	2312      	movs	r3, #18
 8002402:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002404:	2303      	movs	r3, #3
 8002406:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002408:	f107 0310 	add.w	r3, r7, #16
 800240c:	4619      	mov	r1, r3
 800240e:	480b      	ldr	r0, [pc, #44]	; (800243c <HAL_I2C_MspInit+0x78>)
 8002410:	f000 fdbc 	bl	8002f8c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002414:	4b08      	ldr	r3, [pc, #32]	; (8002438 <HAL_I2C_MspInit+0x74>)
 8002416:	69db      	ldr	r3, [r3, #28]
 8002418:	4a07      	ldr	r2, [pc, #28]	; (8002438 <HAL_I2C_MspInit+0x74>)
 800241a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800241e:	61d3      	str	r3, [r2, #28]
 8002420:	4b05      	ldr	r3, [pc, #20]	; (8002438 <HAL_I2C_MspInit+0x74>)
 8002422:	69db      	ldr	r3, [r3, #28]
 8002424:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002428:	60bb      	str	r3, [r7, #8]
 800242a:	68bb      	ldr	r3, [r7, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 800242c:	bf00      	nop
 800242e:	3720      	adds	r7, #32
 8002430:	46bd      	mov	sp, r7
 8002432:	bd80      	pop	{r7, pc}
 8002434:	40005400 	.word	0x40005400
 8002438:	40021000 	.word	0x40021000
 800243c:	40010c00 	.word	0x40010c00

08002440 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002440:	b580      	push	{r7, lr}
 8002442:	b084      	sub	sp, #16
 8002444:	af00      	add	r7, sp, #0
 8002446:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8002448:	687b      	ldr	r3, [r7, #4]
 800244a:	681b      	ldr	r3, [r3, #0]
 800244c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002450:	d113      	bne.n	800247a <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002452:	4b0c      	ldr	r3, [pc, #48]	; (8002484 <HAL_TIM_Base_MspInit+0x44>)
 8002454:	69db      	ldr	r3, [r3, #28]
 8002456:	4a0b      	ldr	r2, [pc, #44]	; (8002484 <HAL_TIM_Base_MspInit+0x44>)
 8002458:	f043 0301 	orr.w	r3, r3, #1
 800245c:	61d3      	str	r3, [r2, #28]
 800245e:	4b09      	ldr	r3, [pc, #36]	; (8002484 <HAL_TIM_Base_MspInit+0x44>)
 8002460:	69db      	ldr	r3, [r3, #28]
 8002462:	f003 0301 	and.w	r3, r3, #1
 8002466:	60fb      	str	r3, [r7, #12]
 8002468:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 800246a:	2200      	movs	r2, #0
 800246c:	2100      	movs	r1, #0
 800246e:	201c      	movs	r0, #28
 8002470:	f000 fca5 	bl	8002dbe <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002474:	201c      	movs	r0, #28
 8002476:	f000 fcbe 	bl	8002df6 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 800247a:	bf00      	nop
 800247c:	3710      	adds	r7, #16
 800247e:	46bd      	mov	sp, r7
 8002480:	bd80      	pop	{r7, pc}
 8002482:	bf00      	nop
 8002484:	40021000 	.word	0x40021000

08002488 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002488:	b580      	push	{r7, lr}
 800248a:	b08a      	sub	sp, #40	; 0x28
 800248c:	af00      	add	r7, sp, #0
 800248e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002490:	f107 0318 	add.w	r3, r7, #24
 8002494:	2200      	movs	r2, #0
 8002496:	601a      	str	r2, [r3, #0]
 8002498:	605a      	str	r2, [r3, #4]
 800249a:	609a      	str	r2, [r3, #8]
 800249c:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART1)
 800249e:	687b      	ldr	r3, [r7, #4]
 80024a0:	681b      	ldr	r3, [r3, #0]
 80024a2:	4a3f      	ldr	r2, [pc, #252]	; (80025a0 <HAL_UART_MspInit+0x118>)
 80024a4:	4293      	cmp	r3, r2
 80024a6:	d13a      	bne.n	800251e <HAL_UART_MspInit+0x96>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80024a8:	4b3e      	ldr	r3, [pc, #248]	; (80025a4 <HAL_UART_MspInit+0x11c>)
 80024aa:	699b      	ldr	r3, [r3, #24]
 80024ac:	4a3d      	ldr	r2, [pc, #244]	; (80025a4 <HAL_UART_MspInit+0x11c>)
 80024ae:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80024b2:	6193      	str	r3, [r2, #24]
 80024b4:	4b3b      	ldr	r3, [pc, #236]	; (80025a4 <HAL_UART_MspInit+0x11c>)
 80024b6:	699b      	ldr	r3, [r3, #24]
 80024b8:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80024bc:	617b      	str	r3, [r7, #20]
 80024be:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024c0:	4b38      	ldr	r3, [pc, #224]	; (80025a4 <HAL_UART_MspInit+0x11c>)
 80024c2:	699b      	ldr	r3, [r3, #24]
 80024c4:	4a37      	ldr	r2, [pc, #220]	; (80025a4 <HAL_UART_MspInit+0x11c>)
 80024c6:	f043 0304 	orr.w	r3, r3, #4
 80024ca:	6193      	str	r3, [r2, #24]
 80024cc:	4b35      	ldr	r3, [pc, #212]	; (80025a4 <HAL_UART_MspInit+0x11c>)
 80024ce:	699b      	ldr	r3, [r3, #24]
 80024d0:	f003 0304 	and.w	r3, r3, #4
 80024d4:	613b      	str	r3, [r7, #16]
 80024d6:	693b      	ldr	r3, [r7, #16]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80024d8:	f44f 7300 	mov.w	r3, #512	; 0x200
 80024dc:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024de:	2302      	movs	r3, #2
 80024e0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80024e2:	2303      	movs	r3, #3
 80024e4:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024e6:	f107 0318 	add.w	r3, r7, #24
 80024ea:	4619      	mov	r1, r3
 80024ec:	482e      	ldr	r0, [pc, #184]	; (80025a8 <HAL_UART_MspInit+0x120>)
 80024ee:	f000 fd4d 	bl	8002f8c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80024f2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80024f6:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80024f8:	2300      	movs	r3, #0
 80024fa:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024fc:	2300      	movs	r3, #0
 80024fe:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002500:	f107 0318 	add.w	r3, r7, #24
 8002504:	4619      	mov	r1, r3
 8002506:	4828      	ldr	r0, [pc, #160]	; (80025a8 <HAL_UART_MspInit+0x120>)
 8002508:	f000 fd40 	bl	8002f8c <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 800250c:	2200      	movs	r2, #0
 800250e:	2100      	movs	r1, #0
 8002510:	2025      	movs	r0, #37	; 0x25
 8002512:	f000 fc54 	bl	8002dbe <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8002516:	2025      	movs	r0, #37	; 0x25
 8002518:	f000 fc6d 	bl	8002df6 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 800251c:	e03c      	b.n	8002598 <HAL_UART_MspInit+0x110>
  else if(huart->Instance==USART2)
 800251e:	687b      	ldr	r3, [r7, #4]
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	4a22      	ldr	r2, [pc, #136]	; (80025ac <HAL_UART_MspInit+0x124>)
 8002524:	4293      	cmp	r3, r2
 8002526:	d137      	bne.n	8002598 <HAL_UART_MspInit+0x110>
    __HAL_RCC_USART2_CLK_ENABLE();
 8002528:	4b1e      	ldr	r3, [pc, #120]	; (80025a4 <HAL_UART_MspInit+0x11c>)
 800252a:	69db      	ldr	r3, [r3, #28]
 800252c:	4a1d      	ldr	r2, [pc, #116]	; (80025a4 <HAL_UART_MspInit+0x11c>)
 800252e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002532:	61d3      	str	r3, [r2, #28]
 8002534:	4b1b      	ldr	r3, [pc, #108]	; (80025a4 <HAL_UART_MspInit+0x11c>)
 8002536:	69db      	ldr	r3, [r3, #28]
 8002538:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800253c:	60fb      	str	r3, [r7, #12]
 800253e:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002540:	4b18      	ldr	r3, [pc, #96]	; (80025a4 <HAL_UART_MspInit+0x11c>)
 8002542:	699b      	ldr	r3, [r3, #24]
 8002544:	4a17      	ldr	r2, [pc, #92]	; (80025a4 <HAL_UART_MspInit+0x11c>)
 8002546:	f043 0304 	orr.w	r3, r3, #4
 800254a:	6193      	str	r3, [r2, #24]
 800254c:	4b15      	ldr	r3, [pc, #84]	; (80025a4 <HAL_UART_MspInit+0x11c>)
 800254e:	699b      	ldr	r3, [r3, #24]
 8002550:	f003 0304 	and.w	r3, r3, #4
 8002554:	60bb      	str	r3, [r7, #8]
 8002556:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8002558:	2304      	movs	r3, #4
 800255a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800255c:	2302      	movs	r3, #2
 800255e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002560:	2303      	movs	r3, #3
 8002562:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002564:	f107 0318 	add.w	r3, r7, #24
 8002568:	4619      	mov	r1, r3
 800256a:	480f      	ldr	r0, [pc, #60]	; (80025a8 <HAL_UART_MspInit+0x120>)
 800256c:	f000 fd0e 	bl	8002f8c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002570:	2308      	movs	r3, #8
 8002572:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002574:	2300      	movs	r3, #0
 8002576:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002578:	2300      	movs	r3, #0
 800257a:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800257c:	f107 0318 	add.w	r3, r7, #24
 8002580:	4619      	mov	r1, r3
 8002582:	4809      	ldr	r0, [pc, #36]	; (80025a8 <HAL_UART_MspInit+0x120>)
 8002584:	f000 fd02 	bl	8002f8c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8002588:	2200      	movs	r2, #0
 800258a:	2100      	movs	r1, #0
 800258c:	2026      	movs	r0, #38	; 0x26
 800258e:	f000 fc16 	bl	8002dbe <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002592:	2026      	movs	r0, #38	; 0x26
 8002594:	f000 fc2f 	bl	8002df6 <HAL_NVIC_EnableIRQ>
}
 8002598:	bf00      	nop
 800259a:	3728      	adds	r7, #40	; 0x28
 800259c:	46bd      	mov	sp, r7
 800259e:	bd80      	pop	{r7, pc}
 80025a0:	40013800 	.word	0x40013800
 80025a4:	40021000 	.word	0x40021000
 80025a8:	40010800 	.word	0x40010800
 80025ac:	40004400 	.word	0x40004400

080025b0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80025b0:	b480      	push	{r7}
 80025b2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80025b4:	e7fe      	b.n	80025b4 <NMI_Handler+0x4>

080025b6 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80025b6:	b480      	push	{r7}
 80025b8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80025ba:	e7fe      	b.n	80025ba <HardFault_Handler+0x4>

080025bc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80025bc:	b480      	push	{r7}
 80025be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80025c0:	e7fe      	b.n	80025c0 <MemManage_Handler+0x4>

080025c2 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80025c2:	b480      	push	{r7}
 80025c4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80025c6:	e7fe      	b.n	80025c6 <BusFault_Handler+0x4>

080025c8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80025c8:	b480      	push	{r7}
 80025ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80025cc:	e7fe      	b.n	80025cc <UsageFault_Handler+0x4>

080025ce <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80025ce:	b480      	push	{r7}
 80025d0:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80025d2:	bf00      	nop
 80025d4:	46bd      	mov	sp, r7
 80025d6:	bc80      	pop	{r7}
 80025d8:	4770      	bx	lr

080025da <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80025da:	b480      	push	{r7}
 80025dc:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80025de:	bf00      	nop
 80025e0:	46bd      	mov	sp, r7
 80025e2:	bc80      	pop	{r7}
 80025e4:	4770      	bx	lr

080025e6 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80025e6:	b480      	push	{r7}
 80025e8:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80025ea:	bf00      	nop
 80025ec:	46bd      	mov	sp, r7
 80025ee:	bc80      	pop	{r7}
 80025f0:	4770      	bx	lr

080025f2 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80025f2:	b580      	push	{r7, lr}
 80025f4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80025f6:	f000 facb 	bl	8002b90 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80025fa:	bf00      	nop
 80025fc:	bd80      	pop	{r7, pc}
	...

08002600 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8002600:	b580      	push	{r7, lr}
 8002602:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8002604:	4802      	ldr	r0, [pc, #8]	; (8002610 <TIM2_IRQHandler+0x10>)
 8002606:	f001 ff93 	bl	8004530 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 800260a:	bf00      	nop
 800260c:	bd80      	pop	{r7, pc}
 800260e:	bf00      	nop
 8002610:	200002b8 	.word	0x200002b8

08002614 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8002614:	b580      	push	{r7, lr}
 8002616:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8002618:	4802      	ldr	r0, [pc, #8]	; (8002624 <USART1_IRQHandler+0x10>)
 800261a:	f002 fbf1 	bl	8004e00 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 800261e:	bf00      	nop
 8002620:	bd80      	pop	{r7, pc}
 8002622:	bf00      	nop
 8002624:	20000300 	.word	0x20000300

08002628 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8002628:	b580      	push	{r7, lr}
 800262a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 800262c:	4802      	ldr	r0, [pc, #8]	; (8002638 <USART2_IRQHandler+0x10>)
 800262e:	f002 fbe7 	bl	8004e00 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8002632:	bf00      	nop
 8002634:	bd80      	pop	{r7, pc}
 8002636:	bf00      	nop
 8002638:	20000344 	.word	0x20000344

0800263c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800263c:	b480      	push	{r7}
 800263e:	af00      	add	r7, sp, #0
  return 1;
 8002640:	2301      	movs	r3, #1
}
 8002642:	4618      	mov	r0, r3
 8002644:	46bd      	mov	sp, r7
 8002646:	bc80      	pop	{r7}
 8002648:	4770      	bx	lr

0800264a <_kill>:

int _kill(int pid, int sig)
{
 800264a:	b580      	push	{r7, lr}
 800264c:	b082      	sub	sp, #8
 800264e:	af00      	add	r7, sp, #0
 8002650:	6078      	str	r0, [r7, #4]
 8002652:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002654:	f003 f804 	bl	8005660 <__errno>
 8002658:	4603      	mov	r3, r0
 800265a:	2216      	movs	r2, #22
 800265c:	601a      	str	r2, [r3, #0]
  return -1;
 800265e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002662:	4618      	mov	r0, r3
 8002664:	3708      	adds	r7, #8
 8002666:	46bd      	mov	sp, r7
 8002668:	bd80      	pop	{r7, pc}

0800266a <_exit>:

void _exit (int status)
{
 800266a:	b580      	push	{r7, lr}
 800266c:	b082      	sub	sp, #8
 800266e:	af00      	add	r7, sp, #0
 8002670:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002672:	f04f 31ff 	mov.w	r1, #4294967295
 8002676:	6878      	ldr	r0, [r7, #4]
 8002678:	f7ff ffe7 	bl	800264a <_kill>
  while (1) {}    /* Make sure we hang here */
 800267c:	e7fe      	b.n	800267c <_exit+0x12>

0800267e <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800267e:	b580      	push	{r7, lr}
 8002680:	b086      	sub	sp, #24
 8002682:	af00      	add	r7, sp, #0
 8002684:	60f8      	str	r0, [r7, #12]
 8002686:	60b9      	str	r1, [r7, #8]
 8002688:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800268a:	2300      	movs	r3, #0
 800268c:	617b      	str	r3, [r7, #20]
 800268e:	e00a      	b.n	80026a6 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002690:	f3af 8000 	nop.w
 8002694:	4601      	mov	r1, r0
 8002696:	68bb      	ldr	r3, [r7, #8]
 8002698:	1c5a      	adds	r2, r3, #1
 800269a:	60ba      	str	r2, [r7, #8]
 800269c:	b2ca      	uxtb	r2, r1
 800269e:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80026a0:	697b      	ldr	r3, [r7, #20]
 80026a2:	3301      	adds	r3, #1
 80026a4:	617b      	str	r3, [r7, #20]
 80026a6:	697a      	ldr	r2, [r7, #20]
 80026a8:	687b      	ldr	r3, [r7, #4]
 80026aa:	429a      	cmp	r2, r3
 80026ac:	dbf0      	blt.n	8002690 <_read+0x12>
  }

  return len;
 80026ae:	687b      	ldr	r3, [r7, #4]
}
 80026b0:	4618      	mov	r0, r3
 80026b2:	3718      	adds	r7, #24
 80026b4:	46bd      	mov	sp, r7
 80026b6:	bd80      	pop	{r7, pc}

080026b8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80026b8:	b580      	push	{r7, lr}
 80026ba:	b086      	sub	sp, #24
 80026bc:	af00      	add	r7, sp, #0
 80026be:	60f8      	str	r0, [r7, #12]
 80026c0:	60b9      	str	r1, [r7, #8]
 80026c2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80026c4:	2300      	movs	r3, #0
 80026c6:	617b      	str	r3, [r7, #20]
 80026c8:	e009      	b.n	80026de <_write+0x26>
  {
    __io_putchar(*ptr++);
 80026ca:	68bb      	ldr	r3, [r7, #8]
 80026cc:	1c5a      	adds	r2, r3, #1
 80026ce:	60ba      	str	r2, [r7, #8]
 80026d0:	781b      	ldrb	r3, [r3, #0]
 80026d2:	4618      	mov	r0, r3
 80026d4:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80026d8:	697b      	ldr	r3, [r7, #20]
 80026da:	3301      	adds	r3, #1
 80026dc:	617b      	str	r3, [r7, #20]
 80026de:	697a      	ldr	r2, [r7, #20]
 80026e0:	687b      	ldr	r3, [r7, #4]
 80026e2:	429a      	cmp	r2, r3
 80026e4:	dbf1      	blt.n	80026ca <_write+0x12>
  }
  return len;
 80026e6:	687b      	ldr	r3, [r7, #4]
}
 80026e8:	4618      	mov	r0, r3
 80026ea:	3718      	adds	r7, #24
 80026ec:	46bd      	mov	sp, r7
 80026ee:	bd80      	pop	{r7, pc}

080026f0 <_close>:

int _close(int file)
{
 80026f0:	b480      	push	{r7}
 80026f2:	b083      	sub	sp, #12
 80026f4:	af00      	add	r7, sp, #0
 80026f6:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80026f8:	f04f 33ff 	mov.w	r3, #4294967295
}
 80026fc:	4618      	mov	r0, r3
 80026fe:	370c      	adds	r7, #12
 8002700:	46bd      	mov	sp, r7
 8002702:	bc80      	pop	{r7}
 8002704:	4770      	bx	lr

08002706 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002706:	b480      	push	{r7}
 8002708:	b083      	sub	sp, #12
 800270a:	af00      	add	r7, sp, #0
 800270c:	6078      	str	r0, [r7, #4]
 800270e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002710:	683b      	ldr	r3, [r7, #0]
 8002712:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002716:	605a      	str	r2, [r3, #4]
  return 0;
 8002718:	2300      	movs	r3, #0
}
 800271a:	4618      	mov	r0, r3
 800271c:	370c      	adds	r7, #12
 800271e:	46bd      	mov	sp, r7
 8002720:	bc80      	pop	{r7}
 8002722:	4770      	bx	lr

08002724 <_isatty>:

int _isatty(int file)
{
 8002724:	b480      	push	{r7}
 8002726:	b083      	sub	sp, #12
 8002728:	af00      	add	r7, sp, #0
 800272a:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800272c:	2301      	movs	r3, #1
}
 800272e:	4618      	mov	r0, r3
 8002730:	370c      	adds	r7, #12
 8002732:	46bd      	mov	sp, r7
 8002734:	bc80      	pop	{r7}
 8002736:	4770      	bx	lr

08002738 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002738:	b480      	push	{r7}
 800273a:	b085      	sub	sp, #20
 800273c:	af00      	add	r7, sp, #0
 800273e:	60f8      	str	r0, [r7, #12]
 8002740:	60b9      	str	r1, [r7, #8]
 8002742:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002744:	2300      	movs	r3, #0
}
 8002746:	4618      	mov	r0, r3
 8002748:	3714      	adds	r7, #20
 800274a:	46bd      	mov	sp, r7
 800274c:	bc80      	pop	{r7}
 800274e:	4770      	bx	lr

08002750 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002750:	b580      	push	{r7, lr}
 8002752:	b086      	sub	sp, #24
 8002754:	af00      	add	r7, sp, #0
 8002756:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002758:	4a14      	ldr	r2, [pc, #80]	; (80027ac <_sbrk+0x5c>)
 800275a:	4b15      	ldr	r3, [pc, #84]	; (80027b0 <_sbrk+0x60>)
 800275c:	1ad3      	subs	r3, r2, r3
 800275e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002760:	697b      	ldr	r3, [r7, #20]
 8002762:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002764:	4b13      	ldr	r3, [pc, #76]	; (80027b4 <_sbrk+0x64>)
 8002766:	681b      	ldr	r3, [r3, #0]
 8002768:	2b00      	cmp	r3, #0
 800276a:	d102      	bne.n	8002772 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800276c:	4b11      	ldr	r3, [pc, #68]	; (80027b4 <_sbrk+0x64>)
 800276e:	4a12      	ldr	r2, [pc, #72]	; (80027b8 <_sbrk+0x68>)
 8002770:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002772:	4b10      	ldr	r3, [pc, #64]	; (80027b4 <_sbrk+0x64>)
 8002774:	681a      	ldr	r2, [r3, #0]
 8002776:	687b      	ldr	r3, [r7, #4]
 8002778:	4413      	add	r3, r2
 800277a:	693a      	ldr	r2, [r7, #16]
 800277c:	429a      	cmp	r2, r3
 800277e:	d207      	bcs.n	8002790 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002780:	f002 ff6e 	bl	8005660 <__errno>
 8002784:	4603      	mov	r3, r0
 8002786:	220c      	movs	r2, #12
 8002788:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800278a:	f04f 33ff 	mov.w	r3, #4294967295
 800278e:	e009      	b.n	80027a4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002790:	4b08      	ldr	r3, [pc, #32]	; (80027b4 <_sbrk+0x64>)
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002796:	4b07      	ldr	r3, [pc, #28]	; (80027b4 <_sbrk+0x64>)
 8002798:	681a      	ldr	r2, [r3, #0]
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	4413      	add	r3, r2
 800279e:	4a05      	ldr	r2, [pc, #20]	; (80027b4 <_sbrk+0x64>)
 80027a0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80027a2:	68fb      	ldr	r3, [r7, #12]
}
 80027a4:	4618      	mov	r0, r3
 80027a6:	3718      	adds	r7, #24
 80027a8:	46bd      	mov	sp, r7
 80027aa:	bd80      	pop	{r7, pc}
 80027ac:	20005000 	.word	0x20005000
 80027b0:	00000400 	.word	0x00000400
 80027b4:	20000388 	.word	0x20000388
 80027b8:	20000480 	.word	0x20000480

080027bc <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80027bc:	b480      	push	{r7}
 80027be:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80027c0:	bf00      	nop
 80027c2:	46bd      	mov	sp, r7
 80027c4:	bc80      	pop	{r7}
 80027c6:	4770      	bx	lr

080027c8 <RunSoftwareTimer>:

static uint8_t MUL_timer		= 1;
static uint8_t flag_timer		= 0;
static uint8_t counter_timer 	= 0;

void RunSoftwareTimer(void){
 80027c8:	b480      	push	{r7}
 80027ca:	af00      	add	r7, sp, #0
	if(counter_timer > 0){
 80027cc:	4b0c      	ldr	r3, [pc, #48]	; (8002800 <RunSoftwareTimer+0x38>)
 80027ce:	781b      	ldrb	r3, [r3, #0]
 80027d0:	2b00      	cmp	r3, #0
 80027d2:	d010      	beq.n	80027f6 <RunSoftwareTimer+0x2e>
		counter_timer--;
 80027d4:	4b0a      	ldr	r3, [pc, #40]	; (8002800 <RunSoftwareTimer+0x38>)
 80027d6:	781b      	ldrb	r3, [r3, #0]
 80027d8:	3b01      	subs	r3, #1
 80027da:	b2da      	uxtb	r2, r3
 80027dc:	4b08      	ldr	r3, [pc, #32]	; (8002800 <RunSoftwareTimer+0x38>)
 80027de:	701a      	strb	r2, [r3, #0]
		if(counter_timer == 0){
 80027e0:	4b07      	ldr	r3, [pc, #28]	; (8002800 <RunSoftwareTimer+0x38>)
 80027e2:	781b      	ldrb	r3, [r3, #0]
 80027e4:	2b00      	cmp	r3, #0
 80027e6:	d106      	bne.n	80027f6 <RunSoftwareTimer+0x2e>
			counter_timer = MUL_timer;
 80027e8:	4b06      	ldr	r3, [pc, #24]	; (8002804 <RunSoftwareTimer+0x3c>)
 80027ea:	781a      	ldrb	r2, [r3, #0]
 80027ec:	4b04      	ldr	r3, [pc, #16]	; (8002800 <RunSoftwareTimer+0x38>)
 80027ee:	701a      	strb	r2, [r3, #0]
			flag_timer = 1;
 80027f0:	4b05      	ldr	r3, [pc, #20]	; (8002808 <RunSoftwareTimer+0x40>)
 80027f2:	2201      	movs	r2, #1
 80027f4:	701a      	strb	r2, [r3, #0]
		}
	}
}
 80027f6:	bf00      	nop
 80027f8:	46bd      	mov	sp, r7
 80027fa:	bc80      	pop	{r7}
 80027fc:	4770      	bx	lr
 80027fe:	bf00      	nop
 8002800:	20000391 	.word	0x20000391
 8002804:	2000000d 	.word	0x2000000d
 8002808:	20000390 	.word	0x20000390

0800280c <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 800280c:	b580      	push	{r7, lr}
 800280e:	b082      	sub	sp, #8
 8002810:	af00      	add	r7, sp, #0
 8002812:	6078      	str	r0, [r7, #4]
	if(htim->Instance == stimer->Instance) {
 8002814:	687b      	ldr	r3, [r7, #4]
 8002816:	681a      	ldr	r2, [r3, #0]
 8002818:	4b05      	ldr	r3, [pc, #20]	; (8002830 <HAL_TIM_PeriodElapsedCallback+0x24>)
 800281a:	681b      	ldr	r3, [r3, #0]
 800281c:	681b      	ldr	r3, [r3, #0]
 800281e:	429a      	cmp	r2, r3
 8002820:	d101      	bne.n	8002826 <HAL_TIM_PeriodElapsedCallback+0x1a>
		RunSoftwareTimer();
 8002822:	f7ff ffd1 	bl	80027c8 <RunSoftwareTimer>
	}
}
 8002826:	bf00      	nop
 8002828:	3708      	adds	r7, #8
 800282a:	46bd      	mov	sp, r7
 800282c:	bd80      	pop	{r7, pc}
 800282e:	bf00      	nop
 8002830:	2000038c 	.word	0x2000038c

08002834 <TM_Init>:


//==================HIGH LEVEL FUNCTION==================//
void TM_Init(TIM_HandleTypeDef* htim){
 8002834:	b580      	push	{r7, lr}
 8002836:	b082      	sub	sp, #8
 8002838:	af00      	add	r7, sp, #0
 800283a:	6078      	str	r0, [r7, #4]
	stimer = htim;
 800283c:	4a09      	ldr	r2, [pc, #36]	; (8002864 <TM_Init+0x30>)
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	6013      	str	r3, [r2, #0]
	counter_timer = MUL_timer;
 8002842:	4b09      	ldr	r3, [pc, #36]	; (8002868 <TM_Init+0x34>)
 8002844:	781a      	ldrb	r2, [r3, #0]
 8002846:	4b09      	ldr	r3, [pc, #36]	; (800286c <TM_Init+0x38>)
 8002848:	701a      	strb	r2, [r3, #0]
	flag_timer = 0;
 800284a:	4b09      	ldr	r3, [pc, #36]	; (8002870 <TM_Init+0x3c>)
 800284c:	2200      	movs	r2, #0
 800284e:	701a      	strb	r2, [r3, #0]

	HAL_TIM_Base_Start_IT(stimer);
 8002850:	4b04      	ldr	r3, [pc, #16]	; (8002864 <TM_Init+0x30>)
 8002852:	681b      	ldr	r3, [r3, #0]
 8002854:	4618      	mov	r0, r3
 8002856:	f001 fe19 	bl	800448c <HAL_TIM_Base_Start_IT>
}
 800285a:	bf00      	nop
 800285c:	3708      	adds	r7, #8
 800285e:	46bd      	mov	sp, r7
 8002860:	bd80      	pop	{r7, pc}
 8002862:	bf00      	nop
 8002864:	2000038c 	.word	0x2000038c
 8002868:	2000000d 	.word	0x2000000d
 800286c:	20000391 	.word	0x20000391
 8002870:	20000390 	.word	0x20000390

08002874 <TM_SetTime>:

void TM_SetTime(uint16_t duration){
 8002874:	b480      	push	{r7}
 8002876:	b083      	sub	sp, #12
 8002878:	af00      	add	r7, sp, #0
 800287a:	4603      	mov	r3, r0
 800287c:	80fb      	strh	r3, [r7, #6]
	MUL_timer = duration / TIME_CYCLE;
 800287e:	88fb      	ldrh	r3, [r7, #6]
 8002880:	4a09      	ldr	r2, [pc, #36]	; (80028a8 <TM_SetTime+0x34>)
 8002882:	7812      	ldrb	r2, [r2, #0]
 8002884:	fb93 f3f2 	sdiv	r3, r3, r2
 8002888:	b2da      	uxtb	r2, r3
 800288a:	4b08      	ldr	r3, [pc, #32]	; (80028ac <TM_SetTime+0x38>)
 800288c:	701a      	strb	r2, [r3, #0]
	counter_timer = MUL_timer;
 800288e:	4b07      	ldr	r3, [pc, #28]	; (80028ac <TM_SetTime+0x38>)
 8002890:	781a      	ldrb	r2, [r3, #0]
 8002892:	4b07      	ldr	r3, [pc, #28]	; (80028b0 <TM_SetTime+0x3c>)
 8002894:	701a      	strb	r2, [r3, #0]
	flag_timer = 0;
 8002896:	4b07      	ldr	r3, [pc, #28]	; (80028b4 <TM_SetTime+0x40>)
 8002898:	2200      	movs	r2, #0
 800289a:	701a      	strb	r2, [r3, #0]
}
 800289c:	bf00      	nop
 800289e:	370c      	adds	r7, #12
 80028a0:	46bd      	mov	sp, r7
 80028a2:	bc80      	pop	{r7}
 80028a4:	4770      	bx	lr
 80028a6:	bf00      	nop
 80028a8:	2000000c 	.word	0x2000000c
 80028ac:	2000000d 	.word	0x2000000d
 80028b0:	20000391 	.word	0x20000391
 80028b4:	20000390 	.word	0x20000390

080028b8 <TM_IsFlag>:

uint8_t TM_IsFlag(void){
 80028b8:	b480      	push	{r7}
 80028ba:	af00      	add	r7, sp, #0
	if(flag_timer) {
 80028bc:	4b06      	ldr	r3, [pc, #24]	; (80028d8 <TM_IsFlag+0x20>)
 80028be:	781b      	ldrb	r3, [r3, #0]
 80028c0:	2b00      	cmp	r3, #0
 80028c2:	d004      	beq.n	80028ce <TM_IsFlag+0x16>
		flag_timer = 0;
 80028c4:	4b04      	ldr	r3, [pc, #16]	; (80028d8 <TM_IsFlag+0x20>)
 80028c6:	2200      	movs	r2, #0
 80028c8:	701a      	strb	r2, [r3, #0]
		return 1;
 80028ca:	2301      	movs	r3, #1
 80028cc:	e000      	b.n	80028d0 <TM_IsFlag+0x18>
	}
	return 0;
 80028ce:	2300      	movs	r3, #0
}
 80028d0:	4618      	mov	r0, r3
 80028d2:	46bd      	mov	sp, r7
 80028d4:	bc80      	pop	{r7}
 80028d6:	4770      	bx	lr
 80028d8:	20000390 	.word	0x20000390

080028dc <HAL_UART_RxCpltCallback>:
uint8_t byte_esp_received, byte_lora_received;
uint8_t flag_esp_received_str, flag_lora_received_str;



void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 80028dc:	b580      	push	{r7, lr}
 80028de:	b082      	sub	sp, #8
 80028e0:	af00      	add	r7, sp, #0
 80028e2:	6078      	str	r0, [r7, #4]
	if(huart->Instance == u_esp->Instance){
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	681a      	ldr	r2, [r3, #0]
 80028e8:	4b32      	ldr	r3, [pc, #200]	; (80029b4 <HAL_UART_RxCpltCallback+0xd8>)
 80028ea:	681b      	ldr	r3, [r3, #0]
 80028ec:	681b      	ldr	r3, [r3, #0]
 80028ee:	429a      	cmp	r2, r3
 80028f0:	d12a      	bne.n	8002948 <HAL_UART_RxCpltCallback+0x6c>
		if(byte_esp_received == '!'){
 80028f2:	4b31      	ldr	r3, [pc, #196]	; (80029b8 <HAL_UART_RxCpltCallback+0xdc>)
 80028f4:	781b      	ldrb	r3, [r3, #0]
 80028f6:	2b21      	cmp	r3, #33	; 0x21
 80028f8:	d106      	bne.n	8002908 <HAL_UART_RxCpltCallback+0x2c>
			index_msg_esp = 0;
 80028fa:	4b30      	ldr	r3, [pc, #192]	; (80029bc <HAL_UART_RxCpltCallback+0xe0>)
 80028fc:	2200      	movs	r2, #0
 80028fe:	701a      	strb	r2, [r3, #0]
			flag_esp_received_str = 0;
 8002900:	4b2f      	ldr	r3, [pc, #188]	; (80029c0 <HAL_UART_RxCpltCallback+0xe4>)
 8002902:	2200      	movs	r2, #0
 8002904:	701a      	strb	r2, [r3, #0]
 8002906:	e018      	b.n	800293a <HAL_UART_RxCpltCallback+0x5e>
		}
		else if(byte_esp_received == '#'){
 8002908:	4b2b      	ldr	r3, [pc, #172]	; (80029b8 <HAL_UART_RxCpltCallback+0xdc>)
 800290a:	781b      	ldrb	r3, [r3, #0]
 800290c:	2b23      	cmp	r3, #35	; 0x23
 800290e:	d109      	bne.n	8002924 <HAL_UART_RxCpltCallback+0x48>
			msg_esp[index_msg_esp] = '\0';
 8002910:	4b2a      	ldr	r3, [pc, #168]	; (80029bc <HAL_UART_RxCpltCallback+0xe0>)
 8002912:	781b      	ldrb	r3, [r3, #0]
 8002914:	461a      	mov	r2, r3
 8002916:	4b2b      	ldr	r3, [pc, #172]	; (80029c4 <HAL_UART_RxCpltCallback+0xe8>)
 8002918:	2100      	movs	r1, #0
 800291a:	5499      	strb	r1, [r3, r2]
			flag_esp_received_str = 1;
 800291c:	4b28      	ldr	r3, [pc, #160]	; (80029c0 <HAL_UART_RxCpltCallback+0xe4>)
 800291e:	2201      	movs	r2, #1
 8002920:	701a      	strb	r2, [r3, #0]
 8002922:	e00a      	b.n	800293a <HAL_UART_RxCpltCallback+0x5e>
		}
		else {
			msg_esp[index_msg_esp++] = byte_esp_received;
 8002924:	4b25      	ldr	r3, [pc, #148]	; (80029bc <HAL_UART_RxCpltCallback+0xe0>)
 8002926:	781b      	ldrb	r3, [r3, #0]
 8002928:	1c5a      	adds	r2, r3, #1
 800292a:	b2d1      	uxtb	r1, r2
 800292c:	4a23      	ldr	r2, [pc, #140]	; (80029bc <HAL_UART_RxCpltCallback+0xe0>)
 800292e:	7011      	strb	r1, [r2, #0]
 8002930:	461a      	mov	r2, r3
 8002932:	4b21      	ldr	r3, [pc, #132]	; (80029b8 <HAL_UART_RxCpltCallback+0xdc>)
 8002934:	7819      	ldrb	r1, [r3, #0]
 8002936:	4b23      	ldr	r3, [pc, #140]	; (80029c4 <HAL_UART_RxCpltCallback+0xe8>)
 8002938:	5499      	strb	r1, [r3, r2]
		}

		HAL_UART_Receive_IT(u_esp, &byte_esp_received, 1);
 800293a:	4b1e      	ldr	r3, [pc, #120]	; (80029b4 <HAL_UART_RxCpltCallback+0xd8>)
 800293c:	681b      	ldr	r3, [r3, #0]
 800293e:	2201      	movs	r2, #1
 8002940:	491d      	ldr	r1, [pc, #116]	; (80029b8 <HAL_UART_RxCpltCallback+0xdc>)
 8002942:	4618      	mov	r0, r3
 8002944:	f002 fa2b 	bl	8004d9e <HAL_UART_Receive_IT>
	}

	if(huart->Instance == u_lora->Instance){
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	681a      	ldr	r2, [r3, #0]
 800294c:	4b1e      	ldr	r3, [pc, #120]	; (80029c8 <HAL_UART_RxCpltCallback+0xec>)
 800294e:	681b      	ldr	r3, [r3, #0]
 8002950:	681b      	ldr	r3, [r3, #0]
 8002952:	429a      	cmp	r2, r3
 8002954:	d12a      	bne.n	80029ac <HAL_UART_RxCpltCallback+0xd0>
		if(byte_lora_received == '!'){
 8002956:	4b1d      	ldr	r3, [pc, #116]	; (80029cc <HAL_UART_RxCpltCallback+0xf0>)
 8002958:	781b      	ldrb	r3, [r3, #0]
 800295a:	2b21      	cmp	r3, #33	; 0x21
 800295c:	d106      	bne.n	800296c <HAL_UART_RxCpltCallback+0x90>
			index_msg_lora = 0;
 800295e:	4b1c      	ldr	r3, [pc, #112]	; (80029d0 <HAL_UART_RxCpltCallback+0xf4>)
 8002960:	2200      	movs	r2, #0
 8002962:	701a      	strb	r2, [r3, #0]
			flag_lora_received_str = 0;
 8002964:	4b1b      	ldr	r3, [pc, #108]	; (80029d4 <HAL_UART_RxCpltCallback+0xf8>)
 8002966:	2200      	movs	r2, #0
 8002968:	701a      	strb	r2, [r3, #0]
 800296a:	e018      	b.n	800299e <HAL_UART_RxCpltCallback+0xc2>
		}
		else if(byte_lora_received == '#'){
 800296c:	4b17      	ldr	r3, [pc, #92]	; (80029cc <HAL_UART_RxCpltCallback+0xf0>)
 800296e:	781b      	ldrb	r3, [r3, #0]
 8002970:	2b23      	cmp	r3, #35	; 0x23
 8002972:	d109      	bne.n	8002988 <HAL_UART_RxCpltCallback+0xac>
			msg_lora[index_msg_lora] = '\0';
 8002974:	4b16      	ldr	r3, [pc, #88]	; (80029d0 <HAL_UART_RxCpltCallback+0xf4>)
 8002976:	781b      	ldrb	r3, [r3, #0]
 8002978:	461a      	mov	r2, r3
 800297a:	4b17      	ldr	r3, [pc, #92]	; (80029d8 <HAL_UART_RxCpltCallback+0xfc>)
 800297c:	2100      	movs	r1, #0
 800297e:	5499      	strb	r1, [r3, r2]
			flag_lora_received_str = 1;
 8002980:	4b14      	ldr	r3, [pc, #80]	; (80029d4 <HAL_UART_RxCpltCallback+0xf8>)
 8002982:	2201      	movs	r2, #1
 8002984:	701a      	strb	r2, [r3, #0]
 8002986:	e00a      	b.n	800299e <HAL_UART_RxCpltCallback+0xc2>
		}
		else {
			msg_lora[index_msg_lora++] = byte_lora_received;
 8002988:	4b11      	ldr	r3, [pc, #68]	; (80029d0 <HAL_UART_RxCpltCallback+0xf4>)
 800298a:	781b      	ldrb	r3, [r3, #0]
 800298c:	1c5a      	adds	r2, r3, #1
 800298e:	b2d1      	uxtb	r1, r2
 8002990:	4a0f      	ldr	r2, [pc, #60]	; (80029d0 <HAL_UART_RxCpltCallback+0xf4>)
 8002992:	7011      	strb	r1, [r2, #0]
 8002994:	461a      	mov	r2, r3
 8002996:	4b0d      	ldr	r3, [pc, #52]	; (80029cc <HAL_UART_RxCpltCallback+0xf0>)
 8002998:	7819      	ldrb	r1, [r3, #0]
 800299a:	4b0f      	ldr	r3, [pc, #60]	; (80029d8 <HAL_UART_RxCpltCallback+0xfc>)
 800299c:	5499      	strb	r1, [r3, r2]
		}

		HAL_UART_Receive_IT(u_lora, &byte_lora_received, 1);
 800299e:	4b0a      	ldr	r3, [pc, #40]	; (80029c8 <HAL_UART_RxCpltCallback+0xec>)
 80029a0:	681b      	ldr	r3, [r3, #0]
 80029a2:	2201      	movs	r2, #1
 80029a4:	4909      	ldr	r1, [pc, #36]	; (80029cc <HAL_UART_RxCpltCallback+0xf0>)
 80029a6:	4618      	mov	r0, r3
 80029a8:	f002 f9f9 	bl	8004d9e <HAL_UART_Receive_IT>
	}
}
 80029ac:	bf00      	nop
 80029ae:	3708      	adds	r7, #8
 80029b0:	46bd      	mov	sp, r7
 80029b2:	bd80      	pop	{r7, pc}
 80029b4:	20000394 	.word	0x20000394
 80029b8:	20000466 	.word	0x20000466
 80029bc:	20000464 	.word	0x20000464
 80029c0:	20000468 	.word	0x20000468
 80029c4:	2000039c 	.word	0x2000039c
 80029c8:	20000398 	.word	0x20000398
 80029cc:	20000467 	.word	0x20000467
 80029d0:	20000465 	.word	0x20000465
 80029d4:	20000469 	.word	0x20000469
 80029d8:	20000400 	.word	0x20000400

080029dc <UART_Init>:




//==================HIGH LEVEL FUNCTION==================//
void UART_Init(UART_HandleTypeDef* uart_esp, UART_HandleTypeDef* uart_lora){
 80029dc:	b580      	push	{r7, lr}
 80029de:	b082      	sub	sp, #8
 80029e0:	af00      	add	r7, sp, #0
 80029e2:	6078      	str	r0, [r7, #4]
 80029e4:	6039      	str	r1, [r7, #0]
	u_esp = uart_esp;
 80029e6:	4a13      	ldr	r2, [pc, #76]	; (8002a34 <UART_Init+0x58>)
 80029e8:	687b      	ldr	r3, [r7, #4]
 80029ea:	6013      	str	r3, [r2, #0]
	u_lora = uart_lora;
 80029ec:	4a12      	ldr	r2, [pc, #72]	; (8002a38 <UART_Init+0x5c>)
 80029ee:	683b      	ldr	r3, [r7, #0]
 80029f0:	6013      	str	r3, [r2, #0]
	index_msg_esp = index_msg_lora = 0;
 80029f2:	4b12      	ldr	r3, [pc, #72]	; (8002a3c <UART_Init+0x60>)
 80029f4:	2200      	movs	r2, #0
 80029f6:	701a      	strb	r2, [r3, #0]
 80029f8:	4b10      	ldr	r3, [pc, #64]	; (8002a3c <UART_Init+0x60>)
 80029fa:	781a      	ldrb	r2, [r3, #0]
 80029fc:	4b10      	ldr	r3, [pc, #64]	; (8002a40 <UART_Init+0x64>)
 80029fe:	701a      	strb	r2, [r3, #0]
	flag_esp_received_str = flag_lora_received_str = 0;
 8002a00:	4b10      	ldr	r3, [pc, #64]	; (8002a44 <UART_Init+0x68>)
 8002a02:	2200      	movs	r2, #0
 8002a04:	701a      	strb	r2, [r3, #0]
 8002a06:	4b0f      	ldr	r3, [pc, #60]	; (8002a44 <UART_Init+0x68>)
 8002a08:	781a      	ldrb	r2, [r3, #0]
 8002a0a:	4b0f      	ldr	r3, [pc, #60]	; (8002a48 <UART_Init+0x6c>)
 8002a0c:	701a      	strb	r2, [r3, #0]

	HAL_UART_Receive_IT(u_esp, &byte_esp_received, 1);
 8002a0e:	4b09      	ldr	r3, [pc, #36]	; (8002a34 <UART_Init+0x58>)
 8002a10:	681b      	ldr	r3, [r3, #0]
 8002a12:	2201      	movs	r2, #1
 8002a14:	490d      	ldr	r1, [pc, #52]	; (8002a4c <UART_Init+0x70>)
 8002a16:	4618      	mov	r0, r3
 8002a18:	f002 f9c1 	bl	8004d9e <HAL_UART_Receive_IT>
	HAL_UART_Receive_IT(u_lora, &byte_lora_received, 1);
 8002a1c:	4b06      	ldr	r3, [pc, #24]	; (8002a38 <UART_Init+0x5c>)
 8002a1e:	681b      	ldr	r3, [r3, #0]
 8002a20:	2201      	movs	r2, #1
 8002a22:	490b      	ldr	r1, [pc, #44]	; (8002a50 <UART_Init+0x74>)
 8002a24:	4618      	mov	r0, r3
 8002a26:	f002 f9ba 	bl	8004d9e <HAL_UART_Receive_IT>
}
 8002a2a:	bf00      	nop
 8002a2c:	3708      	adds	r7, #8
 8002a2e:	46bd      	mov	sp, r7
 8002a30:	bd80      	pop	{r7, pc}
 8002a32:	bf00      	nop
 8002a34:	20000394 	.word	0x20000394
 8002a38:	20000398 	.word	0x20000398
 8002a3c:	20000465 	.word	0x20000465
 8002a40:	20000464 	.word	0x20000464
 8002a44:	20000469 	.word	0x20000469
 8002a48:	20000468 	.word	0x20000468
 8002a4c:	20000466 	.word	0x20000466
 8002a50:	20000467 	.word	0x20000467

08002a54 <UESP_SendMsg>:

void UESP_SendMsg(char* msg){
 8002a54:	b580      	push	{r7, lr}
 8002a56:	b082      	sub	sp, #8
 8002a58:	af00      	add	r7, sp, #0
 8002a5a:	6078      	str	r0, [r7, #4]
	HAL_UART_Transmit(u_esp, msg, sizeof(msg), 1000);
 8002a5c:	4b05      	ldr	r3, [pc, #20]	; (8002a74 <UESP_SendMsg+0x20>)
 8002a5e:	6818      	ldr	r0, [r3, #0]
 8002a60:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002a64:	2204      	movs	r2, #4
 8002a66:	6879      	ldr	r1, [r7, #4]
 8002a68:	f002 f907 	bl	8004c7a <HAL_UART_Transmit>
}
 8002a6c:	bf00      	nop
 8002a6e:	3708      	adds	r7, #8
 8002a70:	46bd      	mov	sp, r7
 8002a72:	bd80      	pop	{r7, pc}
 8002a74:	20000394 	.word	0x20000394

08002a78 <UESP_IsReceivedMsg>:

uint8_t UESP_IsReceivedMsg(void){
 8002a78:	b480      	push	{r7}
 8002a7a:	af00      	add	r7, sp, #0
	return flag_esp_received_str;
 8002a7c:	4b02      	ldr	r3, [pc, #8]	; (8002a88 <UESP_IsReceivedMsg+0x10>)
 8002a7e:	781b      	ldrb	r3, [r3, #0]
}
 8002a80:	4618      	mov	r0, r3
 8002a82:	46bd      	mov	sp, r7
 8002a84:	bc80      	pop	{r7}
 8002a86:	4770      	bx	lr
 8002a88:	20000468 	.word	0x20000468

08002a8c <UESP_GetMsg>:

uint8_t* UESP_GetMsg(void){
 8002a8c:	b480      	push	{r7}
 8002a8e:	af00      	add	r7, sp, #0
	if(!flag_esp_received_str) return "";
 8002a90:	4b06      	ldr	r3, [pc, #24]	; (8002aac <UESP_GetMsg+0x20>)
 8002a92:	781b      	ldrb	r3, [r3, #0]
 8002a94:	2b00      	cmp	r3, #0
 8002a96:	d101      	bne.n	8002a9c <UESP_GetMsg+0x10>
 8002a98:	4b05      	ldr	r3, [pc, #20]	; (8002ab0 <UESP_GetMsg+0x24>)
 8002a9a:	e003      	b.n	8002aa4 <UESP_GetMsg+0x18>

	flag_esp_received_str = 0;
 8002a9c:	4b03      	ldr	r3, [pc, #12]	; (8002aac <UESP_GetMsg+0x20>)
 8002a9e:	2200      	movs	r2, #0
 8002aa0:	701a      	strb	r2, [r3, #0]
	return msg_esp;
 8002aa2:	4b04      	ldr	r3, [pc, #16]	; (8002ab4 <UESP_GetMsg+0x28>)
}
 8002aa4:	4618      	mov	r0, r3
 8002aa6:	46bd      	mov	sp, r7
 8002aa8:	bc80      	pop	{r7}
 8002aaa:	4770      	bx	lr
 8002aac:	20000468 	.word	0x20000468
 8002ab0:	080087b0 	.word	0x080087b0
 8002ab4:	2000039c 	.word	0x2000039c

08002ab8 <Reset_Handler>:
 8002ab8:	480c      	ldr	r0, [pc, #48]	; (8002aec <LoopFillZerobss+0x12>)
 8002aba:	490d      	ldr	r1, [pc, #52]	; (8002af0 <LoopFillZerobss+0x16>)
 8002abc:	4a0d      	ldr	r2, [pc, #52]	; (8002af4 <LoopFillZerobss+0x1a>)
 8002abe:	2300      	movs	r3, #0
 8002ac0:	e002      	b.n	8002ac8 <LoopCopyDataInit>

08002ac2 <CopyDataInit>:
 8002ac2:	58d4      	ldr	r4, [r2, r3]
 8002ac4:	50c4      	str	r4, [r0, r3]
 8002ac6:	3304      	adds	r3, #4

08002ac8 <LoopCopyDataInit>:
 8002ac8:	18c4      	adds	r4, r0, r3
 8002aca:	428c      	cmp	r4, r1
 8002acc:	d3f9      	bcc.n	8002ac2 <CopyDataInit>
 8002ace:	4a0a      	ldr	r2, [pc, #40]	; (8002af8 <LoopFillZerobss+0x1e>)
 8002ad0:	4c0a      	ldr	r4, [pc, #40]	; (8002afc <LoopFillZerobss+0x22>)
 8002ad2:	2300      	movs	r3, #0
 8002ad4:	e001      	b.n	8002ada <LoopFillZerobss>

08002ad6 <FillZerobss>:
 8002ad6:	6013      	str	r3, [r2, #0]
 8002ad8:	3204      	adds	r2, #4

08002ada <LoopFillZerobss>:
 8002ada:	42a2      	cmp	r2, r4
 8002adc:	d3fb      	bcc.n	8002ad6 <FillZerobss>
 8002ade:	f7ff fe6d 	bl	80027bc <SystemInit>
 8002ae2:	f002 fdc3 	bl	800566c <__libc_init_array>
 8002ae6:	f7ff fa61 	bl	8001fac <main>
 8002aea:	4770      	bx	lr
 8002aec:	20000000 	.word	0x20000000
 8002af0:	200001ec 	.word	0x200001ec
 8002af4:	08008c70 	.word	0x08008c70
 8002af8:	200001ec 	.word	0x200001ec
 8002afc:	20000480 	.word	0x20000480

08002b00 <ADC1_2_IRQHandler>:
 8002b00:	e7fe      	b.n	8002b00 <ADC1_2_IRQHandler>
	...

08002b04 <HAL_Init>:
 8002b04:	b580      	push	{r7, lr}
 8002b06:	af00      	add	r7, sp, #0
 8002b08:	4b08      	ldr	r3, [pc, #32]	; (8002b2c <HAL_Init+0x28>)
 8002b0a:	681b      	ldr	r3, [r3, #0]
 8002b0c:	4a07      	ldr	r2, [pc, #28]	; (8002b2c <HAL_Init+0x28>)
 8002b0e:	f043 0310 	orr.w	r3, r3, #16
 8002b12:	6013      	str	r3, [r2, #0]
 8002b14:	2003      	movs	r0, #3
 8002b16:	f000 f947 	bl	8002da8 <HAL_NVIC_SetPriorityGrouping>
 8002b1a:	200f      	movs	r0, #15
 8002b1c:	f000 f808 	bl	8002b30 <HAL_InitTick>
 8002b20:	f7ff fc1e 	bl	8002360 <HAL_MspInit>
 8002b24:	2300      	movs	r3, #0
 8002b26:	4618      	mov	r0, r3
 8002b28:	bd80      	pop	{r7, pc}
 8002b2a:	bf00      	nop
 8002b2c:	40022000 	.word	0x40022000

08002b30 <HAL_InitTick>:
 8002b30:	b580      	push	{r7, lr}
 8002b32:	b082      	sub	sp, #8
 8002b34:	af00      	add	r7, sp, #0
 8002b36:	6078      	str	r0, [r7, #4]
 8002b38:	4b12      	ldr	r3, [pc, #72]	; (8002b84 <HAL_InitTick+0x54>)
 8002b3a:	681a      	ldr	r2, [r3, #0]
 8002b3c:	4b12      	ldr	r3, [pc, #72]	; (8002b88 <HAL_InitTick+0x58>)
 8002b3e:	781b      	ldrb	r3, [r3, #0]
 8002b40:	4619      	mov	r1, r3
 8002b42:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002b46:	fbb3 f3f1 	udiv	r3, r3, r1
 8002b4a:	fbb2 f3f3 	udiv	r3, r2, r3
 8002b4e:	4618      	mov	r0, r3
 8002b50:	f000 f95f 	bl	8002e12 <HAL_SYSTICK_Config>
 8002b54:	4603      	mov	r3, r0
 8002b56:	2b00      	cmp	r3, #0
 8002b58:	d001      	beq.n	8002b5e <HAL_InitTick+0x2e>
 8002b5a:	2301      	movs	r3, #1
 8002b5c:	e00e      	b.n	8002b7c <HAL_InitTick+0x4c>
 8002b5e:	687b      	ldr	r3, [r7, #4]
 8002b60:	2b0f      	cmp	r3, #15
 8002b62:	d80a      	bhi.n	8002b7a <HAL_InitTick+0x4a>
 8002b64:	2200      	movs	r2, #0
 8002b66:	6879      	ldr	r1, [r7, #4]
 8002b68:	f04f 30ff 	mov.w	r0, #4294967295
 8002b6c:	f000 f927 	bl	8002dbe <HAL_NVIC_SetPriority>
 8002b70:	4a06      	ldr	r2, [pc, #24]	; (8002b8c <HAL_InitTick+0x5c>)
 8002b72:	687b      	ldr	r3, [r7, #4]
 8002b74:	6013      	str	r3, [r2, #0]
 8002b76:	2300      	movs	r3, #0
 8002b78:	e000      	b.n	8002b7c <HAL_InitTick+0x4c>
 8002b7a:	2301      	movs	r3, #1
 8002b7c:	4618      	mov	r0, r3
 8002b7e:	3708      	adds	r7, #8
 8002b80:	46bd      	mov	sp, r7
 8002b82:	bd80      	pop	{r7, pc}
 8002b84:	20000008 	.word	0x20000008
 8002b88:	20000014 	.word	0x20000014
 8002b8c:	20000010 	.word	0x20000010

08002b90 <HAL_IncTick>:
 8002b90:	b480      	push	{r7}
 8002b92:	af00      	add	r7, sp, #0
 8002b94:	4b05      	ldr	r3, [pc, #20]	; (8002bac <HAL_IncTick+0x1c>)
 8002b96:	781b      	ldrb	r3, [r3, #0]
 8002b98:	461a      	mov	r2, r3
 8002b9a:	4b05      	ldr	r3, [pc, #20]	; (8002bb0 <HAL_IncTick+0x20>)
 8002b9c:	681b      	ldr	r3, [r3, #0]
 8002b9e:	4413      	add	r3, r2
 8002ba0:	4a03      	ldr	r2, [pc, #12]	; (8002bb0 <HAL_IncTick+0x20>)
 8002ba2:	6013      	str	r3, [r2, #0]
 8002ba4:	bf00      	nop
 8002ba6:	46bd      	mov	sp, r7
 8002ba8:	bc80      	pop	{r7}
 8002baa:	4770      	bx	lr
 8002bac:	20000014 	.word	0x20000014
 8002bb0:	2000046c 	.word	0x2000046c

08002bb4 <HAL_GetTick>:
 8002bb4:	b480      	push	{r7}
 8002bb6:	af00      	add	r7, sp, #0
 8002bb8:	4b02      	ldr	r3, [pc, #8]	; (8002bc4 <HAL_GetTick+0x10>)
 8002bba:	681b      	ldr	r3, [r3, #0]
 8002bbc:	4618      	mov	r0, r3
 8002bbe:	46bd      	mov	sp, r7
 8002bc0:	bc80      	pop	{r7}
 8002bc2:	4770      	bx	lr
 8002bc4:	2000046c 	.word	0x2000046c

08002bc8 <HAL_Delay>:
 8002bc8:	b580      	push	{r7, lr}
 8002bca:	b084      	sub	sp, #16
 8002bcc:	af00      	add	r7, sp, #0
 8002bce:	6078      	str	r0, [r7, #4]
 8002bd0:	f7ff fff0 	bl	8002bb4 <HAL_GetTick>
 8002bd4:	60b8      	str	r0, [r7, #8]
 8002bd6:	687b      	ldr	r3, [r7, #4]
 8002bd8:	60fb      	str	r3, [r7, #12]
 8002bda:	68fb      	ldr	r3, [r7, #12]
 8002bdc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002be0:	d005      	beq.n	8002bee <HAL_Delay+0x26>
 8002be2:	4b0a      	ldr	r3, [pc, #40]	; (8002c0c <HAL_Delay+0x44>)
 8002be4:	781b      	ldrb	r3, [r3, #0]
 8002be6:	461a      	mov	r2, r3
 8002be8:	68fb      	ldr	r3, [r7, #12]
 8002bea:	4413      	add	r3, r2
 8002bec:	60fb      	str	r3, [r7, #12]
 8002bee:	bf00      	nop
 8002bf0:	f7ff ffe0 	bl	8002bb4 <HAL_GetTick>
 8002bf4:	4602      	mov	r2, r0
 8002bf6:	68bb      	ldr	r3, [r7, #8]
 8002bf8:	1ad3      	subs	r3, r2, r3
 8002bfa:	68fa      	ldr	r2, [r7, #12]
 8002bfc:	429a      	cmp	r2, r3
 8002bfe:	d8f7      	bhi.n	8002bf0 <HAL_Delay+0x28>
 8002c00:	bf00      	nop
 8002c02:	bf00      	nop
 8002c04:	3710      	adds	r7, #16
 8002c06:	46bd      	mov	sp, r7
 8002c08:	bd80      	pop	{r7, pc}
 8002c0a:	bf00      	nop
 8002c0c:	20000014 	.word	0x20000014

08002c10 <__NVIC_SetPriorityGrouping>:
 8002c10:	b480      	push	{r7}
 8002c12:	b085      	sub	sp, #20
 8002c14:	af00      	add	r7, sp, #0
 8002c16:	6078      	str	r0, [r7, #4]
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	f003 0307 	and.w	r3, r3, #7
 8002c1e:	60fb      	str	r3, [r7, #12]
 8002c20:	4b0c      	ldr	r3, [pc, #48]	; (8002c54 <__NVIC_SetPriorityGrouping+0x44>)
 8002c22:	68db      	ldr	r3, [r3, #12]
 8002c24:	60bb      	str	r3, [r7, #8]
 8002c26:	68ba      	ldr	r2, [r7, #8]
 8002c28:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002c2c:	4013      	ands	r3, r2
 8002c2e:	60bb      	str	r3, [r7, #8]
 8002c30:	68fb      	ldr	r3, [r7, #12]
 8002c32:	021a      	lsls	r2, r3, #8
 8002c34:	68bb      	ldr	r3, [r7, #8]
 8002c36:	4313      	orrs	r3, r2
 8002c38:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002c3c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002c40:	60bb      	str	r3, [r7, #8]
 8002c42:	4a04      	ldr	r2, [pc, #16]	; (8002c54 <__NVIC_SetPriorityGrouping+0x44>)
 8002c44:	68bb      	ldr	r3, [r7, #8]
 8002c46:	60d3      	str	r3, [r2, #12]
 8002c48:	bf00      	nop
 8002c4a:	3714      	adds	r7, #20
 8002c4c:	46bd      	mov	sp, r7
 8002c4e:	bc80      	pop	{r7}
 8002c50:	4770      	bx	lr
 8002c52:	bf00      	nop
 8002c54:	e000ed00 	.word	0xe000ed00

08002c58 <__NVIC_GetPriorityGrouping>:
 8002c58:	b480      	push	{r7}
 8002c5a:	af00      	add	r7, sp, #0
 8002c5c:	4b04      	ldr	r3, [pc, #16]	; (8002c70 <__NVIC_GetPriorityGrouping+0x18>)
 8002c5e:	68db      	ldr	r3, [r3, #12]
 8002c60:	0a1b      	lsrs	r3, r3, #8
 8002c62:	f003 0307 	and.w	r3, r3, #7
 8002c66:	4618      	mov	r0, r3
 8002c68:	46bd      	mov	sp, r7
 8002c6a:	bc80      	pop	{r7}
 8002c6c:	4770      	bx	lr
 8002c6e:	bf00      	nop
 8002c70:	e000ed00 	.word	0xe000ed00

08002c74 <__NVIC_EnableIRQ>:
 8002c74:	b480      	push	{r7}
 8002c76:	b083      	sub	sp, #12
 8002c78:	af00      	add	r7, sp, #0
 8002c7a:	4603      	mov	r3, r0
 8002c7c:	71fb      	strb	r3, [r7, #7]
 8002c7e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c82:	2b00      	cmp	r3, #0
 8002c84:	db0b      	blt.n	8002c9e <__NVIC_EnableIRQ+0x2a>
 8002c86:	79fb      	ldrb	r3, [r7, #7]
 8002c88:	f003 021f 	and.w	r2, r3, #31
 8002c8c:	4906      	ldr	r1, [pc, #24]	; (8002ca8 <__NVIC_EnableIRQ+0x34>)
 8002c8e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c92:	095b      	lsrs	r3, r3, #5
 8002c94:	2001      	movs	r0, #1
 8002c96:	fa00 f202 	lsl.w	r2, r0, r2
 8002c9a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002c9e:	bf00      	nop
 8002ca0:	370c      	adds	r7, #12
 8002ca2:	46bd      	mov	sp, r7
 8002ca4:	bc80      	pop	{r7}
 8002ca6:	4770      	bx	lr
 8002ca8:	e000e100 	.word	0xe000e100

08002cac <__NVIC_SetPriority>:
 8002cac:	b480      	push	{r7}
 8002cae:	b083      	sub	sp, #12
 8002cb0:	af00      	add	r7, sp, #0
 8002cb2:	4603      	mov	r3, r0
 8002cb4:	6039      	str	r1, [r7, #0]
 8002cb6:	71fb      	strb	r3, [r7, #7]
 8002cb8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002cbc:	2b00      	cmp	r3, #0
 8002cbe:	db0a      	blt.n	8002cd6 <__NVIC_SetPriority+0x2a>
 8002cc0:	683b      	ldr	r3, [r7, #0]
 8002cc2:	b2da      	uxtb	r2, r3
 8002cc4:	490c      	ldr	r1, [pc, #48]	; (8002cf8 <__NVIC_SetPriority+0x4c>)
 8002cc6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002cca:	0112      	lsls	r2, r2, #4
 8002ccc:	b2d2      	uxtb	r2, r2
 8002cce:	440b      	add	r3, r1
 8002cd0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002cd4:	e00a      	b.n	8002cec <__NVIC_SetPriority+0x40>
 8002cd6:	683b      	ldr	r3, [r7, #0]
 8002cd8:	b2da      	uxtb	r2, r3
 8002cda:	4908      	ldr	r1, [pc, #32]	; (8002cfc <__NVIC_SetPriority+0x50>)
 8002cdc:	79fb      	ldrb	r3, [r7, #7]
 8002cde:	f003 030f 	and.w	r3, r3, #15
 8002ce2:	3b04      	subs	r3, #4
 8002ce4:	0112      	lsls	r2, r2, #4
 8002ce6:	b2d2      	uxtb	r2, r2
 8002ce8:	440b      	add	r3, r1
 8002cea:	761a      	strb	r2, [r3, #24]
 8002cec:	bf00      	nop
 8002cee:	370c      	adds	r7, #12
 8002cf0:	46bd      	mov	sp, r7
 8002cf2:	bc80      	pop	{r7}
 8002cf4:	4770      	bx	lr
 8002cf6:	bf00      	nop
 8002cf8:	e000e100 	.word	0xe000e100
 8002cfc:	e000ed00 	.word	0xe000ed00

08002d00 <NVIC_EncodePriority>:
 8002d00:	b480      	push	{r7}
 8002d02:	b089      	sub	sp, #36	; 0x24
 8002d04:	af00      	add	r7, sp, #0
 8002d06:	60f8      	str	r0, [r7, #12]
 8002d08:	60b9      	str	r1, [r7, #8]
 8002d0a:	607a      	str	r2, [r7, #4]
 8002d0c:	68fb      	ldr	r3, [r7, #12]
 8002d0e:	f003 0307 	and.w	r3, r3, #7
 8002d12:	61fb      	str	r3, [r7, #28]
 8002d14:	69fb      	ldr	r3, [r7, #28]
 8002d16:	f1c3 0307 	rsb	r3, r3, #7
 8002d1a:	2b04      	cmp	r3, #4
 8002d1c:	bf28      	it	cs
 8002d1e:	2304      	movcs	r3, #4
 8002d20:	61bb      	str	r3, [r7, #24]
 8002d22:	69fb      	ldr	r3, [r7, #28]
 8002d24:	3304      	adds	r3, #4
 8002d26:	2b06      	cmp	r3, #6
 8002d28:	d902      	bls.n	8002d30 <NVIC_EncodePriority+0x30>
 8002d2a:	69fb      	ldr	r3, [r7, #28]
 8002d2c:	3b03      	subs	r3, #3
 8002d2e:	e000      	b.n	8002d32 <NVIC_EncodePriority+0x32>
 8002d30:	2300      	movs	r3, #0
 8002d32:	617b      	str	r3, [r7, #20]
 8002d34:	f04f 32ff 	mov.w	r2, #4294967295
 8002d38:	69bb      	ldr	r3, [r7, #24]
 8002d3a:	fa02 f303 	lsl.w	r3, r2, r3
 8002d3e:	43da      	mvns	r2, r3
 8002d40:	68bb      	ldr	r3, [r7, #8]
 8002d42:	401a      	ands	r2, r3
 8002d44:	697b      	ldr	r3, [r7, #20]
 8002d46:	409a      	lsls	r2, r3
 8002d48:	f04f 31ff 	mov.w	r1, #4294967295
 8002d4c:	697b      	ldr	r3, [r7, #20]
 8002d4e:	fa01 f303 	lsl.w	r3, r1, r3
 8002d52:	43d9      	mvns	r1, r3
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	400b      	ands	r3, r1
 8002d58:	4313      	orrs	r3, r2
 8002d5a:	4618      	mov	r0, r3
 8002d5c:	3724      	adds	r7, #36	; 0x24
 8002d5e:	46bd      	mov	sp, r7
 8002d60:	bc80      	pop	{r7}
 8002d62:	4770      	bx	lr

08002d64 <SysTick_Config>:
 8002d64:	b580      	push	{r7, lr}
 8002d66:	b082      	sub	sp, #8
 8002d68:	af00      	add	r7, sp, #0
 8002d6a:	6078      	str	r0, [r7, #4]
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	3b01      	subs	r3, #1
 8002d70:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8002d74:	d301      	bcc.n	8002d7a <SysTick_Config+0x16>
 8002d76:	2301      	movs	r3, #1
 8002d78:	e00f      	b.n	8002d9a <SysTick_Config+0x36>
 8002d7a:	4a0a      	ldr	r2, [pc, #40]	; (8002da4 <SysTick_Config+0x40>)
 8002d7c:	687b      	ldr	r3, [r7, #4]
 8002d7e:	3b01      	subs	r3, #1
 8002d80:	6053      	str	r3, [r2, #4]
 8002d82:	210f      	movs	r1, #15
 8002d84:	f04f 30ff 	mov.w	r0, #4294967295
 8002d88:	f7ff ff90 	bl	8002cac <__NVIC_SetPriority>
 8002d8c:	4b05      	ldr	r3, [pc, #20]	; (8002da4 <SysTick_Config+0x40>)
 8002d8e:	2200      	movs	r2, #0
 8002d90:	609a      	str	r2, [r3, #8]
 8002d92:	4b04      	ldr	r3, [pc, #16]	; (8002da4 <SysTick_Config+0x40>)
 8002d94:	2207      	movs	r2, #7
 8002d96:	601a      	str	r2, [r3, #0]
 8002d98:	2300      	movs	r3, #0
 8002d9a:	4618      	mov	r0, r3
 8002d9c:	3708      	adds	r7, #8
 8002d9e:	46bd      	mov	sp, r7
 8002da0:	bd80      	pop	{r7, pc}
 8002da2:	bf00      	nop
 8002da4:	e000e010 	.word	0xe000e010

08002da8 <HAL_NVIC_SetPriorityGrouping>:
 8002da8:	b580      	push	{r7, lr}
 8002daa:	b082      	sub	sp, #8
 8002dac:	af00      	add	r7, sp, #0
 8002dae:	6078      	str	r0, [r7, #4]
 8002db0:	6878      	ldr	r0, [r7, #4]
 8002db2:	f7ff ff2d 	bl	8002c10 <__NVIC_SetPriorityGrouping>
 8002db6:	bf00      	nop
 8002db8:	3708      	adds	r7, #8
 8002dba:	46bd      	mov	sp, r7
 8002dbc:	bd80      	pop	{r7, pc}

08002dbe <HAL_NVIC_SetPriority>:
 8002dbe:	b580      	push	{r7, lr}
 8002dc0:	b086      	sub	sp, #24
 8002dc2:	af00      	add	r7, sp, #0
 8002dc4:	4603      	mov	r3, r0
 8002dc6:	60b9      	str	r1, [r7, #8]
 8002dc8:	607a      	str	r2, [r7, #4]
 8002dca:	73fb      	strb	r3, [r7, #15]
 8002dcc:	2300      	movs	r3, #0
 8002dce:	617b      	str	r3, [r7, #20]
 8002dd0:	f7ff ff42 	bl	8002c58 <__NVIC_GetPriorityGrouping>
 8002dd4:	6178      	str	r0, [r7, #20]
 8002dd6:	687a      	ldr	r2, [r7, #4]
 8002dd8:	68b9      	ldr	r1, [r7, #8]
 8002dda:	6978      	ldr	r0, [r7, #20]
 8002ddc:	f7ff ff90 	bl	8002d00 <NVIC_EncodePriority>
 8002de0:	4602      	mov	r2, r0
 8002de2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002de6:	4611      	mov	r1, r2
 8002de8:	4618      	mov	r0, r3
 8002dea:	f7ff ff5f 	bl	8002cac <__NVIC_SetPriority>
 8002dee:	bf00      	nop
 8002df0:	3718      	adds	r7, #24
 8002df2:	46bd      	mov	sp, r7
 8002df4:	bd80      	pop	{r7, pc}

08002df6 <HAL_NVIC_EnableIRQ>:
 8002df6:	b580      	push	{r7, lr}
 8002df8:	b082      	sub	sp, #8
 8002dfa:	af00      	add	r7, sp, #0
 8002dfc:	4603      	mov	r3, r0
 8002dfe:	71fb      	strb	r3, [r7, #7]
 8002e00:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002e04:	4618      	mov	r0, r3
 8002e06:	f7ff ff35 	bl	8002c74 <__NVIC_EnableIRQ>
 8002e0a:	bf00      	nop
 8002e0c:	3708      	adds	r7, #8
 8002e0e:	46bd      	mov	sp, r7
 8002e10:	bd80      	pop	{r7, pc}

08002e12 <HAL_SYSTICK_Config>:
 8002e12:	b580      	push	{r7, lr}
 8002e14:	b082      	sub	sp, #8
 8002e16:	af00      	add	r7, sp, #0
 8002e18:	6078      	str	r0, [r7, #4]
 8002e1a:	6878      	ldr	r0, [r7, #4]
 8002e1c:	f7ff ffa2 	bl	8002d64 <SysTick_Config>
 8002e20:	4603      	mov	r3, r0
 8002e22:	4618      	mov	r0, r3
 8002e24:	3708      	adds	r7, #8
 8002e26:	46bd      	mov	sp, r7
 8002e28:	bd80      	pop	{r7, pc}

08002e2a <HAL_DMA_Abort>:
 8002e2a:	b480      	push	{r7}
 8002e2c:	b085      	sub	sp, #20
 8002e2e:	af00      	add	r7, sp, #0
 8002e30:	6078      	str	r0, [r7, #4]
 8002e32:	2300      	movs	r3, #0
 8002e34:	73fb      	strb	r3, [r7, #15]
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8002e3c:	2b02      	cmp	r3, #2
 8002e3e:	d008      	beq.n	8002e52 <HAL_DMA_Abort+0x28>
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	2204      	movs	r2, #4
 8002e44:	639a      	str	r2, [r3, #56]	; 0x38
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	2200      	movs	r2, #0
 8002e4a:	f883 2020 	strb.w	r2, [r3, #32]
 8002e4e:	2301      	movs	r3, #1
 8002e50:	e020      	b.n	8002e94 <HAL_DMA_Abort+0x6a>
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	681b      	ldr	r3, [r3, #0]
 8002e56:	681a      	ldr	r2, [r3, #0]
 8002e58:	687b      	ldr	r3, [r7, #4]
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	f022 020e 	bic.w	r2, r2, #14
 8002e60:	601a      	str	r2, [r3, #0]
 8002e62:	687b      	ldr	r3, [r7, #4]
 8002e64:	681b      	ldr	r3, [r3, #0]
 8002e66:	681a      	ldr	r2, [r3, #0]
 8002e68:	687b      	ldr	r3, [r7, #4]
 8002e6a:	681b      	ldr	r3, [r3, #0]
 8002e6c:	f022 0201 	bic.w	r2, r2, #1
 8002e70:	601a      	str	r2, [r3, #0]
 8002e72:	687b      	ldr	r3, [r7, #4]
 8002e74:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002e7a:	2101      	movs	r1, #1
 8002e7c:	fa01 f202 	lsl.w	r2, r1, r2
 8002e80:	605a      	str	r2, [r3, #4]
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	2201      	movs	r2, #1
 8002e86:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	2200      	movs	r2, #0
 8002e8e:	f883 2020 	strb.w	r2, [r3, #32]
 8002e92:	7bfb      	ldrb	r3, [r7, #15]
 8002e94:	4618      	mov	r0, r3
 8002e96:	3714      	adds	r7, #20
 8002e98:	46bd      	mov	sp, r7
 8002e9a:	bc80      	pop	{r7}
 8002e9c:	4770      	bx	lr
	...

08002ea0 <HAL_DMA_Abort_IT>:
 8002ea0:	b580      	push	{r7, lr}
 8002ea2:	b084      	sub	sp, #16
 8002ea4:	af00      	add	r7, sp, #0
 8002ea6:	6078      	str	r0, [r7, #4]
 8002ea8:	2300      	movs	r3, #0
 8002eaa:	73fb      	strb	r3, [r7, #15]
 8002eac:	687b      	ldr	r3, [r7, #4]
 8002eae:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8002eb2:	2b02      	cmp	r3, #2
 8002eb4:	d005      	beq.n	8002ec2 <HAL_DMA_Abort_IT+0x22>
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	2204      	movs	r2, #4
 8002eba:	639a      	str	r2, [r3, #56]	; 0x38
 8002ebc:	2301      	movs	r3, #1
 8002ebe:	73fb      	strb	r3, [r7, #15]
 8002ec0:	e051      	b.n	8002f66 <HAL_DMA_Abort_IT+0xc6>
 8002ec2:	687b      	ldr	r3, [r7, #4]
 8002ec4:	681b      	ldr	r3, [r3, #0]
 8002ec6:	681a      	ldr	r2, [r3, #0]
 8002ec8:	687b      	ldr	r3, [r7, #4]
 8002eca:	681b      	ldr	r3, [r3, #0]
 8002ecc:	f022 020e 	bic.w	r2, r2, #14
 8002ed0:	601a      	str	r2, [r3, #0]
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	681a      	ldr	r2, [r3, #0]
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	f022 0201 	bic.w	r2, r2, #1
 8002ee0:	601a      	str	r2, [r3, #0]
 8002ee2:	687b      	ldr	r3, [r7, #4]
 8002ee4:	681b      	ldr	r3, [r3, #0]
 8002ee6:	4a22      	ldr	r2, [pc, #136]	; (8002f70 <HAL_DMA_Abort_IT+0xd0>)
 8002ee8:	4293      	cmp	r3, r2
 8002eea:	d029      	beq.n	8002f40 <HAL_DMA_Abort_IT+0xa0>
 8002eec:	687b      	ldr	r3, [r7, #4]
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	4a20      	ldr	r2, [pc, #128]	; (8002f74 <HAL_DMA_Abort_IT+0xd4>)
 8002ef2:	4293      	cmp	r3, r2
 8002ef4:	d022      	beq.n	8002f3c <HAL_DMA_Abort_IT+0x9c>
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	681b      	ldr	r3, [r3, #0]
 8002efa:	4a1f      	ldr	r2, [pc, #124]	; (8002f78 <HAL_DMA_Abort_IT+0xd8>)
 8002efc:	4293      	cmp	r3, r2
 8002efe:	d01a      	beq.n	8002f36 <HAL_DMA_Abort_IT+0x96>
 8002f00:	687b      	ldr	r3, [r7, #4]
 8002f02:	681b      	ldr	r3, [r3, #0]
 8002f04:	4a1d      	ldr	r2, [pc, #116]	; (8002f7c <HAL_DMA_Abort_IT+0xdc>)
 8002f06:	4293      	cmp	r3, r2
 8002f08:	d012      	beq.n	8002f30 <HAL_DMA_Abort_IT+0x90>
 8002f0a:	687b      	ldr	r3, [r7, #4]
 8002f0c:	681b      	ldr	r3, [r3, #0]
 8002f0e:	4a1c      	ldr	r2, [pc, #112]	; (8002f80 <HAL_DMA_Abort_IT+0xe0>)
 8002f10:	4293      	cmp	r3, r2
 8002f12:	d00a      	beq.n	8002f2a <HAL_DMA_Abort_IT+0x8a>
 8002f14:	687b      	ldr	r3, [r7, #4]
 8002f16:	681b      	ldr	r3, [r3, #0]
 8002f18:	4a1a      	ldr	r2, [pc, #104]	; (8002f84 <HAL_DMA_Abort_IT+0xe4>)
 8002f1a:	4293      	cmp	r3, r2
 8002f1c:	d102      	bne.n	8002f24 <HAL_DMA_Abort_IT+0x84>
 8002f1e:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8002f22:	e00e      	b.n	8002f42 <HAL_DMA_Abort_IT+0xa2>
 8002f24:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002f28:	e00b      	b.n	8002f42 <HAL_DMA_Abort_IT+0xa2>
 8002f2a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8002f2e:	e008      	b.n	8002f42 <HAL_DMA_Abort_IT+0xa2>
 8002f30:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002f34:	e005      	b.n	8002f42 <HAL_DMA_Abort_IT+0xa2>
 8002f36:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002f3a:	e002      	b.n	8002f42 <HAL_DMA_Abort_IT+0xa2>
 8002f3c:	2310      	movs	r3, #16
 8002f3e:	e000      	b.n	8002f42 <HAL_DMA_Abort_IT+0xa2>
 8002f40:	2301      	movs	r3, #1
 8002f42:	4a11      	ldr	r2, [pc, #68]	; (8002f88 <HAL_DMA_Abort_IT+0xe8>)
 8002f44:	6053      	str	r3, [r2, #4]
 8002f46:	687b      	ldr	r3, [r7, #4]
 8002f48:	2201      	movs	r2, #1
 8002f4a:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8002f4e:	687b      	ldr	r3, [r7, #4]
 8002f50:	2200      	movs	r2, #0
 8002f52:	f883 2020 	strb.w	r2, [r3, #32]
 8002f56:	687b      	ldr	r3, [r7, #4]
 8002f58:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002f5a:	2b00      	cmp	r3, #0
 8002f5c:	d003      	beq.n	8002f66 <HAL_DMA_Abort_IT+0xc6>
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002f62:	6878      	ldr	r0, [r7, #4]
 8002f64:	4798      	blx	r3
 8002f66:	7bfb      	ldrb	r3, [r7, #15]
 8002f68:	4618      	mov	r0, r3
 8002f6a:	3710      	adds	r7, #16
 8002f6c:	46bd      	mov	sp, r7
 8002f6e:	bd80      	pop	{r7, pc}
 8002f70:	40020008 	.word	0x40020008
 8002f74:	4002001c 	.word	0x4002001c
 8002f78:	40020030 	.word	0x40020030
 8002f7c:	40020044 	.word	0x40020044
 8002f80:	40020058 	.word	0x40020058
 8002f84:	4002006c 	.word	0x4002006c
 8002f88:	40020000 	.word	0x40020000

08002f8c <HAL_GPIO_Init>:
 8002f8c:	b480      	push	{r7}
 8002f8e:	b08b      	sub	sp, #44	; 0x2c
 8002f90:	af00      	add	r7, sp, #0
 8002f92:	6078      	str	r0, [r7, #4]
 8002f94:	6039      	str	r1, [r7, #0]
 8002f96:	2300      	movs	r3, #0
 8002f98:	627b      	str	r3, [r7, #36]	; 0x24
 8002f9a:	2300      	movs	r3, #0
 8002f9c:	623b      	str	r3, [r7, #32]
 8002f9e:	e169      	b.n	8003274 <HAL_GPIO_Init+0x2e8>
 8002fa0:	2201      	movs	r2, #1
 8002fa2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002fa4:	fa02 f303 	lsl.w	r3, r2, r3
 8002fa8:	61fb      	str	r3, [r7, #28]
 8002faa:	683b      	ldr	r3, [r7, #0]
 8002fac:	681b      	ldr	r3, [r3, #0]
 8002fae:	69fa      	ldr	r2, [r7, #28]
 8002fb0:	4013      	ands	r3, r2
 8002fb2:	61bb      	str	r3, [r7, #24]
 8002fb4:	69ba      	ldr	r2, [r7, #24]
 8002fb6:	69fb      	ldr	r3, [r7, #28]
 8002fb8:	429a      	cmp	r2, r3
 8002fba:	f040 8158 	bne.w	800326e <HAL_GPIO_Init+0x2e2>
 8002fbe:	683b      	ldr	r3, [r7, #0]
 8002fc0:	685b      	ldr	r3, [r3, #4]
 8002fc2:	4a9a      	ldr	r2, [pc, #616]	; (800322c <HAL_GPIO_Init+0x2a0>)
 8002fc4:	4293      	cmp	r3, r2
 8002fc6:	d05e      	beq.n	8003086 <HAL_GPIO_Init+0xfa>
 8002fc8:	4a98      	ldr	r2, [pc, #608]	; (800322c <HAL_GPIO_Init+0x2a0>)
 8002fca:	4293      	cmp	r3, r2
 8002fcc:	d875      	bhi.n	80030ba <HAL_GPIO_Init+0x12e>
 8002fce:	4a98      	ldr	r2, [pc, #608]	; (8003230 <HAL_GPIO_Init+0x2a4>)
 8002fd0:	4293      	cmp	r3, r2
 8002fd2:	d058      	beq.n	8003086 <HAL_GPIO_Init+0xfa>
 8002fd4:	4a96      	ldr	r2, [pc, #600]	; (8003230 <HAL_GPIO_Init+0x2a4>)
 8002fd6:	4293      	cmp	r3, r2
 8002fd8:	d86f      	bhi.n	80030ba <HAL_GPIO_Init+0x12e>
 8002fda:	4a96      	ldr	r2, [pc, #600]	; (8003234 <HAL_GPIO_Init+0x2a8>)
 8002fdc:	4293      	cmp	r3, r2
 8002fde:	d052      	beq.n	8003086 <HAL_GPIO_Init+0xfa>
 8002fe0:	4a94      	ldr	r2, [pc, #592]	; (8003234 <HAL_GPIO_Init+0x2a8>)
 8002fe2:	4293      	cmp	r3, r2
 8002fe4:	d869      	bhi.n	80030ba <HAL_GPIO_Init+0x12e>
 8002fe6:	4a94      	ldr	r2, [pc, #592]	; (8003238 <HAL_GPIO_Init+0x2ac>)
 8002fe8:	4293      	cmp	r3, r2
 8002fea:	d04c      	beq.n	8003086 <HAL_GPIO_Init+0xfa>
 8002fec:	4a92      	ldr	r2, [pc, #584]	; (8003238 <HAL_GPIO_Init+0x2ac>)
 8002fee:	4293      	cmp	r3, r2
 8002ff0:	d863      	bhi.n	80030ba <HAL_GPIO_Init+0x12e>
 8002ff2:	4a92      	ldr	r2, [pc, #584]	; (800323c <HAL_GPIO_Init+0x2b0>)
 8002ff4:	4293      	cmp	r3, r2
 8002ff6:	d046      	beq.n	8003086 <HAL_GPIO_Init+0xfa>
 8002ff8:	4a90      	ldr	r2, [pc, #576]	; (800323c <HAL_GPIO_Init+0x2b0>)
 8002ffa:	4293      	cmp	r3, r2
 8002ffc:	d85d      	bhi.n	80030ba <HAL_GPIO_Init+0x12e>
 8002ffe:	2b12      	cmp	r3, #18
 8003000:	d82a      	bhi.n	8003058 <HAL_GPIO_Init+0xcc>
 8003002:	2b12      	cmp	r3, #18
 8003004:	d859      	bhi.n	80030ba <HAL_GPIO_Init+0x12e>
 8003006:	a201      	add	r2, pc, #4	; (adr r2, 800300c <HAL_GPIO_Init+0x80>)
 8003008:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800300c:	08003087 	.word	0x08003087
 8003010:	08003061 	.word	0x08003061
 8003014:	08003073 	.word	0x08003073
 8003018:	080030b5 	.word	0x080030b5
 800301c:	080030bb 	.word	0x080030bb
 8003020:	080030bb 	.word	0x080030bb
 8003024:	080030bb 	.word	0x080030bb
 8003028:	080030bb 	.word	0x080030bb
 800302c:	080030bb 	.word	0x080030bb
 8003030:	080030bb 	.word	0x080030bb
 8003034:	080030bb 	.word	0x080030bb
 8003038:	080030bb 	.word	0x080030bb
 800303c:	080030bb 	.word	0x080030bb
 8003040:	080030bb 	.word	0x080030bb
 8003044:	080030bb 	.word	0x080030bb
 8003048:	080030bb 	.word	0x080030bb
 800304c:	080030bb 	.word	0x080030bb
 8003050:	08003069 	.word	0x08003069
 8003054:	0800307d 	.word	0x0800307d
 8003058:	4a79      	ldr	r2, [pc, #484]	; (8003240 <HAL_GPIO_Init+0x2b4>)
 800305a:	4293      	cmp	r3, r2
 800305c:	d013      	beq.n	8003086 <HAL_GPIO_Init+0xfa>
 800305e:	e02c      	b.n	80030ba <HAL_GPIO_Init+0x12e>
 8003060:	683b      	ldr	r3, [r7, #0]
 8003062:	68db      	ldr	r3, [r3, #12]
 8003064:	623b      	str	r3, [r7, #32]
 8003066:	e029      	b.n	80030bc <HAL_GPIO_Init+0x130>
 8003068:	683b      	ldr	r3, [r7, #0]
 800306a:	68db      	ldr	r3, [r3, #12]
 800306c:	3304      	adds	r3, #4
 800306e:	623b      	str	r3, [r7, #32]
 8003070:	e024      	b.n	80030bc <HAL_GPIO_Init+0x130>
 8003072:	683b      	ldr	r3, [r7, #0]
 8003074:	68db      	ldr	r3, [r3, #12]
 8003076:	3308      	adds	r3, #8
 8003078:	623b      	str	r3, [r7, #32]
 800307a:	e01f      	b.n	80030bc <HAL_GPIO_Init+0x130>
 800307c:	683b      	ldr	r3, [r7, #0]
 800307e:	68db      	ldr	r3, [r3, #12]
 8003080:	330c      	adds	r3, #12
 8003082:	623b      	str	r3, [r7, #32]
 8003084:	e01a      	b.n	80030bc <HAL_GPIO_Init+0x130>
 8003086:	683b      	ldr	r3, [r7, #0]
 8003088:	689b      	ldr	r3, [r3, #8]
 800308a:	2b00      	cmp	r3, #0
 800308c:	d102      	bne.n	8003094 <HAL_GPIO_Init+0x108>
 800308e:	2304      	movs	r3, #4
 8003090:	623b      	str	r3, [r7, #32]
 8003092:	e013      	b.n	80030bc <HAL_GPIO_Init+0x130>
 8003094:	683b      	ldr	r3, [r7, #0]
 8003096:	689b      	ldr	r3, [r3, #8]
 8003098:	2b01      	cmp	r3, #1
 800309a:	d105      	bne.n	80030a8 <HAL_GPIO_Init+0x11c>
 800309c:	2308      	movs	r3, #8
 800309e:	623b      	str	r3, [r7, #32]
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	69fa      	ldr	r2, [r7, #28]
 80030a4:	611a      	str	r2, [r3, #16]
 80030a6:	e009      	b.n	80030bc <HAL_GPIO_Init+0x130>
 80030a8:	2308      	movs	r3, #8
 80030aa:	623b      	str	r3, [r7, #32]
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	69fa      	ldr	r2, [r7, #28]
 80030b0:	615a      	str	r2, [r3, #20]
 80030b2:	e003      	b.n	80030bc <HAL_GPIO_Init+0x130>
 80030b4:	2300      	movs	r3, #0
 80030b6:	623b      	str	r3, [r7, #32]
 80030b8:	e000      	b.n	80030bc <HAL_GPIO_Init+0x130>
 80030ba:	bf00      	nop
 80030bc:	69bb      	ldr	r3, [r7, #24]
 80030be:	2bff      	cmp	r3, #255	; 0xff
 80030c0:	d801      	bhi.n	80030c6 <HAL_GPIO_Init+0x13a>
 80030c2:	687b      	ldr	r3, [r7, #4]
 80030c4:	e001      	b.n	80030ca <HAL_GPIO_Init+0x13e>
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	3304      	adds	r3, #4
 80030ca:	617b      	str	r3, [r7, #20]
 80030cc:	69bb      	ldr	r3, [r7, #24]
 80030ce:	2bff      	cmp	r3, #255	; 0xff
 80030d0:	d802      	bhi.n	80030d8 <HAL_GPIO_Init+0x14c>
 80030d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030d4:	009b      	lsls	r3, r3, #2
 80030d6:	e002      	b.n	80030de <HAL_GPIO_Init+0x152>
 80030d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030da:	3b08      	subs	r3, #8
 80030dc:	009b      	lsls	r3, r3, #2
 80030de:	613b      	str	r3, [r7, #16]
 80030e0:	697b      	ldr	r3, [r7, #20]
 80030e2:	681a      	ldr	r2, [r3, #0]
 80030e4:	210f      	movs	r1, #15
 80030e6:	693b      	ldr	r3, [r7, #16]
 80030e8:	fa01 f303 	lsl.w	r3, r1, r3
 80030ec:	43db      	mvns	r3, r3
 80030ee:	401a      	ands	r2, r3
 80030f0:	6a39      	ldr	r1, [r7, #32]
 80030f2:	693b      	ldr	r3, [r7, #16]
 80030f4:	fa01 f303 	lsl.w	r3, r1, r3
 80030f8:	431a      	orrs	r2, r3
 80030fa:	697b      	ldr	r3, [r7, #20]
 80030fc:	601a      	str	r2, [r3, #0]
 80030fe:	683b      	ldr	r3, [r7, #0]
 8003100:	685b      	ldr	r3, [r3, #4]
 8003102:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003106:	2b00      	cmp	r3, #0
 8003108:	f000 80b1 	beq.w	800326e <HAL_GPIO_Init+0x2e2>
 800310c:	4b4d      	ldr	r3, [pc, #308]	; (8003244 <HAL_GPIO_Init+0x2b8>)
 800310e:	699b      	ldr	r3, [r3, #24]
 8003110:	4a4c      	ldr	r2, [pc, #304]	; (8003244 <HAL_GPIO_Init+0x2b8>)
 8003112:	f043 0301 	orr.w	r3, r3, #1
 8003116:	6193      	str	r3, [r2, #24]
 8003118:	4b4a      	ldr	r3, [pc, #296]	; (8003244 <HAL_GPIO_Init+0x2b8>)
 800311a:	699b      	ldr	r3, [r3, #24]
 800311c:	f003 0301 	and.w	r3, r3, #1
 8003120:	60bb      	str	r3, [r7, #8]
 8003122:	68bb      	ldr	r3, [r7, #8]
 8003124:	4a48      	ldr	r2, [pc, #288]	; (8003248 <HAL_GPIO_Init+0x2bc>)
 8003126:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003128:	089b      	lsrs	r3, r3, #2
 800312a:	3302      	adds	r3, #2
 800312c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003130:	60fb      	str	r3, [r7, #12]
 8003132:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003134:	f003 0303 	and.w	r3, r3, #3
 8003138:	009b      	lsls	r3, r3, #2
 800313a:	220f      	movs	r2, #15
 800313c:	fa02 f303 	lsl.w	r3, r2, r3
 8003140:	43db      	mvns	r3, r3
 8003142:	68fa      	ldr	r2, [r7, #12]
 8003144:	4013      	ands	r3, r2
 8003146:	60fb      	str	r3, [r7, #12]
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	4a40      	ldr	r2, [pc, #256]	; (800324c <HAL_GPIO_Init+0x2c0>)
 800314c:	4293      	cmp	r3, r2
 800314e:	d013      	beq.n	8003178 <HAL_GPIO_Init+0x1ec>
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	4a3f      	ldr	r2, [pc, #252]	; (8003250 <HAL_GPIO_Init+0x2c4>)
 8003154:	4293      	cmp	r3, r2
 8003156:	d00d      	beq.n	8003174 <HAL_GPIO_Init+0x1e8>
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	4a3e      	ldr	r2, [pc, #248]	; (8003254 <HAL_GPIO_Init+0x2c8>)
 800315c:	4293      	cmp	r3, r2
 800315e:	d007      	beq.n	8003170 <HAL_GPIO_Init+0x1e4>
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	4a3d      	ldr	r2, [pc, #244]	; (8003258 <HAL_GPIO_Init+0x2cc>)
 8003164:	4293      	cmp	r3, r2
 8003166:	d101      	bne.n	800316c <HAL_GPIO_Init+0x1e0>
 8003168:	2303      	movs	r3, #3
 800316a:	e006      	b.n	800317a <HAL_GPIO_Init+0x1ee>
 800316c:	2304      	movs	r3, #4
 800316e:	e004      	b.n	800317a <HAL_GPIO_Init+0x1ee>
 8003170:	2302      	movs	r3, #2
 8003172:	e002      	b.n	800317a <HAL_GPIO_Init+0x1ee>
 8003174:	2301      	movs	r3, #1
 8003176:	e000      	b.n	800317a <HAL_GPIO_Init+0x1ee>
 8003178:	2300      	movs	r3, #0
 800317a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800317c:	f002 0203 	and.w	r2, r2, #3
 8003180:	0092      	lsls	r2, r2, #2
 8003182:	4093      	lsls	r3, r2
 8003184:	68fa      	ldr	r2, [r7, #12]
 8003186:	4313      	orrs	r3, r2
 8003188:	60fb      	str	r3, [r7, #12]
 800318a:	492f      	ldr	r1, [pc, #188]	; (8003248 <HAL_GPIO_Init+0x2bc>)
 800318c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800318e:	089b      	lsrs	r3, r3, #2
 8003190:	3302      	adds	r3, #2
 8003192:	68fa      	ldr	r2, [r7, #12]
 8003194:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003198:	683b      	ldr	r3, [r7, #0]
 800319a:	685b      	ldr	r3, [r3, #4]
 800319c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80031a0:	2b00      	cmp	r3, #0
 80031a2:	d006      	beq.n	80031b2 <HAL_GPIO_Init+0x226>
 80031a4:	4b2d      	ldr	r3, [pc, #180]	; (800325c <HAL_GPIO_Init+0x2d0>)
 80031a6:	681a      	ldr	r2, [r3, #0]
 80031a8:	492c      	ldr	r1, [pc, #176]	; (800325c <HAL_GPIO_Init+0x2d0>)
 80031aa:	69bb      	ldr	r3, [r7, #24]
 80031ac:	4313      	orrs	r3, r2
 80031ae:	600b      	str	r3, [r1, #0]
 80031b0:	e006      	b.n	80031c0 <HAL_GPIO_Init+0x234>
 80031b2:	4b2a      	ldr	r3, [pc, #168]	; (800325c <HAL_GPIO_Init+0x2d0>)
 80031b4:	681a      	ldr	r2, [r3, #0]
 80031b6:	69bb      	ldr	r3, [r7, #24]
 80031b8:	43db      	mvns	r3, r3
 80031ba:	4928      	ldr	r1, [pc, #160]	; (800325c <HAL_GPIO_Init+0x2d0>)
 80031bc:	4013      	ands	r3, r2
 80031be:	600b      	str	r3, [r1, #0]
 80031c0:	683b      	ldr	r3, [r7, #0]
 80031c2:	685b      	ldr	r3, [r3, #4]
 80031c4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80031c8:	2b00      	cmp	r3, #0
 80031ca:	d006      	beq.n	80031da <HAL_GPIO_Init+0x24e>
 80031cc:	4b23      	ldr	r3, [pc, #140]	; (800325c <HAL_GPIO_Init+0x2d0>)
 80031ce:	685a      	ldr	r2, [r3, #4]
 80031d0:	4922      	ldr	r1, [pc, #136]	; (800325c <HAL_GPIO_Init+0x2d0>)
 80031d2:	69bb      	ldr	r3, [r7, #24]
 80031d4:	4313      	orrs	r3, r2
 80031d6:	604b      	str	r3, [r1, #4]
 80031d8:	e006      	b.n	80031e8 <HAL_GPIO_Init+0x25c>
 80031da:	4b20      	ldr	r3, [pc, #128]	; (800325c <HAL_GPIO_Init+0x2d0>)
 80031dc:	685a      	ldr	r2, [r3, #4]
 80031de:	69bb      	ldr	r3, [r7, #24]
 80031e0:	43db      	mvns	r3, r3
 80031e2:	491e      	ldr	r1, [pc, #120]	; (800325c <HAL_GPIO_Init+0x2d0>)
 80031e4:	4013      	ands	r3, r2
 80031e6:	604b      	str	r3, [r1, #4]
 80031e8:	683b      	ldr	r3, [r7, #0]
 80031ea:	685b      	ldr	r3, [r3, #4]
 80031ec:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80031f0:	2b00      	cmp	r3, #0
 80031f2:	d006      	beq.n	8003202 <HAL_GPIO_Init+0x276>
 80031f4:	4b19      	ldr	r3, [pc, #100]	; (800325c <HAL_GPIO_Init+0x2d0>)
 80031f6:	689a      	ldr	r2, [r3, #8]
 80031f8:	4918      	ldr	r1, [pc, #96]	; (800325c <HAL_GPIO_Init+0x2d0>)
 80031fa:	69bb      	ldr	r3, [r7, #24]
 80031fc:	4313      	orrs	r3, r2
 80031fe:	608b      	str	r3, [r1, #8]
 8003200:	e006      	b.n	8003210 <HAL_GPIO_Init+0x284>
 8003202:	4b16      	ldr	r3, [pc, #88]	; (800325c <HAL_GPIO_Init+0x2d0>)
 8003204:	689a      	ldr	r2, [r3, #8]
 8003206:	69bb      	ldr	r3, [r7, #24]
 8003208:	43db      	mvns	r3, r3
 800320a:	4914      	ldr	r1, [pc, #80]	; (800325c <HAL_GPIO_Init+0x2d0>)
 800320c:	4013      	ands	r3, r2
 800320e:	608b      	str	r3, [r1, #8]
 8003210:	683b      	ldr	r3, [r7, #0]
 8003212:	685b      	ldr	r3, [r3, #4]
 8003214:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003218:	2b00      	cmp	r3, #0
 800321a:	d021      	beq.n	8003260 <HAL_GPIO_Init+0x2d4>
 800321c:	4b0f      	ldr	r3, [pc, #60]	; (800325c <HAL_GPIO_Init+0x2d0>)
 800321e:	68da      	ldr	r2, [r3, #12]
 8003220:	490e      	ldr	r1, [pc, #56]	; (800325c <HAL_GPIO_Init+0x2d0>)
 8003222:	69bb      	ldr	r3, [r7, #24]
 8003224:	4313      	orrs	r3, r2
 8003226:	60cb      	str	r3, [r1, #12]
 8003228:	e021      	b.n	800326e <HAL_GPIO_Init+0x2e2>
 800322a:	bf00      	nop
 800322c:	10320000 	.word	0x10320000
 8003230:	10310000 	.word	0x10310000
 8003234:	10220000 	.word	0x10220000
 8003238:	10210000 	.word	0x10210000
 800323c:	10120000 	.word	0x10120000
 8003240:	10110000 	.word	0x10110000
 8003244:	40021000 	.word	0x40021000
 8003248:	40010000 	.word	0x40010000
 800324c:	40010800 	.word	0x40010800
 8003250:	40010c00 	.word	0x40010c00
 8003254:	40011000 	.word	0x40011000
 8003258:	40011400 	.word	0x40011400
 800325c:	40010400 	.word	0x40010400
 8003260:	4b0b      	ldr	r3, [pc, #44]	; (8003290 <HAL_GPIO_Init+0x304>)
 8003262:	68da      	ldr	r2, [r3, #12]
 8003264:	69bb      	ldr	r3, [r7, #24]
 8003266:	43db      	mvns	r3, r3
 8003268:	4909      	ldr	r1, [pc, #36]	; (8003290 <HAL_GPIO_Init+0x304>)
 800326a:	4013      	ands	r3, r2
 800326c:	60cb      	str	r3, [r1, #12]
 800326e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003270:	3301      	adds	r3, #1
 8003272:	627b      	str	r3, [r7, #36]	; 0x24
 8003274:	683b      	ldr	r3, [r7, #0]
 8003276:	681a      	ldr	r2, [r3, #0]
 8003278:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800327a:	fa22 f303 	lsr.w	r3, r2, r3
 800327e:	2b00      	cmp	r3, #0
 8003280:	f47f ae8e 	bne.w	8002fa0 <HAL_GPIO_Init+0x14>
 8003284:	bf00      	nop
 8003286:	bf00      	nop
 8003288:	372c      	adds	r7, #44	; 0x2c
 800328a:	46bd      	mov	sp, r7
 800328c:	bc80      	pop	{r7}
 800328e:	4770      	bx	lr
 8003290:	40010400 	.word	0x40010400

08003294 <HAL_GPIO_ReadPin>:
 8003294:	b480      	push	{r7}
 8003296:	b085      	sub	sp, #20
 8003298:	af00      	add	r7, sp, #0
 800329a:	6078      	str	r0, [r7, #4]
 800329c:	460b      	mov	r3, r1
 800329e:	807b      	strh	r3, [r7, #2]
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	689a      	ldr	r2, [r3, #8]
 80032a4:	887b      	ldrh	r3, [r7, #2]
 80032a6:	4013      	ands	r3, r2
 80032a8:	2b00      	cmp	r3, #0
 80032aa:	d002      	beq.n	80032b2 <HAL_GPIO_ReadPin+0x1e>
 80032ac:	2301      	movs	r3, #1
 80032ae:	73fb      	strb	r3, [r7, #15]
 80032b0:	e001      	b.n	80032b6 <HAL_GPIO_ReadPin+0x22>
 80032b2:	2300      	movs	r3, #0
 80032b4:	73fb      	strb	r3, [r7, #15]
 80032b6:	7bfb      	ldrb	r3, [r7, #15]
 80032b8:	4618      	mov	r0, r3
 80032ba:	3714      	adds	r7, #20
 80032bc:	46bd      	mov	sp, r7
 80032be:	bc80      	pop	{r7}
 80032c0:	4770      	bx	lr

080032c2 <HAL_GPIO_WritePin>:
 80032c2:	b480      	push	{r7}
 80032c4:	b083      	sub	sp, #12
 80032c6:	af00      	add	r7, sp, #0
 80032c8:	6078      	str	r0, [r7, #4]
 80032ca:	460b      	mov	r3, r1
 80032cc:	807b      	strh	r3, [r7, #2]
 80032ce:	4613      	mov	r3, r2
 80032d0:	707b      	strb	r3, [r7, #1]
 80032d2:	787b      	ldrb	r3, [r7, #1]
 80032d4:	2b00      	cmp	r3, #0
 80032d6:	d003      	beq.n	80032e0 <HAL_GPIO_WritePin+0x1e>
 80032d8:	887a      	ldrh	r2, [r7, #2]
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	611a      	str	r2, [r3, #16]
 80032de:	e003      	b.n	80032e8 <HAL_GPIO_WritePin+0x26>
 80032e0:	887b      	ldrh	r3, [r7, #2]
 80032e2:	041a      	lsls	r2, r3, #16
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	611a      	str	r2, [r3, #16]
 80032e8:	bf00      	nop
 80032ea:	370c      	adds	r7, #12
 80032ec:	46bd      	mov	sp, r7
 80032ee:	bc80      	pop	{r7}
 80032f0:	4770      	bx	lr

080032f2 <HAL_GPIO_TogglePin>:
 80032f2:	b480      	push	{r7}
 80032f4:	b085      	sub	sp, #20
 80032f6:	af00      	add	r7, sp, #0
 80032f8:	6078      	str	r0, [r7, #4]
 80032fa:	460b      	mov	r3, r1
 80032fc:	807b      	strh	r3, [r7, #2]
 80032fe:	687b      	ldr	r3, [r7, #4]
 8003300:	68db      	ldr	r3, [r3, #12]
 8003302:	60fb      	str	r3, [r7, #12]
 8003304:	887a      	ldrh	r2, [r7, #2]
 8003306:	68fb      	ldr	r3, [r7, #12]
 8003308:	4013      	ands	r3, r2
 800330a:	041a      	lsls	r2, r3, #16
 800330c:	68fb      	ldr	r3, [r7, #12]
 800330e:	43d9      	mvns	r1, r3
 8003310:	887b      	ldrh	r3, [r7, #2]
 8003312:	400b      	ands	r3, r1
 8003314:	431a      	orrs	r2, r3
 8003316:	687b      	ldr	r3, [r7, #4]
 8003318:	611a      	str	r2, [r3, #16]
 800331a:	bf00      	nop
 800331c:	3714      	adds	r7, #20
 800331e:	46bd      	mov	sp, r7
 8003320:	bc80      	pop	{r7}
 8003322:	4770      	bx	lr

08003324 <HAL_I2C_Init>:
 8003324:	b580      	push	{r7, lr}
 8003326:	b084      	sub	sp, #16
 8003328:	af00      	add	r7, sp, #0
 800332a:	6078      	str	r0, [r7, #4]
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	2b00      	cmp	r3, #0
 8003330:	d101      	bne.n	8003336 <HAL_I2C_Init+0x12>
 8003332:	2301      	movs	r3, #1
 8003334:	e12b      	b.n	800358e <HAL_I2C_Init+0x26a>
 8003336:	687b      	ldr	r3, [r7, #4]
 8003338:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800333c:	b2db      	uxtb	r3, r3
 800333e:	2b00      	cmp	r3, #0
 8003340:	d106      	bne.n	8003350 <HAL_I2C_Init+0x2c>
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	2200      	movs	r2, #0
 8003346:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800334a:	6878      	ldr	r0, [r7, #4]
 800334c:	f7ff f83a 	bl	80023c4 <HAL_I2C_MspInit>
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	2224      	movs	r2, #36	; 0x24
 8003354:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	681b      	ldr	r3, [r3, #0]
 800335c:	681a      	ldr	r2, [r3, #0]
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	681b      	ldr	r3, [r3, #0]
 8003362:	f022 0201 	bic.w	r2, r2, #1
 8003366:	601a      	str	r2, [r3, #0]
 8003368:	687b      	ldr	r3, [r7, #4]
 800336a:	681b      	ldr	r3, [r3, #0]
 800336c:	681a      	ldr	r2, [r3, #0]
 800336e:	687b      	ldr	r3, [r7, #4]
 8003370:	681b      	ldr	r3, [r3, #0]
 8003372:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003376:	601a      	str	r2, [r3, #0]
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	681b      	ldr	r3, [r3, #0]
 800337c:	681a      	ldr	r2, [r3, #0]
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	681b      	ldr	r3, [r3, #0]
 8003382:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003386:	601a      	str	r2, [r3, #0]
 8003388:	f000 ffea 	bl	8004360 <HAL_RCC_GetPCLK1Freq>
 800338c:	60f8      	str	r0, [r7, #12]
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	685b      	ldr	r3, [r3, #4]
 8003392:	4a81      	ldr	r2, [pc, #516]	; (8003598 <HAL_I2C_Init+0x274>)
 8003394:	4293      	cmp	r3, r2
 8003396:	d807      	bhi.n	80033a8 <HAL_I2C_Init+0x84>
 8003398:	68fb      	ldr	r3, [r7, #12]
 800339a:	4a80      	ldr	r2, [pc, #512]	; (800359c <HAL_I2C_Init+0x278>)
 800339c:	4293      	cmp	r3, r2
 800339e:	bf94      	ite	ls
 80033a0:	2301      	movls	r3, #1
 80033a2:	2300      	movhi	r3, #0
 80033a4:	b2db      	uxtb	r3, r3
 80033a6:	e006      	b.n	80033b6 <HAL_I2C_Init+0x92>
 80033a8:	68fb      	ldr	r3, [r7, #12]
 80033aa:	4a7d      	ldr	r2, [pc, #500]	; (80035a0 <HAL_I2C_Init+0x27c>)
 80033ac:	4293      	cmp	r3, r2
 80033ae:	bf94      	ite	ls
 80033b0:	2301      	movls	r3, #1
 80033b2:	2300      	movhi	r3, #0
 80033b4:	b2db      	uxtb	r3, r3
 80033b6:	2b00      	cmp	r3, #0
 80033b8:	d001      	beq.n	80033be <HAL_I2C_Init+0x9a>
 80033ba:	2301      	movs	r3, #1
 80033bc:	e0e7      	b.n	800358e <HAL_I2C_Init+0x26a>
 80033be:	68fb      	ldr	r3, [r7, #12]
 80033c0:	4a78      	ldr	r2, [pc, #480]	; (80035a4 <HAL_I2C_Init+0x280>)
 80033c2:	fba2 2303 	umull	r2, r3, r2, r3
 80033c6:	0c9b      	lsrs	r3, r3, #18
 80033c8:	60bb      	str	r3, [r7, #8]
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	681b      	ldr	r3, [r3, #0]
 80033ce:	685b      	ldr	r3, [r3, #4]
 80033d0:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	681b      	ldr	r3, [r3, #0]
 80033d8:	68ba      	ldr	r2, [r7, #8]
 80033da:	430a      	orrs	r2, r1
 80033dc:	605a      	str	r2, [r3, #4]
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	681b      	ldr	r3, [r3, #0]
 80033e2:	6a1b      	ldr	r3, [r3, #32]
 80033e4:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 80033e8:	687b      	ldr	r3, [r7, #4]
 80033ea:	685b      	ldr	r3, [r3, #4]
 80033ec:	4a6a      	ldr	r2, [pc, #424]	; (8003598 <HAL_I2C_Init+0x274>)
 80033ee:	4293      	cmp	r3, r2
 80033f0:	d802      	bhi.n	80033f8 <HAL_I2C_Init+0xd4>
 80033f2:	68bb      	ldr	r3, [r7, #8]
 80033f4:	3301      	adds	r3, #1
 80033f6:	e009      	b.n	800340c <HAL_I2C_Init+0xe8>
 80033f8:	68bb      	ldr	r3, [r7, #8]
 80033fa:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80033fe:	fb02 f303 	mul.w	r3, r2, r3
 8003402:	4a69      	ldr	r2, [pc, #420]	; (80035a8 <HAL_I2C_Init+0x284>)
 8003404:	fba2 2303 	umull	r2, r3, r2, r3
 8003408:	099b      	lsrs	r3, r3, #6
 800340a:	3301      	adds	r3, #1
 800340c:	687a      	ldr	r2, [r7, #4]
 800340e:	6812      	ldr	r2, [r2, #0]
 8003410:	430b      	orrs	r3, r1
 8003412:	6213      	str	r3, [r2, #32]
 8003414:	687b      	ldr	r3, [r7, #4]
 8003416:	681b      	ldr	r3, [r3, #0]
 8003418:	69db      	ldr	r3, [r3, #28]
 800341a:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 800341e:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	685b      	ldr	r3, [r3, #4]
 8003426:	495c      	ldr	r1, [pc, #368]	; (8003598 <HAL_I2C_Init+0x274>)
 8003428:	428b      	cmp	r3, r1
 800342a:	d819      	bhi.n	8003460 <HAL_I2C_Init+0x13c>
 800342c:	68fb      	ldr	r3, [r7, #12]
 800342e:	1e59      	subs	r1, r3, #1
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	685b      	ldr	r3, [r3, #4]
 8003434:	005b      	lsls	r3, r3, #1
 8003436:	fbb1 f3f3 	udiv	r3, r1, r3
 800343a:	1c59      	adds	r1, r3, #1
 800343c:	f640 73fc 	movw	r3, #4092	; 0xffc
 8003440:	400b      	ands	r3, r1
 8003442:	2b00      	cmp	r3, #0
 8003444:	d00a      	beq.n	800345c <HAL_I2C_Init+0x138>
 8003446:	68fb      	ldr	r3, [r7, #12]
 8003448:	1e59      	subs	r1, r3, #1
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	685b      	ldr	r3, [r3, #4]
 800344e:	005b      	lsls	r3, r3, #1
 8003450:	fbb1 f3f3 	udiv	r3, r1, r3
 8003454:	3301      	adds	r3, #1
 8003456:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800345a:	e051      	b.n	8003500 <HAL_I2C_Init+0x1dc>
 800345c:	2304      	movs	r3, #4
 800345e:	e04f      	b.n	8003500 <HAL_I2C_Init+0x1dc>
 8003460:	687b      	ldr	r3, [r7, #4]
 8003462:	689b      	ldr	r3, [r3, #8]
 8003464:	2b00      	cmp	r3, #0
 8003466:	d111      	bne.n	800348c <HAL_I2C_Init+0x168>
 8003468:	68fb      	ldr	r3, [r7, #12]
 800346a:	1e58      	subs	r0, r3, #1
 800346c:	687b      	ldr	r3, [r7, #4]
 800346e:	6859      	ldr	r1, [r3, #4]
 8003470:	460b      	mov	r3, r1
 8003472:	005b      	lsls	r3, r3, #1
 8003474:	440b      	add	r3, r1
 8003476:	fbb0 f3f3 	udiv	r3, r0, r3
 800347a:	3301      	adds	r3, #1
 800347c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003480:	2b00      	cmp	r3, #0
 8003482:	bf0c      	ite	eq
 8003484:	2301      	moveq	r3, #1
 8003486:	2300      	movne	r3, #0
 8003488:	b2db      	uxtb	r3, r3
 800348a:	e012      	b.n	80034b2 <HAL_I2C_Init+0x18e>
 800348c:	68fb      	ldr	r3, [r7, #12]
 800348e:	1e58      	subs	r0, r3, #1
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	6859      	ldr	r1, [r3, #4]
 8003494:	460b      	mov	r3, r1
 8003496:	009b      	lsls	r3, r3, #2
 8003498:	440b      	add	r3, r1
 800349a:	0099      	lsls	r1, r3, #2
 800349c:	440b      	add	r3, r1
 800349e:	fbb0 f3f3 	udiv	r3, r0, r3
 80034a2:	3301      	adds	r3, #1
 80034a4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80034a8:	2b00      	cmp	r3, #0
 80034aa:	bf0c      	ite	eq
 80034ac:	2301      	moveq	r3, #1
 80034ae:	2300      	movne	r3, #0
 80034b0:	b2db      	uxtb	r3, r3
 80034b2:	2b00      	cmp	r3, #0
 80034b4:	d001      	beq.n	80034ba <HAL_I2C_Init+0x196>
 80034b6:	2301      	movs	r3, #1
 80034b8:	e022      	b.n	8003500 <HAL_I2C_Init+0x1dc>
 80034ba:	687b      	ldr	r3, [r7, #4]
 80034bc:	689b      	ldr	r3, [r3, #8]
 80034be:	2b00      	cmp	r3, #0
 80034c0:	d10e      	bne.n	80034e0 <HAL_I2C_Init+0x1bc>
 80034c2:	68fb      	ldr	r3, [r7, #12]
 80034c4:	1e58      	subs	r0, r3, #1
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	6859      	ldr	r1, [r3, #4]
 80034ca:	460b      	mov	r3, r1
 80034cc:	005b      	lsls	r3, r3, #1
 80034ce:	440b      	add	r3, r1
 80034d0:	fbb0 f3f3 	udiv	r3, r0, r3
 80034d4:	3301      	adds	r3, #1
 80034d6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80034da:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80034de:	e00f      	b.n	8003500 <HAL_I2C_Init+0x1dc>
 80034e0:	68fb      	ldr	r3, [r7, #12]
 80034e2:	1e58      	subs	r0, r3, #1
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	6859      	ldr	r1, [r3, #4]
 80034e8:	460b      	mov	r3, r1
 80034ea:	009b      	lsls	r3, r3, #2
 80034ec:	440b      	add	r3, r1
 80034ee:	0099      	lsls	r1, r3, #2
 80034f0:	440b      	add	r3, r1
 80034f2:	fbb0 f3f3 	udiv	r3, r0, r3
 80034f6:	3301      	adds	r3, #1
 80034f8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80034fc:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8003500:	6879      	ldr	r1, [r7, #4]
 8003502:	6809      	ldr	r1, [r1, #0]
 8003504:	4313      	orrs	r3, r2
 8003506:	61cb      	str	r3, [r1, #28]
 8003508:	687b      	ldr	r3, [r7, #4]
 800350a:	681b      	ldr	r3, [r3, #0]
 800350c:	681b      	ldr	r3, [r3, #0]
 800350e:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	69da      	ldr	r2, [r3, #28]
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	6a1b      	ldr	r3, [r3, #32]
 800351a:	431a      	orrs	r2, r3
 800351c:	687b      	ldr	r3, [r7, #4]
 800351e:	681b      	ldr	r3, [r3, #0]
 8003520:	430a      	orrs	r2, r1
 8003522:	601a      	str	r2, [r3, #0]
 8003524:	687b      	ldr	r3, [r7, #4]
 8003526:	681b      	ldr	r3, [r3, #0]
 8003528:	689b      	ldr	r3, [r3, #8]
 800352a:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 800352e:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8003532:	687a      	ldr	r2, [r7, #4]
 8003534:	6911      	ldr	r1, [r2, #16]
 8003536:	687a      	ldr	r2, [r7, #4]
 8003538:	68d2      	ldr	r2, [r2, #12]
 800353a:	4311      	orrs	r1, r2
 800353c:	687a      	ldr	r2, [r7, #4]
 800353e:	6812      	ldr	r2, [r2, #0]
 8003540:	430b      	orrs	r3, r1
 8003542:	6093      	str	r3, [r2, #8]
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	681b      	ldr	r3, [r3, #0]
 8003548:	68db      	ldr	r3, [r3, #12]
 800354a:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	695a      	ldr	r2, [r3, #20]
 8003552:	687b      	ldr	r3, [r7, #4]
 8003554:	699b      	ldr	r3, [r3, #24]
 8003556:	431a      	orrs	r2, r3
 8003558:	687b      	ldr	r3, [r7, #4]
 800355a:	681b      	ldr	r3, [r3, #0]
 800355c:	430a      	orrs	r2, r1
 800355e:	60da      	str	r2, [r3, #12]
 8003560:	687b      	ldr	r3, [r7, #4]
 8003562:	681b      	ldr	r3, [r3, #0]
 8003564:	681a      	ldr	r2, [r3, #0]
 8003566:	687b      	ldr	r3, [r7, #4]
 8003568:	681b      	ldr	r3, [r3, #0]
 800356a:	f042 0201 	orr.w	r2, r2, #1
 800356e:	601a      	str	r2, [r3, #0]
 8003570:	687b      	ldr	r3, [r7, #4]
 8003572:	2200      	movs	r2, #0
 8003574:	641a      	str	r2, [r3, #64]	; 0x40
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	2220      	movs	r2, #32
 800357a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	2200      	movs	r2, #0
 8003582:	631a      	str	r2, [r3, #48]	; 0x30
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	2200      	movs	r2, #0
 8003588:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800358c:	2300      	movs	r3, #0
 800358e:	4618      	mov	r0, r3
 8003590:	3710      	adds	r7, #16
 8003592:	46bd      	mov	sp, r7
 8003594:	bd80      	pop	{r7, pc}
 8003596:	bf00      	nop
 8003598:	000186a0 	.word	0x000186a0
 800359c:	001e847f 	.word	0x001e847f
 80035a0:	003d08ff 	.word	0x003d08ff
 80035a4:	431bde83 	.word	0x431bde83
 80035a8:	10624dd3 	.word	0x10624dd3

080035ac <HAL_I2C_Master_Transmit>:
 80035ac:	b580      	push	{r7, lr}
 80035ae:	b088      	sub	sp, #32
 80035b0:	af02      	add	r7, sp, #8
 80035b2:	60f8      	str	r0, [r7, #12]
 80035b4:	607a      	str	r2, [r7, #4]
 80035b6:	461a      	mov	r2, r3
 80035b8:	460b      	mov	r3, r1
 80035ba:	817b      	strh	r3, [r7, #10]
 80035bc:	4613      	mov	r3, r2
 80035be:	813b      	strh	r3, [r7, #8]
 80035c0:	f7ff faf8 	bl	8002bb4 <HAL_GetTick>
 80035c4:	6178      	str	r0, [r7, #20]
 80035c6:	68fb      	ldr	r3, [r7, #12]
 80035c8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80035cc:	b2db      	uxtb	r3, r3
 80035ce:	2b20      	cmp	r3, #32
 80035d0:	f040 80e0 	bne.w	8003794 <HAL_I2C_Master_Transmit+0x1e8>
 80035d4:	697b      	ldr	r3, [r7, #20]
 80035d6:	9300      	str	r3, [sp, #0]
 80035d8:	2319      	movs	r3, #25
 80035da:	2201      	movs	r2, #1
 80035dc:	4970      	ldr	r1, [pc, #448]	; (80037a0 <HAL_I2C_Master_Transmit+0x1f4>)
 80035de:	68f8      	ldr	r0, [r7, #12]
 80035e0:	f000 f964 	bl	80038ac <I2C_WaitOnFlagUntilTimeout>
 80035e4:	4603      	mov	r3, r0
 80035e6:	2b00      	cmp	r3, #0
 80035e8:	d001      	beq.n	80035ee <HAL_I2C_Master_Transmit+0x42>
 80035ea:	2302      	movs	r3, #2
 80035ec:	e0d3      	b.n	8003796 <HAL_I2C_Master_Transmit+0x1ea>
 80035ee:	68fb      	ldr	r3, [r7, #12]
 80035f0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80035f4:	2b01      	cmp	r3, #1
 80035f6:	d101      	bne.n	80035fc <HAL_I2C_Master_Transmit+0x50>
 80035f8:	2302      	movs	r3, #2
 80035fa:	e0cc      	b.n	8003796 <HAL_I2C_Master_Transmit+0x1ea>
 80035fc:	68fb      	ldr	r3, [r7, #12]
 80035fe:	2201      	movs	r2, #1
 8003600:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003604:	68fb      	ldr	r3, [r7, #12]
 8003606:	681b      	ldr	r3, [r3, #0]
 8003608:	681b      	ldr	r3, [r3, #0]
 800360a:	f003 0301 	and.w	r3, r3, #1
 800360e:	2b01      	cmp	r3, #1
 8003610:	d007      	beq.n	8003622 <HAL_I2C_Master_Transmit+0x76>
 8003612:	68fb      	ldr	r3, [r7, #12]
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	681a      	ldr	r2, [r3, #0]
 8003618:	68fb      	ldr	r3, [r7, #12]
 800361a:	681b      	ldr	r3, [r3, #0]
 800361c:	f042 0201 	orr.w	r2, r2, #1
 8003620:	601a      	str	r2, [r3, #0]
 8003622:	68fb      	ldr	r3, [r7, #12]
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	681a      	ldr	r2, [r3, #0]
 8003628:	68fb      	ldr	r3, [r7, #12]
 800362a:	681b      	ldr	r3, [r3, #0]
 800362c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003630:	601a      	str	r2, [r3, #0]
 8003632:	68fb      	ldr	r3, [r7, #12]
 8003634:	2221      	movs	r2, #33	; 0x21
 8003636:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800363a:	68fb      	ldr	r3, [r7, #12]
 800363c:	2210      	movs	r2, #16
 800363e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003642:	68fb      	ldr	r3, [r7, #12]
 8003644:	2200      	movs	r2, #0
 8003646:	641a      	str	r2, [r3, #64]	; 0x40
 8003648:	68fb      	ldr	r3, [r7, #12]
 800364a:	687a      	ldr	r2, [r7, #4]
 800364c:	625a      	str	r2, [r3, #36]	; 0x24
 800364e:	68fb      	ldr	r3, [r7, #12]
 8003650:	893a      	ldrh	r2, [r7, #8]
 8003652:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003654:	68fb      	ldr	r3, [r7, #12]
 8003656:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003658:	b29a      	uxth	r2, r3
 800365a:	68fb      	ldr	r3, [r7, #12]
 800365c:	851a      	strh	r2, [r3, #40]	; 0x28
 800365e:	68fb      	ldr	r3, [r7, #12]
 8003660:	4a50      	ldr	r2, [pc, #320]	; (80037a4 <HAL_I2C_Master_Transmit+0x1f8>)
 8003662:	62da      	str	r2, [r3, #44]	; 0x2c
 8003664:	8979      	ldrh	r1, [r7, #10]
 8003666:	697b      	ldr	r3, [r7, #20]
 8003668:	6a3a      	ldr	r2, [r7, #32]
 800366a:	68f8      	ldr	r0, [r7, #12]
 800366c:	f000 f89c 	bl	80037a8 <I2C_MasterRequestWrite>
 8003670:	4603      	mov	r3, r0
 8003672:	2b00      	cmp	r3, #0
 8003674:	d001      	beq.n	800367a <HAL_I2C_Master_Transmit+0xce>
 8003676:	2301      	movs	r3, #1
 8003678:	e08d      	b.n	8003796 <HAL_I2C_Master_Transmit+0x1ea>
 800367a:	2300      	movs	r3, #0
 800367c:	613b      	str	r3, [r7, #16]
 800367e:	68fb      	ldr	r3, [r7, #12]
 8003680:	681b      	ldr	r3, [r3, #0]
 8003682:	695b      	ldr	r3, [r3, #20]
 8003684:	613b      	str	r3, [r7, #16]
 8003686:	68fb      	ldr	r3, [r7, #12]
 8003688:	681b      	ldr	r3, [r3, #0]
 800368a:	699b      	ldr	r3, [r3, #24]
 800368c:	613b      	str	r3, [r7, #16]
 800368e:	693b      	ldr	r3, [r7, #16]
 8003690:	e066      	b.n	8003760 <HAL_I2C_Master_Transmit+0x1b4>
 8003692:	697a      	ldr	r2, [r7, #20]
 8003694:	6a39      	ldr	r1, [r7, #32]
 8003696:	68f8      	ldr	r0, [r7, #12]
 8003698:	f000 f9de 	bl	8003a58 <I2C_WaitOnTXEFlagUntilTimeout>
 800369c:	4603      	mov	r3, r0
 800369e:	2b00      	cmp	r3, #0
 80036a0:	d00d      	beq.n	80036be <HAL_I2C_Master_Transmit+0x112>
 80036a2:	68fb      	ldr	r3, [r7, #12]
 80036a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80036a6:	2b04      	cmp	r3, #4
 80036a8:	d107      	bne.n	80036ba <HAL_I2C_Master_Transmit+0x10e>
 80036aa:	68fb      	ldr	r3, [r7, #12]
 80036ac:	681b      	ldr	r3, [r3, #0]
 80036ae:	681a      	ldr	r2, [r3, #0]
 80036b0:	68fb      	ldr	r3, [r7, #12]
 80036b2:	681b      	ldr	r3, [r3, #0]
 80036b4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80036b8:	601a      	str	r2, [r3, #0]
 80036ba:	2301      	movs	r3, #1
 80036bc:	e06b      	b.n	8003796 <HAL_I2C_Master_Transmit+0x1ea>
 80036be:	68fb      	ldr	r3, [r7, #12]
 80036c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036c2:	781a      	ldrb	r2, [r3, #0]
 80036c4:	68fb      	ldr	r3, [r7, #12]
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	611a      	str	r2, [r3, #16]
 80036ca:	68fb      	ldr	r3, [r7, #12]
 80036cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036ce:	1c5a      	adds	r2, r3, #1
 80036d0:	68fb      	ldr	r3, [r7, #12]
 80036d2:	625a      	str	r2, [r3, #36]	; 0x24
 80036d4:	68fb      	ldr	r3, [r7, #12]
 80036d6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80036d8:	b29b      	uxth	r3, r3
 80036da:	3b01      	subs	r3, #1
 80036dc:	b29a      	uxth	r2, r3
 80036de:	68fb      	ldr	r3, [r7, #12]
 80036e0:	855a      	strh	r2, [r3, #42]	; 0x2a
 80036e2:	68fb      	ldr	r3, [r7, #12]
 80036e4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80036e6:	3b01      	subs	r3, #1
 80036e8:	b29a      	uxth	r2, r3
 80036ea:	68fb      	ldr	r3, [r7, #12]
 80036ec:	851a      	strh	r2, [r3, #40]	; 0x28
 80036ee:	68fb      	ldr	r3, [r7, #12]
 80036f0:	681b      	ldr	r3, [r3, #0]
 80036f2:	695b      	ldr	r3, [r3, #20]
 80036f4:	f003 0304 	and.w	r3, r3, #4
 80036f8:	2b04      	cmp	r3, #4
 80036fa:	d11b      	bne.n	8003734 <HAL_I2C_Master_Transmit+0x188>
 80036fc:	68fb      	ldr	r3, [r7, #12]
 80036fe:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003700:	2b00      	cmp	r3, #0
 8003702:	d017      	beq.n	8003734 <HAL_I2C_Master_Transmit+0x188>
 8003704:	68fb      	ldr	r3, [r7, #12]
 8003706:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003708:	781a      	ldrb	r2, [r3, #0]
 800370a:	68fb      	ldr	r3, [r7, #12]
 800370c:	681b      	ldr	r3, [r3, #0]
 800370e:	611a      	str	r2, [r3, #16]
 8003710:	68fb      	ldr	r3, [r7, #12]
 8003712:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003714:	1c5a      	adds	r2, r3, #1
 8003716:	68fb      	ldr	r3, [r7, #12]
 8003718:	625a      	str	r2, [r3, #36]	; 0x24
 800371a:	68fb      	ldr	r3, [r7, #12]
 800371c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800371e:	b29b      	uxth	r3, r3
 8003720:	3b01      	subs	r3, #1
 8003722:	b29a      	uxth	r2, r3
 8003724:	68fb      	ldr	r3, [r7, #12]
 8003726:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003728:	68fb      	ldr	r3, [r7, #12]
 800372a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800372c:	3b01      	subs	r3, #1
 800372e:	b29a      	uxth	r2, r3
 8003730:	68fb      	ldr	r3, [r7, #12]
 8003732:	851a      	strh	r2, [r3, #40]	; 0x28
 8003734:	697a      	ldr	r2, [r7, #20]
 8003736:	6a39      	ldr	r1, [r7, #32]
 8003738:	68f8      	ldr	r0, [r7, #12]
 800373a:	f000 f9ce 	bl	8003ada <I2C_WaitOnBTFFlagUntilTimeout>
 800373e:	4603      	mov	r3, r0
 8003740:	2b00      	cmp	r3, #0
 8003742:	d00d      	beq.n	8003760 <HAL_I2C_Master_Transmit+0x1b4>
 8003744:	68fb      	ldr	r3, [r7, #12]
 8003746:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003748:	2b04      	cmp	r3, #4
 800374a:	d107      	bne.n	800375c <HAL_I2C_Master_Transmit+0x1b0>
 800374c:	68fb      	ldr	r3, [r7, #12]
 800374e:	681b      	ldr	r3, [r3, #0]
 8003750:	681a      	ldr	r2, [r3, #0]
 8003752:	68fb      	ldr	r3, [r7, #12]
 8003754:	681b      	ldr	r3, [r3, #0]
 8003756:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800375a:	601a      	str	r2, [r3, #0]
 800375c:	2301      	movs	r3, #1
 800375e:	e01a      	b.n	8003796 <HAL_I2C_Master_Transmit+0x1ea>
 8003760:	68fb      	ldr	r3, [r7, #12]
 8003762:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003764:	2b00      	cmp	r3, #0
 8003766:	d194      	bne.n	8003692 <HAL_I2C_Master_Transmit+0xe6>
 8003768:	68fb      	ldr	r3, [r7, #12]
 800376a:	681b      	ldr	r3, [r3, #0]
 800376c:	681a      	ldr	r2, [r3, #0]
 800376e:	68fb      	ldr	r3, [r7, #12]
 8003770:	681b      	ldr	r3, [r3, #0]
 8003772:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003776:	601a      	str	r2, [r3, #0]
 8003778:	68fb      	ldr	r3, [r7, #12]
 800377a:	2220      	movs	r2, #32
 800377c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003780:	68fb      	ldr	r3, [r7, #12]
 8003782:	2200      	movs	r2, #0
 8003784:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003788:	68fb      	ldr	r3, [r7, #12]
 800378a:	2200      	movs	r2, #0
 800378c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003790:	2300      	movs	r3, #0
 8003792:	e000      	b.n	8003796 <HAL_I2C_Master_Transmit+0x1ea>
 8003794:	2302      	movs	r3, #2
 8003796:	4618      	mov	r0, r3
 8003798:	3718      	adds	r7, #24
 800379a:	46bd      	mov	sp, r7
 800379c:	bd80      	pop	{r7, pc}
 800379e:	bf00      	nop
 80037a0:	00100002 	.word	0x00100002
 80037a4:	ffff0000 	.word	0xffff0000

080037a8 <I2C_MasterRequestWrite>:
 80037a8:	b580      	push	{r7, lr}
 80037aa:	b088      	sub	sp, #32
 80037ac:	af02      	add	r7, sp, #8
 80037ae:	60f8      	str	r0, [r7, #12]
 80037b0:	607a      	str	r2, [r7, #4]
 80037b2:	603b      	str	r3, [r7, #0]
 80037b4:	460b      	mov	r3, r1
 80037b6:	817b      	strh	r3, [r7, #10]
 80037b8:	68fb      	ldr	r3, [r7, #12]
 80037ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80037bc:	617b      	str	r3, [r7, #20]
 80037be:	697b      	ldr	r3, [r7, #20]
 80037c0:	2b08      	cmp	r3, #8
 80037c2:	d006      	beq.n	80037d2 <I2C_MasterRequestWrite+0x2a>
 80037c4:	697b      	ldr	r3, [r7, #20]
 80037c6:	2b01      	cmp	r3, #1
 80037c8:	d003      	beq.n	80037d2 <I2C_MasterRequestWrite+0x2a>
 80037ca:	697b      	ldr	r3, [r7, #20]
 80037cc:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80037d0:	d108      	bne.n	80037e4 <I2C_MasterRequestWrite+0x3c>
 80037d2:	68fb      	ldr	r3, [r7, #12]
 80037d4:	681b      	ldr	r3, [r3, #0]
 80037d6:	681a      	ldr	r2, [r3, #0]
 80037d8:	68fb      	ldr	r3, [r7, #12]
 80037da:	681b      	ldr	r3, [r3, #0]
 80037dc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80037e0:	601a      	str	r2, [r3, #0]
 80037e2:	e00b      	b.n	80037fc <I2C_MasterRequestWrite+0x54>
 80037e4:	68fb      	ldr	r3, [r7, #12]
 80037e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80037e8:	2b12      	cmp	r3, #18
 80037ea:	d107      	bne.n	80037fc <I2C_MasterRequestWrite+0x54>
 80037ec:	68fb      	ldr	r3, [r7, #12]
 80037ee:	681b      	ldr	r3, [r3, #0]
 80037f0:	681a      	ldr	r2, [r3, #0]
 80037f2:	68fb      	ldr	r3, [r7, #12]
 80037f4:	681b      	ldr	r3, [r3, #0]
 80037f6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80037fa:	601a      	str	r2, [r3, #0]
 80037fc:	683b      	ldr	r3, [r7, #0]
 80037fe:	9300      	str	r3, [sp, #0]
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	2200      	movs	r2, #0
 8003804:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003808:	68f8      	ldr	r0, [r7, #12]
 800380a:	f000 f84f 	bl	80038ac <I2C_WaitOnFlagUntilTimeout>
 800380e:	4603      	mov	r3, r0
 8003810:	2b00      	cmp	r3, #0
 8003812:	d00d      	beq.n	8003830 <I2C_MasterRequestWrite+0x88>
 8003814:	68fb      	ldr	r3, [r7, #12]
 8003816:	681b      	ldr	r3, [r3, #0]
 8003818:	681b      	ldr	r3, [r3, #0]
 800381a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800381e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003822:	d103      	bne.n	800382c <I2C_MasterRequestWrite+0x84>
 8003824:	68fb      	ldr	r3, [r7, #12]
 8003826:	f44f 7200 	mov.w	r2, #512	; 0x200
 800382a:	641a      	str	r2, [r3, #64]	; 0x40
 800382c:	2303      	movs	r3, #3
 800382e:	e035      	b.n	800389c <I2C_MasterRequestWrite+0xf4>
 8003830:	68fb      	ldr	r3, [r7, #12]
 8003832:	691b      	ldr	r3, [r3, #16]
 8003834:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8003838:	d108      	bne.n	800384c <I2C_MasterRequestWrite+0xa4>
 800383a:	897b      	ldrh	r3, [r7, #10]
 800383c:	b2db      	uxtb	r3, r3
 800383e:	461a      	mov	r2, r3
 8003840:	68fb      	ldr	r3, [r7, #12]
 8003842:	681b      	ldr	r3, [r3, #0]
 8003844:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8003848:	611a      	str	r2, [r3, #16]
 800384a:	e01b      	b.n	8003884 <I2C_MasterRequestWrite+0xdc>
 800384c:	897b      	ldrh	r3, [r7, #10]
 800384e:	11db      	asrs	r3, r3, #7
 8003850:	b2db      	uxtb	r3, r3
 8003852:	f003 0306 	and.w	r3, r3, #6
 8003856:	b2db      	uxtb	r3, r3
 8003858:	f063 030f 	orn	r3, r3, #15
 800385c:	b2da      	uxtb	r2, r3
 800385e:	68fb      	ldr	r3, [r7, #12]
 8003860:	681b      	ldr	r3, [r3, #0]
 8003862:	611a      	str	r2, [r3, #16]
 8003864:	683b      	ldr	r3, [r7, #0]
 8003866:	687a      	ldr	r2, [r7, #4]
 8003868:	490e      	ldr	r1, [pc, #56]	; (80038a4 <I2C_MasterRequestWrite+0xfc>)
 800386a:	68f8      	ldr	r0, [r7, #12]
 800386c:	f000 f875 	bl	800395a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003870:	4603      	mov	r3, r0
 8003872:	2b00      	cmp	r3, #0
 8003874:	d001      	beq.n	800387a <I2C_MasterRequestWrite+0xd2>
 8003876:	2301      	movs	r3, #1
 8003878:	e010      	b.n	800389c <I2C_MasterRequestWrite+0xf4>
 800387a:	897b      	ldrh	r3, [r7, #10]
 800387c:	b2da      	uxtb	r2, r3
 800387e:	68fb      	ldr	r3, [r7, #12]
 8003880:	681b      	ldr	r3, [r3, #0]
 8003882:	611a      	str	r2, [r3, #16]
 8003884:	683b      	ldr	r3, [r7, #0]
 8003886:	687a      	ldr	r2, [r7, #4]
 8003888:	4907      	ldr	r1, [pc, #28]	; (80038a8 <I2C_MasterRequestWrite+0x100>)
 800388a:	68f8      	ldr	r0, [r7, #12]
 800388c:	f000 f865 	bl	800395a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003890:	4603      	mov	r3, r0
 8003892:	2b00      	cmp	r3, #0
 8003894:	d001      	beq.n	800389a <I2C_MasterRequestWrite+0xf2>
 8003896:	2301      	movs	r3, #1
 8003898:	e000      	b.n	800389c <I2C_MasterRequestWrite+0xf4>
 800389a:	2300      	movs	r3, #0
 800389c:	4618      	mov	r0, r3
 800389e:	3718      	adds	r7, #24
 80038a0:	46bd      	mov	sp, r7
 80038a2:	bd80      	pop	{r7, pc}
 80038a4:	00010008 	.word	0x00010008
 80038a8:	00010002 	.word	0x00010002

080038ac <I2C_WaitOnFlagUntilTimeout>:
 80038ac:	b580      	push	{r7, lr}
 80038ae:	b084      	sub	sp, #16
 80038b0:	af00      	add	r7, sp, #0
 80038b2:	60f8      	str	r0, [r7, #12]
 80038b4:	60b9      	str	r1, [r7, #8]
 80038b6:	603b      	str	r3, [r7, #0]
 80038b8:	4613      	mov	r3, r2
 80038ba:	71fb      	strb	r3, [r7, #7]
 80038bc:	e025      	b.n	800390a <I2C_WaitOnFlagUntilTimeout+0x5e>
 80038be:	683b      	ldr	r3, [r7, #0]
 80038c0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80038c4:	d021      	beq.n	800390a <I2C_WaitOnFlagUntilTimeout+0x5e>
 80038c6:	f7ff f975 	bl	8002bb4 <HAL_GetTick>
 80038ca:	4602      	mov	r2, r0
 80038cc:	69bb      	ldr	r3, [r7, #24]
 80038ce:	1ad3      	subs	r3, r2, r3
 80038d0:	683a      	ldr	r2, [r7, #0]
 80038d2:	429a      	cmp	r2, r3
 80038d4:	d302      	bcc.n	80038dc <I2C_WaitOnFlagUntilTimeout+0x30>
 80038d6:	683b      	ldr	r3, [r7, #0]
 80038d8:	2b00      	cmp	r3, #0
 80038da:	d116      	bne.n	800390a <I2C_WaitOnFlagUntilTimeout+0x5e>
 80038dc:	68fb      	ldr	r3, [r7, #12]
 80038de:	2200      	movs	r2, #0
 80038e0:	631a      	str	r2, [r3, #48]	; 0x30
 80038e2:	68fb      	ldr	r3, [r7, #12]
 80038e4:	2220      	movs	r2, #32
 80038e6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80038ea:	68fb      	ldr	r3, [r7, #12]
 80038ec:	2200      	movs	r2, #0
 80038ee:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80038f2:	68fb      	ldr	r3, [r7, #12]
 80038f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80038f6:	f043 0220 	orr.w	r2, r3, #32
 80038fa:	68fb      	ldr	r3, [r7, #12]
 80038fc:	641a      	str	r2, [r3, #64]	; 0x40
 80038fe:	68fb      	ldr	r3, [r7, #12]
 8003900:	2200      	movs	r2, #0
 8003902:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003906:	2301      	movs	r3, #1
 8003908:	e023      	b.n	8003952 <I2C_WaitOnFlagUntilTimeout+0xa6>
 800390a:	68bb      	ldr	r3, [r7, #8]
 800390c:	0c1b      	lsrs	r3, r3, #16
 800390e:	b2db      	uxtb	r3, r3
 8003910:	2b01      	cmp	r3, #1
 8003912:	d10d      	bne.n	8003930 <I2C_WaitOnFlagUntilTimeout+0x84>
 8003914:	68fb      	ldr	r3, [r7, #12]
 8003916:	681b      	ldr	r3, [r3, #0]
 8003918:	695b      	ldr	r3, [r3, #20]
 800391a:	43da      	mvns	r2, r3
 800391c:	68bb      	ldr	r3, [r7, #8]
 800391e:	4013      	ands	r3, r2
 8003920:	b29b      	uxth	r3, r3
 8003922:	2b00      	cmp	r3, #0
 8003924:	bf0c      	ite	eq
 8003926:	2301      	moveq	r3, #1
 8003928:	2300      	movne	r3, #0
 800392a:	b2db      	uxtb	r3, r3
 800392c:	461a      	mov	r2, r3
 800392e:	e00c      	b.n	800394a <I2C_WaitOnFlagUntilTimeout+0x9e>
 8003930:	68fb      	ldr	r3, [r7, #12]
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	699b      	ldr	r3, [r3, #24]
 8003936:	43da      	mvns	r2, r3
 8003938:	68bb      	ldr	r3, [r7, #8]
 800393a:	4013      	ands	r3, r2
 800393c:	b29b      	uxth	r3, r3
 800393e:	2b00      	cmp	r3, #0
 8003940:	bf0c      	ite	eq
 8003942:	2301      	moveq	r3, #1
 8003944:	2300      	movne	r3, #0
 8003946:	b2db      	uxtb	r3, r3
 8003948:	461a      	mov	r2, r3
 800394a:	79fb      	ldrb	r3, [r7, #7]
 800394c:	429a      	cmp	r2, r3
 800394e:	d0b6      	beq.n	80038be <I2C_WaitOnFlagUntilTimeout+0x12>
 8003950:	2300      	movs	r3, #0
 8003952:	4618      	mov	r0, r3
 8003954:	3710      	adds	r7, #16
 8003956:	46bd      	mov	sp, r7
 8003958:	bd80      	pop	{r7, pc}

0800395a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 800395a:	b580      	push	{r7, lr}
 800395c:	b084      	sub	sp, #16
 800395e:	af00      	add	r7, sp, #0
 8003960:	60f8      	str	r0, [r7, #12]
 8003962:	60b9      	str	r1, [r7, #8]
 8003964:	607a      	str	r2, [r7, #4]
 8003966:	603b      	str	r3, [r7, #0]
 8003968:	e051      	b.n	8003a0e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800396a:	68fb      	ldr	r3, [r7, #12]
 800396c:	681b      	ldr	r3, [r3, #0]
 800396e:	695b      	ldr	r3, [r3, #20]
 8003970:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003974:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003978:	d123      	bne.n	80039c2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 800397a:	68fb      	ldr	r3, [r7, #12]
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	681a      	ldr	r2, [r3, #0]
 8003980:	68fb      	ldr	r3, [r7, #12]
 8003982:	681b      	ldr	r3, [r3, #0]
 8003984:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003988:	601a      	str	r2, [r3, #0]
 800398a:	68fb      	ldr	r3, [r7, #12]
 800398c:	681b      	ldr	r3, [r3, #0]
 800398e:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8003992:	615a      	str	r2, [r3, #20]
 8003994:	68fb      	ldr	r3, [r7, #12]
 8003996:	2200      	movs	r2, #0
 8003998:	631a      	str	r2, [r3, #48]	; 0x30
 800399a:	68fb      	ldr	r3, [r7, #12]
 800399c:	2220      	movs	r2, #32
 800399e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80039a2:	68fb      	ldr	r3, [r7, #12]
 80039a4:	2200      	movs	r2, #0
 80039a6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80039aa:	68fb      	ldr	r3, [r7, #12]
 80039ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80039ae:	f043 0204 	orr.w	r2, r3, #4
 80039b2:	68fb      	ldr	r3, [r7, #12]
 80039b4:	641a      	str	r2, [r3, #64]	; 0x40
 80039b6:	68fb      	ldr	r3, [r7, #12]
 80039b8:	2200      	movs	r2, #0
 80039ba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80039be:	2301      	movs	r3, #1
 80039c0:	e046      	b.n	8003a50 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80039c8:	d021      	beq.n	8003a0e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 80039ca:	f7ff f8f3 	bl	8002bb4 <HAL_GetTick>
 80039ce:	4602      	mov	r2, r0
 80039d0:	683b      	ldr	r3, [r7, #0]
 80039d2:	1ad3      	subs	r3, r2, r3
 80039d4:	687a      	ldr	r2, [r7, #4]
 80039d6:	429a      	cmp	r2, r3
 80039d8:	d302      	bcc.n	80039e0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 80039da:	687b      	ldr	r3, [r7, #4]
 80039dc:	2b00      	cmp	r3, #0
 80039de:	d116      	bne.n	8003a0e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 80039e0:	68fb      	ldr	r3, [r7, #12]
 80039e2:	2200      	movs	r2, #0
 80039e4:	631a      	str	r2, [r3, #48]	; 0x30
 80039e6:	68fb      	ldr	r3, [r7, #12]
 80039e8:	2220      	movs	r2, #32
 80039ea:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80039ee:	68fb      	ldr	r3, [r7, #12]
 80039f0:	2200      	movs	r2, #0
 80039f2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80039f6:	68fb      	ldr	r3, [r7, #12]
 80039f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80039fa:	f043 0220 	orr.w	r2, r3, #32
 80039fe:	68fb      	ldr	r3, [r7, #12]
 8003a00:	641a      	str	r2, [r3, #64]	; 0x40
 8003a02:	68fb      	ldr	r3, [r7, #12]
 8003a04:	2200      	movs	r2, #0
 8003a06:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003a0a:	2301      	movs	r3, #1
 8003a0c:	e020      	b.n	8003a50 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8003a0e:	68bb      	ldr	r3, [r7, #8]
 8003a10:	0c1b      	lsrs	r3, r3, #16
 8003a12:	b2db      	uxtb	r3, r3
 8003a14:	2b01      	cmp	r3, #1
 8003a16:	d10c      	bne.n	8003a32 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8003a18:	68fb      	ldr	r3, [r7, #12]
 8003a1a:	681b      	ldr	r3, [r3, #0]
 8003a1c:	695b      	ldr	r3, [r3, #20]
 8003a1e:	43da      	mvns	r2, r3
 8003a20:	68bb      	ldr	r3, [r7, #8]
 8003a22:	4013      	ands	r3, r2
 8003a24:	b29b      	uxth	r3, r3
 8003a26:	2b00      	cmp	r3, #0
 8003a28:	bf14      	ite	ne
 8003a2a:	2301      	movne	r3, #1
 8003a2c:	2300      	moveq	r3, #0
 8003a2e:	b2db      	uxtb	r3, r3
 8003a30:	e00b      	b.n	8003a4a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8003a32:	68fb      	ldr	r3, [r7, #12]
 8003a34:	681b      	ldr	r3, [r3, #0]
 8003a36:	699b      	ldr	r3, [r3, #24]
 8003a38:	43da      	mvns	r2, r3
 8003a3a:	68bb      	ldr	r3, [r7, #8]
 8003a3c:	4013      	ands	r3, r2
 8003a3e:	b29b      	uxth	r3, r3
 8003a40:	2b00      	cmp	r3, #0
 8003a42:	bf14      	ite	ne
 8003a44:	2301      	movne	r3, #1
 8003a46:	2300      	moveq	r3, #0
 8003a48:	b2db      	uxtb	r3, r3
 8003a4a:	2b00      	cmp	r3, #0
 8003a4c:	d18d      	bne.n	800396a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8003a4e:	2300      	movs	r3, #0
 8003a50:	4618      	mov	r0, r3
 8003a52:	3710      	adds	r7, #16
 8003a54:	46bd      	mov	sp, r7
 8003a56:	bd80      	pop	{r7, pc}

08003a58 <I2C_WaitOnTXEFlagUntilTimeout>:
 8003a58:	b580      	push	{r7, lr}
 8003a5a:	b084      	sub	sp, #16
 8003a5c:	af00      	add	r7, sp, #0
 8003a5e:	60f8      	str	r0, [r7, #12]
 8003a60:	60b9      	str	r1, [r7, #8]
 8003a62:	607a      	str	r2, [r7, #4]
 8003a64:	e02d      	b.n	8003ac2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8003a66:	68f8      	ldr	r0, [r7, #12]
 8003a68:	f000 f878 	bl	8003b5c <I2C_IsAcknowledgeFailed>
 8003a6c:	4603      	mov	r3, r0
 8003a6e:	2b00      	cmp	r3, #0
 8003a70:	d001      	beq.n	8003a76 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8003a72:	2301      	movs	r3, #1
 8003a74:	e02d      	b.n	8003ad2 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8003a76:	68bb      	ldr	r3, [r7, #8]
 8003a78:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003a7c:	d021      	beq.n	8003ac2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8003a7e:	f7ff f899 	bl	8002bb4 <HAL_GetTick>
 8003a82:	4602      	mov	r2, r0
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	1ad3      	subs	r3, r2, r3
 8003a88:	68ba      	ldr	r2, [r7, #8]
 8003a8a:	429a      	cmp	r2, r3
 8003a8c:	d302      	bcc.n	8003a94 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8003a8e:	68bb      	ldr	r3, [r7, #8]
 8003a90:	2b00      	cmp	r3, #0
 8003a92:	d116      	bne.n	8003ac2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8003a94:	68fb      	ldr	r3, [r7, #12]
 8003a96:	2200      	movs	r2, #0
 8003a98:	631a      	str	r2, [r3, #48]	; 0x30
 8003a9a:	68fb      	ldr	r3, [r7, #12]
 8003a9c:	2220      	movs	r2, #32
 8003a9e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003aa2:	68fb      	ldr	r3, [r7, #12]
 8003aa4:	2200      	movs	r2, #0
 8003aa6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003aaa:	68fb      	ldr	r3, [r7, #12]
 8003aac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003aae:	f043 0220 	orr.w	r2, r3, #32
 8003ab2:	68fb      	ldr	r3, [r7, #12]
 8003ab4:	641a      	str	r2, [r3, #64]	; 0x40
 8003ab6:	68fb      	ldr	r3, [r7, #12]
 8003ab8:	2200      	movs	r2, #0
 8003aba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003abe:	2301      	movs	r3, #1
 8003ac0:	e007      	b.n	8003ad2 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8003ac2:	68fb      	ldr	r3, [r7, #12]
 8003ac4:	681b      	ldr	r3, [r3, #0]
 8003ac6:	695b      	ldr	r3, [r3, #20]
 8003ac8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003acc:	2b80      	cmp	r3, #128	; 0x80
 8003ace:	d1ca      	bne.n	8003a66 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8003ad0:	2300      	movs	r3, #0
 8003ad2:	4618      	mov	r0, r3
 8003ad4:	3710      	adds	r7, #16
 8003ad6:	46bd      	mov	sp, r7
 8003ad8:	bd80      	pop	{r7, pc}

08003ada <I2C_WaitOnBTFFlagUntilTimeout>:
 8003ada:	b580      	push	{r7, lr}
 8003adc:	b084      	sub	sp, #16
 8003ade:	af00      	add	r7, sp, #0
 8003ae0:	60f8      	str	r0, [r7, #12]
 8003ae2:	60b9      	str	r1, [r7, #8]
 8003ae4:	607a      	str	r2, [r7, #4]
 8003ae6:	e02d      	b.n	8003b44 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8003ae8:	68f8      	ldr	r0, [r7, #12]
 8003aea:	f000 f837 	bl	8003b5c <I2C_IsAcknowledgeFailed>
 8003aee:	4603      	mov	r3, r0
 8003af0:	2b00      	cmp	r3, #0
 8003af2:	d001      	beq.n	8003af8 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8003af4:	2301      	movs	r3, #1
 8003af6:	e02d      	b.n	8003b54 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8003af8:	68bb      	ldr	r3, [r7, #8]
 8003afa:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003afe:	d021      	beq.n	8003b44 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8003b00:	f7ff f858 	bl	8002bb4 <HAL_GetTick>
 8003b04:	4602      	mov	r2, r0
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	1ad3      	subs	r3, r2, r3
 8003b0a:	68ba      	ldr	r2, [r7, #8]
 8003b0c:	429a      	cmp	r2, r3
 8003b0e:	d302      	bcc.n	8003b16 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8003b10:	68bb      	ldr	r3, [r7, #8]
 8003b12:	2b00      	cmp	r3, #0
 8003b14:	d116      	bne.n	8003b44 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8003b16:	68fb      	ldr	r3, [r7, #12]
 8003b18:	2200      	movs	r2, #0
 8003b1a:	631a      	str	r2, [r3, #48]	; 0x30
 8003b1c:	68fb      	ldr	r3, [r7, #12]
 8003b1e:	2220      	movs	r2, #32
 8003b20:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003b24:	68fb      	ldr	r3, [r7, #12]
 8003b26:	2200      	movs	r2, #0
 8003b28:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003b2c:	68fb      	ldr	r3, [r7, #12]
 8003b2e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b30:	f043 0220 	orr.w	r2, r3, #32
 8003b34:	68fb      	ldr	r3, [r7, #12]
 8003b36:	641a      	str	r2, [r3, #64]	; 0x40
 8003b38:	68fb      	ldr	r3, [r7, #12]
 8003b3a:	2200      	movs	r2, #0
 8003b3c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003b40:	2301      	movs	r3, #1
 8003b42:	e007      	b.n	8003b54 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8003b44:	68fb      	ldr	r3, [r7, #12]
 8003b46:	681b      	ldr	r3, [r3, #0]
 8003b48:	695b      	ldr	r3, [r3, #20]
 8003b4a:	f003 0304 	and.w	r3, r3, #4
 8003b4e:	2b04      	cmp	r3, #4
 8003b50:	d1ca      	bne.n	8003ae8 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8003b52:	2300      	movs	r3, #0
 8003b54:	4618      	mov	r0, r3
 8003b56:	3710      	adds	r7, #16
 8003b58:	46bd      	mov	sp, r7
 8003b5a:	bd80      	pop	{r7, pc}

08003b5c <I2C_IsAcknowledgeFailed>:
 8003b5c:	b480      	push	{r7}
 8003b5e:	b083      	sub	sp, #12
 8003b60:	af00      	add	r7, sp, #0
 8003b62:	6078      	str	r0, [r7, #4]
 8003b64:	687b      	ldr	r3, [r7, #4]
 8003b66:	681b      	ldr	r3, [r3, #0]
 8003b68:	695b      	ldr	r3, [r3, #20]
 8003b6a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003b6e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003b72:	d11b      	bne.n	8003bac <I2C_IsAcknowledgeFailed+0x50>
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	681b      	ldr	r3, [r3, #0]
 8003b78:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8003b7c:	615a      	str	r2, [r3, #20]
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	2200      	movs	r2, #0
 8003b82:	631a      	str	r2, [r3, #48]	; 0x30
 8003b84:	687b      	ldr	r3, [r7, #4]
 8003b86:	2220      	movs	r2, #32
 8003b88:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	2200      	movs	r2, #0
 8003b90:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003b94:	687b      	ldr	r3, [r7, #4]
 8003b96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b98:	f043 0204 	orr.w	r2, r3, #4
 8003b9c:	687b      	ldr	r3, [r7, #4]
 8003b9e:	641a      	str	r2, [r3, #64]	; 0x40
 8003ba0:	687b      	ldr	r3, [r7, #4]
 8003ba2:	2200      	movs	r2, #0
 8003ba4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003ba8:	2301      	movs	r3, #1
 8003baa:	e000      	b.n	8003bae <I2C_IsAcknowledgeFailed+0x52>
 8003bac:	2300      	movs	r3, #0
 8003bae:	4618      	mov	r0, r3
 8003bb0:	370c      	adds	r7, #12
 8003bb2:	46bd      	mov	sp, r7
 8003bb4:	bc80      	pop	{r7}
 8003bb6:	4770      	bx	lr

08003bb8 <HAL_RCC_OscConfig>:
 8003bb8:	b580      	push	{r7, lr}
 8003bba:	b086      	sub	sp, #24
 8003bbc:	af00      	add	r7, sp, #0
 8003bbe:	6078      	str	r0, [r7, #4]
 8003bc0:	687b      	ldr	r3, [r7, #4]
 8003bc2:	2b00      	cmp	r3, #0
 8003bc4:	d101      	bne.n	8003bca <HAL_RCC_OscConfig+0x12>
 8003bc6:	2301      	movs	r3, #1
 8003bc8:	e272      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 8003bca:	687b      	ldr	r3, [r7, #4]
 8003bcc:	681b      	ldr	r3, [r3, #0]
 8003bce:	f003 0301 	and.w	r3, r3, #1
 8003bd2:	2b00      	cmp	r3, #0
 8003bd4:	f000 8087 	beq.w	8003ce6 <HAL_RCC_OscConfig+0x12e>
 8003bd8:	4b92      	ldr	r3, [pc, #584]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003bda:	685b      	ldr	r3, [r3, #4]
 8003bdc:	f003 030c 	and.w	r3, r3, #12
 8003be0:	2b04      	cmp	r3, #4
 8003be2:	d00c      	beq.n	8003bfe <HAL_RCC_OscConfig+0x46>
 8003be4:	4b8f      	ldr	r3, [pc, #572]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003be6:	685b      	ldr	r3, [r3, #4]
 8003be8:	f003 030c 	and.w	r3, r3, #12
 8003bec:	2b08      	cmp	r3, #8
 8003bee:	d112      	bne.n	8003c16 <HAL_RCC_OscConfig+0x5e>
 8003bf0:	4b8c      	ldr	r3, [pc, #560]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003bf2:	685b      	ldr	r3, [r3, #4]
 8003bf4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003bf8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003bfc:	d10b      	bne.n	8003c16 <HAL_RCC_OscConfig+0x5e>
 8003bfe:	4b89      	ldr	r3, [pc, #548]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003c00:	681b      	ldr	r3, [r3, #0]
 8003c02:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003c06:	2b00      	cmp	r3, #0
 8003c08:	d06c      	beq.n	8003ce4 <HAL_RCC_OscConfig+0x12c>
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	685b      	ldr	r3, [r3, #4]
 8003c0e:	2b00      	cmp	r3, #0
 8003c10:	d168      	bne.n	8003ce4 <HAL_RCC_OscConfig+0x12c>
 8003c12:	2301      	movs	r3, #1
 8003c14:	e24c      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	685b      	ldr	r3, [r3, #4]
 8003c1a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003c1e:	d106      	bne.n	8003c2e <HAL_RCC_OscConfig+0x76>
 8003c20:	4b80      	ldr	r3, [pc, #512]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003c22:	681b      	ldr	r3, [r3, #0]
 8003c24:	4a7f      	ldr	r2, [pc, #508]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003c26:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003c2a:	6013      	str	r3, [r2, #0]
 8003c2c:	e02e      	b.n	8003c8c <HAL_RCC_OscConfig+0xd4>
 8003c2e:	687b      	ldr	r3, [r7, #4]
 8003c30:	685b      	ldr	r3, [r3, #4]
 8003c32:	2b00      	cmp	r3, #0
 8003c34:	d10c      	bne.n	8003c50 <HAL_RCC_OscConfig+0x98>
 8003c36:	4b7b      	ldr	r3, [pc, #492]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003c38:	681b      	ldr	r3, [r3, #0]
 8003c3a:	4a7a      	ldr	r2, [pc, #488]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003c3c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003c40:	6013      	str	r3, [r2, #0]
 8003c42:	4b78      	ldr	r3, [pc, #480]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003c44:	681b      	ldr	r3, [r3, #0]
 8003c46:	4a77      	ldr	r2, [pc, #476]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003c48:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003c4c:	6013      	str	r3, [r2, #0]
 8003c4e:	e01d      	b.n	8003c8c <HAL_RCC_OscConfig+0xd4>
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	685b      	ldr	r3, [r3, #4]
 8003c54:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8003c58:	d10c      	bne.n	8003c74 <HAL_RCC_OscConfig+0xbc>
 8003c5a:	4b72      	ldr	r3, [pc, #456]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	4a71      	ldr	r2, [pc, #452]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003c60:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8003c64:	6013      	str	r3, [r2, #0]
 8003c66:	4b6f      	ldr	r3, [pc, #444]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003c68:	681b      	ldr	r3, [r3, #0]
 8003c6a:	4a6e      	ldr	r2, [pc, #440]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003c6c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003c70:	6013      	str	r3, [r2, #0]
 8003c72:	e00b      	b.n	8003c8c <HAL_RCC_OscConfig+0xd4>
 8003c74:	4b6b      	ldr	r3, [pc, #428]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	4a6a      	ldr	r2, [pc, #424]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003c7a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003c7e:	6013      	str	r3, [r2, #0]
 8003c80:	4b68      	ldr	r3, [pc, #416]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003c82:	681b      	ldr	r3, [r3, #0]
 8003c84:	4a67      	ldr	r2, [pc, #412]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003c86:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003c8a:	6013      	str	r3, [r2, #0]
 8003c8c:	687b      	ldr	r3, [r7, #4]
 8003c8e:	685b      	ldr	r3, [r3, #4]
 8003c90:	2b00      	cmp	r3, #0
 8003c92:	d013      	beq.n	8003cbc <HAL_RCC_OscConfig+0x104>
 8003c94:	f7fe ff8e 	bl	8002bb4 <HAL_GetTick>
 8003c98:	6138      	str	r0, [r7, #16]
 8003c9a:	e008      	b.n	8003cae <HAL_RCC_OscConfig+0xf6>
 8003c9c:	f7fe ff8a 	bl	8002bb4 <HAL_GetTick>
 8003ca0:	4602      	mov	r2, r0
 8003ca2:	693b      	ldr	r3, [r7, #16]
 8003ca4:	1ad3      	subs	r3, r2, r3
 8003ca6:	2b64      	cmp	r3, #100	; 0x64
 8003ca8:	d901      	bls.n	8003cae <HAL_RCC_OscConfig+0xf6>
 8003caa:	2303      	movs	r3, #3
 8003cac:	e200      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 8003cae:	4b5d      	ldr	r3, [pc, #372]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003cb6:	2b00      	cmp	r3, #0
 8003cb8:	d0f0      	beq.n	8003c9c <HAL_RCC_OscConfig+0xe4>
 8003cba:	e014      	b.n	8003ce6 <HAL_RCC_OscConfig+0x12e>
 8003cbc:	f7fe ff7a 	bl	8002bb4 <HAL_GetTick>
 8003cc0:	6138      	str	r0, [r7, #16]
 8003cc2:	e008      	b.n	8003cd6 <HAL_RCC_OscConfig+0x11e>
 8003cc4:	f7fe ff76 	bl	8002bb4 <HAL_GetTick>
 8003cc8:	4602      	mov	r2, r0
 8003cca:	693b      	ldr	r3, [r7, #16]
 8003ccc:	1ad3      	subs	r3, r2, r3
 8003cce:	2b64      	cmp	r3, #100	; 0x64
 8003cd0:	d901      	bls.n	8003cd6 <HAL_RCC_OscConfig+0x11e>
 8003cd2:	2303      	movs	r3, #3
 8003cd4:	e1ec      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 8003cd6:	4b53      	ldr	r3, [pc, #332]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003cd8:	681b      	ldr	r3, [r3, #0]
 8003cda:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003cde:	2b00      	cmp	r3, #0
 8003ce0:	d1f0      	bne.n	8003cc4 <HAL_RCC_OscConfig+0x10c>
 8003ce2:	e000      	b.n	8003ce6 <HAL_RCC_OscConfig+0x12e>
 8003ce4:	bf00      	nop
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	681b      	ldr	r3, [r3, #0]
 8003cea:	f003 0302 	and.w	r3, r3, #2
 8003cee:	2b00      	cmp	r3, #0
 8003cf0:	d063      	beq.n	8003dba <HAL_RCC_OscConfig+0x202>
 8003cf2:	4b4c      	ldr	r3, [pc, #304]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003cf4:	685b      	ldr	r3, [r3, #4]
 8003cf6:	f003 030c 	and.w	r3, r3, #12
 8003cfa:	2b00      	cmp	r3, #0
 8003cfc:	d00b      	beq.n	8003d16 <HAL_RCC_OscConfig+0x15e>
 8003cfe:	4b49      	ldr	r3, [pc, #292]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003d00:	685b      	ldr	r3, [r3, #4]
 8003d02:	f003 030c 	and.w	r3, r3, #12
 8003d06:	2b08      	cmp	r3, #8
 8003d08:	d11c      	bne.n	8003d44 <HAL_RCC_OscConfig+0x18c>
 8003d0a:	4b46      	ldr	r3, [pc, #280]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003d0c:	685b      	ldr	r3, [r3, #4]
 8003d0e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003d12:	2b00      	cmp	r3, #0
 8003d14:	d116      	bne.n	8003d44 <HAL_RCC_OscConfig+0x18c>
 8003d16:	4b43      	ldr	r3, [pc, #268]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003d18:	681b      	ldr	r3, [r3, #0]
 8003d1a:	f003 0302 	and.w	r3, r3, #2
 8003d1e:	2b00      	cmp	r3, #0
 8003d20:	d005      	beq.n	8003d2e <HAL_RCC_OscConfig+0x176>
 8003d22:	687b      	ldr	r3, [r7, #4]
 8003d24:	691b      	ldr	r3, [r3, #16]
 8003d26:	2b01      	cmp	r3, #1
 8003d28:	d001      	beq.n	8003d2e <HAL_RCC_OscConfig+0x176>
 8003d2a:	2301      	movs	r3, #1
 8003d2c:	e1c0      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 8003d2e:	4b3d      	ldr	r3, [pc, #244]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003d30:	681b      	ldr	r3, [r3, #0]
 8003d32:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	695b      	ldr	r3, [r3, #20]
 8003d3a:	00db      	lsls	r3, r3, #3
 8003d3c:	4939      	ldr	r1, [pc, #228]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003d3e:	4313      	orrs	r3, r2
 8003d40:	600b      	str	r3, [r1, #0]
 8003d42:	e03a      	b.n	8003dba <HAL_RCC_OscConfig+0x202>
 8003d44:	687b      	ldr	r3, [r7, #4]
 8003d46:	691b      	ldr	r3, [r3, #16]
 8003d48:	2b00      	cmp	r3, #0
 8003d4a:	d020      	beq.n	8003d8e <HAL_RCC_OscConfig+0x1d6>
 8003d4c:	4b36      	ldr	r3, [pc, #216]	; (8003e28 <HAL_RCC_OscConfig+0x270>)
 8003d4e:	2201      	movs	r2, #1
 8003d50:	601a      	str	r2, [r3, #0]
 8003d52:	f7fe ff2f 	bl	8002bb4 <HAL_GetTick>
 8003d56:	6138      	str	r0, [r7, #16]
 8003d58:	e008      	b.n	8003d6c <HAL_RCC_OscConfig+0x1b4>
 8003d5a:	f7fe ff2b 	bl	8002bb4 <HAL_GetTick>
 8003d5e:	4602      	mov	r2, r0
 8003d60:	693b      	ldr	r3, [r7, #16]
 8003d62:	1ad3      	subs	r3, r2, r3
 8003d64:	2b02      	cmp	r3, #2
 8003d66:	d901      	bls.n	8003d6c <HAL_RCC_OscConfig+0x1b4>
 8003d68:	2303      	movs	r3, #3
 8003d6a:	e1a1      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 8003d6c:	4b2d      	ldr	r3, [pc, #180]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	f003 0302 	and.w	r3, r3, #2
 8003d74:	2b00      	cmp	r3, #0
 8003d76:	d0f0      	beq.n	8003d5a <HAL_RCC_OscConfig+0x1a2>
 8003d78:	4b2a      	ldr	r3, [pc, #168]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003d7a:	681b      	ldr	r3, [r3, #0]
 8003d7c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	695b      	ldr	r3, [r3, #20]
 8003d84:	00db      	lsls	r3, r3, #3
 8003d86:	4927      	ldr	r1, [pc, #156]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003d88:	4313      	orrs	r3, r2
 8003d8a:	600b      	str	r3, [r1, #0]
 8003d8c:	e015      	b.n	8003dba <HAL_RCC_OscConfig+0x202>
 8003d8e:	4b26      	ldr	r3, [pc, #152]	; (8003e28 <HAL_RCC_OscConfig+0x270>)
 8003d90:	2200      	movs	r2, #0
 8003d92:	601a      	str	r2, [r3, #0]
 8003d94:	f7fe ff0e 	bl	8002bb4 <HAL_GetTick>
 8003d98:	6138      	str	r0, [r7, #16]
 8003d9a:	e008      	b.n	8003dae <HAL_RCC_OscConfig+0x1f6>
 8003d9c:	f7fe ff0a 	bl	8002bb4 <HAL_GetTick>
 8003da0:	4602      	mov	r2, r0
 8003da2:	693b      	ldr	r3, [r7, #16]
 8003da4:	1ad3      	subs	r3, r2, r3
 8003da6:	2b02      	cmp	r3, #2
 8003da8:	d901      	bls.n	8003dae <HAL_RCC_OscConfig+0x1f6>
 8003daa:	2303      	movs	r3, #3
 8003dac:	e180      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 8003dae:	4b1d      	ldr	r3, [pc, #116]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003db0:	681b      	ldr	r3, [r3, #0]
 8003db2:	f003 0302 	and.w	r3, r3, #2
 8003db6:	2b00      	cmp	r3, #0
 8003db8:	d1f0      	bne.n	8003d9c <HAL_RCC_OscConfig+0x1e4>
 8003dba:	687b      	ldr	r3, [r7, #4]
 8003dbc:	681b      	ldr	r3, [r3, #0]
 8003dbe:	f003 0308 	and.w	r3, r3, #8
 8003dc2:	2b00      	cmp	r3, #0
 8003dc4:	d03a      	beq.n	8003e3c <HAL_RCC_OscConfig+0x284>
 8003dc6:	687b      	ldr	r3, [r7, #4]
 8003dc8:	699b      	ldr	r3, [r3, #24]
 8003dca:	2b00      	cmp	r3, #0
 8003dcc:	d019      	beq.n	8003e02 <HAL_RCC_OscConfig+0x24a>
 8003dce:	4b17      	ldr	r3, [pc, #92]	; (8003e2c <HAL_RCC_OscConfig+0x274>)
 8003dd0:	2201      	movs	r2, #1
 8003dd2:	601a      	str	r2, [r3, #0]
 8003dd4:	f7fe feee 	bl	8002bb4 <HAL_GetTick>
 8003dd8:	6138      	str	r0, [r7, #16]
 8003dda:	e008      	b.n	8003dee <HAL_RCC_OscConfig+0x236>
 8003ddc:	f7fe feea 	bl	8002bb4 <HAL_GetTick>
 8003de0:	4602      	mov	r2, r0
 8003de2:	693b      	ldr	r3, [r7, #16]
 8003de4:	1ad3      	subs	r3, r2, r3
 8003de6:	2b02      	cmp	r3, #2
 8003de8:	d901      	bls.n	8003dee <HAL_RCC_OscConfig+0x236>
 8003dea:	2303      	movs	r3, #3
 8003dec:	e160      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 8003dee:	4b0d      	ldr	r3, [pc, #52]	; (8003e24 <HAL_RCC_OscConfig+0x26c>)
 8003df0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003df2:	f003 0302 	and.w	r3, r3, #2
 8003df6:	2b00      	cmp	r3, #0
 8003df8:	d0f0      	beq.n	8003ddc <HAL_RCC_OscConfig+0x224>
 8003dfa:	2001      	movs	r0, #1
 8003dfc:	f000 fad8 	bl	80043b0 <RCC_Delay>
 8003e00:	e01c      	b.n	8003e3c <HAL_RCC_OscConfig+0x284>
 8003e02:	4b0a      	ldr	r3, [pc, #40]	; (8003e2c <HAL_RCC_OscConfig+0x274>)
 8003e04:	2200      	movs	r2, #0
 8003e06:	601a      	str	r2, [r3, #0]
 8003e08:	f7fe fed4 	bl	8002bb4 <HAL_GetTick>
 8003e0c:	6138      	str	r0, [r7, #16]
 8003e0e:	e00f      	b.n	8003e30 <HAL_RCC_OscConfig+0x278>
 8003e10:	f7fe fed0 	bl	8002bb4 <HAL_GetTick>
 8003e14:	4602      	mov	r2, r0
 8003e16:	693b      	ldr	r3, [r7, #16]
 8003e18:	1ad3      	subs	r3, r2, r3
 8003e1a:	2b02      	cmp	r3, #2
 8003e1c:	d908      	bls.n	8003e30 <HAL_RCC_OscConfig+0x278>
 8003e1e:	2303      	movs	r3, #3
 8003e20:	e146      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 8003e22:	bf00      	nop
 8003e24:	40021000 	.word	0x40021000
 8003e28:	42420000 	.word	0x42420000
 8003e2c:	42420480 	.word	0x42420480
 8003e30:	4b92      	ldr	r3, [pc, #584]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003e32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e34:	f003 0302 	and.w	r3, r3, #2
 8003e38:	2b00      	cmp	r3, #0
 8003e3a:	d1e9      	bne.n	8003e10 <HAL_RCC_OscConfig+0x258>
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	681b      	ldr	r3, [r3, #0]
 8003e40:	f003 0304 	and.w	r3, r3, #4
 8003e44:	2b00      	cmp	r3, #0
 8003e46:	f000 80a6 	beq.w	8003f96 <HAL_RCC_OscConfig+0x3de>
 8003e4a:	2300      	movs	r3, #0
 8003e4c:	75fb      	strb	r3, [r7, #23]
 8003e4e:	4b8b      	ldr	r3, [pc, #556]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003e50:	69db      	ldr	r3, [r3, #28]
 8003e52:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003e56:	2b00      	cmp	r3, #0
 8003e58:	d10d      	bne.n	8003e76 <HAL_RCC_OscConfig+0x2be>
 8003e5a:	4b88      	ldr	r3, [pc, #544]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003e5c:	69db      	ldr	r3, [r3, #28]
 8003e5e:	4a87      	ldr	r2, [pc, #540]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003e60:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003e64:	61d3      	str	r3, [r2, #28]
 8003e66:	4b85      	ldr	r3, [pc, #532]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003e68:	69db      	ldr	r3, [r3, #28]
 8003e6a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003e6e:	60bb      	str	r3, [r7, #8]
 8003e70:	68bb      	ldr	r3, [r7, #8]
 8003e72:	2301      	movs	r3, #1
 8003e74:	75fb      	strb	r3, [r7, #23]
 8003e76:	4b82      	ldr	r3, [pc, #520]	; (8004080 <HAL_RCC_OscConfig+0x4c8>)
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003e7e:	2b00      	cmp	r3, #0
 8003e80:	d118      	bne.n	8003eb4 <HAL_RCC_OscConfig+0x2fc>
 8003e82:	4b7f      	ldr	r3, [pc, #508]	; (8004080 <HAL_RCC_OscConfig+0x4c8>)
 8003e84:	681b      	ldr	r3, [r3, #0]
 8003e86:	4a7e      	ldr	r2, [pc, #504]	; (8004080 <HAL_RCC_OscConfig+0x4c8>)
 8003e88:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003e8c:	6013      	str	r3, [r2, #0]
 8003e8e:	f7fe fe91 	bl	8002bb4 <HAL_GetTick>
 8003e92:	6138      	str	r0, [r7, #16]
 8003e94:	e008      	b.n	8003ea8 <HAL_RCC_OscConfig+0x2f0>
 8003e96:	f7fe fe8d 	bl	8002bb4 <HAL_GetTick>
 8003e9a:	4602      	mov	r2, r0
 8003e9c:	693b      	ldr	r3, [r7, #16]
 8003e9e:	1ad3      	subs	r3, r2, r3
 8003ea0:	2b64      	cmp	r3, #100	; 0x64
 8003ea2:	d901      	bls.n	8003ea8 <HAL_RCC_OscConfig+0x2f0>
 8003ea4:	2303      	movs	r3, #3
 8003ea6:	e103      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 8003ea8:	4b75      	ldr	r3, [pc, #468]	; (8004080 <HAL_RCC_OscConfig+0x4c8>)
 8003eaa:	681b      	ldr	r3, [r3, #0]
 8003eac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003eb0:	2b00      	cmp	r3, #0
 8003eb2:	d0f0      	beq.n	8003e96 <HAL_RCC_OscConfig+0x2de>
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	68db      	ldr	r3, [r3, #12]
 8003eb8:	2b01      	cmp	r3, #1
 8003eba:	d106      	bne.n	8003eca <HAL_RCC_OscConfig+0x312>
 8003ebc:	4b6f      	ldr	r3, [pc, #444]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003ebe:	6a1b      	ldr	r3, [r3, #32]
 8003ec0:	4a6e      	ldr	r2, [pc, #440]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003ec2:	f043 0301 	orr.w	r3, r3, #1
 8003ec6:	6213      	str	r3, [r2, #32]
 8003ec8:	e02d      	b.n	8003f26 <HAL_RCC_OscConfig+0x36e>
 8003eca:	687b      	ldr	r3, [r7, #4]
 8003ecc:	68db      	ldr	r3, [r3, #12]
 8003ece:	2b00      	cmp	r3, #0
 8003ed0:	d10c      	bne.n	8003eec <HAL_RCC_OscConfig+0x334>
 8003ed2:	4b6a      	ldr	r3, [pc, #424]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003ed4:	6a1b      	ldr	r3, [r3, #32]
 8003ed6:	4a69      	ldr	r2, [pc, #420]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003ed8:	f023 0301 	bic.w	r3, r3, #1
 8003edc:	6213      	str	r3, [r2, #32]
 8003ede:	4b67      	ldr	r3, [pc, #412]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003ee0:	6a1b      	ldr	r3, [r3, #32]
 8003ee2:	4a66      	ldr	r2, [pc, #408]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003ee4:	f023 0304 	bic.w	r3, r3, #4
 8003ee8:	6213      	str	r3, [r2, #32]
 8003eea:	e01c      	b.n	8003f26 <HAL_RCC_OscConfig+0x36e>
 8003eec:	687b      	ldr	r3, [r7, #4]
 8003eee:	68db      	ldr	r3, [r3, #12]
 8003ef0:	2b05      	cmp	r3, #5
 8003ef2:	d10c      	bne.n	8003f0e <HAL_RCC_OscConfig+0x356>
 8003ef4:	4b61      	ldr	r3, [pc, #388]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003ef6:	6a1b      	ldr	r3, [r3, #32]
 8003ef8:	4a60      	ldr	r2, [pc, #384]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003efa:	f043 0304 	orr.w	r3, r3, #4
 8003efe:	6213      	str	r3, [r2, #32]
 8003f00:	4b5e      	ldr	r3, [pc, #376]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003f02:	6a1b      	ldr	r3, [r3, #32]
 8003f04:	4a5d      	ldr	r2, [pc, #372]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003f06:	f043 0301 	orr.w	r3, r3, #1
 8003f0a:	6213      	str	r3, [r2, #32]
 8003f0c:	e00b      	b.n	8003f26 <HAL_RCC_OscConfig+0x36e>
 8003f0e:	4b5b      	ldr	r3, [pc, #364]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003f10:	6a1b      	ldr	r3, [r3, #32]
 8003f12:	4a5a      	ldr	r2, [pc, #360]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003f14:	f023 0301 	bic.w	r3, r3, #1
 8003f18:	6213      	str	r3, [r2, #32]
 8003f1a:	4b58      	ldr	r3, [pc, #352]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003f1c:	6a1b      	ldr	r3, [r3, #32]
 8003f1e:	4a57      	ldr	r2, [pc, #348]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003f20:	f023 0304 	bic.w	r3, r3, #4
 8003f24:	6213      	str	r3, [r2, #32]
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	68db      	ldr	r3, [r3, #12]
 8003f2a:	2b00      	cmp	r3, #0
 8003f2c:	d015      	beq.n	8003f5a <HAL_RCC_OscConfig+0x3a2>
 8003f2e:	f7fe fe41 	bl	8002bb4 <HAL_GetTick>
 8003f32:	6138      	str	r0, [r7, #16]
 8003f34:	e00a      	b.n	8003f4c <HAL_RCC_OscConfig+0x394>
 8003f36:	f7fe fe3d 	bl	8002bb4 <HAL_GetTick>
 8003f3a:	4602      	mov	r2, r0
 8003f3c:	693b      	ldr	r3, [r7, #16]
 8003f3e:	1ad3      	subs	r3, r2, r3
 8003f40:	f241 3288 	movw	r2, #5000	; 0x1388
 8003f44:	4293      	cmp	r3, r2
 8003f46:	d901      	bls.n	8003f4c <HAL_RCC_OscConfig+0x394>
 8003f48:	2303      	movs	r3, #3
 8003f4a:	e0b1      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 8003f4c:	4b4b      	ldr	r3, [pc, #300]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003f4e:	6a1b      	ldr	r3, [r3, #32]
 8003f50:	f003 0302 	and.w	r3, r3, #2
 8003f54:	2b00      	cmp	r3, #0
 8003f56:	d0ee      	beq.n	8003f36 <HAL_RCC_OscConfig+0x37e>
 8003f58:	e014      	b.n	8003f84 <HAL_RCC_OscConfig+0x3cc>
 8003f5a:	f7fe fe2b 	bl	8002bb4 <HAL_GetTick>
 8003f5e:	6138      	str	r0, [r7, #16]
 8003f60:	e00a      	b.n	8003f78 <HAL_RCC_OscConfig+0x3c0>
 8003f62:	f7fe fe27 	bl	8002bb4 <HAL_GetTick>
 8003f66:	4602      	mov	r2, r0
 8003f68:	693b      	ldr	r3, [r7, #16]
 8003f6a:	1ad3      	subs	r3, r2, r3
 8003f6c:	f241 3288 	movw	r2, #5000	; 0x1388
 8003f70:	4293      	cmp	r3, r2
 8003f72:	d901      	bls.n	8003f78 <HAL_RCC_OscConfig+0x3c0>
 8003f74:	2303      	movs	r3, #3
 8003f76:	e09b      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 8003f78:	4b40      	ldr	r3, [pc, #256]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003f7a:	6a1b      	ldr	r3, [r3, #32]
 8003f7c:	f003 0302 	and.w	r3, r3, #2
 8003f80:	2b00      	cmp	r3, #0
 8003f82:	d1ee      	bne.n	8003f62 <HAL_RCC_OscConfig+0x3aa>
 8003f84:	7dfb      	ldrb	r3, [r7, #23]
 8003f86:	2b01      	cmp	r3, #1
 8003f88:	d105      	bne.n	8003f96 <HAL_RCC_OscConfig+0x3de>
 8003f8a:	4b3c      	ldr	r3, [pc, #240]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003f8c:	69db      	ldr	r3, [r3, #28]
 8003f8e:	4a3b      	ldr	r2, [pc, #236]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003f90:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003f94:	61d3      	str	r3, [r2, #28]
 8003f96:	687b      	ldr	r3, [r7, #4]
 8003f98:	69db      	ldr	r3, [r3, #28]
 8003f9a:	2b00      	cmp	r3, #0
 8003f9c:	f000 8087 	beq.w	80040ae <HAL_RCC_OscConfig+0x4f6>
 8003fa0:	4b36      	ldr	r3, [pc, #216]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003fa2:	685b      	ldr	r3, [r3, #4]
 8003fa4:	f003 030c 	and.w	r3, r3, #12
 8003fa8:	2b08      	cmp	r3, #8
 8003faa:	d061      	beq.n	8004070 <HAL_RCC_OscConfig+0x4b8>
 8003fac:	687b      	ldr	r3, [r7, #4]
 8003fae:	69db      	ldr	r3, [r3, #28]
 8003fb0:	2b02      	cmp	r3, #2
 8003fb2:	d146      	bne.n	8004042 <HAL_RCC_OscConfig+0x48a>
 8003fb4:	4b33      	ldr	r3, [pc, #204]	; (8004084 <HAL_RCC_OscConfig+0x4cc>)
 8003fb6:	2200      	movs	r2, #0
 8003fb8:	601a      	str	r2, [r3, #0]
 8003fba:	f7fe fdfb 	bl	8002bb4 <HAL_GetTick>
 8003fbe:	6138      	str	r0, [r7, #16]
 8003fc0:	e008      	b.n	8003fd4 <HAL_RCC_OscConfig+0x41c>
 8003fc2:	f7fe fdf7 	bl	8002bb4 <HAL_GetTick>
 8003fc6:	4602      	mov	r2, r0
 8003fc8:	693b      	ldr	r3, [r7, #16]
 8003fca:	1ad3      	subs	r3, r2, r3
 8003fcc:	2b02      	cmp	r3, #2
 8003fce:	d901      	bls.n	8003fd4 <HAL_RCC_OscConfig+0x41c>
 8003fd0:	2303      	movs	r3, #3
 8003fd2:	e06d      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 8003fd4:	4b29      	ldr	r3, [pc, #164]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003fd6:	681b      	ldr	r3, [r3, #0]
 8003fd8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003fdc:	2b00      	cmp	r3, #0
 8003fde:	d1f0      	bne.n	8003fc2 <HAL_RCC_OscConfig+0x40a>
 8003fe0:	687b      	ldr	r3, [r7, #4]
 8003fe2:	6a1b      	ldr	r3, [r3, #32]
 8003fe4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003fe8:	d108      	bne.n	8003ffc <HAL_RCC_OscConfig+0x444>
 8003fea:	4b24      	ldr	r3, [pc, #144]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003fec:	685b      	ldr	r3, [r3, #4]
 8003fee:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8003ff2:	687b      	ldr	r3, [r7, #4]
 8003ff4:	689b      	ldr	r3, [r3, #8]
 8003ff6:	4921      	ldr	r1, [pc, #132]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003ff8:	4313      	orrs	r3, r2
 8003ffa:	604b      	str	r3, [r1, #4]
 8003ffc:	4b1f      	ldr	r3, [pc, #124]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8003ffe:	685b      	ldr	r3, [r3, #4]
 8004000:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	6a19      	ldr	r1, [r3, #32]
 8004008:	687b      	ldr	r3, [r7, #4]
 800400a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800400c:	430b      	orrs	r3, r1
 800400e:	491b      	ldr	r1, [pc, #108]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8004010:	4313      	orrs	r3, r2
 8004012:	604b      	str	r3, [r1, #4]
 8004014:	4b1b      	ldr	r3, [pc, #108]	; (8004084 <HAL_RCC_OscConfig+0x4cc>)
 8004016:	2201      	movs	r2, #1
 8004018:	601a      	str	r2, [r3, #0]
 800401a:	f7fe fdcb 	bl	8002bb4 <HAL_GetTick>
 800401e:	6138      	str	r0, [r7, #16]
 8004020:	e008      	b.n	8004034 <HAL_RCC_OscConfig+0x47c>
 8004022:	f7fe fdc7 	bl	8002bb4 <HAL_GetTick>
 8004026:	4602      	mov	r2, r0
 8004028:	693b      	ldr	r3, [r7, #16]
 800402a:	1ad3      	subs	r3, r2, r3
 800402c:	2b02      	cmp	r3, #2
 800402e:	d901      	bls.n	8004034 <HAL_RCC_OscConfig+0x47c>
 8004030:	2303      	movs	r3, #3
 8004032:	e03d      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 8004034:	4b11      	ldr	r3, [pc, #68]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8004036:	681b      	ldr	r3, [r3, #0]
 8004038:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800403c:	2b00      	cmp	r3, #0
 800403e:	d0f0      	beq.n	8004022 <HAL_RCC_OscConfig+0x46a>
 8004040:	e035      	b.n	80040ae <HAL_RCC_OscConfig+0x4f6>
 8004042:	4b10      	ldr	r3, [pc, #64]	; (8004084 <HAL_RCC_OscConfig+0x4cc>)
 8004044:	2200      	movs	r2, #0
 8004046:	601a      	str	r2, [r3, #0]
 8004048:	f7fe fdb4 	bl	8002bb4 <HAL_GetTick>
 800404c:	6138      	str	r0, [r7, #16]
 800404e:	e008      	b.n	8004062 <HAL_RCC_OscConfig+0x4aa>
 8004050:	f7fe fdb0 	bl	8002bb4 <HAL_GetTick>
 8004054:	4602      	mov	r2, r0
 8004056:	693b      	ldr	r3, [r7, #16]
 8004058:	1ad3      	subs	r3, r2, r3
 800405a:	2b02      	cmp	r3, #2
 800405c:	d901      	bls.n	8004062 <HAL_RCC_OscConfig+0x4aa>
 800405e:	2303      	movs	r3, #3
 8004060:	e026      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 8004062:	4b06      	ldr	r3, [pc, #24]	; (800407c <HAL_RCC_OscConfig+0x4c4>)
 8004064:	681b      	ldr	r3, [r3, #0]
 8004066:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800406a:	2b00      	cmp	r3, #0
 800406c:	d1f0      	bne.n	8004050 <HAL_RCC_OscConfig+0x498>
 800406e:	e01e      	b.n	80040ae <HAL_RCC_OscConfig+0x4f6>
 8004070:	687b      	ldr	r3, [r7, #4]
 8004072:	69db      	ldr	r3, [r3, #28]
 8004074:	2b01      	cmp	r3, #1
 8004076:	d107      	bne.n	8004088 <HAL_RCC_OscConfig+0x4d0>
 8004078:	2301      	movs	r3, #1
 800407a:	e019      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 800407c:	40021000 	.word	0x40021000
 8004080:	40007000 	.word	0x40007000
 8004084:	42420060 	.word	0x42420060
 8004088:	4b0b      	ldr	r3, [pc, #44]	; (80040b8 <HAL_RCC_OscConfig+0x500>)
 800408a:	685b      	ldr	r3, [r3, #4]
 800408c:	60fb      	str	r3, [r7, #12]
 800408e:	68fb      	ldr	r3, [r7, #12]
 8004090:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8004094:	687b      	ldr	r3, [r7, #4]
 8004096:	6a1b      	ldr	r3, [r3, #32]
 8004098:	429a      	cmp	r2, r3
 800409a:	d106      	bne.n	80040aa <HAL_RCC_OscConfig+0x4f2>
 800409c:	68fb      	ldr	r3, [r7, #12]
 800409e:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 80040a2:	687b      	ldr	r3, [r7, #4]
 80040a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040a6:	429a      	cmp	r2, r3
 80040a8:	d001      	beq.n	80040ae <HAL_RCC_OscConfig+0x4f6>
 80040aa:	2301      	movs	r3, #1
 80040ac:	e000      	b.n	80040b0 <HAL_RCC_OscConfig+0x4f8>
 80040ae:	2300      	movs	r3, #0
 80040b0:	4618      	mov	r0, r3
 80040b2:	3718      	adds	r7, #24
 80040b4:	46bd      	mov	sp, r7
 80040b6:	bd80      	pop	{r7, pc}
 80040b8:	40021000 	.word	0x40021000

080040bc <HAL_RCC_ClockConfig>:
 80040bc:	b580      	push	{r7, lr}
 80040be:	b084      	sub	sp, #16
 80040c0:	af00      	add	r7, sp, #0
 80040c2:	6078      	str	r0, [r7, #4]
 80040c4:	6039      	str	r1, [r7, #0]
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	2b00      	cmp	r3, #0
 80040ca:	d101      	bne.n	80040d0 <HAL_RCC_ClockConfig+0x14>
 80040cc:	2301      	movs	r3, #1
 80040ce:	e0d0      	b.n	8004272 <HAL_RCC_ClockConfig+0x1b6>
 80040d0:	4b6a      	ldr	r3, [pc, #424]	; (800427c <HAL_RCC_ClockConfig+0x1c0>)
 80040d2:	681b      	ldr	r3, [r3, #0]
 80040d4:	f003 0307 	and.w	r3, r3, #7
 80040d8:	683a      	ldr	r2, [r7, #0]
 80040da:	429a      	cmp	r2, r3
 80040dc:	d910      	bls.n	8004100 <HAL_RCC_ClockConfig+0x44>
 80040de:	4b67      	ldr	r3, [pc, #412]	; (800427c <HAL_RCC_ClockConfig+0x1c0>)
 80040e0:	681b      	ldr	r3, [r3, #0]
 80040e2:	f023 0207 	bic.w	r2, r3, #7
 80040e6:	4965      	ldr	r1, [pc, #404]	; (800427c <HAL_RCC_ClockConfig+0x1c0>)
 80040e8:	683b      	ldr	r3, [r7, #0]
 80040ea:	4313      	orrs	r3, r2
 80040ec:	600b      	str	r3, [r1, #0]
 80040ee:	4b63      	ldr	r3, [pc, #396]	; (800427c <HAL_RCC_ClockConfig+0x1c0>)
 80040f0:	681b      	ldr	r3, [r3, #0]
 80040f2:	f003 0307 	and.w	r3, r3, #7
 80040f6:	683a      	ldr	r2, [r7, #0]
 80040f8:	429a      	cmp	r2, r3
 80040fa:	d001      	beq.n	8004100 <HAL_RCC_ClockConfig+0x44>
 80040fc:	2301      	movs	r3, #1
 80040fe:	e0b8      	b.n	8004272 <HAL_RCC_ClockConfig+0x1b6>
 8004100:	687b      	ldr	r3, [r7, #4]
 8004102:	681b      	ldr	r3, [r3, #0]
 8004104:	f003 0302 	and.w	r3, r3, #2
 8004108:	2b00      	cmp	r3, #0
 800410a:	d020      	beq.n	800414e <HAL_RCC_ClockConfig+0x92>
 800410c:	687b      	ldr	r3, [r7, #4]
 800410e:	681b      	ldr	r3, [r3, #0]
 8004110:	f003 0304 	and.w	r3, r3, #4
 8004114:	2b00      	cmp	r3, #0
 8004116:	d005      	beq.n	8004124 <HAL_RCC_ClockConfig+0x68>
 8004118:	4b59      	ldr	r3, [pc, #356]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 800411a:	685b      	ldr	r3, [r3, #4]
 800411c:	4a58      	ldr	r2, [pc, #352]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 800411e:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8004122:	6053      	str	r3, [r2, #4]
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	681b      	ldr	r3, [r3, #0]
 8004128:	f003 0308 	and.w	r3, r3, #8
 800412c:	2b00      	cmp	r3, #0
 800412e:	d005      	beq.n	800413c <HAL_RCC_ClockConfig+0x80>
 8004130:	4b53      	ldr	r3, [pc, #332]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 8004132:	685b      	ldr	r3, [r3, #4]
 8004134:	4a52      	ldr	r2, [pc, #328]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 8004136:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 800413a:	6053      	str	r3, [r2, #4]
 800413c:	4b50      	ldr	r3, [pc, #320]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 800413e:	685b      	ldr	r3, [r3, #4]
 8004140:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004144:	687b      	ldr	r3, [r7, #4]
 8004146:	689b      	ldr	r3, [r3, #8]
 8004148:	494d      	ldr	r1, [pc, #308]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 800414a:	4313      	orrs	r3, r2
 800414c:	604b      	str	r3, [r1, #4]
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	681b      	ldr	r3, [r3, #0]
 8004152:	f003 0301 	and.w	r3, r3, #1
 8004156:	2b00      	cmp	r3, #0
 8004158:	d040      	beq.n	80041dc <HAL_RCC_ClockConfig+0x120>
 800415a:	687b      	ldr	r3, [r7, #4]
 800415c:	685b      	ldr	r3, [r3, #4]
 800415e:	2b01      	cmp	r3, #1
 8004160:	d107      	bne.n	8004172 <HAL_RCC_ClockConfig+0xb6>
 8004162:	4b47      	ldr	r3, [pc, #284]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 8004164:	681b      	ldr	r3, [r3, #0]
 8004166:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800416a:	2b00      	cmp	r3, #0
 800416c:	d115      	bne.n	800419a <HAL_RCC_ClockConfig+0xde>
 800416e:	2301      	movs	r3, #1
 8004170:	e07f      	b.n	8004272 <HAL_RCC_ClockConfig+0x1b6>
 8004172:	687b      	ldr	r3, [r7, #4]
 8004174:	685b      	ldr	r3, [r3, #4]
 8004176:	2b02      	cmp	r3, #2
 8004178:	d107      	bne.n	800418a <HAL_RCC_ClockConfig+0xce>
 800417a:	4b41      	ldr	r3, [pc, #260]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 800417c:	681b      	ldr	r3, [r3, #0]
 800417e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004182:	2b00      	cmp	r3, #0
 8004184:	d109      	bne.n	800419a <HAL_RCC_ClockConfig+0xde>
 8004186:	2301      	movs	r3, #1
 8004188:	e073      	b.n	8004272 <HAL_RCC_ClockConfig+0x1b6>
 800418a:	4b3d      	ldr	r3, [pc, #244]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 800418c:	681b      	ldr	r3, [r3, #0]
 800418e:	f003 0302 	and.w	r3, r3, #2
 8004192:	2b00      	cmp	r3, #0
 8004194:	d101      	bne.n	800419a <HAL_RCC_ClockConfig+0xde>
 8004196:	2301      	movs	r3, #1
 8004198:	e06b      	b.n	8004272 <HAL_RCC_ClockConfig+0x1b6>
 800419a:	4b39      	ldr	r3, [pc, #228]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 800419c:	685b      	ldr	r3, [r3, #4]
 800419e:	f023 0203 	bic.w	r2, r3, #3
 80041a2:	687b      	ldr	r3, [r7, #4]
 80041a4:	685b      	ldr	r3, [r3, #4]
 80041a6:	4936      	ldr	r1, [pc, #216]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 80041a8:	4313      	orrs	r3, r2
 80041aa:	604b      	str	r3, [r1, #4]
 80041ac:	f7fe fd02 	bl	8002bb4 <HAL_GetTick>
 80041b0:	60f8      	str	r0, [r7, #12]
 80041b2:	e00a      	b.n	80041ca <HAL_RCC_ClockConfig+0x10e>
 80041b4:	f7fe fcfe 	bl	8002bb4 <HAL_GetTick>
 80041b8:	4602      	mov	r2, r0
 80041ba:	68fb      	ldr	r3, [r7, #12]
 80041bc:	1ad3      	subs	r3, r2, r3
 80041be:	f241 3288 	movw	r2, #5000	; 0x1388
 80041c2:	4293      	cmp	r3, r2
 80041c4:	d901      	bls.n	80041ca <HAL_RCC_ClockConfig+0x10e>
 80041c6:	2303      	movs	r3, #3
 80041c8:	e053      	b.n	8004272 <HAL_RCC_ClockConfig+0x1b6>
 80041ca:	4b2d      	ldr	r3, [pc, #180]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 80041cc:	685b      	ldr	r3, [r3, #4]
 80041ce:	f003 020c 	and.w	r2, r3, #12
 80041d2:	687b      	ldr	r3, [r7, #4]
 80041d4:	685b      	ldr	r3, [r3, #4]
 80041d6:	009b      	lsls	r3, r3, #2
 80041d8:	429a      	cmp	r2, r3
 80041da:	d1eb      	bne.n	80041b4 <HAL_RCC_ClockConfig+0xf8>
 80041dc:	4b27      	ldr	r3, [pc, #156]	; (800427c <HAL_RCC_ClockConfig+0x1c0>)
 80041de:	681b      	ldr	r3, [r3, #0]
 80041e0:	f003 0307 	and.w	r3, r3, #7
 80041e4:	683a      	ldr	r2, [r7, #0]
 80041e6:	429a      	cmp	r2, r3
 80041e8:	d210      	bcs.n	800420c <HAL_RCC_ClockConfig+0x150>
 80041ea:	4b24      	ldr	r3, [pc, #144]	; (800427c <HAL_RCC_ClockConfig+0x1c0>)
 80041ec:	681b      	ldr	r3, [r3, #0]
 80041ee:	f023 0207 	bic.w	r2, r3, #7
 80041f2:	4922      	ldr	r1, [pc, #136]	; (800427c <HAL_RCC_ClockConfig+0x1c0>)
 80041f4:	683b      	ldr	r3, [r7, #0]
 80041f6:	4313      	orrs	r3, r2
 80041f8:	600b      	str	r3, [r1, #0]
 80041fa:	4b20      	ldr	r3, [pc, #128]	; (800427c <HAL_RCC_ClockConfig+0x1c0>)
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	f003 0307 	and.w	r3, r3, #7
 8004202:	683a      	ldr	r2, [r7, #0]
 8004204:	429a      	cmp	r2, r3
 8004206:	d001      	beq.n	800420c <HAL_RCC_ClockConfig+0x150>
 8004208:	2301      	movs	r3, #1
 800420a:	e032      	b.n	8004272 <HAL_RCC_ClockConfig+0x1b6>
 800420c:	687b      	ldr	r3, [r7, #4]
 800420e:	681b      	ldr	r3, [r3, #0]
 8004210:	f003 0304 	and.w	r3, r3, #4
 8004214:	2b00      	cmp	r3, #0
 8004216:	d008      	beq.n	800422a <HAL_RCC_ClockConfig+0x16e>
 8004218:	4b19      	ldr	r3, [pc, #100]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 800421a:	685b      	ldr	r3, [r3, #4]
 800421c:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8004220:	687b      	ldr	r3, [r7, #4]
 8004222:	68db      	ldr	r3, [r3, #12]
 8004224:	4916      	ldr	r1, [pc, #88]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 8004226:	4313      	orrs	r3, r2
 8004228:	604b      	str	r3, [r1, #4]
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	681b      	ldr	r3, [r3, #0]
 800422e:	f003 0308 	and.w	r3, r3, #8
 8004232:	2b00      	cmp	r3, #0
 8004234:	d009      	beq.n	800424a <HAL_RCC_ClockConfig+0x18e>
 8004236:	4b12      	ldr	r3, [pc, #72]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 8004238:	685b      	ldr	r3, [r3, #4]
 800423a:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	691b      	ldr	r3, [r3, #16]
 8004242:	00db      	lsls	r3, r3, #3
 8004244:	490e      	ldr	r1, [pc, #56]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 8004246:	4313      	orrs	r3, r2
 8004248:	604b      	str	r3, [r1, #4]
 800424a:	f000 f821 	bl	8004290 <HAL_RCC_GetSysClockFreq>
 800424e:	4602      	mov	r2, r0
 8004250:	4b0b      	ldr	r3, [pc, #44]	; (8004280 <HAL_RCC_ClockConfig+0x1c4>)
 8004252:	685b      	ldr	r3, [r3, #4]
 8004254:	091b      	lsrs	r3, r3, #4
 8004256:	f003 030f 	and.w	r3, r3, #15
 800425a:	490a      	ldr	r1, [pc, #40]	; (8004284 <HAL_RCC_ClockConfig+0x1c8>)
 800425c:	5ccb      	ldrb	r3, [r1, r3]
 800425e:	fa22 f303 	lsr.w	r3, r2, r3
 8004262:	4a09      	ldr	r2, [pc, #36]	; (8004288 <HAL_RCC_ClockConfig+0x1cc>)
 8004264:	6013      	str	r3, [r2, #0]
 8004266:	4b09      	ldr	r3, [pc, #36]	; (800428c <HAL_RCC_ClockConfig+0x1d0>)
 8004268:	681b      	ldr	r3, [r3, #0]
 800426a:	4618      	mov	r0, r3
 800426c:	f7fe fc60 	bl	8002b30 <HAL_InitTick>
 8004270:	2300      	movs	r3, #0
 8004272:	4618      	mov	r0, r3
 8004274:	3710      	adds	r7, #16
 8004276:	46bd      	mov	sp, r7
 8004278:	bd80      	pop	{r7, pc}
 800427a:	bf00      	nop
 800427c:	40022000 	.word	0x40022000
 8004280:	40021000 	.word	0x40021000
 8004284:	080087c4 	.word	0x080087c4
 8004288:	20000008 	.word	0x20000008
 800428c:	20000010 	.word	0x20000010

08004290 <HAL_RCC_GetSysClockFreq>:
 8004290:	b490      	push	{r4, r7}
 8004292:	b08a      	sub	sp, #40	; 0x28
 8004294:	af00      	add	r7, sp, #0
 8004296:	4b29      	ldr	r3, [pc, #164]	; (800433c <HAL_RCC_GetSysClockFreq+0xac>)
 8004298:	1d3c      	adds	r4, r7, #4
 800429a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800429c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80042a0:	f240 2301 	movw	r3, #513	; 0x201
 80042a4:	803b      	strh	r3, [r7, #0]
 80042a6:	2300      	movs	r3, #0
 80042a8:	61fb      	str	r3, [r7, #28]
 80042aa:	2300      	movs	r3, #0
 80042ac:	61bb      	str	r3, [r7, #24]
 80042ae:	2300      	movs	r3, #0
 80042b0:	627b      	str	r3, [r7, #36]	; 0x24
 80042b2:	2300      	movs	r3, #0
 80042b4:	617b      	str	r3, [r7, #20]
 80042b6:	2300      	movs	r3, #0
 80042b8:	623b      	str	r3, [r7, #32]
 80042ba:	4b21      	ldr	r3, [pc, #132]	; (8004340 <HAL_RCC_GetSysClockFreq+0xb0>)
 80042bc:	685b      	ldr	r3, [r3, #4]
 80042be:	61fb      	str	r3, [r7, #28]
 80042c0:	69fb      	ldr	r3, [r7, #28]
 80042c2:	f003 030c 	and.w	r3, r3, #12
 80042c6:	2b04      	cmp	r3, #4
 80042c8:	d002      	beq.n	80042d0 <HAL_RCC_GetSysClockFreq+0x40>
 80042ca:	2b08      	cmp	r3, #8
 80042cc:	d003      	beq.n	80042d6 <HAL_RCC_GetSysClockFreq+0x46>
 80042ce:	e02b      	b.n	8004328 <HAL_RCC_GetSysClockFreq+0x98>
 80042d0:	4b1c      	ldr	r3, [pc, #112]	; (8004344 <HAL_RCC_GetSysClockFreq+0xb4>)
 80042d2:	623b      	str	r3, [r7, #32]
 80042d4:	e02b      	b.n	800432e <HAL_RCC_GetSysClockFreq+0x9e>
 80042d6:	69fb      	ldr	r3, [r7, #28]
 80042d8:	0c9b      	lsrs	r3, r3, #18
 80042da:	f003 030f 	and.w	r3, r3, #15
 80042de:	3328      	adds	r3, #40	; 0x28
 80042e0:	443b      	add	r3, r7
 80042e2:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 80042e6:	617b      	str	r3, [r7, #20]
 80042e8:	69fb      	ldr	r3, [r7, #28]
 80042ea:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80042ee:	2b00      	cmp	r3, #0
 80042f0:	d012      	beq.n	8004318 <HAL_RCC_GetSysClockFreq+0x88>
 80042f2:	4b13      	ldr	r3, [pc, #76]	; (8004340 <HAL_RCC_GetSysClockFreq+0xb0>)
 80042f4:	685b      	ldr	r3, [r3, #4]
 80042f6:	0c5b      	lsrs	r3, r3, #17
 80042f8:	f003 0301 	and.w	r3, r3, #1
 80042fc:	3328      	adds	r3, #40	; 0x28
 80042fe:	443b      	add	r3, r7
 8004300:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8004304:	61bb      	str	r3, [r7, #24]
 8004306:	697b      	ldr	r3, [r7, #20]
 8004308:	4a0e      	ldr	r2, [pc, #56]	; (8004344 <HAL_RCC_GetSysClockFreq+0xb4>)
 800430a:	fb03 f202 	mul.w	r2, r3, r2
 800430e:	69bb      	ldr	r3, [r7, #24]
 8004310:	fbb2 f3f3 	udiv	r3, r2, r3
 8004314:	627b      	str	r3, [r7, #36]	; 0x24
 8004316:	e004      	b.n	8004322 <HAL_RCC_GetSysClockFreq+0x92>
 8004318:	697b      	ldr	r3, [r7, #20]
 800431a:	4a0b      	ldr	r2, [pc, #44]	; (8004348 <HAL_RCC_GetSysClockFreq+0xb8>)
 800431c:	fb02 f303 	mul.w	r3, r2, r3
 8004320:	627b      	str	r3, [r7, #36]	; 0x24
 8004322:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004324:	623b      	str	r3, [r7, #32]
 8004326:	e002      	b.n	800432e <HAL_RCC_GetSysClockFreq+0x9e>
 8004328:	4b06      	ldr	r3, [pc, #24]	; (8004344 <HAL_RCC_GetSysClockFreq+0xb4>)
 800432a:	623b      	str	r3, [r7, #32]
 800432c:	bf00      	nop
 800432e:	6a3b      	ldr	r3, [r7, #32]
 8004330:	4618      	mov	r0, r3
 8004332:	3728      	adds	r7, #40	; 0x28
 8004334:	46bd      	mov	sp, r7
 8004336:	bc90      	pop	{r4, r7}
 8004338:	4770      	bx	lr
 800433a:	bf00      	nop
 800433c:	080087b4 	.word	0x080087b4
 8004340:	40021000 	.word	0x40021000
 8004344:	007a1200 	.word	0x007a1200
 8004348:	003d0900 	.word	0x003d0900

0800434c <HAL_RCC_GetHCLKFreq>:
 800434c:	b480      	push	{r7}
 800434e:	af00      	add	r7, sp, #0
 8004350:	4b02      	ldr	r3, [pc, #8]	; (800435c <HAL_RCC_GetHCLKFreq+0x10>)
 8004352:	681b      	ldr	r3, [r3, #0]
 8004354:	4618      	mov	r0, r3
 8004356:	46bd      	mov	sp, r7
 8004358:	bc80      	pop	{r7}
 800435a:	4770      	bx	lr
 800435c:	20000008 	.word	0x20000008

08004360 <HAL_RCC_GetPCLK1Freq>:
 8004360:	b580      	push	{r7, lr}
 8004362:	af00      	add	r7, sp, #0
 8004364:	f7ff fff2 	bl	800434c <HAL_RCC_GetHCLKFreq>
 8004368:	4602      	mov	r2, r0
 800436a:	4b05      	ldr	r3, [pc, #20]	; (8004380 <HAL_RCC_GetPCLK1Freq+0x20>)
 800436c:	685b      	ldr	r3, [r3, #4]
 800436e:	0a1b      	lsrs	r3, r3, #8
 8004370:	f003 0307 	and.w	r3, r3, #7
 8004374:	4903      	ldr	r1, [pc, #12]	; (8004384 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004376:	5ccb      	ldrb	r3, [r1, r3]
 8004378:	fa22 f303 	lsr.w	r3, r2, r3
 800437c:	4618      	mov	r0, r3
 800437e:	bd80      	pop	{r7, pc}
 8004380:	40021000 	.word	0x40021000
 8004384:	080087d4 	.word	0x080087d4

08004388 <HAL_RCC_GetPCLK2Freq>:
 8004388:	b580      	push	{r7, lr}
 800438a:	af00      	add	r7, sp, #0
 800438c:	f7ff ffde 	bl	800434c <HAL_RCC_GetHCLKFreq>
 8004390:	4602      	mov	r2, r0
 8004392:	4b05      	ldr	r3, [pc, #20]	; (80043a8 <HAL_RCC_GetPCLK2Freq+0x20>)
 8004394:	685b      	ldr	r3, [r3, #4]
 8004396:	0adb      	lsrs	r3, r3, #11
 8004398:	f003 0307 	and.w	r3, r3, #7
 800439c:	4903      	ldr	r1, [pc, #12]	; (80043ac <HAL_RCC_GetPCLK2Freq+0x24>)
 800439e:	5ccb      	ldrb	r3, [r1, r3]
 80043a0:	fa22 f303 	lsr.w	r3, r2, r3
 80043a4:	4618      	mov	r0, r3
 80043a6:	bd80      	pop	{r7, pc}
 80043a8:	40021000 	.word	0x40021000
 80043ac:	080087d4 	.word	0x080087d4

080043b0 <RCC_Delay>:
 80043b0:	b480      	push	{r7}
 80043b2:	b085      	sub	sp, #20
 80043b4:	af00      	add	r7, sp, #0
 80043b6:	6078      	str	r0, [r7, #4]
 80043b8:	4b0a      	ldr	r3, [pc, #40]	; (80043e4 <RCC_Delay+0x34>)
 80043ba:	681b      	ldr	r3, [r3, #0]
 80043bc:	4a0a      	ldr	r2, [pc, #40]	; (80043e8 <RCC_Delay+0x38>)
 80043be:	fba2 2303 	umull	r2, r3, r2, r3
 80043c2:	0a5b      	lsrs	r3, r3, #9
 80043c4:	687a      	ldr	r2, [r7, #4]
 80043c6:	fb02 f303 	mul.w	r3, r2, r3
 80043ca:	60fb      	str	r3, [r7, #12]
 80043cc:	bf00      	nop
 80043ce:	68fb      	ldr	r3, [r7, #12]
 80043d0:	1e5a      	subs	r2, r3, #1
 80043d2:	60fa      	str	r2, [r7, #12]
 80043d4:	2b00      	cmp	r3, #0
 80043d6:	d1f9      	bne.n	80043cc <RCC_Delay+0x1c>
 80043d8:	bf00      	nop
 80043da:	bf00      	nop
 80043dc:	3714      	adds	r7, #20
 80043de:	46bd      	mov	sp, r7
 80043e0:	bc80      	pop	{r7}
 80043e2:	4770      	bx	lr
 80043e4:	20000008 	.word	0x20000008
 80043e8:	10624dd3 	.word	0x10624dd3

080043ec <HAL_TIM_Base_Init>:
 80043ec:	b580      	push	{r7, lr}
 80043ee:	b082      	sub	sp, #8
 80043f0:	af00      	add	r7, sp, #0
 80043f2:	6078      	str	r0, [r7, #4]
 80043f4:	687b      	ldr	r3, [r7, #4]
 80043f6:	2b00      	cmp	r3, #0
 80043f8:	d101      	bne.n	80043fe <HAL_TIM_Base_Init+0x12>
 80043fa:	2301      	movs	r3, #1
 80043fc:	e041      	b.n	8004482 <HAL_TIM_Base_Init+0x96>
 80043fe:	687b      	ldr	r3, [r7, #4]
 8004400:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004404:	b2db      	uxtb	r3, r3
 8004406:	2b00      	cmp	r3, #0
 8004408:	d106      	bne.n	8004418 <HAL_TIM_Base_Init+0x2c>
 800440a:	687b      	ldr	r3, [r7, #4]
 800440c:	2200      	movs	r2, #0
 800440e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004412:	6878      	ldr	r0, [r7, #4]
 8004414:	f7fe f814 	bl	8002440 <HAL_TIM_Base_MspInit>
 8004418:	687b      	ldr	r3, [r7, #4]
 800441a:	2202      	movs	r2, #2
 800441c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004420:	687b      	ldr	r3, [r7, #4]
 8004422:	681a      	ldr	r2, [r3, #0]
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	3304      	adds	r3, #4
 8004428:	4619      	mov	r1, r3
 800442a:	4610      	mov	r0, r2
 800442c:	f000 fa70 	bl	8004910 <TIM_Base_SetConfig>
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	2201      	movs	r2, #1
 8004434:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8004438:	687b      	ldr	r3, [r7, #4]
 800443a:	2201      	movs	r2, #1
 800443c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004440:	687b      	ldr	r3, [r7, #4]
 8004442:	2201      	movs	r2, #1
 8004444:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004448:	687b      	ldr	r3, [r7, #4]
 800444a:	2201      	movs	r2, #1
 800444c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004450:	687b      	ldr	r3, [r7, #4]
 8004452:	2201      	movs	r2, #1
 8004454:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	2201      	movs	r2, #1
 800445c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004460:	687b      	ldr	r3, [r7, #4]
 8004462:	2201      	movs	r2, #1
 8004464:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8004468:	687b      	ldr	r3, [r7, #4]
 800446a:	2201      	movs	r2, #1
 800446c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004470:	687b      	ldr	r3, [r7, #4]
 8004472:	2201      	movs	r2, #1
 8004474:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004478:	687b      	ldr	r3, [r7, #4]
 800447a:	2201      	movs	r2, #1
 800447c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004480:	2300      	movs	r3, #0
 8004482:	4618      	mov	r0, r3
 8004484:	3708      	adds	r7, #8
 8004486:	46bd      	mov	sp, r7
 8004488:	bd80      	pop	{r7, pc}
	...

0800448c <HAL_TIM_Base_Start_IT>:
 800448c:	b480      	push	{r7}
 800448e:	b085      	sub	sp, #20
 8004490:	af00      	add	r7, sp, #0
 8004492:	6078      	str	r0, [r7, #4]
 8004494:	687b      	ldr	r3, [r7, #4]
 8004496:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800449a:	b2db      	uxtb	r3, r3
 800449c:	2b01      	cmp	r3, #1
 800449e:	d001      	beq.n	80044a4 <HAL_TIM_Base_Start_IT+0x18>
 80044a0:	2301      	movs	r3, #1
 80044a2:	e03a      	b.n	800451a <HAL_TIM_Base_Start_IT+0x8e>
 80044a4:	687b      	ldr	r3, [r7, #4]
 80044a6:	2202      	movs	r2, #2
 80044a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80044ac:	687b      	ldr	r3, [r7, #4]
 80044ae:	681b      	ldr	r3, [r3, #0]
 80044b0:	68da      	ldr	r2, [r3, #12]
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	681b      	ldr	r3, [r3, #0]
 80044b6:	f042 0201 	orr.w	r2, r2, #1
 80044ba:	60da      	str	r2, [r3, #12]
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	681b      	ldr	r3, [r3, #0]
 80044c0:	4a18      	ldr	r2, [pc, #96]	; (8004524 <HAL_TIM_Base_Start_IT+0x98>)
 80044c2:	4293      	cmp	r3, r2
 80044c4:	d00e      	beq.n	80044e4 <HAL_TIM_Base_Start_IT+0x58>
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	681b      	ldr	r3, [r3, #0]
 80044ca:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80044ce:	d009      	beq.n	80044e4 <HAL_TIM_Base_Start_IT+0x58>
 80044d0:	687b      	ldr	r3, [r7, #4]
 80044d2:	681b      	ldr	r3, [r3, #0]
 80044d4:	4a14      	ldr	r2, [pc, #80]	; (8004528 <HAL_TIM_Base_Start_IT+0x9c>)
 80044d6:	4293      	cmp	r3, r2
 80044d8:	d004      	beq.n	80044e4 <HAL_TIM_Base_Start_IT+0x58>
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	4a13      	ldr	r2, [pc, #76]	; (800452c <HAL_TIM_Base_Start_IT+0xa0>)
 80044e0:	4293      	cmp	r3, r2
 80044e2:	d111      	bne.n	8004508 <HAL_TIM_Base_Start_IT+0x7c>
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	689b      	ldr	r3, [r3, #8]
 80044ea:	f003 0307 	and.w	r3, r3, #7
 80044ee:	60fb      	str	r3, [r7, #12]
 80044f0:	68fb      	ldr	r3, [r7, #12]
 80044f2:	2b06      	cmp	r3, #6
 80044f4:	d010      	beq.n	8004518 <HAL_TIM_Base_Start_IT+0x8c>
 80044f6:	687b      	ldr	r3, [r7, #4]
 80044f8:	681b      	ldr	r3, [r3, #0]
 80044fa:	681a      	ldr	r2, [r3, #0]
 80044fc:	687b      	ldr	r3, [r7, #4]
 80044fe:	681b      	ldr	r3, [r3, #0]
 8004500:	f042 0201 	orr.w	r2, r2, #1
 8004504:	601a      	str	r2, [r3, #0]
 8004506:	e007      	b.n	8004518 <HAL_TIM_Base_Start_IT+0x8c>
 8004508:	687b      	ldr	r3, [r7, #4]
 800450a:	681b      	ldr	r3, [r3, #0]
 800450c:	681a      	ldr	r2, [r3, #0]
 800450e:	687b      	ldr	r3, [r7, #4]
 8004510:	681b      	ldr	r3, [r3, #0]
 8004512:	f042 0201 	orr.w	r2, r2, #1
 8004516:	601a      	str	r2, [r3, #0]
 8004518:	2300      	movs	r3, #0
 800451a:	4618      	mov	r0, r3
 800451c:	3714      	adds	r7, #20
 800451e:	46bd      	mov	sp, r7
 8004520:	bc80      	pop	{r7}
 8004522:	4770      	bx	lr
 8004524:	40012c00 	.word	0x40012c00
 8004528:	40000400 	.word	0x40000400
 800452c:	40000800 	.word	0x40000800

08004530 <HAL_TIM_IRQHandler>:
 8004530:	b580      	push	{r7, lr}
 8004532:	b082      	sub	sp, #8
 8004534:	af00      	add	r7, sp, #0
 8004536:	6078      	str	r0, [r7, #4]
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	681b      	ldr	r3, [r3, #0]
 800453c:	691b      	ldr	r3, [r3, #16]
 800453e:	f003 0302 	and.w	r3, r3, #2
 8004542:	2b02      	cmp	r3, #2
 8004544:	d122      	bne.n	800458c <HAL_TIM_IRQHandler+0x5c>
 8004546:	687b      	ldr	r3, [r7, #4]
 8004548:	681b      	ldr	r3, [r3, #0]
 800454a:	68db      	ldr	r3, [r3, #12]
 800454c:	f003 0302 	and.w	r3, r3, #2
 8004550:	2b02      	cmp	r3, #2
 8004552:	d11b      	bne.n	800458c <HAL_TIM_IRQHandler+0x5c>
 8004554:	687b      	ldr	r3, [r7, #4]
 8004556:	681b      	ldr	r3, [r3, #0]
 8004558:	f06f 0202 	mvn.w	r2, #2
 800455c:	611a      	str	r2, [r3, #16]
 800455e:	687b      	ldr	r3, [r7, #4]
 8004560:	2201      	movs	r2, #1
 8004562:	771a      	strb	r2, [r3, #28]
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	681b      	ldr	r3, [r3, #0]
 8004568:	699b      	ldr	r3, [r3, #24]
 800456a:	f003 0303 	and.w	r3, r3, #3
 800456e:	2b00      	cmp	r3, #0
 8004570:	d003      	beq.n	800457a <HAL_TIM_IRQHandler+0x4a>
 8004572:	6878      	ldr	r0, [r7, #4]
 8004574:	f000 f9b1 	bl	80048da <HAL_TIM_IC_CaptureCallback>
 8004578:	e005      	b.n	8004586 <HAL_TIM_IRQHandler+0x56>
 800457a:	6878      	ldr	r0, [r7, #4]
 800457c:	f000 f9a4 	bl	80048c8 <HAL_TIM_OC_DelayElapsedCallback>
 8004580:	6878      	ldr	r0, [r7, #4]
 8004582:	f000 f9b3 	bl	80048ec <HAL_TIM_PWM_PulseFinishedCallback>
 8004586:	687b      	ldr	r3, [r7, #4]
 8004588:	2200      	movs	r2, #0
 800458a:	771a      	strb	r2, [r3, #28]
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	681b      	ldr	r3, [r3, #0]
 8004590:	691b      	ldr	r3, [r3, #16]
 8004592:	f003 0304 	and.w	r3, r3, #4
 8004596:	2b04      	cmp	r3, #4
 8004598:	d122      	bne.n	80045e0 <HAL_TIM_IRQHandler+0xb0>
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	681b      	ldr	r3, [r3, #0]
 800459e:	68db      	ldr	r3, [r3, #12]
 80045a0:	f003 0304 	and.w	r3, r3, #4
 80045a4:	2b04      	cmp	r3, #4
 80045a6:	d11b      	bne.n	80045e0 <HAL_TIM_IRQHandler+0xb0>
 80045a8:	687b      	ldr	r3, [r7, #4]
 80045aa:	681b      	ldr	r3, [r3, #0]
 80045ac:	f06f 0204 	mvn.w	r2, #4
 80045b0:	611a      	str	r2, [r3, #16]
 80045b2:	687b      	ldr	r3, [r7, #4]
 80045b4:	2202      	movs	r2, #2
 80045b6:	771a      	strb	r2, [r3, #28]
 80045b8:	687b      	ldr	r3, [r7, #4]
 80045ba:	681b      	ldr	r3, [r3, #0]
 80045bc:	699b      	ldr	r3, [r3, #24]
 80045be:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80045c2:	2b00      	cmp	r3, #0
 80045c4:	d003      	beq.n	80045ce <HAL_TIM_IRQHandler+0x9e>
 80045c6:	6878      	ldr	r0, [r7, #4]
 80045c8:	f000 f987 	bl	80048da <HAL_TIM_IC_CaptureCallback>
 80045cc:	e005      	b.n	80045da <HAL_TIM_IRQHandler+0xaa>
 80045ce:	6878      	ldr	r0, [r7, #4]
 80045d0:	f000 f97a 	bl	80048c8 <HAL_TIM_OC_DelayElapsedCallback>
 80045d4:	6878      	ldr	r0, [r7, #4]
 80045d6:	f000 f989 	bl	80048ec <HAL_TIM_PWM_PulseFinishedCallback>
 80045da:	687b      	ldr	r3, [r7, #4]
 80045dc:	2200      	movs	r2, #0
 80045de:	771a      	strb	r2, [r3, #28]
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	681b      	ldr	r3, [r3, #0]
 80045e4:	691b      	ldr	r3, [r3, #16]
 80045e6:	f003 0308 	and.w	r3, r3, #8
 80045ea:	2b08      	cmp	r3, #8
 80045ec:	d122      	bne.n	8004634 <HAL_TIM_IRQHandler+0x104>
 80045ee:	687b      	ldr	r3, [r7, #4]
 80045f0:	681b      	ldr	r3, [r3, #0]
 80045f2:	68db      	ldr	r3, [r3, #12]
 80045f4:	f003 0308 	and.w	r3, r3, #8
 80045f8:	2b08      	cmp	r3, #8
 80045fa:	d11b      	bne.n	8004634 <HAL_TIM_IRQHandler+0x104>
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	681b      	ldr	r3, [r3, #0]
 8004600:	f06f 0208 	mvn.w	r2, #8
 8004604:	611a      	str	r2, [r3, #16]
 8004606:	687b      	ldr	r3, [r7, #4]
 8004608:	2204      	movs	r2, #4
 800460a:	771a      	strb	r2, [r3, #28]
 800460c:	687b      	ldr	r3, [r7, #4]
 800460e:	681b      	ldr	r3, [r3, #0]
 8004610:	69db      	ldr	r3, [r3, #28]
 8004612:	f003 0303 	and.w	r3, r3, #3
 8004616:	2b00      	cmp	r3, #0
 8004618:	d003      	beq.n	8004622 <HAL_TIM_IRQHandler+0xf2>
 800461a:	6878      	ldr	r0, [r7, #4]
 800461c:	f000 f95d 	bl	80048da <HAL_TIM_IC_CaptureCallback>
 8004620:	e005      	b.n	800462e <HAL_TIM_IRQHandler+0xfe>
 8004622:	6878      	ldr	r0, [r7, #4]
 8004624:	f000 f950 	bl	80048c8 <HAL_TIM_OC_DelayElapsedCallback>
 8004628:	6878      	ldr	r0, [r7, #4]
 800462a:	f000 f95f 	bl	80048ec <HAL_TIM_PWM_PulseFinishedCallback>
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	2200      	movs	r2, #0
 8004632:	771a      	strb	r2, [r3, #28]
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	681b      	ldr	r3, [r3, #0]
 8004638:	691b      	ldr	r3, [r3, #16]
 800463a:	f003 0310 	and.w	r3, r3, #16
 800463e:	2b10      	cmp	r3, #16
 8004640:	d122      	bne.n	8004688 <HAL_TIM_IRQHandler+0x158>
 8004642:	687b      	ldr	r3, [r7, #4]
 8004644:	681b      	ldr	r3, [r3, #0]
 8004646:	68db      	ldr	r3, [r3, #12]
 8004648:	f003 0310 	and.w	r3, r3, #16
 800464c:	2b10      	cmp	r3, #16
 800464e:	d11b      	bne.n	8004688 <HAL_TIM_IRQHandler+0x158>
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	681b      	ldr	r3, [r3, #0]
 8004654:	f06f 0210 	mvn.w	r2, #16
 8004658:	611a      	str	r2, [r3, #16]
 800465a:	687b      	ldr	r3, [r7, #4]
 800465c:	2208      	movs	r2, #8
 800465e:	771a      	strb	r2, [r3, #28]
 8004660:	687b      	ldr	r3, [r7, #4]
 8004662:	681b      	ldr	r3, [r3, #0]
 8004664:	69db      	ldr	r3, [r3, #28]
 8004666:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800466a:	2b00      	cmp	r3, #0
 800466c:	d003      	beq.n	8004676 <HAL_TIM_IRQHandler+0x146>
 800466e:	6878      	ldr	r0, [r7, #4]
 8004670:	f000 f933 	bl	80048da <HAL_TIM_IC_CaptureCallback>
 8004674:	e005      	b.n	8004682 <HAL_TIM_IRQHandler+0x152>
 8004676:	6878      	ldr	r0, [r7, #4]
 8004678:	f000 f926 	bl	80048c8 <HAL_TIM_OC_DelayElapsedCallback>
 800467c:	6878      	ldr	r0, [r7, #4]
 800467e:	f000 f935 	bl	80048ec <HAL_TIM_PWM_PulseFinishedCallback>
 8004682:	687b      	ldr	r3, [r7, #4]
 8004684:	2200      	movs	r2, #0
 8004686:	771a      	strb	r2, [r3, #28]
 8004688:	687b      	ldr	r3, [r7, #4]
 800468a:	681b      	ldr	r3, [r3, #0]
 800468c:	691b      	ldr	r3, [r3, #16]
 800468e:	f003 0301 	and.w	r3, r3, #1
 8004692:	2b01      	cmp	r3, #1
 8004694:	d10e      	bne.n	80046b4 <HAL_TIM_IRQHandler+0x184>
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	681b      	ldr	r3, [r3, #0]
 800469a:	68db      	ldr	r3, [r3, #12]
 800469c:	f003 0301 	and.w	r3, r3, #1
 80046a0:	2b01      	cmp	r3, #1
 80046a2:	d107      	bne.n	80046b4 <HAL_TIM_IRQHandler+0x184>
 80046a4:	687b      	ldr	r3, [r7, #4]
 80046a6:	681b      	ldr	r3, [r3, #0]
 80046a8:	f06f 0201 	mvn.w	r2, #1
 80046ac:	611a      	str	r2, [r3, #16]
 80046ae:	6878      	ldr	r0, [r7, #4]
 80046b0:	f7fe f8ac 	bl	800280c <HAL_TIM_PeriodElapsedCallback>
 80046b4:	687b      	ldr	r3, [r7, #4]
 80046b6:	681b      	ldr	r3, [r3, #0]
 80046b8:	691b      	ldr	r3, [r3, #16]
 80046ba:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80046be:	2b80      	cmp	r3, #128	; 0x80
 80046c0:	d10e      	bne.n	80046e0 <HAL_TIM_IRQHandler+0x1b0>
 80046c2:	687b      	ldr	r3, [r7, #4]
 80046c4:	681b      	ldr	r3, [r3, #0]
 80046c6:	68db      	ldr	r3, [r3, #12]
 80046c8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80046cc:	2b80      	cmp	r3, #128	; 0x80
 80046ce:	d107      	bne.n	80046e0 <HAL_TIM_IRQHandler+0x1b0>
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	681b      	ldr	r3, [r3, #0]
 80046d4:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80046d8:	611a      	str	r2, [r3, #16]
 80046da:	6878      	ldr	r0, [r7, #4]
 80046dc:	f000 fa77 	bl	8004bce <HAL_TIMEx_BreakCallback>
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	681b      	ldr	r3, [r3, #0]
 80046e4:	691b      	ldr	r3, [r3, #16]
 80046e6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80046ea:	2b40      	cmp	r3, #64	; 0x40
 80046ec:	d10e      	bne.n	800470c <HAL_TIM_IRQHandler+0x1dc>
 80046ee:	687b      	ldr	r3, [r7, #4]
 80046f0:	681b      	ldr	r3, [r3, #0]
 80046f2:	68db      	ldr	r3, [r3, #12]
 80046f4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80046f8:	2b40      	cmp	r3, #64	; 0x40
 80046fa:	d107      	bne.n	800470c <HAL_TIM_IRQHandler+0x1dc>
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	681b      	ldr	r3, [r3, #0]
 8004700:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8004704:	611a      	str	r2, [r3, #16]
 8004706:	6878      	ldr	r0, [r7, #4]
 8004708:	f000 f8f9 	bl	80048fe <HAL_TIM_TriggerCallback>
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	681b      	ldr	r3, [r3, #0]
 8004710:	691b      	ldr	r3, [r3, #16]
 8004712:	f003 0320 	and.w	r3, r3, #32
 8004716:	2b20      	cmp	r3, #32
 8004718:	d10e      	bne.n	8004738 <HAL_TIM_IRQHandler+0x208>
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	681b      	ldr	r3, [r3, #0]
 800471e:	68db      	ldr	r3, [r3, #12]
 8004720:	f003 0320 	and.w	r3, r3, #32
 8004724:	2b20      	cmp	r3, #32
 8004726:	d107      	bne.n	8004738 <HAL_TIM_IRQHandler+0x208>
 8004728:	687b      	ldr	r3, [r7, #4]
 800472a:	681b      	ldr	r3, [r3, #0]
 800472c:	f06f 0220 	mvn.w	r2, #32
 8004730:	611a      	str	r2, [r3, #16]
 8004732:	6878      	ldr	r0, [r7, #4]
 8004734:	f000 fa42 	bl	8004bbc <HAL_TIMEx_CommutCallback>
 8004738:	bf00      	nop
 800473a:	3708      	adds	r7, #8
 800473c:	46bd      	mov	sp, r7
 800473e:	bd80      	pop	{r7, pc}

08004740 <HAL_TIM_ConfigClockSource>:
 8004740:	b580      	push	{r7, lr}
 8004742:	b084      	sub	sp, #16
 8004744:	af00      	add	r7, sp, #0
 8004746:	6078      	str	r0, [r7, #4]
 8004748:	6039      	str	r1, [r7, #0]
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004750:	2b01      	cmp	r3, #1
 8004752:	d101      	bne.n	8004758 <HAL_TIM_ConfigClockSource+0x18>
 8004754:	2302      	movs	r3, #2
 8004756:	e0b3      	b.n	80048c0 <HAL_TIM_ConfigClockSource+0x180>
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	2201      	movs	r2, #1
 800475c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004760:	687b      	ldr	r3, [r7, #4]
 8004762:	2202      	movs	r2, #2
 8004764:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	681b      	ldr	r3, [r3, #0]
 800476c:	689b      	ldr	r3, [r3, #8]
 800476e:	60fb      	str	r3, [r7, #12]
 8004770:	68fb      	ldr	r3, [r7, #12]
 8004772:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8004776:	60fb      	str	r3, [r7, #12]
 8004778:	68fb      	ldr	r3, [r7, #12]
 800477a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800477e:	60fb      	str	r3, [r7, #12]
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	681b      	ldr	r3, [r3, #0]
 8004784:	68fa      	ldr	r2, [r7, #12]
 8004786:	609a      	str	r2, [r3, #8]
 8004788:	683b      	ldr	r3, [r7, #0]
 800478a:	681b      	ldr	r3, [r3, #0]
 800478c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004790:	d03e      	beq.n	8004810 <HAL_TIM_ConfigClockSource+0xd0>
 8004792:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004796:	f200 8087 	bhi.w	80048a8 <HAL_TIM_ConfigClockSource+0x168>
 800479a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800479e:	f000 8085 	beq.w	80048ac <HAL_TIM_ConfigClockSource+0x16c>
 80047a2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80047a6:	d87f      	bhi.n	80048a8 <HAL_TIM_ConfigClockSource+0x168>
 80047a8:	2b70      	cmp	r3, #112	; 0x70
 80047aa:	d01a      	beq.n	80047e2 <HAL_TIM_ConfigClockSource+0xa2>
 80047ac:	2b70      	cmp	r3, #112	; 0x70
 80047ae:	d87b      	bhi.n	80048a8 <HAL_TIM_ConfigClockSource+0x168>
 80047b0:	2b60      	cmp	r3, #96	; 0x60
 80047b2:	d050      	beq.n	8004856 <HAL_TIM_ConfigClockSource+0x116>
 80047b4:	2b60      	cmp	r3, #96	; 0x60
 80047b6:	d877      	bhi.n	80048a8 <HAL_TIM_ConfigClockSource+0x168>
 80047b8:	2b50      	cmp	r3, #80	; 0x50
 80047ba:	d03c      	beq.n	8004836 <HAL_TIM_ConfigClockSource+0xf6>
 80047bc:	2b50      	cmp	r3, #80	; 0x50
 80047be:	d873      	bhi.n	80048a8 <HAL_TIM_ConfigClockSource+0x168>
 80047c0:	2b40      	cmp	r3, #64	; 0x40
 80047c2:	d058      	beq.n	8004876 <HAL_TIM_ConfigClockSource+0x136>
 80047c4:	2b40      	cmp	r3, #64	; 0x40
 80047c6:	d86f      	bhi.n	80048a8 <HAL_TIM_ConfigClockSource+0x168>
 80047c8:	2b30      	cmp	r3, #48	; 0x30
 80047ca:	d064      	beq.n	8004896 <HAL_TIM_ConfigClockSource+0x156>
 80047cc:	2b30      	cmp	r3, #48	; 0x30
 80047ce:	d86b      	bhi.n	80048a8 <HAL_TIM_ConfigClockSource+0x168>
 80047d0:	2b20      	cmp	r3, #32
 80047d2:	d060      	beq.n	8004896 <HAL_TIM_ConfigClockSource+0x156>
 80047d4:	2b20      	cmp	r3, #32
 80047d6:	d867      	bhi.n	80048a8 <HAL_TIM_ConfigClockSource+0x168>
 80047d8:	2b00      	cmp	r3, #0
 80047da:	d05c      	beq.n	8004896 <HAL_TIM_ConfigClockSource+0x156>
 80047dc:	2b10      	cmp	r3, #16
 80047de:	d05a      	beq.n	8004896 <HAL_TIM_ConfigClockSource+0x156>
 80047e0:	e062      	b.n	80048a8 <HAL_TIM_ConfigClockSource+0x168>
 80047e2:	687b      	ldr	r3, [r7, #4]
 80047e4:	6818      	ldr	r0, [r3, #0]
 80047e6:	683b      	ldr	r3, [r7, #0]
 80047e8:	6899      	ldr	r1, [r3, #8]
 80047ea:	683b      	ldr	r3, [r7, #0]
 80047ec:	685a      	ldr	r2, [r3, #4]
 80047ee:	683b      	ldr	r3, [r7, #0]
 80047f0:	68db      	ldr	r3, [r3, #12]
 80047f2:	f000 f966 	bl	8004ac2 <TIM_ETR_SetConfig>
 80047f6:	687b      	ldr	r3, [r7, #4]
 80047f8:	681b      	ldr	r3, [r3, #0]
 80047fa:	689b      	ldr	r3, [r3, #8]
 80047fc:	60fb      	str	r3, [r7, #12]
 80047fe:	68fb      	ldr	r3, [r7, #12]
 8004800:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8004804:	60fb      	str	r3, [r7, #12]
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	68fa      	ldr	r2, [r7, #12]
 800480c:	609a      	str	r2, [r3, #8]
 800480e:	e04e      	b.n	80048ae <HAL_TIM_ConfigClockSource+0x16e>
 8004810:	687b      	ldr	r3, [r7, #4]
 8004812:	6818      	ldr	r0, [r3, #0]
 8004814:	683b      	ldr	r3, [r7, #0]
 8004816:	6899      	ldr	r1, [r3, #8]
 8004818:	683b      	ldr	r3, [r7, #0]
 800481a:	685a      	ldr	r2, [r3, #4]
 800481c:	683b      	ldr	r3, [r7, #0]
 800481e:	68db      	ldr	r3, [r3, #12]
 8004820:	f000 f94f 	bl	8004ac2 <TIM_ETR_SetConfig>
 8004824:	687b      	ldr	r3, [r7, #4]
 8004826:	681b      	ldr	r3, [r3, #0]
 8004828:	689a      	ldr	r2, [r3, #8]
 800482a:	687b      	ldr	r3, [r7, #4]
 800482c:	681b      	ldr	r3, [r3, #0]
 800482e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004832:	609a      	str	r2, [r3, #8]
 8004834:	e03b      	b.n	80048ae <HAL_TIM_ConfigClockSource+0x16e>
 8004836:	687b      	ldr	r3, [r7, #4]
 8004838:	6818      	ldr	r0, [r3, #0]
 800483a:	683b      	ldr	r3, [r7, #0]
 800483c:	6859      	ldr	r1, [r3, #4]
 800483e:	683b      	ldr	r3, [r7, #0]
 8004840:	68db      	ldr	r3, [r3, #12]
 8004842:	461a      	mov	r2, r3
 8004844:	f000 f8c6 	bl	80049d4 <TIM_TI1_ConfigInputStage>
 8004848:	687b      	ldr	r3, [r7, #4]
 800484a:	681b      	ldr	r3, [r3, #0]
 800484c:	2150      	movs	r1, #80	; 0x50
 800484e:	4618      	mov	r0, r3
 8004850:	f000 f91d 	bl	8004a8e <TIM_ITRx_SetConfig>
 8004854:	e02b      	b.n	80048ae <HAL_TIM_ConfigClockSource+0x16e>
 8004856:	687b      	ldr	r3, [r7, #4]
 8004858:	6818      	ldr	r0, [r3, #0]
 800485a:	683b      	ldr	r3, [r7, #0]
 800485c:	6859      	ldr	r1, [r3, #4]
 800485e:	683b      	ldr	r3, [r7, #0]
 8004860:	68db      	ldr	r3, [r3, #12]
 8004862:	461a      	mov	r2, r3
 8004864:	f000 f8e4 	bl	8004a30 <TIM_TI2_ConfigInputStage>
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	681b      	ldr	r3, [r3, #0]
 800486c:	2160      	movs	r1, #96	; 0x60
 800486e:	4618      	mov	r0, r3
 8004870:	f000 f90d 	bl	8004a8e <TIM_ITRx_SetConfig>
 8004874:	e01b      	b.n	80048ae <HAL_TIM_ConfigClockSource+0x16e>
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	6818      	ldr	r0, [r3, #0]
 800487a:	683b      	ldr	r3, [r7, #0]
 800487c:	6859      	ldr	r1, [r3, #4]
 800487e:	683b      	ldr	r3, [r7, #0]
 8004880:	68db      	ldr	r3, [r3, #12]
 8004882:	461a      	mov	r2, r3
 8004884:	f000 f8a6 	bl	80049d4 <TIM_TI1_ConfigInputStage>
 8004888:	687b      	ldr	r3, [r7, #4]
 800488a:	681b      	ldr	r3, [r3, #0]
 800488c:	2140      	movs	r1, #64	; 0x40
 800488e:	4618      	mov	r0, r3
 8004890:	f000 f8fd 	bl	8004a8e <TIM_ITRx_SetConfig>
 8004894:	e00b      	b.n	80048ae <HAL_TIM_ConfigClockSource+0x16e>
 8004896:	687b      	ldr	r3, [r7, #4]
 8004898:	681a      	ldr	r2, [r3, #0]
 800489a:	683b      	ldr	r3, [r7, #0]
 800489c:	681b      	ldr	r3, [r3, #0]
 800489e:	4619      	mov	r1, r3
 80048a0:	4610      	mov	r0, r2
 80048a2:	f000 f8f4 	bl	8004a8e <TIM_ITRx_SetConfig>
 80048a6:	e002      	b.n	80048ae <HAL_TIM_ConfigClockSource+0x16e>
 80048a8:	bf00      	nop
 80048aa:	e000      	b.n	80048ae <HAL_TIM_ConfigClockSource+0x16e>
 80048ac:	bf00      	nop
 80048ae:	687b      	ldr	r3, [r7, #4]
 80048b0:	2201      	movs	r2, #1
 80048b2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	2200      	movs	r2, #0
 80048ba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80048be:	2300      	movs	r3, #0
 80048c0:	4618      	mov	r0, r3
 80048c2:	3710      	adds	r7, #16
 80048c4:	46bd      	mov	sp, r7
 80048c6:	bd80      	pop	{r7, pc}

080048c8 <HAL_TIM_OC_DelayElapsedCallback>:
 80048c8:	b480      	push	{r7}
 80048ca:	b083      	sub	sp, #12
 80048cc:	af00      	add	r7, sp, #0
 80048ce:	6078      	str	r0, [r7, #4]
 80048d0:	bf00      	nop
 80048d2:	370c      	adds	r7, #12
 80048d4:	46bd      	mov	sp, r7
 80048d6:	bc80      	pop	{r7}
 80048d8:	4770      	bx	lr

080048da <HAL_TIM_IC_CaptureCallback>:
 80048da:	b480      	push	{r7}
 80048dc:	b083      	sub	sp, #12
 80048de:	af00      	add	r7, sp, #0
 80048e0:	6078      	str	r0, [r7, #4]
 80048e2:	bf00      	nop
 80048e4:	370c      	adds	r7, #12
 80048e6:	46bd      	mov	sp, r7
 80048e8:	bc80      	pop	{r7}
 80048ea:	4770      	bx	lr

080048ec <HAL_TIM_PWM_PulseFinishedCallback>:
 80048ec:	b480      	push	{r7}
 80048ee:	b083      	sub	sp, #12
 80048f0:	af00      	add	r7, sp, #0
 80048f2:	6078      	str	r0, [r7, #4]
 80048f4:	bf00      	nop
 80048f6:	370c      	adds	r7, #12
 80048f8:	46bd      	mov	sp, r7
 80048fa:	bc80      	pop	{r7}
 80048fc:	4770      	bx	lr

080048fe <HAL_TIM_TriggerCallback>:
 80048fe:	b480      	push	{r7}
 8004900:	b083      	sub	sp, #12
 8004902:	af00      	add	r7, sp, #0
 8004904:	6078      	str	r0, [r7, #4]
 8004906:	bf00      	nop
 8004908:	370c      	adds	r7, #12
 800490a:	46bd      	mov	sp, r7
 800490c:	bc80      	pop	{r7}
 800490e:	4770      	bx	lr

08004910 <TIM_Base_SetConfig>:
 8004910:	b480      	push	{r7}
 8004912:	b085      	sub	sp, #20
 8004914:	af00      	add	r7, sp, #0
 8004916:	6078      	str	r0, [r7, #4]
 8004918:	6039      	str	r1, [r7, #0]
 800491a:	687b      	ldr	r3, [r7, #4]
 800491c:	681b      	ldr	r3, [r3, #0]
 800491e:	60fb      	str	r3, [r7, #12]
 8004920:	687b      	ldr	r3, [r7, #4]
 8004922:	4a29      	ldr	r2, [pc, #164]	; (80049c8 <TIM_Base_SetConfig+0xb8>)
 8004924:	4293      	cmp	r3, r2
 8004926:	d00b      	beq.n	8004940 <TIM_Base_SetConfig+0x30>
 8004928:	687b      	ldr	r3, [r7, #4]
 800492a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800492e:	d007      	beq.n	8004940 <TIM_Base_SetConfig+0x30>
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	4a26      	ldr	r2, [pc, #152]	; (80049cc <TIM_Base_SetConfig+0xbc>)
 8004934:	4293      	cmp	r3, r2
 8004936:	d003      	beq.n	8004940 <TIM_Base_SetConfig+0x30>
 8004938:	687b      	ldr	r3, [r7, #4]
 800493a:	4a25      	ldr	r2, [pc, #148]	; (80049d0 <TIM_Base_SetConfig+0xc0>)
 800493c:	4293      	cmp	r3, r2
 800493e:	d108      	bne.n	8004952 <TIM_Base_SetConfig+0x42>
 8004940:	68fb      	ldr	r3, [r7, #12]
 8004942:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004946:	60fb      	str	r3, [r7, #12]
 8004948:	683b      	ldr	r3, [r7, #0]
 800494a:	685b      	ldr	r3, [r3, #4]
 800494c:	68fa      	ldr	r2, [r7, #12]
 800494e:	4313      	orrs	r3, r2
 8004950:	60fb      	str	r3, [r7, #12]
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	4a1c      	ldr	r2, [pc, #112]	; (80049c8 <TIM_Base_SetConfig+0xb8>)
 8004956:	4293      	cmp	r3, r2
 8004958:	d00b      	beq.n	8004972 <TIM_Base_SetConfig+0x62>
 800495a:	687b      	ldr	r3, [r7, #4]
 800495c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004960:	d007      	beq.n	8004972 <TIM_Base_SetConfig+0x62>
 8004962:	687b      	ldr	r3, [r7, #4]
 8004964:	4a19      	ldr	r2, [pc, #100]	; (80049cc <TIM_Base_SetConfig+0xbc>)
 8004966:	4293      	cmp	r3, r2
 8004968:	d003      	beq.n	8004972 <TIM_Base_SetConfig+0x62>
 800496a:	687b      	ldr	r3, [r7, #4]
 800496c:	4a18      	ldr	r2, [pc, #96]	; (80049d0 <TIM_Base_SetConfig+0xc0>)
 800496e:	4293      	cmp	r3, r2
 8004970:	d108      	bne.n	8004984 <TIM_Base_SetConfig+0x74>
 8004972:	68fb      	ldr	r3, [r7, #12]
 8004974:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004978:	60fb      	str	r3, [r7, #12]
 800497a:	683b      	ldr	r3, [r7, #0]
 800497c:	68db      	ldr	r3, [r3, #12]
 800497e:	68fa      	ldr	r2, [r7, #12]
 8004980:	4313      	orrs	r3, r2
 8004982:	60fb      	str	r3, [r7, #12]
 8004984:	68fb      	ldr	r3, [r7, #12]
 8004986:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800498a:	683b      	ldr	r3, [r7, #0]
 800498c:	695b      	ldr	r3, [r3, #20]
 800498e:	4313      	orrs	r3, r2
 8004990:	60fb      	str	r3, [r7, #12]
 8004992:	687b      	ldr	r3, [r7, #4]
 8004994:	68fa      	ldr	r2, [r7, #12]
 8004996:	601a      	str	r2, [r3, #0]
 8004998:	683b      	ldr	r3, [r7, #0]
 800499a:	689a      	ldr	r2, [r3, #8]
 800499c:	687b      	ldr	r3, [r7, #4]
 800499e:	62da      	str	r2, [r3, #44]	; 0x2c
 80049a0:	683b      	ldr	r3, [r7, #0]
 80049a2:	681a      	ldr	r2, [r3, #0]
 80049a4:	687b      	ldr	r3, [r7, #4]
 80049a6:	629a      	str	r2, [r3, #40]	; 0x28
 80049a8:	687b      	ldr	r3, [r7, #4]
 80049aa:	4a07      	ldr	r2, [pc, #28]	; (80049c8 <TIM_Base_SetConfig+0xb8>)
 80049ac:	4293      	cmp	r3, r2
 80049ae:	d103      	bne.n	80049b8 <TIM_Base_SetConfig+0xa8>
 80049b0:	683b      	ldr	r3, [r7, #0]
 80049b2:	691a      	ldr	r2, [r3, #16]
 80049b4:	687b      	ldr	r3, [r7, #4]
 80049b6:	631a      	str	r2, [r3, #48]	; 0x30
 80049b8:	687b      	ldr	r3, [r7, #4]
 80049ba:	2201      	movs	r2, #1
 80049bc:	615a      	str	r2, [r3, #20]
 80049be:	bf00      	nop
 80049c0:	3714      	adds	r7, #20
 80049c2:	46bd      	mov	sp, r7
 80049c4:	bc80      	pop	{r7}
 80049c6:	4770      	bx	lr
 80049c8:	40012c00 	.word	0x40012c00
 80049cc:	40000400 	.word	0x40000400
 80049d0:	40000800 	.word	0x40000800

080049d4 <TIM_TI1_ConfigInputStage>:
 80049d4:	b480      	push	{r7}
 80049d6:	b087      	sub	sp, #28
 80049d8:	af00      	add	r7, sp, #0
 80049da:	60f8      	str	r0, [r7, #12]
 80049dc:	60b9      	str	r1, [r7, #8]
 80049de:	607a      	str	r2, [r7, #4]
 80049e0:	68fb      	ldr	r3, [r7, #12]
 80049e2:	6a1b      	ldr	r3, [r3, #32]
 80049e4:	617b      	str	r3, [r7, #20]
 80049e6:	68fb      	ldr	r3, [r7, #12]
 80049e8:	6a1b      	ldr	r3, [r3, #32]
 80049ea:	f023 0201 	bic.w	r2, r3, #1
 80049ee:	68fb      	ldr	r3, [r7, #12]
 80049f0:	621a      	str	r2, [r3, #32]
 80049f2:	68fb      	ldr	r3, [r7, #12]
 80049f4:	699b      	ldr	r3, [r3, #24]
 80049f6:	613b      	str	r3, [r7, #16]
 80049f8:	693b      	ldr	r3, [r7, #16]
 80049fa:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80049fe:	613b      	str	r3, [r7, #16]
 8004a00:	687b      	ldr	r3, [r7, #4]
 8004a02:	011b      	lsls	r3, r3, #4
 8004a04:	693a      	ldr	r2, [r7, #16]
 8004a06:	4313      	orrs	r3, r2
 8004a08:	613b      	str	r3, [r7, #16]
 8004a0a:	697b      	ldr	r3, [r7, #20]
 8004a0c:	f023 030a 	bic.w	r3, r3, #10
 8004a10:	617b      	str	r3, [r7, #20]
 8004a12:	697a      	ldr	r2, [r7, #20]
 8004a14:	68bb      	ldr	r3, [r7, #8]
 8004a16:	4313      	orrs	r3, r2
 8004a18:	617b      	str	r3, [r7, #20]
 8004a1a:	68fb      	ldr	r3, [r7, #12]
 8004a1c:	693a      	ldr	r2, [r7, #16]
 8004a1e:	619a      	str	r2, [r3, #24]
 8004a20:	68fb      	ldr	r3, [r7, #12]
 8004a22:	697a      	ldr	r2, [r7, #20]
 8004a24:	621a      	str	r2, [r3, #32]
 8004a26:	bf00      	nop
 8004a28:	371c      	adds	r7, #28
 8004a2a:	46bd      	mov	sp, r7
 8004a2c:	bc80      	pop	{r7}
 8004a2e:	4770      	bx	lr

08004a30 <TIM_TI2_ConfigInputStage>:
 8004a30:	b480      	push	{r7}
 8004a32:	b087      	sub	sp, #28
 8004a34:	af00      	add	r7, sp, #0
 8004a36:	60f8      	str	r0, [r7, #12]
 8004a38:	60b9      	str	r1, [r7, #8]
 8004a3a:	607a      	str	r2, [r7, #4]
 8004a3c:	68fb      	ldr	r3, [r7, #12]
 8004a3e:	6a1b      	ldr	r3, [r3, #32]
 8004a40:	f023 0210 	bic.w	r2, r3, #16
 8004a44:	68fb      	ldr	r3, [r7, #12]
 8004a46:	621a      	str	r2, [r3, #32]
 8004a48:	68fb      	ldr	r3, [r7, #12]
 8004a4a:	699b      	ldr	r3, [r3, #24]
 8004a4c:	617b      	str	r3, [r7, #20]
 8004a4e:	68fb      	ldr	r3, [r7, #12]
 8004a50:	6a1b      	ldr	r3, [r3, #32]
 8004a52:	613b      	str	r3, [r7, #16]
 8004a54:	697b      	ldr	r3, [r7, #20]
 8004a56:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8004a5a:	617b      	str	r3, [r7, #20]
 8004a5c:	687b      	ldr	r3, [r7, #4]
 8004a5e:	031b      	lsls	r3, r3, #12
 8004a60:	697a      	ldr	r2, [r7, #20]
 8004a62:	4313      	orrs	r3, r2
 8004a64:	617b      	str	r3, [r7, #20]
 8004a66:	693b      	ldr	r3, [r7, #16]
 8004a68:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8004a6c:	613b      	str	r3, [r7, #16]
 8004a6e:	68bb      	ldr	r3, [r7, #8]
 8004a70:	011b      	lsls	r3, r3, #4
 8004a72:	693a      	ldr	r2, [r7, #16]
 8004a74:	4313      	orrs	r3, r2
 8004a76:	613b      	str	r3, [r7, #16]
 8004a78:	68fb      	ldr	r3, [r7, #12]
 8004a7a:	697a      	ldr	r2, [r7, #20]
 8004a7c:	619a      	str	r2, [r3, #24]
 8004a7e:	68fb      	ldr	r3, [r7, #12]
 8004a80:	693a      	ldr	r2, [r7, #16]
 8004a82:	621a      	str	r2, [r3, #32]
 8004a84:	bf00      	nop
 8004a86:	371c      	adds	r7, #28
 8004a88:	46bd      	mov	sp, r7
 8004a8a:	bc80      	pop	{r7}
 8004a8c:	4770      	bx	lr

08004a8e <TIM_ITRx_SetConfig>:
 8004a8e:	b480      	push	{r7}
 8004a90:	b085      	sub	sp, #20
 8004a92:	af00      	add	r7, sp, #0
 8004a94:	6078      	str	r0, [r7, #4]
 8004a96:	6039      	str	r1, [r7, #0]
 8004a98:	687b      	ldr	r3, [r7, #4]
 8004a9a:	689b      	ldr	r3, [r3, #8]
 8004a9c:	60fb      	str	r3, [r7, #12]
 8004a9e:	68fb      	ldr	r3, [r7, #12]
 8004aa0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004aa4:	60fb      	str	r3, [r7, #12]
 8004aa6:	683a      	ldr	r2, [r7, #0]
 8004aa8:	68fb      	ldr	r3, [r7, #12]
 8004aaa:	4313      	orrs	r3, r2
 8004aac:	f043 0307 	orr.w	r3, r3, #7
 8004ab0:	60fb      	str	r3, [r7, #12]
 8004ab2:	687b      	ldr	r3, [r7, #4]
 8004ab4:	68fa      	ldr	r2, [r7, #12]
 8004ab6:	609a      	str	r2, [r3, #8]
 8004ab8:	bf00      	nop
 8004aba:	3714      	adds	r7, #20
 8004abc:	46bd      	mov	sp, r7
 8004abe:	bc80      	pop	{r7}
 8004ac0:	4770      	bx	lr

08004ac2 <TIM_ETR_SetConfig>:
 8004ac2:	b480      	push	{r7}
 8004ac4:	b087      	sub	sp, #28
 8004ac6:	af00      	add	r7, sp, #0
 8004ac8:	60f8      	str	r0, [r7, #12]
 8004aca:	60b9      	str	r1, [r7, #8]
 8004acc:	607a      	str	r2, [r7, #4]
 8004ace:	603b      	str	r3, [r7, #0]
 8004ad0:	68fb      	ldr	r3, [r7, #12]
 8004ad2:	689b      	ldr	r3, [r3, #8]
 8004ad4:	617b      	str	r3, [r7, #20]
 8004ad6:	697b      	ldr	r3, [r7, #20]
 8004ad8:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8004adc:	617b      	str	r3, [r7, #20]
 8004ade:	683b      	ldr	r3, [r7, #0]
 8004ae0:	021a      	lsls	r2, r3, #8
 8004ae2:	687b      	ldr	r3, [r7, #4]
 8004ae4:	431a      	orrs	r2, r3
 8004ae6:	68bb      	ldr	r3, [r7, #8]
 8004ae8:	4313      	orrs	r3, r2
 8004aea:	697a      	ldr	r2, [r7, #20]
 8004aec:	4313      	orrs	r3, r2
 8004aee:	617b      	str	r3, [r7, #20]
 8004af0:	68fb      	ldr	r3, [r7, #12]
 8004af2:	697a      	ldr	r2, [r7, #20]
 8004af4:	609a      	str	r2, [r3, #8]
 8004af6:	bf00      	nop
 8004af8:	371c      	adds	r7, #28
 8004afa:	46bd      	mov	sp, r7
 8004afc:	bc80      	pop	{r7}
 8004afe:	4770      	bx	lr

08004b00 <HAL_TIMEx_MasterConfigSynchronization>:
 8004b00:	b480      	push	{r7}
 8004b02:	b085      	sub	sp, #20
 8004b04:	af00      	add	r7, sp, #0
 8004b06:	6078      	str	r0, [r7, #4]
 8004b08:	6039      	str	r1, [r7, #0]
 8004b0a:	687b      	ldr	r3, [r7, #4]
 8004b0c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004b10:	2b01      	cmp	r3, #1
 8004b12:	d101      	bne.n	8004b18 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8004b14:	2302      	movs	r3, #2
 8004b16:	e046      	b.n	8004ba6 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	2201      	movs	r2, #1
 8004b1c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004b20:	687b      	ldr	r3, [r7, #4]
 8004b22:	2202      	movs	r2, #2
 8004b24:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004b28:	687b      	ldr	r3, [r7, #4]
 8004b2a:	681b      	ldr	r3, [r3, #0]
 8004b2c:	685b      	ldr	r3, [r3, #4]
 8004b2e:	60fb      	str	r3, [r7, #12]
 8004b30:	687b      	ldr	r3, [r7, #4]
 8004b32:	681b      	ldr	r3, [r3, #0]
 8004b34:	689b      	ldr	r3, [r3, #8]
 8004b36:	60bb      	str	r3, [r7, #8]
 8004b38:	68fb      	ldr	r3, [r7, #12]
 8004b3a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004b3e:	60fb      	str	r3, [r7, #12]
 8004b40:	683b      	ldr	r3, [r7, #0]
 8004b42:	681b      	ldr	r3, [r3, #0]
 8004b44:	68fa      	ldr	r2, [r7, #12]
 8004b46:	4313      	orrs	r3, r2
 8004b48:	60fb      	str	r3, [r7, #12]
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	681b      	ldr	r3, [r3, #0]
 8004b4e:	68fa      	ldr	r2, [r7, #12]
 8004b50:	605a      	str	r2, [r3, #4]
 8004b52:	687b      	ldr	r3, [r7, #4]
 8004b54:	681b      	ldr	r3, [r3, #0]
 8004b56:	4a16      	ldr	r2, [pc, #88]	; (8004bb0 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8004b58:	4293      	cmp	r3, r2
 8004b5a:	d00e      	beq.n	8004b7a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	681b      	ldr	r3, [r3, #0]
 8004b60:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004b64:	d009      	beq.n	8004b7a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004b66:	687b      	ldr	r3, [r7, #4]
 8004b68:	681b      	ldr	r3, [r3, #0]
 8004b6a:	4a12      	ldr	r2, [pc, #72]	; (8004bb4 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8004b6c:	4293      	cmp	r3, r2
 8004b6e:	d004      	beq.n	8004b7a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	681b      	ldr	r3, [r3, #0]
 8004b74:	4a10      	ldr	r2, [pc, #64]	; (8004bb8 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8004b76:	4293      	cmp	r3, r2
 8004b78:	d10c      	bne.n	8004b94 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8004b7a:	68bb      	ldr	r3, [r7, #8]
 8004b7c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004b80:	60bb      	str	r3, [r7, #8]
 8004b82:	683b      	ldr	r3, [r7, #0]
 8004b84:	685b      	ldr	r3, [r3, #4]
 8004b86:	68ba      	ldr	r2, [r7, #8]
 8004b88:	4313      	orrs	r3, r2
 8004b8a:	60bb      	str	r3, [r7, #8]
 8004b8c:	687b      	ldr	r3, [r7, #4]
 8004b8e:	681b      	ldr	r3, [r3, #0]
 8004b90:	68ba      	ldr	r2, [r7, #8]
 8004b92:	609a      	str	r2, [r3, #8]
 8004b94:	687b      	ldr	r3, [r7, #4]
 8004b96:	2201      	movs	r2, #1
 8004b98:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004b9c:	687b      	ldr	r3, [r7, #4]
 8004b9e:	2200      	movs	r2, #0
 8004ba0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004ba4:	2300      	movs	r3, #0
 8004ba6:	4618      	mov	r0, r3
 8004ba8:	3714      	adds	r7, #20
 8004baa:	46bd      	mov	sp, r7
 8004bac:	bc80      	pop	{r7}
 8004bae:	4770      	bx	lr
 8004bb0:	40012c00 	.word	0x40012c00
 8004bb4:	40000400 	.word	0x40000400
 8004bb8:	40000800 	.word	0x40000800

08004bbc <HAL_TIMEx_CommutCallback>:
 8004bbc:	b480      	push	{r7}
 8004bbe:	b083      	sub	sp, #12
 8004bc0:	af00      	add	r7, sp, #0
 8004bc2:	6078      	str	r0, [r7, #4]
 8004bc4:	bf00      	nop
 8004bc6:	370c      	adds	r7, #12
 8004bc8:	46bd      	mov	sp, r7
 8004bca:	bc80      	pop	{r7}
 8004bcc:	4770      	bx	lr

08004bce <HAL_TIMEx_BreakCallback>:
 8004bce:	b480      	push	{r7}
 8004bd0:	b083      	sub	sp, #12
 8004bd2:	af00      	add	r7, sp, #0
 8004bd4:	6078      	str	r0, [r7, #4]
 8004bd6:	bf00      	nop
 8004bd8:	370c      	adds	r7, #12
 8004bda:	46bd      	mov	sp, r7
 8004bdc:	bc80      	pop	{r7}
 8004bde:	4770      	bx	lr

08004be0 <HAL_UART_Init>:
 8004be0:	b580      	push	{r7, lr}
 8004be2:	b082      	sub	sp, #8
 8004be4:	af00      	add	r7, sp, #0
 8004be6:	6078      	str	r0, [r7, #4]
 8004be8:	687b      	ldr	r3, [r7, #4]
 8004bea:	2b00      	cmp	r3, #0
 8004bec:	d101      	bne.n	8004bf2 <HAL_UART_Init+0x12>
 8004bee:	2301      	movs	r3, #1
 8004bf0:	e03f      	b.n	8004c72 <HAL_UART_Init+0x92>
 8004bf2:	687b      	ldr	r3, [r7, #4]
 8004bf4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004bf8:	b2db      	uxtb	r3, r3
 8004bfa:	2b00      	cmp	r3, #0
 8004bfc:	d106      	bne.n	8004c0c <HAL_UART_Init+0x2c>
 8004bfe:	687b      	ldr	r3, [r7, #4]
 8004c00:	2200      	movs	r2, #0
 8004c02:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004c06:	6878      	ldr	r0, [r7, #4]
 8004c08:	f7fd fc3e 	bl	8002488 <HAL_UART_MspInit>
 8004c0c:	687b      	ldr	r3, [r7, #4]
 8004c0e:	2224      	movs	r2, #36	; 0x24
 8004c10:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	68da      	ldr	r2, [r3, #12]
 8004c1a:	687b      	ldr	r3, [r7, #4]
 8004c1c:	681b      	ldr	r3, [r3, #0]
 8004c1e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004c22:	60da      	str	r2, [r3, #12]
 8004c24:	6878      	ldr	r0, [r7, #4]
 8004c26:	f000 fc85 	bl	8005534 <UART_SetConfig>
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	681b      	ldr	r3, [r3, #0]
 8004c2e:	691a      	ldr	r2, [r3, #16]
 8004c30:	687b      	ldr	r3, [r7, #4]
 8004c32:	681b      	ldr	r3, [r3, #0]
 8004c34:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8004c38:	611a      	str	r2, [r3, #16]
 8004c3a:	687b      	ldr	r3, [r7, #4]
 8004c3c:	681b      	ldr	r3, [r3, #0]
 8004c3e:	695a      	ldr	r2, [r3, #20]
 8004c40:	687b      	ldr	r3, [r7, #4]
 8004c42:	681b      	ldr	r3, [r3, #0]
 8004c44:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8004c48:	615a      	str	r2, [r3, #20]
 8004c4a:	687b      	ldr	r3, [r7, #4]
 8004c4c:	681b      	ldr	r3, [r3, #0]
 8004c4e:	68da      	ldr	r2, [r3, #12]
 8004c50:	687b      	ldr	r3, [r7, #4]
 8004c52:	681b      	ldr	r3, [r3, #0]
 8004c54:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004c58:	60da      	str	r2, [r3, #12]
 8004c5a:	687b      	ldr	r3, [r7, #4]
 8004c5c:	2200      	movs	r2, #0
 8004c5e:	641a      	str	r2, [r3, #64]	; 0x40
 8004c60:	687b      	ldr	r3, [r7, #4]
 8004c62:	2220      	movs	r2, #32
 8004c64:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004c68:	687b      	ldr	r3, [r7, #4]
 8004c6a:	2220      	movs	r2, #32
 8004c6c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004c70:	2300      	movs	r3, #0
 8004c72:	4618      	mov	r0, r3
 8004c74:	3708      	adds	r7, #8
 8004c76:	46bd      	mov	sp, r7
 8004c78:	bd80      	pop	{r7, pc}

08004c7a <HAL_UART_Transmit>:
 8004c7a:	b580      	push	{r7, lr}
 8004c7c:	b08a      	sub	sp, #40	; 0x28
 8004c7e:	af02      	add	r7, sp, #8
 8004c80:	60f8      	str	r0, [r7, #12]
 8004c82:	60b9      	str	r1, [r7, #8]
 8004c84:	603b      	str	r3, [r7, #0]
 8004c86:	4613      	mov	r3, r2
 8004c88:	80fb      	strh	r3, [r7, #6]
 8004c8a:	2300      	movs	r3, #0
 8004c8c:	617b      	str	r3, [r7, #20]
 8004c8e:	68fb      	ldr	r3, [r7, #12]
 8004c90:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004c94:	b2db      	uxtb	r3, r3
 8004c96:	2b20      	cmp	r3, #32
 8004c98:	d17c      	bne.n	8004d94 <HAL_UART_Transmit+0x11a>
 8004c9a:	68bb      	ldr	r3, [r7, #8]
 8004c9c:	2b00      	cmp	r3, #0
 8004c9e:	d002      	beq.n	8004ca6 <HAL_UART_Transmit+0x2c>
 8004ca0:	88fb      	ldrh	r3, [r7, #6]
 8004ca2:	2b00      	cmp	r3, #0
 8004ca4:	d101      	bne.n	8004caa <HAL_UART_Transmit+0x30>
 8004ca6:	2301      	movs	r3, #1
 8004ca8:	e075      	b.n	8004d96 <HAL_UART_Transmit+0x11c>
 8004caa:	68fb      	ldr	r3, [r7, #12]
 8004cac:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004cb0:	2b01      	cmp	r3, #1
 8004cb2:	d101      	bne.n	8004cb8 <HAL_UART_Transmit+0x3e>
 8004cb4:	2302      	movs	r3, #2
 8004cb6:	e06e      	b.n	8004d96 <HAL_UART_Transmit+0x11c>
 8004cb8:	68fb      	ldr	r3, [r7, #12]
 8004cba:	2201      	movs	r2, #1
 8004cbc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004cc0:	68fb      	ldr	r3, [r7, #12]
 8004cc2:	2200      	movs	r2, #0
 8004cc4:	641a      	str	r2, [r3, #64]	; 0x40
 8004cc6:	68fb      	ldr	r3, [r7, #12]
 8004cc8:	2221      	movs	r2, #33	; 0x21
 8004cca:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004cce:	f7fd ff71 	bl	8002bb4 <HAL_GetTick>
 8004cd2:	6178      	str	r0, [r7, #20]
 8004cd4:	68fb      	ldr	r3, [r7, #12]
 8004cd6:	88fa      	ldrh	r2, [r7, #6]
 8004cd8:	849a      	strh	r2, [r3, #36]	; 0x24
 8004cda:	68fb      	ldr	r3, [r7, #12]
 8004cdc:	88fa      	ldrh	r2, [r7, #6]
 8004cde:	84da      	strh	r2, [r3, #38]	; 0x26
 8004ce0:	68fb      	ldr	r3, [r7, #12]
 8004ce2:	689b      	ldr	r3, [r3, #8]
 8004ce4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004ce8:	d108      	bne.n	8004cfc <HAL_UART_Transmit+0x82>
 8004cea:	68fb      	ldr	r3, [r7, #12]
 8004cec:	691b      	ldr	r3, [r3, #16]
 8004cee:	2b00      	cmp	r3, #0
 8004cf0:	d104      	bne.n	8004cfc <HAL_UART_Transmit+0x82>
 8004cf2:	2300      	movs	r3, #0
 8004cf4:	61fb      	str	r3, [r7, #28]
 8004cf6:	68bb      	ldr	r3, [r7, #8]
 8004cf8:	61bb      	str	r3, [r7, #24]
 8004cfa:	e003      	b.n	8004d04 <HAL_UART_Transmit+0x8a>
 8004cfc:	68bb      	ldr	r3, [r7, #8]
 8004cfe:	61fb      	str	r3, [r7, #28]
 8004d00:	2300      	movs	r3, #0
 8004d02:	61bb      	str	r3, [r7, #24]
 8004d04:	68fb      	ldr	r3, [r7, #12]
 8004d06:	2200      	movs	r2, #0
 8004d08:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004d0c:	e02a      	b.n	8004d64 <HAL_UART_Transmit+0xea>
 8004d0e:	683b      	ldr	r3, [r7, #0]
 8004d10:	9300      	str	r3, [sp, #0]
 8004d12:	697b      	ldr	r3, [r7, #20]
 8004d14:	2200      	movs	r2, #0
 8004d16:	2180      	movs	r1, #128	; 0x80
 8004d18:	68f8      	ldr	r0, [r7, #12]
 8004d1a:	f000 fa38 	bl	800518e <UART_WaitOnFlagUntilTimeout>
 8004d1e:	4603      	mov	r3, r0
 8004d20:	2b00      	cmp	r3, #0
 8004d22:	d001      	beq.n	8004d28 <HAL_UART_Transmit+0xae>
 8004d24:	2303      	movs	r3, #3
 8004d26:	e036      	b.n	8004d96 <HAL_UART_Transmit+0x11c>
 8004d28:	69fb      	ldr	r3, [r7, #28]
 8004d2a:	2b00      	cmp	r3, #0
 8004d2c:	d10b      	bne.n	8004d46 <HAL_UART_Transmit+0xcc>
 8004d2e:	69bb      	ldr	r3, [r7, #24]
 8004d30:	881b      	ldrh	r3, [r3, #0]
 8004d32:	461a      	mov	r2, r3
 8004d34:	68fb      	ldr	r3, [r7, #12]
 8004d36:	681b      	ldr	r3, [r3, #0]
 8004d38:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004d3c:	605a      	str	r2, [r3, #4]
 8004d3e:	69bb      	ldr	r3, [r7, #24]
 8004d40:	3302      	adds	r3, #2
 8004d42:	61bb      	str	r3, [r7, #24]
 8004d44:	e007      	b.n	8004d56 <HAL_UART_Transmit+0xdc>
 8004d46:	69fb      	ldr	r3, [r7, #28]
 8004d48:	781a      	ldrb	r2, [r3, #0]
 8004d4a:	68fb      	ldr	r3, [r7, #12]
 8004d4c:	681b      	ldr	r3, [r3, #0]
 8004d4e:	605a      	str	r2, [r3, #4]
 8004d50:	69fb      	ldr	r3, [r7, #28]
 8004d52:	3301      	adds	r3, #1
 8004d54:	61fb      	str	r3, [r7, #28]
 8004d56:	68fb      	ldr	r3, [r7, #12]
 8004d58:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8004d5a:	b29b      	uxth	r3, r3
 8004d5c:	3b01      	subs	r3, #1
 8004d5e:	b29a      	uxth	r2, r3
 8004d60:	68fb      	ldr	r3, [r7, #12]
 8004d62:	84da      	strh	r2, [r3, #38]	; 0x26
 8004d64:	68fb      	ldr	r3, [r7, #12]
 8004d66:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8004d68:	b29b      	uxth	r3, r3
 8004d6a:	2b00      	cmp	r3, #0
 8004d6c:	d1cf      	bne.n	8004d0e <HAL_UART_Transmit+0x94>
 8004d6e:	683b      	ldr	r3, [r7, #0]
 8004d70:	9300      	str	r3, [sp, #0]
 8004d72:	697b      	ldr	r3, [r7, #20]
 8004d74:	2200      	movs	r2, #0
 8004d76:	2140      	movs	r1, #64	; 0x40
 8004d78:	68f8      	ldr	r0, [r7, #12]
 8004d7a:	f000 fa08 	bl	800518e <UART_WaitOnFlagUntilTimeout>
 8004d7e:	4603      	mov	r3, r0
 8004d80:	2b00      	cmp	r3, #0
 8004d82:	d001      	beq.n	8004d88 <HAL_UART_Transmit+0x10e>
 8004d84:	2303      	movs	r3, #3
 8004d86:	e006      	b.n	8004d96 <HAL_UART_Transmit+0x11c>
 8004d88:	68fb      	ldr	r3, [r7, #12]
 8004d8a:	2220      	movs	r2, #32
 8004d8c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004d90:	2300      	movs	r3, #0
 8004d92:	e000      	b.n	8004d96 <HAL_UART_Transmit+0x11c>
 8004d94:	2302      	movs	r3, #2
 8004d96:	4618      	mov	r0, r3
 8004d98:	3720      	adds	r7, #32
 8004d9a:	46bd      	mov	sp, r7
 8004d9c:	bd80      	pop	{r7, pc}

08004d9e <HAL_UART_Receive_IT>:
 8004d9e:	b580      	push	{r7, lr}
 8004da0:	b084      	sub	sp, #16
 8004da2:	af00      	add	r7, sp, #0
 8004da4:	60f8      	str	r0, [r7, #12]
 8004da6:	60b9      	str	r1, [r7, #8]
 8004da8:	4613      	mov	r3, r2
 8004daa:	80fb      	strh	r3, [r7, #6]
 8004dac:	68fb      	ldr	r3, [r7, #12]
 8004dae:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004db2:	b2db      	uxtb	r3, r3
 8004db4:	2b20      	cmp	r3, #32
 8004db6:	d11d      	bne.n	8004df4 <HAL_UART_Receive_IT+0x56>
 8004db8:	68bb      	ldr	r3, [r7, #8]
 8004dba:	2b00      	cmp	r3, #0
 8004dbc:	d002      	beq.n	8004dc4 <HAL_UART_Receive_IT+0x26>
 8004dbe:	88fb      	ldrh	r3, [r7, #6]
 8004dc0:	2b00      	cmp	r3, #0
 8004dc2:	d101      	bne.n	8004dc8 <HAL_UART_Receive_IT+0x2a>
 8004dc4:	2301      	movs	r3, #1
 8004dc6:	e016      	b.n	8004df6 <HAL_UART_Receive_IT+0x58>
 8004dc8:	68fb      	ldr	r3, [r7, #12]
 8004dca:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004dce:	2b01      	cmp	r3, #1
 8004dd0:	d101      	bne.n	8004dd6 <HAL_UART_Receive_IT+0x38>
 8004dd2:	2302      	movs	r3, #2
 8004dd4:	e00f      	b.n	8004df6 <HAL_UART_Receive_IT+0x58>
 8004dd6:	68fb      	ldr	r3, [r7, #12]
 8004dd8:	2201      	movs	r2, #1
 8004dda:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004dde:	68fb      	ldr	r3, [r7, #12]
 8004de0:	2200      	movs	r2, #0
 8004de2:	631a      	str	r2, [r3, #48]	; 0x30
 8004de4:	88fb      	ldrh	r3, [r7, #6]
 8004de6:	461a      	mov	r2, r3
 8004de8:	68b9      	ldr	r1, [r7, #8]
 8004dea:	68f8      	ldr	r0, [r7, #12]
 8004dec:	f000 fa19 	bl	8005222 <UART_Start_Receive_IT>
 8004df0:	4603      	mov	r3, r0
 8004df2:	e000      	b.n	8004df6 <HAL_UART_Receive_IT+0x58>
 8004df4:	2302      	movs	r3, #2
 8004df6:	4618      	mov	r0, r3
 8004df8:	3710      	adds	r7, #16
 8004dfa:	46bd      	mov	sp, r7
 8004dfc:	bd80      	pop	{r7, pc}
	...

08004e00 <HAL_UART_IRQHandler>:
 8004e00:	b580      	push	{r7, lr}
 8004e02:	b08a      	sub	sp, #40	; 0x28
 8004e04:	af00      	add	r7, sp, #0
 8004e06:	6078      	str	r0, [r7, #4]
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	681b      	ldr	r3, [r3, #0]
 8004e0c:	681b      	ldr	r3, [r3, #0]
 8004e0e:	627b      	str	r3, [r7, #36]	; 0x24
 8004e10:	687b      	ldr	r3, [r7, #4]
 8004e12:	681b      	ldr	r3, [r3, #0]
 8004e14:	68db      	ldr	r3, [r3, #12]
 8004e16:	623b      	str	r3, [r7, #32]
 8004e18:	687b      	ldr	r3, [r7, #4]
 8004e1a:	681b      	ldr	r3, [r3, #0]
 8004e1c:	695b      	ldr	r3, [r3, #20]
 8004e1e:	61fb      	str	r3, [r7, #28]
 8004e20:	2300      	movs	r3, #0
 8004e22:	61bb      	str	r3, [r7, #24]
 8004e24:	2300      	movs	r3, #0
 8004e26:	617b      	str	r3, [r7, #20]
 8004e28:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e2a:	f003 030f 	and.w	r3, r3, #15
 8004e2e:	61bb      	str	r3, [r7, #24]
 8004e30:	69bb      	ldr	r3, [r7, #24]
 8004e32:	2b00      	cmp	r3, #0
 8004e34:	d10d      	bne.n	8004e52 <HAL_UART_IRQHandler+0x52>
 8004e36:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e38:	f003 0320 	and.w	r3, r3, #32
 8004e3c:	2b00      	cmp	r3, #0
 8004e3e:	d008      	beq.n	8004e52 <HAL_UART_IRQHandler+0x52>
 8004e40:	6a3b      	ldr	r3, [r7, #32]
 8004e42:	f003 0320 	and.w	r3, r3, #32
 8004e46:	2b00      	cmp	r3, #0
 8004e48:	d003      	beq.n	8004e52 <HAL_UART_IRQHandler+0x52>
 8004e4a:	6878      	ldr	r0, [r7, #4]
 8004e4c:	f000 fac9 	bl	80053e2 <UART_Receive_IT>
 8004e50:	e17b      	b.n	800514a <HAL_UART_IRQHandler+0x34a>
 8004e52:	69bb      	ldr	r3, [r7, #24]
 8004e54:	2b00      	cmp	r3, #0
 8004e56:	f000 80b1 	beq.w	8004fbc <HAL_UART_IRQHandler+0x1bc>
 8004e5a:	69fb      	ldr	r3, [r7, #28]
 8004e5c:	f003 0301 	and.w	r3, r3, #1
 8004e60:	2b00      	cmp	r3, #0
 8004e62:	d105      	bne.n	8004e70 <HAL_UART_IRQHandler+0x70>
 8004e64:	6a3b      	ldr	r3, [r7, #32]
 8004e66:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8004e6a:	2b00      	cmp	r3, #0
 8004e6c:	f000 80a6 	beq.w	8004fbc <HAL_UART_IRQHandler+0x1bc>
 8004e70:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e72:	f003 0301 	and.w	r3, r3, #1
 8004e76:	2b00      	cmp	r3, #0
 8004e78:	d00a      	beq.n	8004e90 <HAL_UART_IRQHandler+0x90>
 8004e7a:	6a3b      	ldr	r3, [r7, #32]
 8004e7c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004e80:	2b00      	cmp	r3, #0
 8004e82:	d005      	beq.n	8004e90 <HAL_UART_IRQHandler+0x90>
 8004e84:	687b      	ldr	r3, [r7, #4]
 8004e86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e88:	f043 0201 	orr.w	r2, r3, #1
 8004e8c:	687b      	ldr	r3, [r7, #4]
 8004e8e:	641a      	str	r2, [r3, #64]	; 0x40
 8004e90:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e92:	f003 0304 	and.w	r3, r3, #4
 8004e96:	2b00      	cmp	r3, #0
 8004e98:	d00a      	beq.n	8004eb0 <HAL_UART_IRQHandler+0xb0>
 8004e9a:	69fb      	ldr	r3, [r7, #28]
 8004e9c:	f003 0301 	and.w	r3, r3, #1
 8004ea0:	2b00      	cmp	r3, #0
 8004ea2:	d005      	beq.n	8004eb0 <HAL_UART_IRQHandler+0xb0>
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ea8:	f043 0202 	orr.w	r2, r3, #2
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	641a      	str	r2, [r3, #64]	; 0x40
 8004eb0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004eb2:	f003 0302 	and.w	r3, r3, #2
 8004eb6:	2b00      	cmp	r3, #0
 8004eb8:	d00a      	beq.n	8004ed0 <HAL_UART_IRQHandler+0xd0>
 8004eba:	69fb      	ldr	r3, [r7, #28]
 8004ebc:	f003 0301 	and.w	r3, r3, #1
 8004ec0:	2b00      	cmp	r3, #0
 8004ec2:	d005      	beq.n	8004ed0 <HAL_UART_IRQHandler+0xd0>
 8004ec4:	687b      	ldr	r3, [r7, #4]
 8004ec6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ec8:	f043 0204 	orr.w	r2, r3, #4
 8004ecc:	687b      	ldr	r3, [r7, #4]
 8004ece:	641a      	str	r2, [r3, #64]	; 0x40
 8004ed0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004ed2:	f003 0308 	and.w	r3, r3, #8
 8004ed6:	2b00      	cmp	r3, #0
 8004ed8:	d00f      	beq.n	8004efa <HAL_UART_IRQHandler+0xfa>
 8004eda:	6a3b      	ldr	r3, [r7, #32]
 8004edc:	f003 0320 	and.w	r3, r3, #32
 8004ee0:	2b00      	cmp	r3, #0
 8004ee2:	d104      	bne.n	8004eee <HAL_UART_IRQHandler+0xee>
 8004ee4:	69fb      	ldr	r3, [r7, #28]
 8004ee6:	f003 0301 	and.w	r3, r3, #1
 8004eea:	2b00      	cmp	r3, #0
 8004eec:	d005      	beq.n	8004efa <HAL_UART_IRQHandler+0xfa>
 8004eee:	687b      	ldr	r3, [r7, #4]
 8004ef0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ef2:	f043 0208 	orr.w	r2, r3, #8
 8004ef6:	687b      	ldr	r3, [r7, #4]
 8004ef8:	641a      	str	r2, [r3, #64]	; 0x40
 8004efa:	687b      	ldr	r3, [r7, #4]
 8004efc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004efe:	2b00      	cmp	r3, #0
 8004f00:	f000 811e 	beq.w	8005140 <HAL_UART_IRQHandler+0x340>
 8004f04:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f06:	f003 0320 	and.w	r3, r3, #32
 8004f0a:	2b00      	cmp	r3, #0
 8004f0c:	d007      	beq.n	8004f1e <HAL_UART_IRQHandler+0x11e>
 8004f0e:	6a3b      	ldr	r3, [r7, #32]
 8004f10:	f003 0320 	and.w	r3, r3, #32
 8004f14:	2b00      	cmp	r3, #0
 8004f16:	d002      	beq.n	8004f1e <HAL_UART_IRQHandler+0x11e>
 8004f18:	6878      	ldr	r0, [r7, #4]
 8004f1a:	f000 fa62 	bl	80053e2 <UART_Receive_IT>
 8004f1e:	687b      	ldr	r3, [r7, #4]
 8004f20:	681b      	ldr	r3, [r3, #0]
 8004f22:	695b      	ldr	r3, [r3, #20]
 8004f24:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004f28:	2b00      	cmp	r3, #0
 8004f2a:	bf14      	ite	ne
 8004f2c:	2301      	movne	r3, #1
 8004f2e:	2300      	moveq	r3, #0
 8004f30:	b2db      	uxtb	r3, r3
 8004f32:	617b      	str	r3, [r7, #20]
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f38:	f003 0308 	and.w	r3, r3, #8
 8004f3c:	2b00      	cmp	r3, #0
 8004f3e:	d102      	bne.n	8004f46 <HAL_UART_IRQHandler+0x146>
 8004f40:	697b      	ldr	r3, [r7, #20]
 8004f42:	2b00      	cmp	r3, #0
 8004f44:	d031      	beq.n	8004faa <HAL_UART_IRQHandler+0x1aa>
 8004f46:	6878      	ldr	r0, [r7, #4]
 8004f48:	f000 f9a4 	bl	8005294 <UART_EndRxTransfer>
 8004f4c:	687b      	ldr	r3, [r7, #4]
 8004f4e:	681b      	ldr	r3, [r3, #0]
 8004f50:	695b      	ldr	r3, [r3, #20]
 8004f52:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004f56:	2b00      	cmp	r3, #0
 8004f58:	d023      	beq.n	8004fa2 <HAL_UART_IRQHandler+0x1a2>
 8004f5a:	687b      	ldr	r3, [r7, #4]
 8004f5c:	681b      	ldr	r3, [r3, #0]
 8004f5e:	695a      	ldr	r2, [r3, #20]
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	681b      	ldr	r3, [r3, #0]
 8004f64:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004f68:	615a      	str	r2, [r3, #20]
 8004f6a:	687b      	ldr	r3, [r7, #4]
 8004f6c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f6e:	2b00      	cmp	r3, #0
 8004f70:	d013      	beq.n	8004f9a <HAL_UART_IRQHandler+0x19a>
 8004f72:	687b      	ldr	r3, [r7, #4]
 8004f74:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f76:	4a76      	ldr	r2, [pc, #472]	; (8005150 <HAL_UART_IRQHandler+0x350>)
 8004f78:	635a      	str	r2, [r3, #52]	; 0x34
 8004f7a:	687b      	ldr	r3, [r7, #4]
 8004f7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f7e:	4618      	mov	r0, r3
 8004f80:	f7fd ff8e 	bl	8002ea0 <HAL_DMA_Abort_IT>
 8004f84:	4603      	mov	r3, r0
 8004f86:	2b00      	cmp	r3, #0
 8004f88:	d016      	beq.n	8004fb8 <HAL_UART_IRQHandler+0x1b8>
 8004f8a:	687b      	ldr	r3, [r7, #4]
 8004f8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f8e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004f90:	687a      	ldr	r2, [r7, #4]
 8004f92:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8004f94:	4610      	mov	r0, r2
 8004f96:	4798      	blx	r3
 8004f98:	e00e      	b.n	8004fb8 <HAL_UART_IRQHandler+0x1b8>
 8004f9a:	6878      	ldr	r0, [r7, #4]
 8004f9c:	f000 f8e3 	bl	8005166 <HAL_UART_ErrorCallback>
 8004fa0:	e00a      	b.n	8004fb8 <HAL_UART_IRQHandler+0x1b8>
 8004fa2:	6878      	ldr	r0, [r7, #4]
 8004fa4:	f000 f8df 	bl	8005166 <HAL_UART_ErrorCallback>
 8004fa8:	e006      	b.n	8004fb8 <HAL_UART_IRQHandler+0x1b8>
 8004faa:	6878      	ldr	r0, [r7, #4]
 8004fac:	f000 f8db 	bl	8005166 <HAL_UART_ErrorCallback>
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	2200      	movs	r2, #0
 8004fb4:	641a      	str	r2, [r3, #64]	; 0x40
 8004fb6:	e0c3      	b.n	8005140 <HAL_UART_IRQHandler+0x340>
 8004fb8:	bf00      	nop
 8004fba:	e0c1      	b.n	8005140 <HAL_UART_IRQHandler+0x340>
 8004fbc:	687b      	ldr	r3, [r7, #4]
 8004fbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004fc0:	2b01      	cmp	r3, #1
 8004fc2:	f040 80a1 	bne.w	8005108 <HAL_UART_IRQHandler+0x308>
 8004fc6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004fc8:	f003 0310 	and.w	r3, r3, #16
 8004fcc:	2b00      	cmp	r3, #0
 8004fce:	f000 809b 	beq.w	8005108 <HAL_UART_IRQHandler+0x308>
 8004fd2:	6a3b      	ldr	r3, [r7, #32]
 8004fd4:	f003 0310 	and.w	r3, r3, #16
 8004fd8:	2b00      	cmp	r3, #0
 8004fda:	f000 8095 	beq.w	8005108 <HAL_UART_IRQHandler+0x308>
 8004fde:	2300      	movs	r3, #0
 8004fe0:	60fb      	str	r3, [r7, #12]
 8004fe2:	687b      	ldr	r3, [r7, #4]
 8004fe4:	681b      	ldr	r3, [r3, #0]
 8004fe6:	681b      	ldr	r3, [r3, #0]
 8004fe8:	60fb      	str	r3, [r7, #12]
 8004fea:	687b      	ldr	r3, [r7, #4]
 8004fec:	681b      	ldr	r3, [r3, #0]
 8004fee:	685b      	ldr	r3, [r3, #4]
 8004ff0:	60fb      	str	r3, [r7, #12]
 8004ff2:	68fb      	ldr	r3, [r7, #12]
 8004ff4:	687b      	ldr	r3, [r7, #4]
 8004ff6:	681b      	ldr	r3, [r3, #0]
 8004ff8:	695b      	ldr	r3, [r3, #20]
 8004ffa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004ffe:	2b00      	cmp	r3, #0
 8005000:	d04e      	beq.n	80050a0 <HAL_UART_IRQHandler+0x2a0>
 8005002:	687b      	ldr	r3, [r7, #4]
 8005004:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	685b      	ldr	r3, [r3, #4]
 800500a:	823b      	strh	r3, [r7, #16]
 800500c:	8a3b      	ldrh	r3, [r7, #16]
 800500e:	2b00      	cmp	r3, #0
 8005010:	f000 8098 	beq.w	8005144 <HAL_UART_IRQHandler+0x344>
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8005018:	8a3a      	ldrh	r2, [r7, #16]
 800501a:	429a      	cmp	r2, r3
 800501c:	f080 8092 	bcs.w	8005144 <HAL_UART_IRQHandler+0x344>
 8005020:	687b      	ldr	r3, [r7, #4]
 8005022:	8a3a      	ldrh	r2, [r7, #16]
 8005024:	85da      	strh	r2, [r3, #46]	; 0x2e
 8005026:	687b      	ldr	r3, [r7, #4]
 8005028:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800502a:	699b      	ldr	r3, [r3, #24]
 800502c:	2b20      	cmp	r3, #32
 800502e:	d02b      	beq.n	8005088 <HAL_UART_IRQHandler+0x288>
 8005030:	687b      	ldr	r3, [r7, #4]
 8005032:	681b      	ldr	r3, [r3, #0]
 8005034:	68da      	ldr	r2, [r3, #12]
 8005036:	687b      	ldr	r3, [r7, #4]
 8005038:	681b      	ldr	r3, [r3, #0]
 800503a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800503e:	60da      	str	r2, [r3, #12]
 8005040:	687b      	ldr	r3, [r7, #4]
 8005042:	681b      	ldr	r3, [r3, #0]
 8005044:	695a      	ldr	r2, [r3, #20]
 8005046:	687b      	ldr	r3, [r7, #4]
 8005048:	681b      	ldr	r3, [r3, #0]
 800504a:	f022 0201 	bic.w	r2, r2, #1
 800504e:	615a      	str	r2, [r3, #20]
 8005050:	687b      	ldr	r3, [r7, #4]
 8005052:	681b      	ldr	r3, [r3, #0]
 8005054:	695a      	ldr	r2, [r3, #20]
 8005056:	687b      	ldr	r3, [r7, #4]
 8005058:	681b      	ldr	r3, [r3, #0]
 800505a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800505e:	615a      	str	r2, [r3, #20]
 8005060:	687b      	ldr	r3, [r7, #4]
 8005062:	2220      	movs	r2, #32
 8005064:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	2200      	movs	r2, #0
 800506c:	631a      	str	r2, [r3, #48]	; 0x30
 800506e:	687b      	ldr	r3, [r7, #4]
 8005070:	681b      	ldr	r3, [r3, #0]
 8005072:	68da      	ldr	r2, [r3, #12]
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	f022 0210 	bic.w	r2, r2, #16
 800507c:	60da      	str	r2, [r3, #12]
 800507e:	687b      	ldr	r3, [r7, #4]
 8005080:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005082:	4618      	mov	r0, r3
 8005084:	f7fd fed1 	bl	8002e2a <HAL_DMA_Abort>
 8005088:	687b      	ldr	r3, [r7, #4]
 800508a:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800508c:	687b      	ldr	r3, [r7, #4]
 800508e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8005090:	b29b      	uxth	r3, r3
 8005092:	1ad3      	subs	r3, r2, r3
 8005094:	b29b      	uxth	r3, r3
 8005096:	4619      	mov	r1, r3
 8005098:	6878      	ldr	r0, [r7, #4]
 800509a:	f000 f86d 	bl	8005178 <HAL_UARTEx_RxEventCallback>
 800509e:	e051      	b.n	8005144 <HAL_UART_IRQHandler+0x344>
 80050a0:	687b      	ldr	r3, [r7, #4]
 80050a2:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80050a4:	687b      	ldr	r3, [r7, #4]
 80050a6:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80050a8:	b29b      	uxth	r3, r3
 80050aa:	1ad3      	subs	r3, r2, r3
 80050ac:	827b      	strh	r3, [r7, #18]
 80050ae:	687b      	ldr	r3, [r7, #4]
 80050b0:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80050b2:	b29b      	uxth	r3, r3
 80050b4:	2b00      	cmp	r3, #0
 80050b6:	d047      	beq.n	8005148 <HAL_UART_IRQHandler+0x348>
 80050b8:	8a7b      	ldrh	r3, [r7, #18]
 80050ba:	2b00      	cmp	r3, #0
 80050bc:	d044      	beq.n	8005148 <HAL_UART_IRQHandler+0x348>
 80050be:	687b      	ldr	r3, [r7, #4]
 80050c0:	681b      	ldr	r3, [r3, #0]
 80050c2:	68da      	ldr	r2, [r3, #12]
 80050c4:	687b      	ldr	r3, [r7, #4]
 80050c6:	681b      	ldr	r3, [r3, #0]
 80050c8:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80050cc:	60da      	str	r2, [r3, #12]
 80050ce:	687b      	ldr	r3, [r7, #4]
 80050d0:	681b      	ldr	r3, [r3, #0]
 80050d2:	695a      	ldr	r2, [r3, #20]
 80050d4:	687b      	ldr	r3, [r7, #4]
 80050d6:	681b      	ldr	r3, [r3, #0]
 80050d8:	f022 0201 	bic.w	r2, r2, #1
 80050dc:	615a      	str	r2, [r3, #20]
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	2220      	movs	r2, #32
 80050e2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	2200      	movs	r2, #0
 80050ea:	631a      	str	r2, [r3, #48]	; 0x30
 80050ec:	687b      	ldr	r3, [r7, #4]
 80050ee:	681b      	ldr	r3, [r3, #0]
 80050f0:	68da      	ldr	r2, [r3, #12]
 80050f2:	687b      	ldr	r3, [r7, #4]
 80050f4:	681b      	ldr	r3, [r3, #0]
 80050f6:	f022 0210 	bic.w	r2, r2, #16
 80050fa:	60da      	str	r2, [r3, #12]
 80050fc:	8a7b      	ldrh	r3, [r7, #18]
 80050fe:	4619      	mov	r1, r3
 8005100:	6878      	ldr	r0, [r7, #4]
 8005102:	f000 f839 	bl	8005178 <HAL_UARTEx_RxEventCallback>
 8005106:	e01f      	b.n	8005148 <HAL_UART_IRQHandler+0x348>
 8005108:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800510a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800510e:	2b00      	cmp	r3, #0
 8005110:	d008      	beq.n	8005124 <HAL_UART_IRQHandler+0x324>
 8005112:	6a3b      	ldr	r3, [r7, #32]
 8005114:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005118:	2b00      	cmp	r3, #0
 800511a:	d003      	beq.n	8005124 <HAL_UART_IRQHandler+0x324>
 800511c:	6878      	ldr	r0, [r7, #4]
 800511e:	f000 f8f9 	bl	8005314 <UART_Transmit_IT>
 8005122:	e012      	b.n	800514a <HAL_UART_IRQHandler+0x34a>
 8005124:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005126:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800512a:	2b00      	cmp	r3, #0
 800512c:	d00d      	beq.n	800514a <HAL_UART_IRQHandler+0x34a>
 800512e:	6a3b      	ldr	r3, [r7, #32]
 8005130:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005134:	2b00      	cmp	r3, #0
 8005136:	d008      	beq.n	800514a <HAL_UART_IRQHandler+0x34a>
 8005138:	6878      	ldr	r0, [r7, #4]
 800513a:	f000 f93a 	bl	80053b2 <UART_EndTransmit_IT>
 800513e:	e004      	b.n	800514a <HAL_UART_IRQHandler+0x34a>
 8005140:	bf00      	nop
 8005142:	e002      	b.n	800514a <HAL_UART_IRQHandler+0x34a>
 8005144:	bf00      	nop
 8005146:	e000      	b.n	800514a <HAL_UART_IRQHandler+0x34a>
 8005148:	bf00      	nop
 800514a:	3728      	adds	r7, #40	; 0x28
 800514c:	46bd      	mov	sp, r7
 800514e:	bd80      	pop	{r7, pc}
 8005150:	080052ed 	.word	0x080052ed

08005154 <HAL_UART_TxCpltCallback>:
 8005154:	b480      	push	{r7}
 8005156:	b083      	sub	sp, #12
 8005158:	af00      	add	r7, sp, #0
 800515a:	6078      	str	r0, [r7, #4]
 800515c:	bf00      	nop
 800515e:	370c      	adds	r7, #12
 8005160:	46bd      	mov	sp, r7
 8005162:	bc80      	pop	{r7}
 8005164:	4770      	bx	lr

08005166 <HAL_UART_ErrorCallback>:
 8005166:	b480      	push	{r7}
 8005168:	b083      	sub	sp, #12
 800516a:	af00      	add	r7, sp, #0
 800516c:	6078      	str	r0, [r7, #4]
 800516e:	bf00      	nop
 8005170:	370c      	adds	r7, #12
 8005172:	46bd      	mov	sp, r7
 8005174:	bc80      	pop	{r7}
 8005176:	4770      	bx	lr

08005178 <HAL_UARTEx_RxEventCallback>:
 8005178:	b480      	push	{r7}
 800517a:	b083      	sub	sp, #12
 800517c:	af00      	add	r7, sp, #0
 800517e:	6078      	str	r0, [r7, #4]
 8005180:	460b      	mov	r3, r1
 8005182:	807b      	strh	r3, [r7, #2]
 8005184:	bf00      	nop
 8005186:	370c      	adds	r7, #12
 8005188:	46bd      	mov	sp, r7
 800518a:	bc80      	pop	{r7}
 800518c:	4770      	bx	lr

0800518e <UART_WaitOnFlagUntilTimeout>:
 800518e:	b580      	push	{r7, lr}
 8005190:	b084      	sub	sp, #16
 8005192:	af00      	add	r7, sp, #0
 8005194:	60f8      	str	r0, [r7, #12]
 8005196:	60b9      	str	r1, [r7, #8]
 8005198:	603b      	str	r3, [r7, #0]
 800519a:	4613      	mov	r3, r2
 800519c:	71fb      	strb	r3, [r7, #7]
 800519e:	e02c      	b.n	80051fa <UART_WaitOnFlagUntilTimeout+0x6c>
 80051a0:	69bb      	ldr	r3, [r7, #24]
 80051a2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80051a6:	d028      	beq.n	80051fa <UART_WaitOnFlagUntilTimeout+0x6c>
 80051a8:	69bb      	ldr	r3, [r7, #24]
 80051aa:	2b00      	cmp	r3, #0
 80051ac:	d007      	beq.n	80051be <UART_WaitOnFlagUntilTimeout+0x30>
 80051ae:	f7fd fd01 	bl	8002bb4 <HAL_GetTick>
 80051b2:	4602      	mov	r2, r0
 80051b4:	683b      	ldr	r3, [r7, #0]
 80051b6:	1ad3      	subs	r3, r2, r3
 80051b8:	69ba      	ldr	r2, [r7, #24]
 80051ba:	429a      	cmp	r2, r3
 80051bc:	d21d      	bcs.n	80051fa <UART_WaitOnFlagUntilTimeout+0x6c>
 80051be:	68fb      	ldr	r3, [r7, #12]
 80051c0:	681b      	ldr	r3, [r3, #0]
 80051c2:	68da      	ldr	r2, [r3, #12]
 80051c4:	68fb      	ldr	r3, [r7, #12]
 80051c6:	681b      	ldr	r3, [r3, #0]
 80051c8:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80051cc:	60da      	str	r2, [r3, #12]
 80051ce:	68fb      	ldr	r3, [r7, #12]
 80051d0:	681b      	ldr	r3, [r3, #0]
 80051d2:	695a      	ldr	r2, [r3, #20]
 80051d4:	68fb      	ldr	r3, [r7, #12]
 80051d6:	681b      	ldr	r3, [r3, #0]
 80051d8:	f022 0201 	bic.w	r2, r2, #1
 80051dc:	615a      	str	r2, [r3, #20]
 80051de:	68fb      	ldr	r3, [r7, #12]
 80051e0:	2220      	movs	r2, #32
 80051e2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80051e6:	68fb      	ldr	r3, [r7, #12]
 80051e8:	2220      	movs	r2, #32
 80051ea:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80051ee:	68fb      	ldr	r3, [r7, #12]
 80051f0:	2200      	movs	r2, #0
 80051f2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80051f6:	2303      	movs	r3, #3
 80051f8:	e00f      	b.n	800521a <UART_WaitOnFlagUntilTimeout+0x8c>
 80051fa:	68fb      	ldr	r3, [r7, #12]
 80051fc:	681b      	ldr	r3, [r3, #0]
 80051fe:	681a      	ldr	r2, [r3, #0]
 8005200:	68bb      	ldr	r3, [r7, #8]
 8005202:	4013      	ands	r3, r2
 8005204:	68ba      	ldr	r2, [r7, #8]
 8005206:	429a      	cmp	r2, r3
 8005208:	bf0c      	ite	eq
 800520a:	2301      	moveq	r3, #1
 800520c:	2300      	movne	r3, #0
 800520e:	b2db      	uxtb	r3, r3
 8005210:	461a      	mov	r2, r3
 8005212:	79fb      	ldrb	r3, [r7, #7]
 8005214:	429a      	cmp	r2, r3
 8005216:	d0c3      	beq.n	80051a0 <UART_WaitOnFlagUntilTimeout+0x12>
 8005218:	2300      	movs	r3, #0
 800521a:	4618      	mov	r0, r3
 800521c:	3710      	adds	r7, #16
 800521e:	46bd      	mov	sp, r7
 8005220:	bd80      	pop	{r7, pc}

08005222 <UART_Start_Receive_IT>:
 8005222:	b480      	push	{r7}
 8005224:	b085      	sub	sp, #20
 8005226:	af00      	add	r7, sp, #0
 8005228:	60f8      	str	r0, [r7, #12]
 800522a:	60b9      	str	r1, [r7, #8]
 800522c:	4613      	mov	r3, r2
 800522e:	80fb      	strh	r3, [r7, #6]
 8005230:	68fb      	ldr	r3, [r7, #12]
 8005232:	68ba      	ldr	r2, [r7, #8]
 8005234:	629a      	str	r2, [r3, #40]	; 0x28
 8005236:	68fb      	ldr	r3, [r7, #12]
 8005238:	88fa      	ldrh	r2, [r7, #6]
 800523a:	859a      	strh	r2, [r3, #44]	; 0x2c
 800523c:	68fb      	ldr	r3, [r7, #12]
 800523e:	88fa      	ldrh	r2, [r7, #6]
 8005240:	85da      	strh	r2, [r3, #46]	; 0x2e
 8005242:	68fb      	ldr	r3, [r7, #12]
 8005244:	2200      	movs	r2, #0
 8005246:	641a      	str	r2, [r3, #64]	; 0x40
 8005248:	68fb      	ldr	r3, [r7, #12]
 800524a:	2222      	movs	r2, #34	; 0x22
 800524c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005250:	68fb      	ldr	r3, [r7, #12]
 8005252:	2200      	movs	r2, #0
 8005254:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005258:	68fb      	ldr	r3, [r7, #12]
 800525a:	681b      	ldr	r3, [r3, #0]
 800525c:	68da      	ldr	r2, [r3, #12]
 800525e:	68fb      	ldr	r3, [r7, #12]
 8005260:	681b      	ldr	r3, [r3, #0]
 8005262:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005266:	60da      	str	r2, [r3, #12]
 8005268:	68fb      	ldr	r3, [r7, #12]
 800526a:	681b      	ldr	r3, [r3, #0]
 800526c:	695a      	ldr	r2, [r3, #20]
 800526e:	68fb      	ldr	r3, [r7, #12]
 8005270:	681b      	ldr	r3, [r3, #0]
 8005272:	f042 0201 	orr.w	r2, r2, #1
 8005276:	615a      	str	r2, [r3, #20]
 8005278:	68fb      	ldr	r3, [r7, #12]
 800527a:	681b      	ldr	r3, [r3, #0]
 800527c:	68da      	ldr	r2, [r3, #12]
 800527e:	68fb      	ldr	r3, [r7, #12]
 8005280:	681b      	ldr	r3, [r3, #0]
 8005282:	f042 0220 	orr.w	r2, r2, #32
 8005286:	60da      	str	r2, [r3, #12]
 8005288:	2300      	movs	r3, #0
 800528a:	4618      	mov	r0, r3
 800528c:	3714      	adds	r7, #20
 800528e:	46bd      	mov	sp, r7
 8005290:	bc80      	pop	{r7}
 8005292:	4770      	bx	lr

08005294 <UART_EndRxTransfer>:
 8005294:	b480      	push	{r7}
 8005296:	b083      	sub	sp, #12
 8005298:	af00      	add	r7, sp, #0
 800529a:	6078      	str	r0, [r7, #4]
 800529c:	687b      	ldr	r3, [r7, #4]
 800529e:	681b      	ldr	r3, [r3, #0]
 80052a0:	68da      	ldr	r2, [r3, #12]
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	681b      	ldr	r3, [r3, #0]
 80052a6:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80052aa:	60da      	str	r2, [r3, #12]
 80052ac:	687b      	ldr	r3, [r7, #4]
 80052ae:	681b      	ldr	r3, [r3, #0]
 80052b0:	695a      	ldr	r2, [r3, #20]
 80052b2:	687b      	ldr	r3, [r7, #4]
 80052b4:	681b      	ldr	r3, [r3, #0]
 80052b6:	f022 0201 	bic.w	r2, r2, #1
 80052ba:	615a      	str	r2, [r3, #20]
 80052bc:	687b      	ldr	r3, [r7, #4]
 80052be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80052c0:	2b01      	cmp	r3, #1
 80052c2:	d107      	bne.n	80052d4 <UART_EndRxTransfer+0x40>
 80052c4:	687b      	ldr	r3, [r7, #4]
 80052c6:	681b      	ldr	r3, [r3, #0]
 80052c8:	68da      	ldr	r2, [r3, #12]
 80052ca:	687b      	ldr	r3, [r7, #4]
 80052cc:	681b      	ldr	r3, [r3, #0]
 80052ce:	f022 0210 	bic.w	r2, r2, #16
 80052d2:	60da      	str	r2, [r3, #12]
 80052d4:	687b      	ldr	r3, [r7, #4]
 80052d6:	2220      	movs	r2, #32
 80052d8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80052dc:	687b      	ldr	r3, [r7, #4]
 80052de:	2200      	movs	r2, #0
 80052e0:	631a      	str	r2, [r3, #48]	; 0x30
 80052e2:	bf00      	nop
 80052e4:	370c      	adds	r7, #12
 80052e6:	46bd      	mov	sp, r7
 80052e8:	bc80      	pop	{r7}
 80052ea:	4770      	bx	lr

080052ec <UART_DMAAbortOnError>:
 80052ec:	b580      	push	{r7, lr}
 80052ee:	b084      	sub	sp, #16
 80052f0:	af00      	add	r7, sp, #0
 80052f2:	6078      	str	r0, [r7, #4]
 80052f4:	687b      	ldr	r3, [r7, #4]
 80052f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052f8:	60fb      	str	r3, [r7, #12]
 80052fa:	68fb      	ldr	r3, [r7, #12]
 80052fc:	2200      	movs	r2, #0
 80052fe:	85da      	strh	r2, [r3, #46]	; 0x2e
 8005300:	68fb      	ldr	r3, [r7, #12]
 8005302:	2200      	movs	r2, #0
 8005304:	84da      	strh	r2, [r3, #38]	; 0x26
 8005306:	68f8      	ldr	r0, [r7, #12]
 8005308:	f7ff ff2d 	bl	8005166 <HAL_UART_ErrorCallback>
 800530c:	bf00      	nop
 800530e:	3710      	adds	r7, #16
 8005310:	46bd      	mov	sp, r7
 8005312:	bd80      	pop	{r7, pc}

08005314 <UART_Transmit_IT>:
 8005314:	b480      	push	{r7}
 8005316:	b085      	sub	sp, #20
 8005318:	af00      	add	r7, sp, #0
 800531a:	6078      	str	r0, [r7, #4]
 800531c:	687b      	ldr	r3, [r7, #4]
 800531e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005322:	b2db      	uxtb	r3, r3
 8005324:	2b21      	cmp	r3, #33	; 0x21
 8005326:	d13e      	bne.n	80053a6 <UART_Transmit_IT+0x92>
 8005328:	687b      	ldr	r3, [r7, #4]
 800532a:	689b      	ldr	r3, [r3, #8]
 800532c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005330:	d114      	bne.n	800535c <UART_Transmit_IT+0x48>
 8005332:	687b      	ldr	r3, [r7, #4]
 8005334:	691b      	ldr	r3, [r3, #16]
 8005336:	2b00      	cmp	r3, #0
 8005338:	d110      	bne.n	800535c <UART_Transmit_IT+0x48>
 800533a:	687b      	ldr	r3, [r7, #4]
 800533c:	6a1b      	ldr	r3, [r3, #32]
 800533e:	60fb      	str	r3, [r7, #12]
 8005340:	68fb      	ldr	r3, [r7, #12]
 8005342:	881b      	ldrh	r3, [r3, #0]
 8005344:	461a      	mov	r2, r3
 8005346:	687b      	ldr	r3, [r7, #4]
 8005348:	681b      	ldr	r3, [r3, #0]
 800534a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800534e:	605a      	str	r2, [r3, #4]
 8005350:	687b      	ldr	r3, [r7, #4]
 8005352:	6a1b      	ldr	r3, [r3, #32]
 8005354:	1c9a      	adds	r2, r3, #2
 8005356:	687b      	ldr	r3, [r7, #4]
 8005358:	621a      	str	r2, [r3, #32]
 800535a:	e008      	b.n	800536e <UART_Transmit_IT+0x5a>
 800535c:	687b      	ldr	r3, [r7, #4]
 800535e:	6a1b      	ldr	r3, [r3, #32]
 8005360:	1c59      	adds	r1, r3, #1
 8005362:	687a      	ldr	r2, [r7, #4]
 8005364:	6211      	str	r1, [r2, #32]
 8005366:	781a      	ldrb	r2, [r3, #0]
 8005368:	687b      	ldr	r3, [r7, #4]
 800536a:	681b      	ldr	r3, [r3, #0]
 800536c:	605a      	str	r2, [r3, #4]
 800536e:	687b      	ldr	r3, [r7, #4]
 8005370:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8005372:	b29b      	uxth	r3, r3
 8005374:	3b01      	subs	r3, #1
 8005376:	b29b      	uxth	r3, r3
 8005378:	687a      	ldr	r2, [r7, #4]
 800537a:	4619      	mov	r1, r3
 800537c:	84d1      	strh	r1, [r2, #38]	; 0x26
 800537e:	2b00      	cmp	r3, #0
 8005380:	d10f      	bne.n	80053a2 <UART_Transmit_IT+0x8e>
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	681b      	ldr	r3, [r3, #0]
 8005386:	68da      	ldr	r2, [r3, #12]
 8005388:	687b      	ldr	r3, [r7, #4]
 800538a:	681b      	ldr	r3, [r3, #0]
 800538c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005390:	60da      	str	r2, [r3, #12]
 8005392:	687b      	ldr	r3, [r7, #4]
 8005394:	681b      	ldr	r3, [r3, #0]
 8005396:	68da      	ldr	r2, [r3, #12]
 8005398:	687b      	ldr	r3, [r7, #4]
 800539a:	681b      	ldr	r3, [r3, #0]
 800539c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80053a0:	60da      	str	r2, [r3, #12]
 80053a2:	2300      	movs	r3, #0
 80053a4:	e000      	b.n	80053a8 <UART_Transmit_IT+0x94>
 80053a6:	2302      	movs	r3, #2
 80053a8:	4618      	mov	r0, r3
 80053aa:	3714      	adds	r7, #20
 80053ac:	46bd      	mov	sp, r7
 80053ae:	bc80      	pop	{r7}
 80053b0:	4770      	bx	lr

080053b2 <UART_EndTransmit_IT>:
 80053b2:	b580      	push	{r7, lr}
 80053b4:	b082      	sub	sp, #8
 80053b6:	af00      	add	r7, sp, #0
 80053b8:	6078      	str	r0, [r7, #4]
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	681b      	ldr	r3, [r3, #0]
 80053be:	68da      	ldr	r2, [r3, #12]
 80053c0:	687b      	ldr	r3, [r7, #4]
 80053c2:	681b      	ldr	r3, [r3, #0]
 80053c4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80053c8:	60da      	str	r2, [r3, #12]
 80053ca:	687b      	ldr	r3, [r7, #4]
 80053cc:	2220      	movs	r2, #32
 80053ce:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80053d2:	6878      	ldr	r0, [r7, #4]
 80053d4:	f7ff febe 	bl	8005154 <HAL_UART_TxCpltCallback>
 80053d8:	2300      	movs	r3, #0
 80053da:	4618      	mov	r0, r3
 80053dc:	3708      	adds	r7, #8
 80053de:	46bd      	mov	sp, r7
 80053e0:	bd80      	pop	{r7, pc}

080053e2 <UART_Receive_IT>:
 80053e2:	b580      	push	{r7, lr}
 80053e4:	b086      	sub	sp, #24
 80053e6:	af00      	add	r7, sp, #0
 80053e8:	6078      	str	r0, [r7, #4]
 80053ea:	687b      	ldr	r3, [r7, #4]
 80053ec:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80053f0:	b2db      	uxtb	r3, r3
 80053f2:	2b22      	cmp	r3, #34	; 0x22
 80053f4:	f040 8099 	bne.w	800552a <UART_Receive_IT+0x148>
 80053f8:	687b      	ldr	r3, [r7, #4]
 80053fa:	689b      	ldr	r3, [r3, #8]
 80053fc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005400:	d117      	bne.n	8005432 <UART_Receive_IT+0x50>
 8005402:	687b      	ldr	r3, [r7, #4]
 8005404:	691b      	ldr	r3, [r3, #16]
 8005406:	2b00      	cmp	r3, #0
 8005408:	d113      	bne.n	8005432 <UART_Receive_IT+0x50>
 800540a:	2300      	movs	r3, #0
 800540c:	617b      	str	r3, [r7, #20]
 800540e:	687b      	ldr	r3, [r7, #4]
 8005410:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005412:	613b      	str	r3, [r7, #16]
 8005414:	687b      	ldr	r3, [r7, #4]
 8005416:	681b      	ldr	r3, [r3, #0]
 8005418:	685b      	ldr	r3, [r3, #4]
 800541a:	b29b      	uxth	r3, r3
 800541c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005420:	b29a      	uxth	r2, r3
 8005422:	693b      	ldr	r3, [r7, #16]
 8005424:	801a      	strh	r2, [r3, #0]
 8005426:	687b      	ldr	r3, [r7, #4]
 8005428:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800542a:	1c9a      	adds	r2, r3, #2
 800542c:	687b      	ldr	r3, [r7, #4]
 800542e:	629a      	str	r2, [r3, #40]	; 0x28
 8005430:	e026      	b.n	8005480 <UART_Receive_IT+0x9e>
 8005432:	687b      	ldr	r3, [r7, #4]
 8005434:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005436:	617b      	str	r3, [r7, #20]
 8005438:	2300      	movs	r3, #0
 800543a:	613b      	str	r3, [r7, #16]
 800543c:	687b      	ldr	r3, [r7, #4]
 800543e:	689b      	ldr	r3, [r3, #8]
 8005440:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005444:	d007      	beq.n	8005456 <UART_Receive_IT+0x74>
 8005446:	687b      	ldr	r3, [r7, #4]
 8005448:	689b      	ldr	r3, [r3, #8]
 800544a:	2b00      	cmp	r3, #0
 800544c:	d10a      	bne.n	8005464 <UART_Receive_IT+0x82>
 800544e:	687b      	ldr	r3, [r7, #4]
 8005450:	691b      	ldr	r3, [r3, #16]
 8005452:	2b00      	cmp	r3, #0
 8005454:	d106      	bne.n	8005464 <UART_Receive_IT+0x82>
 8005456:	687b      	ldr	r3, [r7, #4]
 8005458:	681b      	ldr	r3, [r3, #0]
 800545a:	685b      	ldr	r3, [r3, #4]
 800545c:	b2da      	uxtb	r2, r3
 800545e:	697b      	ldr	r3, [r7, #20]
 8005460:	701a      	strb	r2, [r3, #0]
 8005462:	e008      	b.n	8005476 <UART_Receive_IT+0x94>
 8005464:	687b      	ldr	r3, [r7, #4]
 8005466:	681b      	ldr	r3, [r3, #0]
 8005468:	685b      	ldr	r3, [r3, #4]
 800546a:	b2db      	uxtb	r3, r3
 800546c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8005470:	b2da      	uxtb	r2, r3
 8005472:	697b      	ldr	r3, [r7, #20]
 8005474:	701a      	strb	r2, [r3, #0]
 8005476:	687b      	ldr	r3, [r7, #4]
 8005478:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800547a:	1c5a      	adds	r2, r3, #1
 800547c:	687b      	ldr	r3, [r7, #4]
 800547e:	629a      	str	r2, [r3, #40]	; 0x28
 8005480:	687b      	ldr	r3, [r7, #4]
 8005482:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8005484:	b29b      	uxth	r3, r3
 8005486:	3b01      	subs	r3, #1
 8005488:	b29b      	uxth	r3, r3
 800548a:	687a      	ldr	r2, [r7, #4]
 800548c:	4619      	mov	r1, r3
 800548e:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8005490:	2b00      	cmp	r3, #0
 8005492:	d148      	bne.n	8005526 <UART_Receive_IT+0x144>
 8005494:	687b      	ldr	r3, [r7, #4]
 8005496:	681b      	ldr	r3, [r3, #0]
 8005498:	68da      	ldr	r2, [r3, #12]
 800549a:	687b      	ldr	r3, [r7, #4]
 800549c:	681b      	ldr	r3, [r3, #0]
 800549e:	f022 0220 	bic.w	r2, r2, #32
 80054a2:	60da      	str	r2, [r3, #12]
 80054a4:	687b      	ldr	r3, [r7, #4]
 80054a6:	681b      	ldr	r3, [r3, #0]
 80054a8:	68da      	ldr	r2, [r3, #12]
 80054aa:	687b      	ldr	r3, [r7, #4]
 80054ac:	681b      	ldr	r3, [r3, #0]
 80054ae:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80054b2:	60da      	str	r2, [r3, #12]
 80054b4:	687b      	ldr	r3, [r7, #4]
 80054b6:	681b      	ldr	r3, [r3, #0]
 80054b8:	695a      	ldr	r2, [r3, #20]
 80054ba:	687b      	ldr	r3, [r7, #4]
 80054bc:	681b      	ldr	r3, [r3, #0]
 80054be:	f022 0201 	bic.w	r2, r2, #1
 80054c2:	615a      	str	r2, [r3, #20]
 80054c4:	687b      	ldr	r3, [r7, #4]
 80054c6:	2220      	movs	r2, #32
 80054c8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80054cc:	687b      	ldr	r3, [r7, #4]
 80054ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80054d0:	2b01      	cmp	r3, #1
 80054d2:	d123      	bne.n	800551c <UART_Receive_IT+0x13a>
 80054d4:	687b      	ldr	r3, [r7, #4]
 80054d6:	2200      	movs	r2, #0
 80054d8:	631a      	str	r2, [r3, #48]	; 0x30
 80054da:	687b      	ldr	r3, [r7, #4]
 80054dc:	681b      	ldr	r3, [r3, #0]
 80054de:	68da      	ldr	r2, [r3, #12]
 80054e0:	687b      	ldr	r3, [r7, #4]
 80054e2:	681b      	ldr	r3, [r3, #0]
 80054e4:	f022 0210 	bic.w	r2, r2, #16
 80054e8:	60da      	str	r2, [r3, #12]
 80054ea:	687b      	ldr	r3, [r7, #4]
 80054ec:	681b      	ldr	r3, [r3, #0]
 80054ee:	681b      	ldr	r3, [r3, #0]
 80054f0:	f003 0310 	and.w	r3, r3, #16
 80054f4:	2b10      	cmp	r3, #16
 80054f6:	d10a      	bne.n	800550e <UART_Receive_IT+0x12c>
 80054f8:	2300      	movs	r3, #0
 80054fa:	60fb      	str	r3, [r7, #12]
 80054fc:	687b      	ldr	r3, [r7, #4]
 80054fe:	681b      	ldr	r3, [r3, #0]
 8005500:	681b      	ldr	r3, [r3, #0]
 8005502:	60fb      	str	r3, [r7, #12]
 8005504:	687b      	ldr	r3, [r7, #4]
 8005506:	681b      	ldr	r3, [r3, #0]
 8005508:	685b      	ldr	r3, [r3, #4]
 800550a:	60fb      	str	r3, [r7, #12]
 800550c:	68fb      	ldr	r3, [r7, #12]
 800550e:	687b      	ldr	r3, [r7, #4]
 8005510:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8005512:	4619      	mov	r1, r3
 8005514:	6878      	ldr	r0, [r7, #4]
 8005516:	f7ff fe2f 	bl	8005178 <HAL_UARTEx_RxEventCallback>
 800551a:	e002      	b.n	8005522 <UART_Receive_IT+0x140>
 800551c:	6878      	ldr	r0, [r7, #4]
 800551e:	f7fd f9dd 	bl	80028dc <HAL_UART_RxCpltCallback>
 8005522:	2300      	movs	r3, #0
 8005524:	e002      	b.n	800552c <UART_Receive_IT+0x14a>
 8005526:	2300      	movs	r3, #0
 8005528:	e000      	b.n	800552c <UART_Receive_IT+0x14a>
 800552a:	2302      	movs	r3, #2
 800552c:	4618      	mov	r0, r3
 800552e:	3718      	adds	r7, #24
 8005530:	46bd      	mov	sp, r7
 8005532:	bd80      	pop	{r7, pc}

08005534 <UART_SetConfig>:
 8005534:	b580      	push	{r7, lr}
 8005536:	b084      	sub	sp, #16
 8005538:	af00      	add	r7, sp, #0
 800553a:	6078      	str	r0, [r7, #4]
 800553c:	687b      	ldr	r3, [r7, #4]
 800553e:	681b      	ldr	r3, [r3, #0]
 8005540:	691b      	ldr	r3, [r3, #16]
 8005542:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8005546:	687b      	ldr	r3, [r7, #4]
 8005548:	68da      	ldr	r2, [r3, #12]
 800554a:	687b      	ldr	r3, [r7, #4]
 800554c:	681b      	ldr	r3, [r3, #0]
 800554e:	430a      	orrs	r2, r1
 8005550:	611a      	str	r2, [r3, #16]
 8005552:	687b      	ldr	r3, [r7, #4]
 8005554:	689a      	ldr	r2, [r3, #8]
 8005556:	687b      	ldr	r3, [r7, #4]
 8005558:	691b      	ldr	r3, [r3, #16]
 800555a:	431a      	orrs	r2, r3
 800555c:	687b      	ldr	r3, [r7, #4]
 800555e:	695b      	ldr	r3, [r3, #20]
 8005560:	4313      	orrs	r3, r2
 8005562:	60bb      	str	r3, [r7, #8]
 8005564:	687b      	ldr	r3, [r7, #4]
 8005566:	681b      	ldr	r3, [r3, #0]
 8005568:	68db      	ldr	r3, [r3, #12]
 800556a:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 800556e:	f023 030c 	bic.w	r3, r3, #12
 8005572:	687a      	ldr	r2, [r7, #4]
 8005574:	6812      	ldr	r2, [r2, #0]
 8005576:	68b9      	ldr	r1, [r7, #8]
 8005578:	430b      	orrs	r3, r1
 800557a:	60d3      	str	r3, [r2, #12]
 800557c:	687b      	ldr	r3, [r7, #4]
 800557e:	681b      	ldr	r3, [r3, #0]
 8005580:	695b      	ldr	r3, [r3, #20]
 8005582:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8005586:	687b      	ldr	r3, [r7, #4]
 8005588:	699a      	ldr	r2, [r3, #24]
 800558a:	687b      	ldr	r3, [r7, #4]
 800558c:	681b      	ldr	r3, [r3, #0]
 800558e:	430a      	orrs	r2, r1
 8005590:	615a      	str	r2, [r3, #20]
 8005592:	687b      	ldr	r3, [r7, #4]
 8005594:	681b      	ldr	r3, [r3, #0]
 8005596:	4a2c      	ldr	r2, [pc, #176]	; (8005648 <UART_SetConfig+0x114>)
 8005598:	4293      	cmp	r3, r2
 800559a:	d103      	bne.n	80055a4 <UART_SetConfig+0x70>
 800559c:	f7fe fef4 	bl	8004388 <HAL_RCC_GetPCLK2Freq>
 80055a0:	60f8      	str	r0, [r7, #12]
 80055a2:	e002      	b.n	80055aa <UART_SetConfig+0x76>
 80055a4:	f7fe fedc 	bl	8004360 <HAL_RCC_GetPCLK1Freq>
 80055a8:	60f8      	str	r0, [r7, #12]
 80055aa:	68fa      	ldr	r2, [r7, #12]
 80055ac:	4613      	mov	r3, r2
 80055ae:	009b      	lsls	r3, r3, #2
 80055b0:	4413      	add	r3, r2
 80055b2:	009a      	lsls	r2, r3, #2
 80055b4:	441a      	add	r2, r3
 80055b6:	687b      	ldr	r3, [r7, #4]
 80055b8:	685b      	ldr	r3, [r3, #4]
 80055ba:	009b      	lsls	r3, r3, #2
 80055bc:	fbb2 f3f3 	udiv	r3, r2, r3
 80055c0:	4a22      	ldr	r2, [pc, #136]	; (800564c <UART_SetConfig+0x118>)
 80055c2:	fba2 2303 	umull	r2, r3, r2, r3
 80055c6:	095b      	lsrs	r3, r3, #5
 80055c8:	0119      	lsls	r1, r3, #4
 80055ca:	68fa      	ldr	r2, [r7, #12]
 80055cc:	4613      	mov	r3, r2
 80055ce:	009b      	lsls	r3, r3, #2
 80055d0:	4413      	add	r3, r2
 80055d2:	009a      	lsls	r2, r3, #2
 80055d4:	441a      	add	r2, r3
 80055d6:	687b      	ldr	r3, [r7, #4]
 80055d8:	685b      	ldr	r3, [r3, #4]
 80055da:	009b      	lsls	r3, r3, #2
 80055dc:	fbb2 f2f3 	udiv	r2, r2, r3
 80055e0:	4b1a      	ldr	r3, [pc, #104]	; (800564c <UART_SetConfig+0x118>)
 80055e2:	fba3 0302 	umull	r0, r3, r3, r2
 80055e6:	095b      	lsrs	r3, r3, #5
 80055e8:	2064      	movs	r0, #100	; 0x64
 80055ea:	fb00 f303 	mul.w	r3, r0, r3
 80055ee:	1ad3      	subs	r3, r2, r3
 80055f0:	011b      	lsls	r3, r3, #4
 80055f2:	3332      	adds	r3, #50	; 0x32
 80055f4:	4a15      	ldr	r2, [pc, #84]	; (800564c <UART_SetConfig+0x118>)
 80055f6:	fba2 2303 	umull	r2, r3, r2, r3
 80055fa:	095b      	lsrs	r3, r3, #5
 80055fc:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8005600:	4419      	add	r1, r3
 8005602:	68fa      	ldr	r2, [r7, #12]
 8005604:	4613      	mov	r3, r2
 8005606:	009b      	lsls	r3, r3, #2
 8005608:	4413      	add	r3, r2
 800560a:	009a      	lsls	r2, r3, #2
 800560c:	441a      	add	r2, r3
 800560e:	687b      	ldr	r3, [r7, #4]
 8005610:	685b      	ldr	r3, [r3, #4]
 8005612:	009b      	lsls	r3, r3, #2
 8005614:	fbb2 f2f3 	udiv	r2, r2, r3
 8005618:	4b0c      	ldr	r3, [pc, #48]	; (800564c <UART_SetConfig+0x118>)
 800561a:	fba3 0302 	umull	r0, r3, r3, r2
 800561e:	095b      	lsrs	r3, r3, #5
 8005620:	2064      	movs	r0, #100	; 0x64
 8005622:	fb00 f303 	mul.w	r3, r0, r3
 8005626:	1ad3      	subs	r3, r2, r3
 8005628:	011b      	lsls	r3, r3, #4
 800562a:	3332      	adds	r3, #50	; 0x32
 800562c:	4a07      	ldr	r2, [pc, #28]	; (800564c <UART_SetConfig+0x118>)
 800562e:	fba2 2303 	umull	r2, r3, r2, r3
 8005632:	095b      	lsrs	r3, r3, #5
 8005634:	f003 020f 	and.w	r2, r3, #15
 8005638:	687b      	ldr	r3, [r7, #4]
 800563a:	681b      	ldr	r3, [r3, #0]
 800563c:	440a      	add	r2, r1
 800563e:	609a      	str	r2, [r3, #8]
 8005640:	bf00      	nop
 8005642:	3710      	adds	r7, #16
 8005644:	46bd      	mov	sp, r7
 8005646:	bd80      	pop	{r7, pc}
 8005648:	40013800 	.word	0x40013800
 800564c:	51eb851f 	.word	0x51eb851f

08005650 <atoff>:
 8005650:	2100      	movs	r1, #0
 8005652:	f000 bf3d 	b.w	80064d0 <strtof>

08005656 <atoi>:
 8005656:	220a      	movs	r2, #10
 8005658:	2100      	movs	r1, #0
 800565a:	f001 b863 	b.w	8006724 <strtol>
	...

08005660 <__errno>:
 8005660:	4b01      	ldr	r3, [pc, #4]	; (8005668 <__errno+0x8>)
 8005662:	6818      	ldr	r0, [r3, #0]
 8005664:	4770      	bx	lr
 8005666:	bf00      	nop
 8005668:	20000018 	.word	0x20000018

0800566c <__libc_init_array>:
 800566c:	b570      	push	{r4, r5, r6, lr}
 800566e:	2600      	movs	r6, #0
 8005670:	4d0c      	ldr	r5, [pc, #48]	; (80056a4 <__libc_init_array+0x38>)
 8005672:	4c0d      	ldr	r4, [pc, #52]	; (80056a8 <__libc_init_array+0x3c>)
 8005674:	1b64      	subs	r4, r4, r5
 8005676:	10a4      	asrs	r4, r4, #2
 8005678:	42a6      	cmp	r6, r4
 800567a:	d109      	bne.n	8005690 <__libc_init_array+0x24>
 800567c:	f002 ffe6 	bl	800864c <_init>
 8005680:	2600      	movs	r6, #0
 8005682:	4d0a      	ldr	r5, [pc, #40]	; (80056ac <__libc_init_array+0x40>)
 8005684:	4c0a      	ldr	r4, [pc, #40]	; (80056b0 <__libc_init_array+0x44>)
 8005686:	1b64      	subs	r4, r4, r5
 8005688:	10a4      	asrs	r4, r4, #2
 800568a:	42a6      	cmp	r6, r4
 800568c:	d105      	bne.n	800569a <__libc_init_array+0x2e>
 800568e:	bd70      	pop	{r4, r5, r6, pc}
 8005690:	f855 3b04 	ldr.w	r3, [r5], #4
 8005694:	4798      	blx	r3
 8005696:	3601      	adds	r6, #1
 8005698:	e7ee      	b.n	8005678 <__libc_init_array+0xc>
 800569a:	f855 3b04 	ldr.w	r3, [r5], #4
 800569e:	4798      	blx	r3
 80056a0:	3601      	adds	r6, #1
 80056a2:	e7f2      	b.n	800568a <__libc_init_array+0x1e>
 80056a4:	08008c68 	.word	0x08008c68
 80056a8:	08008c68 	.word	0x08008c68
 80056ac:	08008c68 	.word	0x08008c68
 80056b0:	08008c6c 	.word	0x08008c6c

080056b4 <malloc>:
 80056b4:	4b02      	ldr	r3, [pc, #8]	; (80056c0 <malloc+0xc>)
 80056b6:	4601      	mov	r1, r0
 80056b8:	6818      	ldr	r0, [r3, #0]
 80056ba:	f000 b87b 	b.w	80057b4 <_malloc_r>
 80056be:	bf00      	nop
 80056c0:	20000018 	.word	0x20000018

080056c4 <free>:
 80056c4:	4b02      	ldr	r3, [pc, #8]	; (80056d0 <free+0xc>)
 80056c6:	4601      	mov	r1, r0
 80056c8:	6818      	ldr	r0, [r3, #0]
 80056ca:	f000 b80b 	b.w	80056e4 <_free_r>
 80056ce:	bf00      	nop
 80056d0:	20000018 	.word	0x20000018

080056d4 <memset>:
 80056d4:	4603      	mov	r3, r0
 80056d6:	4402      	add	r2, r0
 80056d8:	4293      	cmp	r3, r2
 80056da:	d100      	bne.n	80056de <memset+0xa>
 80056dc:	4770      	bx	lr
 80056de:	f803 1b01 	strb.w	r1, [r3], #1
 80056e2:	e7f9      	b.n	80056d8 <memset+0x4>

080056e4 <_free_r>:
 80056e4:	b538      	push	{r3, r4, r5, lr}
 80056e6:	4605      	mov	r5, r0
 80056e8:	2900      	cmp	r1, #0
 80056ea:	d040      	beq.n	800576e <_free_r+0x8a>
 80056ec:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80056f0:	1f0c      	subs	r4, r1, #4
 80056f2:	2b00      	cmp	r3, #0
 80056f4:	bfb8      	it	lt
 80056f6:	18e4      	addlt	r4, r4, r3
 80056f8:	f001 fbd4 	bl	8006ea4 <__malloc_lock>
 80056fc:	4a1c      	ldr	r2, [pc, #112]	; (8005770 <_free_r+0x8c>)
 80056fe:	6813      	ldr	r3, [r2, #0]
 8005700:	b933      	cbnz	r3, 8005710 <_free_r+0x2c>
 8005702:	6063      	str	r3, [r4, #4]
 8005704:	6014      	str	r4, [r2, #0]
 8005706:	4628      	mov	r0, r5
 8005708:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800570c:	f001 bbd0 	b.w	8006eb0 <__malloc_unlock>
 8005710:	42a3      	cmp	r3, r4
 8005712:	d908      	bls.n	8005726 <_free_r+0x42>
 8005714:	6820      	ldr	r0, [r4, #0]
 8005716:	1821      	adds	r1, r4, r0
 8005718:	428b      	cmp	r3, r1
 800571a:	bf01      	itttt	eq
 800571c:	6819      	ldreq	r1, [r3, #0]
 800571e:	685b      	ldreq	r3, [r3, #4]
 8005720:	1809      	addeq	r1, r1, r0
 8005722:	6021      	streq	r1, [r4, #0]
 8005724:	e7ed      	b.n	8005702 <_free_r+0x1e>
 8005726:	461a      	mov	r2, r3
 8005728:	685b      	ldr	r3, [r3, #4]
 800572a:	b10b      	cbz	r3, 8005730 <_free_r+0x4c>
 800572c:	42a3      	cmp	r3, r4
 800572e:	d9fa      	bls.n	8005726 <_free_r+0x42>
 8005730:	6811      	ldr	r1, [r2, #0]
 8005732:	1850      	adds	r0, r2, r1
 8005734:	42a0      	cmp	r0, r4
 8005736:	d10b      	bne.n	8005750 <_free_r+0x6c>
 8005738:	6820      	ldr	r0, [r4, #0]
 800573a:	4401      	add	r1, r0
 800573c:	1850      	adds	r0, r2, r1
 800573e:	4283      	cmp	r3, r0
 8005740:	6011      	str	r1, [r2, #0]
 8005742:	d1e0      	bne.n	8005706 <_free_r+0x22>
 8005744:	6818      	ldr	r0, [r3, #0]
 8005746:	685b      	ldr	r3, [r3, #4]
 8005748:	4401      	add	r1, r0
 800574a:	6011      	str	r1, [r2, #0]
 800574c:	6053      	str	r3, [r2, #4]
 800574e:	e7da      	b.n	8005706 <_free_r+0x22>
 8005750:	d902      	bls.n	8005758 <_free_r+0x74>
 8005752:	230c      	movs	r3, #12
 8005754:	602b      	str	r3, [r5, #0]
 8005756:	e7d6      	b.n	8005706 <_free_r+0x22>
 8005758:	6820      	ldr	r0, [r4, #0]
 800575a:	1821      	adds	r1, r4, r0
 800575c:	428b      	cmp	r3, r1
 800575e:	bf01      	itttt	eq
 8005760:	6819      	ldreq	r1, [r3, #0]
 8005762:	685b      	ldreq	r3, [r3, #4]
 8005764:	1809      	addeq	r1, r1, r0
 8005766:	6021      	streq	r1, [r4, #0]
 8005768:	6063      	str	r3, [r4, #4]
 800576a:	6054      	str	r4, [r2, #4]
 800576c:	e7cb      	b.n	8005706 <_free_r+0x22>
 800576e:	bd38      	pop	{r3, r4, r5, pc}
 8005770:	20000470 	.word	0x20000470

08005774 <sbrk_aligned>:
 8005774:	b570      	push	{r4, r5, r6, lr}
 8005776:	4e0e      	ldr	r6, [pc, #56]	; (80057b0 <sbrk_aligned+0x3c>)
 8005778:	460c      	mov	r4, r1
 800577a:	6831      	ldr	r1, [r6, #0]
 800577c:	4605      	mov	r5, r0
 800577e:	b911      	cbnz	r1, 8005786 <sbrk_aligned+0x12>
 8005780:	f000 f88c 	bl	800589c <_sbrk_r>
 8005784:	6030      	str	r0, [r6, #0]
 8005786:	4621      	mov	r1, r4
 8005788:	4628      	mov	r0, r5
 800578a:	f000 f887 	bl	800589c <_sbrk_r>
 800578e:	1c43      	adds	r3, r0, #1
 8005790:	d00a      	beq.n	80057a8 <sbrk_aligned+0x34>
 8005792:	1cc4      	adds	r4, r0, #3
 8005794:	f024 0403 	bic.w	r4, r4, #3
 8005798:	42a0      	cmp	r0, r4
 800579a:	d007      	beq.n	80057ac <sbrk_aligned+0x38>
 800579c:	1a21      	subs	r1, r4, r0
 800579e:	4628      	mov	r0, r5
 80057a0:	f000 f87c 	bl	800589c <_sbrk_r>
 80057a4:	3001      	adds	r0, #1
 80057a6:	d101      	bne.n	80057ac <sbrk_aligned+0x38>
 80057a8:	f04f 34ff 	mov.w	r4, #4294967295
 80057ac:	4620      	mov	r0, r4
 80057ae:	bd70      	pop	{r4, r5, r6, pc}
 80057b0:	20000474 	.word	0x20000474

080057b4 <_malloc_r>:
 80057b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80057b8:	1ccd      	adds	r5, r1, #3
 80057ba:	f025 0503 	bic.w	r5, r5, #3
 80057be:	3508      	adds	r5, #8
 80057c0:	2d0c      	cmp	r5, #12
 80057c2:	bf38      	it	cc
 80057c4:	250c      	movcc	r5, #12
 80057c6:	2d00      	cmp	r5, #0
 80057c8:	4607      	mov	r7, r0
 80057ca:	db01      	blt.n	80057d0 <_malloc_r+0x1c>
 80057cc:	42a9      	cmp	r1, r5
 80057ce:	d905      	bls.n	80057dc <_malloc_r+0x28>
 80057d0:	230c      	movs	r3, #12
 80057d2:	2600      	movs	r6, #0
 80057d4:	603b      	str	r3, [r7, #0]
 80057d6:	4630      	mov	r0, r6
 80057d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80057dc:	4e2e      	ldr	r6, [pc, #184]	; (8005898 <_malloc_r+0xe4>)
 80057de:	f001 fb61 	bl	8006ea4 <__malloc_lock>
 80057e2:	6833      	ldr	r3, [r6, #0]
 80057e4:	461c      	mov	r4, r3
 80057e6:	bb34      	cbnz	r4, 8005836 <_malloc_r+0x82>
 80057e8:	4629      	mov	r1, r5
 80057ea:	4638      	mov	r0, r7
 80057ec:	f7ff ffc2 	bl	8005774 <sbrk_aligned>
 80057f0:	1c43      	adds	r3, r0, #1
 80057f2:	4604      	mov	r4, r0
 80057f4:	d14d      	bne.n	8005892 <_malloc_r+0xde>
 80057f6:	6834      	ldr	r4, [r6, #0]
 80057f8:	4626      	mov	r6, r4
 80057fa:	2e00      	cmp	r6, #0
 80057fc:	d140      	bne.n	8005880 <_malloc_r+0xcc>
 80057fe:	6823      	ldr	r3, [r4, #0]
 8005800:	4631      	mov	r1, r6
 8005802:	4638      	mov	r0, r7
 8005804:	eb04 0803 	add.w	r8, r4, r3
 8005808:	f000 f848 	bl	800589c <_sbrk_r>
 800580c:	4580      	cmp	r8, r0
 800580e:	d13a      	bne.n	8005886 <_malloc_r+0xd2>
 8005810:	6821      	ldr	r1, [r4, #0]
 8005812:	3503      	adds	r5, #3
 8005814:	1a6d      	subs	r5, r5, r1
 8005816:	f025 0503 	bic.w	r5, r5, #3
 800581a:	3508      	adds	r5, #8
 800581c:	2d0c      	cmp	r5, #12
 800581e:	bf38      	it	cc
 8005820:	250c      	movcc	r5, #12
 8005822:	4638      	mov	r0, r7
 8005824:	4629      	mov	r1, r5
 8005826:	f7ff ffa5 	bl	8005774 <sbrk_aligned>
 800582a:	3001      	adds	r0, #1
 800582c:	d02b      	beq.n	8005886 <_malloc_r+0xd2>
 800582e:	6823      	ldr	r3, [r4, #0]
 8005830:	442b      	add	r3, r5
 8005832:	6023      	str	r3, [r4, #0]
 8005834:	e00e      	b.n	8005854 <_malloc_r+0xa0>
 8005836:	6822      	ldr	r2, [r4, #0]
 8005838:	1b52      	subs	r2, r2, r5
 800583a:	d41e      	bmi.n	800587a <_malloc_r+0xc6>
 800583c:	2a0b      	cmp	r2, #11
 800583e:	d916      	bls.n	800586e <_malloc_r+0xba>
 8005840:	1961      	adds	r1, r4, r5
 8005842:	42a3      	cmp	r3, r4
 8005844:	6025      	str	r5, [r4, #0]
 8005846:	bf18      	it	ne
 8005848:	6059      	strne	r1, [r3, #4]
 800584a:	6863      	ldr	r3, [r4, #4]
 800584c:	bf08      	it	eq
 800584e:	6031      	streq	r1, [r6, #0]
 8005850:	5162      	str	r2, [r4, r5]
 8005852:	604b      	str	r3, [r1, #4]
 8005854:	4638      	mov	r0, r7
 8005856:	f104 060b 	add.w	r6, r4, #11
 800585a:	f001 fb29 	bl	8006eb0 <__malloc_unlock>
 800585e:	f026 0607 	bic.w	r6, r6, #7
 8005862:	1d23      	adds	r3, r4, #4
 8005864:	1af2      	subs	r2, r6, r3
 8005866:	d0b6      	beq.n	80057d6 <_malloc_r+0x22>
 8005868:	1b9b      	subs	r3, r3, r6
 800586a:	50a3      	str	r3, [r4, r2]
 800586c:	e7b3      	b.n	80057d6 <_malloc_r+0x22>
 800586e:	6862      	ldr	r2, [r4, #4]
 8005870:	42a3      	cmp	r3, r4
 8005872:	bf0c      	ite	eq
 8005874:	6032      	streq	r2, [r6, #0]
 8005876:	605a      	strne	r2, [r3, #4]
 8005878:	e7ec      	b.n	8005854 <_malloc_r+0xa0>
 800587a:	4623      	mov	r3, r4
 800587c:	6864      	ldr	r4, [r4, #4]
 800587e:	e7b2      	b.n	80057e6 <_malloc_r+0x32>
 8005880:	4634      	mov	r4, r6
 8005882:	6876      	ldr	r6, [r6, #4]
 8005884:	e7b9      	b.n	80057fa <_malloc_r+0x46>
 8005886:	230c      	movs	r3, #12
 8005888:	4638      	mov	r0, r7
 800588a:	603b      	str	r3, [r7, #0]
 800588c:	f001 fb10 	bl	8006eb0 <__malloc_unlock>
 8005890:	e7a1      	b.n	80057d6 <_malloc_r+0x22>
 8005892:	6025      	str	r5, [r4, #0]
 8005894:	e7de      	b.n	8005854 <_malloc_r+0xa0>
 8005896:	bf00      	nop
 8005898:	20000470 	.word	0x20000470

0800589c <_sbrk_r>:
 800589c:	b538      	push	{r3, r4, r5, lr}
 800589e:	2300      	movs	r3, #0
 80058a0:	4d05      	ldr	r5, [pc, #20]	; (80058b8 <_sbrk_r+0x1c>)
 80058a2:	4604      	mov	r4, r0
 80058a4:	4608      	mov	r0, r1
 80058a6:	602b      	str	r3, [r5, #0]
 80058a8:	f7fc ff52 	bl	8002750 <_sbrk>
 80058ac:	1c43      	adds	r3, r0, #1
 80058ae:	d102      	bne.n	80058b6 <_sbrk_r+0x1a>
 80058b0:	682b      	ldr	r3, [r5, #0]
 80058b2:	b103      	cbz	r3, 80058b6 <_sbrk_r+0x1a>
 80058b4:	6023      	str	r3, [r4, #0]
 80058b6:	bd38      	pop	{r3, r4, r5, pc}
 80058b8:	20000478 	.word	0x20000478

080058bc <sulp>:
 80058bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80058c0:	460f      	mov	r7, r1
 80058c2:	4690      	mov	r8, r2
 80058c4:	f001 fe6a 	bl	800759c <__ulp>
 80058c8:	4604      	mov	r4, r0
 80058ca:	460d      	mov	r5, r1
 80058cc:	f1b8 0f00 	cmp.w	r8, #0
 80058d0:	d011      	beq.n	80058f6 <sulp+0x3a>
 80058d2:	f3c7 530a 	ubfx	r3, r7, #20, #11
 80058d6:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80058da:	2b00      	cmp	r3, #0
 80058dc:	dd0b      	ble.n	80058f6 <sulp+0x3a>
 80058de:	2400      	movs	r4, #0
 80058e0:	051b      	lsls	r3, r3, #20
 80058e2:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 80058e6:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 80058ea:	4622      	mov	r2, r4
 80058ec:	462b      	mov	r3, r5
 80058ee:	f7fa feb1 	bl	8000654 <__aeabi_dmul>
 80058f2:	4604      	mov	r4, r0
 80058f4:	460d      	mov	r5, r1
 80058f6:	4620      	mov	r0, r4
 80058f8:	4629      	mov	r1, r5
 80058fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005900 <_strtod_l>:
 8005900:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005904:	469b      	mov	fp, r3
 8005906:	2300      	movs	r3, #0
 8005908:	b09f      	sub	sp, #124	; 0x7c
 800590a:	931a      	str	r3, [sp, #104]	; 0x68
 800590c:	4b9e      	ldr	r3, [pc, #632]	; (8005b88 <_strtod_l+0x288>)
 800590e:	4682      	mov	sl, r0
 8005910:	681f      	ldr	r7, [r3, #0]
 8005912:	460e      	mov	r6, r1
 8005914:	4638      	mov	r0, r7
 8005916:	9215      	str	r2, [sp, #84]	; 0x54
 8005918:	f7fa fc24 	bl	8000164 <strlen>
 800591c:	f04f 0800 	mov.w	r8, #0
 8005920:	4604      	mov	r4, r0
 8005922:	f04f 0900 	mov.w	r9, #0
 8005926:	9619      	str	r6, [sp, #100]	; 0x64
 8005928:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800592a:	781a      	ldrb	r2, [r3, #0]
 800592c:	2a2b      	cmp	r2, #43	; 0x2b
 800592e:	d04c      	beq.n	80059ca <_strtod_l+0xca>
 8005930:	d83a      	bhi.n	80059a8 <_strtod_l+0xa8>
 8005932:	2a0d      	cmp	r2, #13
 8005934:	d833      	bhi.n	800599e <_strtod_l+0x9e>
 8005936:	2a08      	cmp	r2, #8
 8005938:	d833      	bhi.n	80059a2 <_strtod_l+0xa2>
 800593a:	2a00      	cmp	r2, #0
 800593c:	d03d      	beq.n	80059ba <_strtod_l+0xba>
 800593e:	2300      	movs	r3, #0
 8005940:	930a      	str	r3, [sp, #40]	; 0x28
 8005942:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8005944:	782b      	ldrb	r3, [r5, #0]
 8005946:	2b30      	cmp	r3, #48	; 0x30
 8005948:	f040 80aa 	bne.w	8005aa0 <_strtod_l+0x1a0>
 800594c:	786b      	ldrb	r3, [r5, #1]
 800594e:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8005952:	2b58      	cmp	r3, #88	; 0x58
 8005954:	d166      	bne.n	8005a24 <_strtod_l+0x124>
 8005956:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005958:	4650      	mov	r0, sl
 800595a:	9301      	str	r3, [sp, #4]
 800595c:	ab1a      	add	r3, sp, #104	; 0x68
 800595e:	9300      	str	r3, [sp, #0]
 8005960:	4a8a      	ldr	r2, [pc, #552]	; (8005b8c <_strtod_l+0x28c>)
 8005962:	f8cd b008 	str.w	fp, [sp, #8]
 8005966:	ab1b      	add	r3, sp, #108	; 0x6c
 8005968:	a919      	add	r1, sp, #100	; 0x64
 800596a:	f000 ff7d 	bl	8006868 <__gethex>
 800596e:	f010 0607 	ands.w	r6, r0, #7
 8005972:	4604      	mov	r4, r0
 8005974:	d005      	beq.n	8005982 <_strtod_l+0x82>
 8005976:	2e06      	cmp	r6, #6
 8005978:	d129      	bne.n	80059ce <_strtod_l+0xce>
 800597a:	2300      	movs	r3, #0
 800597c:	3501      	adds	r5, #1
 800597e:	9519      	str	r5, [sp, #100]	; 0x64
 8005980:	930a      	str	r3, [sp, #40]	; 0x28
 8005982:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005984:	2b00      	cmp	r3, #0
 8005986:	f040 858a 	bne.w	800649e <_strtod_l+0xb9e>
 800598a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800598c:	b1d3      	cbz	r3, 80059c4 <_strtod_l+0xc4>
 800598e:	4642      	mov	r2, r8
 8005990:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8005994:	4610      	mov	r0, r2
 8005996:	4619      	mov	r1, r3
 8005998:	b01f      	add	sp, #124	; 0x7c
 800599a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800599e:	2a20      	cmp	r2, #32
 80059a0:	d1cd      	bne.n	800593e <_strtod_l+0x3e>
 80059a2:	3301      	adds	r3, #1
 80059a4:	9319      	str	r3, [sp, #100]	; 0x64
 80059a6:	e7bf      	b.n	8005928 <_strtod_l+0x28>
 80059a8:	2a2d      	cmp	r2, #45	; 0x2d
 80059aa:	d1c8      	bne.n	800593e <_strtod_l+0x3e>
 80059ac:	2201      	movs	r2, #1
 80059ae:	920a      	str	r2, [sp, #40]	; 0x28
 80059b0:	1c5a      	adds	r2, r3, #1
 80059b2:	9219      	str	r2, [sp, #100]	; 0x64
 80059b4:	785b      	ldrb	r3, [r3, #1]
 80059b6:	2b00      	cmp	r3, #0
 80059b8:	d1c3      	bne.n	8005942 <_strtod_l+0x42>
 80059ba:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80059bc:	9619      	str	r6, [sp, #100]	; 0x64
 80059be:	2b00      	cmp	r3, #0
 80059c0:	f040 856b 	bne.w	800649a <_strtod_l+0xb9a>
 80059c4:	4642      	mov	r2, r8
 80059c6:	464b      	mov	r3, r9
 80059c8:	e7e4      	b.n	8005994 <_strtod_l+0x94>
 80059ca:	2200      	movs	r2, #0
 80059cc:	e7ef      	b.n	80059ae <_strtod_l+0xae>
 80059ce:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80059d0:	b13a      	cbz	r2, 80059e2 <_strtod_l+0xe2>
 80059d2:	2135      	movs	r1, #53	; 0x35
 80059d4:	a81c      	add	r0, sp, #112	; 0x70
 80059d6:	f001 fee5 	bl	80077a4 <__copybits>
 80059da:	4650      	mov	r0, sl
 80059dc:	991a      	ldr	r1, [sp, #104]	; 0x68
 80059de:	f001 faad 	bl	8006f3c <_Bfree>
 80059e2:	3e01      	subs	r6, #1
 80059e4:	2e04      	cmp	r6, #4
 80059e6:	d806      	bhi.n	80059f6 <_strtod_l+0xf6>
 80059e8:	e8df f006 	tbb	[pc, r6]
 80059ec:	1714030a 	.word	0x1714030a
 80059f0:	0a          	.byte	0x0a
 80059f1:	00          	.byte	0x00
 80059f2:	e9dd 891c 	ldrd	r8, r9, [sp, #112]	; 0x70
 80059f6:	0721      	lsls	r1, r4, #28
 80059f8:	d5c3      	bpl.n	8005982 <_strtod_l+0x82>
 80059fa:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 80059fe:	e7c0      	b.n	8005982 <_strtod_l+0x82>
 8005a00:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8005a02:	e9dd 831c 	ldrd	r8, r3, [sp, #112]	; 0x70
 8005a06:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8005a0a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8005a0e:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 8005a12:	e7f0      	b.n	80059f6 <_strtod_l+0xf6>
 8005a14:	f8df 9178 	ldr.w	r9, [pc, #376]	; 8005b90 <_strtod_l+0x290>
 8005a18:	e7ed      	b.n	80059f6 <_strtod_l+0xf6>
 8005a1a:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 8005a1e:	f04f 38ff 	mov.w	r8, #4294967295
 8005a22:	e7e8      	b.n	80059f6 <_strtod_l+0xf6>
 8005a24:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005a26:	1c5a      	adds	r2, r3, #1
 8005a28:	9219      	str	r2, [sp, #100]	; 0x64
 8005a2a:	785b      	ldrb	r3, [r3, #1]
 8005a2c:	2b30      	cmp	r3, #48	; 0x30
 8005a2e:	d0f9      	beq.n	8005a24 <_strtod_l+0x124>
 8005a30:	2b00      	cmp	r3, #0
 8005a32:	d0a6      	beq.n	8005982 <_strtod_l+0x82>
 8005a34:	2301      	movs	r3, #1
 8005a36:	9307      	str	r3, [sp, #28]
 8005a38:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005a3a:	220a      	movs	r2, #10
 8005a3c:	9308      	str	r3, [sp, #32]
 8005a3e:	2300      	movs	r3, #0
 8005a40:	469b      	mov	fp, r3
 8005a42:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8005a46:	9819      	ldr	r0, [sp, #100]	; 0x64
 8005a48:	7805      	ldrb	r5, [r0, #0]
 8005a4a:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 8005a4e:	b2d9      	uxtb	r1, r3
 8005a50:	2909      	cmp	r1, #9
 8005a52:	d927      	bls.n	8005aa4 <_strtod_l+0x1a4>
 8005a54:	4622      	mov	r2, r4
 8005a56:	4639      	mov	r1, r7
 8005a58:	f002 f9f4 	bl	8007e44 <strncmp>
 8005a5c:	2800      	cmp	r0, #0
 8005a5e:	d033      	beq.n	8005ac8 <_strtod_l+0x1c8>
 8005a60:	2000      	movs	r0, #0
 8005a62:	462a      	mov	r2, r5
 8005a64:	465c      	mov	r4, fp
 8005a66:	4603      	mov	r3, r0
 8005a68:	9004      	str	r0, [sp, #16]
 8005a6a:	2a65      	cmp	r2, #101	; 0x65
 8005a6c:	d001      	beq.n	8005a72 <_strtod_l+0x172>
 8005a6e:	2a45      	cmp	r2, #69	; 0x45
 8005a70:	d114      	bne.n	8005a9c <_strtod_l+0x19c>
 8005a72:	b91c      	cbnz	r4, 8005a7c <_strtod_l+0x17c>
 8005a74:	9a07      	ldr	r2, [sp, #28]
 8005a76:	4302      	orrs	r2, r0
 8005a78:	d09f      	beq.n	80059ba <_strtod_l+0xba>
 8005a7a:	2400      	movs	r4, #0
 8005a7c:	9e19      	ldr	r6, [sp, #100]	; 0x64
 8005a7e:	1c72      	adds	r2, r6, #1
 8005a80:	9219      	str	r2, [sp, #100]	; 0x64
 8005a82:	7872      	ldrb	r2, [r6, #1]
 8005a84:	2a2b      	cmp	r2, #43	; 0x2b
 8005a86:	d079      	beq.n	8005b7c <_strtod_l+0x27c>
 8005a88:	2a2d      	cmp	r2, #45	; 0x2d
 8005a8a:	f000 8083 	beq.w	8005b94 <_strtod_l+0x294>
 8005a8e:	2700      	movs	r7, #0
 8005a90:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8005a94:	2909      	cmp	r1, #9
 8005a96:	f240 8083 	bls.w	8005ba0 <_strtod_l+0x2a0>
 8005a9a:	9619      	str	r6, [sp, #100]	; 0x64
 8005a9c:	2500      	movs	r5, #0
 8005a9e:	e09f      	b.n	8005be0 <_strtod_l+0x2e0>
 8005aa0:	2300      	movs	r3, #0
 8005aa2:	e7c8      	b.n	8005a36 <_strtod_l+0x136>
 8005aa4:	f1bb 0f08 	cmp.w	fp, #8
 8005aa8:	bfd5      	itete	le
 8005aaa:	9906      	ldrle	r1, [sp, #24]
 8005aac:	9905      	ldrgt	r1, [sp, #20]
 8005aae:	fb02 3301 	mlale	r3, r2, r1, r3
 8005ab2:	fb02 3301 	mlagt	r3, r2, r1, r3
 8005ab6:	f100 0001 	add.w	r0, r0, #1
 8005aba:	bfd4      	ite	le
 8005abc:	9306      	strle	r3, [sp, #24]
 8005abe:	9305      	strgt	r3, [sp, #20]
 8005ac0:	f10b 0b01 	add.w	fp, fp, #1
 8005ac4:	9019      	str	r0, [sp, #100]	; 0x64
 8005ac6:	e7be      	b.n	8005a46 <_strtod_l+0x146>
 8005ac8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005aca:	191a      	adds	r2, r3, r4
 8005acc:	9219      	str	r2, [sp, #100]	; 0x64
 8005ace:	5d1a      	ldrb	r2, [r3, r4]
 8005ad0:	f1bb 0f00 	cmp.w	fp, #0
 8005ad4:	d036      	beq.n	8005b44 <_strtod_l+0x244>
 8005ad6:	465c      	mov	r4, fp
 8005ad8:	9004      	str	r0, [sp, #16]
 8005ada:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8005ade:	2b09      	cmp	r3, #9
 8005ae0:	d912      	bls.n	8005b08 <_strtod_l+0x208>
 8005ae2:	2301      	movs	r3, #1
 8005ae4:	e7c1      	b.n	8005a6a <_strtod_l+0x16a>
 8005ae6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005ae8:	3001      	adds	r0, #1
 8005aea:	1c5a      	adds	r2, r3, #1
 8005aec:	9219      	str	r2, [sp, #100]	; 0x64
 8005aee:	785a      	ldrb	r2, [r3, #1]
 8005af0:	2a30      	cmp	r2, #48	; 0x30
 8005af2:	d0f8      	beq.n	8005ae6 <_strtod_l+0x1e6>
 8005af4:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 8005af8:	2b08      	cmp	r3, #8
 8005afa:	f200 84d5 	bhi.w	80064a8 <_strtod_l+0xba8>
 8005afe:	9004      	str	r0, [sp, #16]
 8005b00:	2000      	movs	r0, #0
 8005b02:	4604      	mov	r4, r0
 8005b04:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005b06:	9308      	str	r3, [sp, #32]
 8005b08:	3a30      	subs	r2, #48	; 0x30
 8005b0a:	f100 0301 	add.w	r3, r0, #1
 8005b0e:	d013      	beq.n	8005b38 <_strtod_l+0x238>
 8005b10:	9904      	ldr	r1, [sp, #16]
 8005b12:	1905      	adds	r5, r0, r4
 8005b14:	4419      	add	r1, r3
 8005b16:	9104      	str	r1, [sp, #16]
 8005b18:	4623      	mov	r3, r4
 8005b1a:	210a      	movs	r1, #10
 8005b1c:	42ab      	cmp	r3, r5
 8005b1e:	d113      	bne.n	8005b48 <_strtod_l+0x248>
 8005b20:	1823      	adds	r3, r4, r0
 8005b22:	2b08      	cmp	r3, #8
 8005b24:	f104 0401 	add.w	r4, r4, #1
 8005b28:	4404      	add	r4, r0
 8005b2a:	dc1b      	bgt.n	8005b64 <_strtod_l+0x264>
 8005b2c:	230a      	movs	r3, #10
 8005b2e:	9906      	ldr	r1, [sp, #24]
 8005b30:	fb03 2301 	mla	r3, r3, r1, r2
 8005b34:	9306      	str	r3, [sp, #24]
 8005b36:	2300      	movs	r3, #0
 8005b38:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8005b3a:	4618      	mov	r0, r3
 8005b3c:	1c51      	adds	r1, r2, #1
 8005b3e:	9119      	str	r1, [sp, #100]	; 0x64
 8005b40:	7852      	ldrb	r2, [r2, #1]
 8005b42:	e7ca      	b.n	8005ada <_strtod_l+0x1da>
 8005b44:	4658      	mov	r0, fp
 8005b46:	e7d3      	b.n	8005af0 <_strtod_l+0x1f0>
 8005b48:	2b08      	cmp	r3, #8
 8005b4a:	dc04      	bgt.n	8005b56 <_strtod_l+0x256>
 8005b4c:	9f06      	ldr	r7, [sp, #24]
 8005b4e:	434f      	muls	r7, r1
 8005b50:	9706      	str	r7, [sp, #24]
 8005b52:	3301      	adds	r3, #1
 8005b54:	e7e2      	b.n	8005b1c <_strtod_l+0x21c>
 8005b56:	1c5f      	adds	r7, r3, #1
 8005b58:	2f10      	cmp	r7, #16
 8005b5a:	bfde      	ittt	le
 8005b5c:	9f05      	ldrle	r7, [sp, #20]
 8005b5e:	434f      	mulle	r7, r1
 8005b60:	9705      	strle	r7, [sp, #20]
 8005b62:	e7f6      	b.n	8005b52 <_strtod_l+0x252>
 8005b64:	2c10      	cmp	r4, #16
 8005b66:	bfdf      	itttt	le
 8005b68:	230a      	movle	r3, #10
 8005b6a:	9905      	ldrle	r1, [sp, #20]
 8005b6c:	fb03 2301 	mlale	r3, r3, r1, r2
 8005b70:	9305      	strle	r3, [sp, #20]
 8005b72:	e7e0      	b.n	8005b36 <_strtod_l+0x236>
 8005b74:	2300      	movs	r3, #0
 8005b76:	9304      	str	r3, [sp, #16]
 8005b78:	2301      	movs	r3, #1
 8005b7a:	e77b      	b.n	8005a74 <_strtod_l+0x174>
 8005b7c:	2700      	movs	r7, #0
 8005b7e:	1cb2      	adds	r2, r6, #2
 8005b80:	9219      	str	r2, [sp, #100]	; 0x64
 8005b82:	78b2      	ldrb	r2, [r6, #2]
 8005b84:	e784      	b.n	8005a90 <_strtod_l+0x190>
 8005b86:	bf00      	nop
 8005b88:	08008a68 	.word	0x08008a68
 8005b8c:	080087ec 	.word	0x080087ec
 8005b90:	7ff00000 	.word	0x7ff00000
 8005b94:	2701      	movs	r7, #1
 8005b96:	e7f2      	b.n	8005b7e <_strtod_l+0x27e>
 8005b98:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8005b9a:	1c51      	adds	r1, r2, #1
 8005b9c:	9119      	str	r1, [sp, #100]	; 0x64
 8005b9e:	7852      	ldrb	r2, [r2, #1]
 8005ba0:	2a30      	cmp	r2, #48	; 0x30
 8005ba2:	d0f9      	beq.n	8005b98 <_strtod_l+0x298>
 8005ba4:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 8005ba8:	2908      	cmp	r1, #8
 8005baa:	f63f af77 	bhi.w	8005a9c <_strtod_l+0x19c>
 8005bae:	f04f 0e0a 	mov.w	lr, #10
 8005bb2:	f1a2 0c30 	sub.w	ip, r2, #48	; 0x30
 8005bb6:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8005bb8:	9209      	str	r2, [sp, #36]	; 0x24
 8005bba:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8005bbc:	1c51      	adds	r1, r2, #1
 8005bbe:	9119      	str	r1, [sp, #100]	; 0x64
 8005bc0:	7852      	ldrb	r2, [r2, #1]
 8005bc2:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 8005bc6:	2d09      	cmp	r5, #9
 8005bc8:	d935      	bls.n	8005c36 <_strtod_l+0x336>
 8005bca:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8005bcc:	1b49      	subs	r1, r1, r5
 8005bce:	2908      	cmp	r1, #8
 8005bd0:	f644 651f 	movw	r5, #19999	; 0x4e1f
 8005bd4:	dc02      	bgt.n	8005bdc <_strtod_l+0x2dc>
 8005bd6:	4565      	cmp	r5, ip
 8005bd8:	bfa8      	it	ge
 8005bda:	4665      	movge	r5, ip
 8005bdc:	b107      	cbz	r7, 8005be0 <_strtod_l+0x2e0>
 8005bde:	426d      	negs	r5, r5
 8005be0:	2c00      	cmp	r4, #0
 8005be2:	d14c      	bne.n	8005c7e <_strtod_l+0x37e>
 8005be4:	9907      	ldr	r1, [sp, #28]
 8005be6:	4301      	orrs	r1, r0
 8005be8:	f47f aecb 	bne.w	8005982 <_strtod_l+0x82>
 8005bec:	2b00      	cmp	r3, #0
 8005bee:	f47f aee4 	bne.w	80059ba <_strtod_l+0xba>
 8005bf2:	2a69      	cmp	r2, #105	; 0x69
 8005bf4:	d026      	beq.n	8005c44 <_strtod_l+0x344>
 8005bf6:	dc23      	bgt.n	8005c40 <_strtod_l+0x340>
 8005bf8:	2a49      	cmp	r2, #73	; 0x49
 8005bfa:	d023      	beq.n	8005c44 <_strtod_l+0x344>
 8005bfc:	2a4e      	cmp	r2, #78	; 0x4e
 8005bfe:	f47f aedc 	bne.w	80059ba <_strtod_l+0xba>
 8005c02:	499d      	ldr	r1, [pc, #628]	; (8005e78 <_strtod_l+0x578>)
 8005c04:	a819      	add	r0, sp, #100	; 0x64
 8005c06:	f001 f87d 	bl	8006d04 <__match>
 8005c0a:	2800      	cmp	r0, #0
 8005c0c:	f43f aed5 	beq.w	80059ba <_strtod_l+0xba>
 8005c10:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005c12:	781b      	ldrb	r3, [r3, #0]
 8005c14:	2b28      	cmp	r3, #40	; 0x28
 8005c16:	d12c      	bne.n	8005c72 <_strtod_l+0x372>
 8005c18:	4998      	ldr	r1, [pc, #608]	; (8005e7c <_strtod_l+0x57c>)
 8005c1a:	aa1c      	add	r2, sp, #112	; 0x70
 8005c1c:	a819      	add	r0, sp, #100	; 0x64
 8005c1e:	f001 f885 	bl	8006d2c <__hexnan>
 8005c22:	2805      	cmp	r0, #5
 8005c24:	d125      	bne.n	8005c72 <_strtod_l+0x372>
 8005c26:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8005c28:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
 8005c2c:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 8005c30:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 8005c34:	e6a5      	b.n	8005982 <_strtod_l+0x82>
 8005c36:	fb0e 2c0c 	mla	ip, lr, ip, r2
 8005c3a:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
 8005c3e:	e7bc      	b.n	8005bba <_strtod_l+0x2ba>
 8005c40:	2a6e      	cmp	r2, #110	; 0x6e
 8005c42:	e7dc      	b.n	8005bfe <_strtod_l+0x2fe>
 8005c44:	498e      	ldr	r1, [pc, #568]	; (8005e80 <_strtod_l+0x580>)
 8005c46:	a819      	add	r0, sp, #100	; 0x64
 8005c48:	f001 f85c 	bl	8006d04 <__match>
 8005c4c:	2800      	cmp	r0, #0
 8005c4e:	f43f aeb4 	beq.w	80059ba <_strtod_l+0xba>
 8005c52:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005c54:	498b      	ldr	r1, [pc, #556]	; (8005e84 <_strtod_l+0x584>)
 8005c56:	3b01      	subs	r3, #1
 8005c58:	a819      	add	r0, sp, #100	; 0x64
 8005c5a:	9319      	str	r3, [sp, #100]	; 0x64
 8005c5c:	f001 f852 	bl	8006d04 <__match>
 8005c60:	b910      	cbnz	r0, 8005c68 <_strtod_l+0x368>
 8005c62:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005c64:	3301      	adds	r3, #1
 8005c66:	9319      	str	r3, [sp, #100]	; 0x64
 8005c68:	f04f 0800 	mov.w	r8, #0
 8005c6c:	f8df 9218 	ldr.w	r9, [pc, #536]	; 8005e88 <_strtod_l+0x588>
 8005c70:	e687      	b.n	8005982 <_strtod_l+0x82>
 8005c72:	4886      	ldr	r0, [pc, #536]	; (8005e8c <_strtod_l+0x58c>)
 8005c74:	f002 f8dc 	bl	8007e30 <nan>
 8005c78:	4680      	mov	r8, r0
 8005c7a:	4689      	mov	r9, r1
 8005c7c:	e681      	b.n	8005982 <_strtod_l+0x82>
 8005c7e:	9b04      	ldr	r3, [sp, #16]
 8005c80:	f1bb 0f00 	cmp.w	fp, #0
 8005c84:	bf08      	it	eq
 8005c86:	46a3      	moveq	fp, r4
 8005c88:	1aeb      	subs	r3, r5, r3
 8005c8a:	2c10      	cmp	r4, #16
 8005c8c:	9806      	ldr	r0, [sp, #24]
 8005c8e:	4626      	mov	r6, r4
 8005c90:	9307      	str	r3, [sp, #28]
 8005c92:	bfa8      	it	ge
 8005c94:	2610      	movge	r6, #16
 8005c96:	f7fa fc63 	bl	8000560 <__aeabi_ui2d>
 8005c9a:	2c09      	cmp	r4, #9
 8005c9c:	4680      	mov	r8, r0
 8005c9e:	4689      	mov	r9, r1
 8005ca0:	dd13      	ble.n	8005cca <_strtod_l+0x3ca>
 8005ca2:	4b7b      	ldr	r3, [pc, #492]	; (8005e90 <_strtod_l+0x590>)
 8005ca4:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8005ca8:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8005cac:	f7fa fcd2 	bl	8000654 <__aeabi_dmul>
 8005cb0:	4680      	mov	r8, r0
 8005cb2:	9805      	ldr	r0, [sp, #20]
 8005cb4:	4689      	mov	r9, r1
 8005cb6:	f7fa fc53 	bl	8000560 <__aeabi_ui2d>
 8005cba:	4602      	mov	r2, r0
 8005cbc:	460b      	mov	r3, r1
 8005cbe:	4640      	mov	r0, r8
 8005cc0:	4649      	mov	r1, r9
 8005cc2:	f7fa fb11 	bl	80002e8 <__adddf3>
 8005cc6:	4680      	mov	r8, r0
 8005cc8:	4689      	mov	r9, r1
 8005cca:	2c0f      	cmp	r4, #15
 8005ccc:	dc36      	bgt.n	8005d3c <_strtod_l+0x43c>
 8005cce:	9b07      	ldr	r3, [sp, #28]
 8005cd0:	2b00      	cmp	r3, #0
 8005cd2:	f43f ae56 	beq.w	8005982 <_strtod_l+0x82>
 8005cd6:	dd22      	ble.n	8005d1e <_strtod_l+0x41e>
 8005cd8:	2b16      	cmp	r3, #22
 8005cda:	dc09      	bgt.n	8005cf0 <_strtod_l+0x3f0>
 8005cdc:	496c      	ldr	r1, [pc, #432]	; (8005e90 <_strtod_l+0x590>)
 8005cde:	4642      	mov	r2, r8
 8005ce0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8005ce4:	464b      	mov	r3, r9
 8005ce6:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005cea:	f7fa fcb3 	bl	8000654 <__aeabi_dmul>
 8005cee:	e7c3      	b.n	8005c78 <_strtod_l+0x378>
 8005cf0:	9a07      	ldr	r2, [sp, #28]
 8005cf2:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 8005cf6:	4293      	cmp	r3, r2
 8005cf8:	db20      	blt.n	8005d3c <_strtod_l+0x43c>
 8005cfa:	4d65      	ldr	r5, [pc, #404]	; (8005e90 <_strtod_l+0x590>)
 8005cfc:	f1c4 040f 	rsb	r4, r4, #15
 8005d00:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 8005d04:	4642      	mov	r2, r8
 8005d06:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005d0a:	464b      	mov	r3, r9
 8005d0c:	f7fa fca2 	bl	8000654 <__aeabi_dmul>
 8005d10:	9b07      	ldr	r3, [sp, #28]
 8005d12:	1b1c      	subs	r4, r3, r4
 8005d14:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 8005d18:	e9d5 2300 	ldrd	r2, r3, [r5]
 8005d1c:	e7e5      	b.n	8005cea <_strtod_l+0x3ea>
 8005d1e:	9b07      	ldr	r3, [sp, #28]
 8005d20:	3316      	adds	r3, #22
 8005d22:	db0b      	blt.n	8005d3c <_strtod_l+0x43c>
 8005d24:	9b04      	ldr	r3, [sp, #16]
 8005d26:	4640      	mov	r0, r8
 8005d28:	1b5d      	subs	r5, r3, r5
 8005d2a:	4b59      	ldr	r3, [pc, #356]	; (8005e90 <_strtod_l+0x590>)
 8005d2c:	4649      	mov	r1, r9
 8005d2e:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8005d32:	e9d5 2300 	ldrd	r2, r3, [r5]
 8005d36:	f7fa fdb7 	bl	80008a8 <__aeabi_ddiv>
 8005d3a:	e79d      	b.n	8005c78 <_strtod_l+0x378>
 8005d3c:	9b07      	ldr	r3, [sp, #28]
 8005d3e:	1ba6      	subs	r6, r4, r6
 8005d40:	441e      	add	r6, r3
 8005d42:	2e00      	cmp	r6, #0
 8005d44:	dd74      	ble.n	8005e30 <_strtod_l+0x530>
 8005d46:	f016 030f 	ands.w	r3, r6, #15
 8005d4a:	d00a      	beq.n	8005d62 <_strtod_l+0x462>
 8005d4c:	4950      	ldr	r1, [pc, #320]	; (8005e90 <_strtod_l+0x590>)
 8005d4e:	4642      	mov	r2, r8
 8005d50:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8005d54:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005d58:	464b      	mov	r3, r9
 8005d5a:	f7fa fc7b 	bl	8000654 <__aeabi_dmul>
 8005d5e:	4680      	mov	r8, r0
 8005d60:	4689      	mov	r9, r1
 8005d62:	f036 060f 	bics.w	r6, r6, #15
 8005d66:	d052      	beq.n	8005e0e <_strtod_l+0x50e>
 8005d68:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
 8005d6c:	dd27      	ble.n	8005dbe <_strtod_l+0x4be>
 8005d6e:	f04f 0b00 	mov.w	fp, #0
 8005d72:	f8cd b010 	str.w	fp, [sp, #16]
 8005d76:	f8cd b020 	str.w	fp, [sp, #32]
 8005d7a:	f8cd b018 	str.w	fp, [sp, #24]
 8005d7e:	2322      	movs	r3, #34	; 0x22
 8005d80:	f04f 0800 	mov.w	r8, #0
 8005d84:	f8df 9100 	ldr.w	r9, [pc, #256]	; 8005e88 <_strtod_l+0x588>
 8005d88:	f8ca 3000 	str.w	r3, [sl]
 8005d8c:	9b08      	ldr	r3, [sp, #32]
 8005d8e:	2b00      	cmp	r3, #0
 8005d90:	f43f adf7 	beq.w	8005982 <_strtod_l+0x82>
 8005d94:	4650      	mov	r0, sl
 8005d96:	991a      	ldr	r1, [sp, #104]	; 0x68
 8005d98:	f001 f8d0 	bl	8006f3c <_Bfree>
 8005d9c:	4650      	mov	r0, sl
 8005d9e:	9906      	ldr	r1, [sp, #24]
 8005da0:	f001 f8cc 	bl	8006f3c <_Bfree>
 8005da4:	4650      	mov	r0, sl
 8005da6:	9904      	ldr	r1, [sp, #16]
 8005da8:	f001 f8c8 	bl	8006f3c <_Bfree>
 8005dac:	4650      	mov	r0, sl
 8005dae:	9908      	ldr	r1, [sp, #32]
 8005db0:	f001 f8c4 	bl	8006f3c <_Bfree>
 8005db4:	4659      	mov	r1, fp
 8005db6:	4650      	mov	r0, sl
 8005db8:	f001 f8c0 	bl	8006f3c <_Bfree>
 8005dbc:	e5e1      	b.n	8005982 <_strtod_l+0x82>
 8005dbe:	4b35      	ldr	r3, [pc, #212]	; (8005e94 <_strtod_l+0x594>)
 8005dc0:	4640      	mov	r0, r8
 8005dc2:	9305      	str	r3, [sp, #20]
 8005dc4:	2300      	movs	r3, #0
 8005dc6:	4649      	mov	r1, r9
 8005dc8:	461f      	mov	r7, r3
 8005dca:	1136      	asrs	r6, r6, #4
 8005dcc:	2e01      	cmp	r6, #1
 8005dce:	dc21      	bgt.n	8005e14 <_strtod_l+0x514>
 8005dd0:	b10b      	cbz	r3, 8005dd6 <_strtod_l+0x4d6>
 8005dd2:	4680      	mov	r8, r0
 8005dd4:	4689      	mov	r9, r1
 8005dd6:	4b2f      	ldr	r3, [pc, #188]	; (8005e94 <_strtod_l+0x594>)
 8005dd8:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8005ddc:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8005de0:	4642      	mov	r2, r8
 8005de2:	e9d7 0100 	ldrd	r0, r1, [r7]
 8005de6:	464b      	mov	r3, r9
 8005de8:	f7fa fc34 	bl	8000654 <__aeabi_dmul>
 8005dec:	4b26      	ldr	r3, [pc, #152]	; (8005e88 <_strtod_l+0x588>)
 8005dee:	460a      	mov	r2, r1
 8005df0:	400b      	ands	r3, r1
 8005df2:	4929      	ldr	r1, [pc, #164]	; (8005e98 <_strtod_l+0x598>)
 8005df4:	4680      	mov	r8, r0
 8005df6:	428b      	cmp	r3, r1
 8005df8:	d8b9      	bhi.n	8005d6e <_strtod_l+0x46e>
 8005dfa:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8005dfe:	428b      	cmp	r3, r1
 8005e00:	bf86      	itte	hi
 8005e02:	f04f 38ff 	movhi.w	r8, #4294967295
 8005e06:	f8df 9094 	ldrhi.w	r9, [pc, #148]	; 8005e9c <_strtod_l+0x59c>
 8005e0a:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 8005e0e:	2300      	movs	r3, #0
 8005e10:	9305      	str	r3, [sp, #20]
 8005e12:	e07f      	b.n	8005f14 <_strtod_l+0x614>
 8005e14:	07f2      	lsls	r2, r6, #31
 8005e16:	d505      	bpl.n	8005e24 <_strtod_l+0x524>
 8005e18:	9b05      	ldr	r3, [sp, #20]
 8005e1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005e1e:	f7fa fc19 	bl	8000654 <__aeabi_dmul>
 8005e22:	2301      	movs	r3, #1
 8005e24:	9a05      	ldr	r2, [sp, #20]
 8005e26:	3701      	adds	r7, #1
 8005e28:	3208      	adds	r2, #8
 8005e2a:	1076      	asrs	r6, r6, #1
 8005e2c:	9205      	str	r2, [sp, #20]
 8005e2e:	e7cd      	b.n	8005dcc <_strtod_l+0x4cc>
 8005e30:	d0ed      	beq.n	8005e0e <_strtod_l+0x50e>
 8005e32:	4276      	negs	r6, r6
 8005e34:	f016 020f 	ands.w	r2, r6, #15
 8005e38:	d00a      	beq.n	8005e50 <_strtod_l+0x550>
 8005e3a:	4b15      	ldr	r3, [pc, #84]	; (8005e90 <_strtod_l+0x590>)
 8005e3c:	4640      	mov	r0, r8
 8005e3e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005e42:	4649      	mov	r1, r9
 8005e44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005e48:	f7fa fd2e 	bl	80008a8 <__aeabi_ddiv>
 8005e4c:	4680      	mov	r8, r0
 8005e4e:	4689      	mov	r9, r1
 8005e50:	1136      	asrs	r6, r6, #4
 8005e52:	d0dc      	beq.n	8005e0e <_strtod_l+0x50e>
 8005e54:	2e1f      	cmp	r6, #31
 8005e56:	dd23      	ble.n	8005ea0 <_strtod_l+0x5a0>
 8005e58:	f04f 0b00 	mov.w	fp, #0
 8005e5c:	f8cd b010 	str.w	fp, [sp, #16]
 8005e60:	f8cd b020 	str.w	fp, [sp, #32]
 8005e64:	f8cd b018 	str.w	fp, [sp, #24]
 8005e68:	2322      	movs	r3, #34	; 0x22
 8005e6a:	f04f 0800 	mov.w	r8, #0
 8005e6e:	f04f 0900 	mov.w	r9, #0
 8005e72:	f8ca 3000 	str.w	r3, [sl]
 8005e76:	e789      	b.n	8005d8c <_strtod_l+0x48c>
 8005e78:	080087e9 	.word	0x080087e9
 8005e7c:	08008800 	.word	0x08008800
 8005e80:	080087e0 	.word	0x080087e0
 8005e84:	080087e3 	.word	0x080087e3
 8005e88:	7ff00000 	.word	0x7ff00000
 8005e8c:	080088ef 	.word	0x080088ef
 8005e90:	08008b00 	.word	0x08008b00
 8005e94:	08008ad8 	.word	0x08008ad8
 8005e98:	7ca00000 	.word	0x7ca00000
 8005e9c:	7fefffff 	.word	0x7fefffff
 8005ea0:	f016 0310 	ands.w	r3, r6, #16
 8005ea4:	bf18      	it	ne
 8005ea6:	236a      	movne	r3, #106	; 0x6a
 8005ea8:	4640      	mov	r0, r8
 8005eaa:	9305      	str	r3, [sp, #20]
 8005eac:	4649      	mov	r1, r9
 8005eae:	2300      	movs	r3, #0
 8005eb0:	4fb0      	ldr	r7, [pc, #704]	; (8006174 <_strtod_l+0x874>)
 8005eb2:	07f2      	lsls	r2, r6, #31
 8005eb4:	d504      	bpl.n	8005ec0 <_strtod_l+0x5c0>
 8005eb6:	e9d7 2300 	ldrd	r2, r3, [r7]
 8005eba:	f7fa fbcb 	bl	8000654 <__aeabi_dmul>
 8005ebe:	2301      	movs	r3, #1
 8005ec0:	1076      	asrs	r6, r6, #1
 8005ec2:	f107 0708 	add.w	r7, r7, #8
 8005ec6:	d1f4      	bne.n	8005eb2 <_strtod_l+0x5b2>
 8005ec8:	b10b      	cbz	r3, 8005ece <_strtod_l+0x5ce>
 8005eca:	4680      	mov	r8, r0
 8005ecc:	4689      	mov	r9, r1
 8005ece:	9b05      	ldr	r3, [sp, #20]
 8005ed0:	b1c3      	cbz	r3, 8005f04 <_strtod_l+0x604>
 8005ed2:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8005ed6:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8005eda:	2b00      	cmp	r3, #0
 8005edc:	4649      	mov	r1, r9
 8005ede:	dd11      	ble.n	8005f04 <_strtod_l+0x604>
 8005ee0:	2b1f      	cmp	r3, #31
 8005ee2:	f340 8127 	ble.w	8006134 <_strtod_l+0x834>
 8005ee6:	2b34      	cmp	r3, #52	; 0x34
 8005ee8:	bfd8      	it	le
 8005eea:	f04f 33ff 	movle.w	r3, #4294967295
 8005eee:	f04f 0800 	mov.w	r8, #0
 8005ef2:	bfcf      	iteee	gt
 8005ef4:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8005ef8:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 8005efc:	fa03 f202 	lslle.w	r2, r3, r2
 8005f00:	ea02 0901 	andle.w	r9, r2, r1
 8005f04:	2200      	movs	r2, #0
 8005f06:	2300      	movs	r3, #0
 8005f08:	4640      	mov	r0, r8
 8005f0a:	4649      	mov	r1, r9
 8005f0c:	f7fa fe0a 	bl	8000b24 <__aeabi_dcmpeq>
 8005f10:	2800      	cmp	r0, #0
 8005f12:	d1a1      	bne.n	8005e58 <_strtod_l+0x558>
 8005f14:	9b06      	ldr	r3, [sp, #24]
 8005f16:	465a      	mov	r2, fp
 8005f18:	9300      	str	r3, [sp, #0]
 8005f1a:	4650      	mov	r0, sl
 8005f1c:	4623      	mov	r3, r4
 8005f1e:	9908      	ldr	r1, [sp, #32]
 8005f20:	f001 f874 	bl	800700c <__s2b>
 8005f24:	9008      	str	r0, [sp, #32]
 8005f26:	2800      	cmp	r0, #0
 8005f28:	f43f af21 	beq.w	8005d6e <_strtod_l+0x46e>
 8005f2c:	9b04      	ldr	r3, [sp, #16]
 8005f2e:	f04f 0b00 	mov.w	fp, #0
 8005f32:	1b5d      	subs	r5, r3, r5
 8005f34:	9b07      	ldr	r3, [sp, #28]
 8005f36:	f8cd b010 	str.w	fp, [sp, #16]
 8005f3a:	2b00      	cmp	r3, #0
 8005f3c:	bfb4      	ite	lt
 8005f3e:	462b      	movlt	r3, r5
 8005f40:	2300      	movge	r3, #0
 8005f42:	930e      	str	r3, [sp, #56]	; 0x38
 8005f44:	9b07      	ldr	r3, [sp, #28]
 8005f46:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8005f4a:	9314      	str	r3, [sp, #80]	; 0x50
 8005f4c:	9b08      	ldr	r3, [sp, #32]
 8005f4e:	4650      	mov	r0, sl
 8005f50:	6859      	ldr	r1, [r3, #4]
 8005f52:	f000 ffb3 	bl	8006ebc <_Balloc>
 8005f56:	9006      	str	r0, [sp, #24]
 8005f58:	2800      	cmp	r0, #0
 8005f5a:	f43f af10 	beq.w	8005d7e <_strtod_l+0x47e>
 8005f5e:	9b08      	ldr	r3, [sp, #32]
 8005f60:	300c      	adds	r0, #12
 8005f62:	691a      	ldr	r2, [r3, #16]
 8005f64:	f103 010c 	add.w	r1, r3, #12
 8005f68:	3202      	adds	r2, #2
 8005f6a:	0092      	lsls	r2, r2, #2
 8005f6c:	f000 ff8c 	bl	8006e88 <memcpy>
 8005f70:	ab1c      	add	r3, sp, #112	; 0x70
 8005f72:	9301      	str	r3, [sp, #4]
 8005f74:	ab1b      	add	r3, sp, #108	; 0x6c
 8005f76:	9300      	str	r3, [sp, #0]
 8005f78:	4642      	mov	r2, r8
 8005f7a:	464b      	mov	r3, r9
 8005f7c:	4650      	mov	r0, sl
 8005f7e:	e9cd 890c 	strd	r8, r9, [sp, #48]	; 0x30
 8005f82:	f001 fb85 	bl	8007690 <__d2b>
 8005f86:	901a      	str	r0, [sp, #104]	; 0x68
 8005f88:	2800      	cmp	r0, #0
 8005f8a:	f43f aef8 	beq.w	8005d7e <_strtod_l+0x47e>
 8005f8e:	2101      	movs	r1, #1
 8005f90:	4650      	mov	r0, sl
 8005f92:	f001 f8d3 	bl	800713c <__i2b>
 8005f96:	4603      	mov	r3, r0
 8005f98:	9004      	str	r0, [sp, #16]
 8005f9a:	2800      	cmp	r0, #0
 8005f9c:	f43f aeef 	beq.w	8005d7e <_strtod_l+0x47e>
 8005fa0:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8005fa2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8005fa4:	2d00      	cmp	r5, #0
 8005fa6:	bfab      	itete	ge
 8005fa8:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 8005faa:	9b14      	ldrlt	r3, [sp, #80]	; 0x50
 8005fac:	18ee      	addge	r6, r5, r3
 8005fae:	1b5c      	sublt	r4, r3, r5
 8005fb0:	9b05      	ldr	r3, [sp, #20]
 8005fb2:	bfa8      	it	ge
 8005fb4:	9c14      	ldrge	r4, [sp, #80]	; 0x50
 8005fb6:	eba5 0503 	sub.w	r5, r5, r3
 8005fba:	4415      	add	r5, r2
 8005fbc:	4b6e      	ldr	r3, [pc, #440]	; (8006178 <_strtod_l+0x878>)
 8005fbe:	f105 35ff 	add.w	r5, r5, #4294967295
 8005fc2:	bfb8      	it	lt
 8005fc4:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 8005fc6:	429d      	cmp	r5, r3
 8005fc8:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8005fcc:	f280 80c4 	bge.w	8006158 <_strtod_l+0x858>
 8005fd0:	1b5b      	subs	r3, r3, r5
 8005fd2:	2b1f      	cmp	r3, #31
 8005fd4:	f04f 0701 	mov.w	r7, #1
 8005fd8:	eba2 0203 	sub.w	r2, r2, r3
 8005fdc:	f300 80b1 	bgt.w	8006142 <_strtod_l+0x842>
 8005fe0:	2500      	movs	r5, #0
 8005fe2:	fa07 f303 	lsl.w	r3, r7, r3
 8005fe6:	930f      	str	r3, [sp, #60]	; 0x3c
 8005fe8:	18b7      	adds	r7, r6, r2
 8005fea:	9b05      	ldr	r3, [sp, #20]
 8005fec:	42be      	cmp	r6, r7
 8005fee:	4414      	add	r4, r2
 8005ff0:	441c      	add	r4, r3
 8005ff2:	4633      	mov	r3, r6
 8005ff4:	bfa8      	it	ge
 8005ff6:	463b      	movge	r3, r7
 8005ff8:	42a3      	cmp	r3, r4
 8005ffa:	bfa8      	it	ge
 8005ffc:	4623      	movge	r3, r4
 8005ffe:	2b00      	cmp	r3, #0
 8006000:	bfc2      	ittt	gt
 8006002:	1aff      	subgt	r7, r7, r3
 8006004:	1ae4      	subgt	r4, r4, r3
 8006006:	1af6      	subgt	r6, r6, r3
 8006008:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800600a:	2b00      	cmp	r3, #0
 800600c:	dd17      	ble.n	800603e <_strtod_l+0x73e>
 800600e:	461a      	mov	r2, r3
 8006010:	4650      	mov	r0, sl
 8006012:	9904      	ldr	r1, [sp, #16]
 8006014:	f001 f950 	bl	80072b8 <__pow5mult>
 8006018:	9004      	str	r0, [sp, #16]
 800601a:	2800      	cmp	r0, #0
 800601c:	f43f aeaf 	beq.w	8005d7e <_strtod_l+0x47e>
 8006020:	4601      	mov	r1, r0
 8006022:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8006024:	4650      	mov	r0, sl
 8006026:	f001 f89f 	bl	8007168 <__multiply>
 800602a:	9009      	str	r0, [sp, #36]	; 0x24
 800602c:	2800      	cmp	r0, #0
 800602e:	f43f aea6 	beq.w	8005d7e <_strtod_l+0x47e>
 8006032:	4650      	mov	r0, sl
 8006034:	991a      	ldr	r1, [sp, #104]	; 0x68
 8006036:	f000 ff81 	bl	8006f3c <_Bfree>
 800603a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800603c:	931a      	str	r3, [sp, #104]	; 0x68
 800603e:	2f00      	cmp	r7, #0
 8006040:	f300 808e 	bgt.w	8006160 <_strtod_l+0x860>
 8006044:	9b07      	ldr	r3, [sp, #28]
 8006046:	2b00      	cmp	r3, #0
 8006048:	dd08      	ble.n	800605c <_strtod_l+0x75c>
 800604a:	4650      	mov	r0, sl
 800604c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800604e:	9906      	ldr	r1, [sp, #24]
 8006050:	f001 f932 	bl	80072b8 <__pow5mult>
 8006054:	9006      	str	r0, [sp, #24]
 8006056:	2800      	cmp	r0, #0
 8006058:	f43f ae91 	beq.w	8005d7e <_strtod_l+0x47e>
 800605c:	2c00      	cmp	r4, #0
 800605e:	dd08      	ble.n	8006072 <_strtod_l+0x772>
 8006060:	4622      	mov	r2, r4
 8006062:	4650      	mov	r0, sl
 8006064:	9906      	ldr	r1, [sp, #24]
 8006066:	f001 f981 	bl	800736c <__lshift>
 800606a:	9006      	str	r0, [sp, #24]
 800606c:	2800      	cmp	r0, #0
 800606e:	f43f ae86 	beq.w	8005d7e <_strtod_l+0x47e>
 8006072:	2e00      	cmp	r6, #0
 8006074:	dd08      	ble.n	8006088 <_strtod_l+0x788>
 8006076:	4632      	mov	r2, r6
 8006078:	4650      	mov	r0, sl
 800607a:	9904      	ldr	r1, [sp, #16]
 800607c:	f001 f976 	bl	800736c <__lshift>
 8006080:	9004      	str	r0, [sp, #16]
 8006082:	2800      	cmp	r0, #0
 8006084:	f43f ae7b 	beq.w	8005d7e <_strtod_l+0x47e>
 8006088:	4650      	mov	r0, sl
 800608a:	9a06      	ldr	r2, [sp, #24]
 800608c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800608e:	f001 f9f9 	bl	8007484 <__mdiff>
 8006092:	4683      	mov	fp, r0
 8006094:	2800      	cmp	r0, #0
 8006096:	f43f ae72 	beq.w	8005d7e <_strtod_l+0x47e>
 800609a:	2400      	movs	r4, #0
 800609c:	68c3      	ldr	r3, [r0, #12]
 800609e:	9904      	ldr	r1, [sp, #16]
 80060a0:	60c4      	str	r4, [r0, #12]
 80060a2:	930b      	str	r3, [sp, #44]	; 0x2c
 80060a4:	f001 f9d2 	bl	800744c <__mcmp>
 80060a8:	42a0      	cmp	r0, r4
 80060aa:	da6b      	bge.n	8006184 <_strtod_l+0x884>
 80060ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80060ae:	ea53 0308 	orrs.w	r3, r3, r8
 80060b2:	f040 8091 	bne.w	80061d8 <_strtod_l+0x8d8>
 80060b6:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80060ba:	2b00      	cmp	r3, #0
 80060bc:	f040 808c 	bne.w	80061d8 <_strtod_l+0x8d8>
 80060c0:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 80060c4:	0d1b      	lsrs	r3, r3, #20
 80060c6:	051b      	lsls	r3, r3, #20
 80060c8:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 80060cc:	f240 8084 	bls.w	80061d8 <_strtod_l+0x8d8>
 80060d0:	f8db 3014 	ldr.w	r3, [fp, #20]
 80060d4:	b91b      	cbnz	r3, 80060de <_strtod_l+0x7de>
 80060d6:	f8db 3010 	ldr.w	r3, [fp, #16]
 80060da:	2b01      	cmp	r3, #1
 80060dc:	dd7c      	ble.n	80061d8 <_strtod_l+0x8d8>
 80060de:	4659      	mov	r1, fp
 80060e0:	2201      	movs	r2, #1
 80060e2:	4650      	mov	r0, sl
 80060e4:	f001 f942 	bl	800736c <__lshift>
 80060e8:	9904      	ldr	r1, [sp, #16]
 80060ea:	4683      	mov	fp, r0
 80060ec:	f001 f9ae 	bl	800744c <__mcmp>
 80060f0:	2800      	cmp	r0, #0
 80060f2:	dd71      	ble.n	80061d8 <_strtod_l+0x8d8>
 80060f4:	9905      	ldr	r1, [sp, #20]
 80060f6:	464b      	mov	r3, r9
 80060f8:	4a20      	ldr	r2, [pc, #128]	; (800617c <_strtod_l+0x87c>)
 80060fa:	2900      	cmp	r1, #0
 80060fc:	f000 808c 	beq.w	8006218 <_strtod_l+0x918>
 8006100:	ea02 0109 	and.w	r1, r2, r9
 8006104:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8006108:	f300 8086 	bgt.w	8006218 <_strtod_l+0x918>
 800610c:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8006110:	f77f aeaa 	ble.w	8005e68 <_strtod_l+0x568>
 8006114:	4640      	mov	r0, r8
 8006116:	4649      	mov	r1, r9
 8006118:	4b19      	ldr	r3, [pc, #100]	; (8006180 <_strtod_l+0x880>)
 800611a:	2200      	movs	r2, #0
 800611c:	f7fa fa9a 	bl	8000654 <__aeabi_dmul>
 8006120:	460b      	mov	r3, r1
 8006122:	4303      	orrs	r3, r0
 8006124:	bf08      	it	eq
 8006126:	2322      	moveq	r3, #34	; 0x22
 8006128:	4680      	mov	r8, r0
 800612a:	4689      	mov	r9, r1
 800612c:	bf08      	it	eq
 800612e:	f8ca 3000 	streq.w	r3, [sl]
 8006132:	e62f      	b.n	8005d94 <_strtod_l+0x494>
 8006134:	f04f 32ff 	mov.w	r2, #4294967295
 8006138:	fa02 f303 	lsl.w	r3, r2, r3
 800613c:	ea03 0808 	and.w	r8, r3, r8
 8006140:	e6e0      	b.n	8005f04 <_strtod_l+0x604>
 8006142:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 8006146:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 800614a:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 800614e:	35e2      	adds	r5, #226	; 0xe2
 8006150:	fa07 f505 	lsl.w	r5, r7, r5
 8006154:	970f      	str	r7, [sp, #60]	; 0x3c
 8006156:	e747      	b.n	8005fe8 <_strtod_l+0x6e8>
 8006158:	2301      	movs	r3, #1
 800615a:	2500      	movs	r5, #0
 800615c:	930f      	str	r3, [sp, #60]	; 0x3c
 800615e:	e743      	b.n	8005fe8 <_strtod_l+0x6e8>
 8006160:	463a      	mov	r2, r7
 8006162:	4650      	mov	r0, sl
 8006164:	991a      	ldr	r1, [sp, #104]	; 0x68
 8006166:	f001 f901 	bl	800736c <__lshift>
 800616a:	901a      	str	r0, [sp, #104]	; 0x68
 800616c:	2800      	cmp	r0, #0
 800616e:	f47f af69 	bne.w	8006044 <_strtod_l+0x744>
 8006172:	e604      	b.n	8005d7e <_strtod_l+0x47e>
 8006174:	08008818 	.word	0x08008818
 8006178:	fffffc02 	.word	0xfffffc02
 800617c:	7ff00000 	.word	0x7ff00000
 8006180:	39500000 	.word	0x39500000
 8006184:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8006188:	d165      	bne.n	8006256 <_strtod_l+0x956>
 800618a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800618c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8006190:	b35a      	cbz	r2, 80061ea <_strtod_l+0x8ea>
 8006192:	4a99      	ldr	r2, [pc, #612]	; (80063f8 <_strtod_l+0xaf8>)
 8006194:	4293      	cmp	r3, r2
 8006196:	d12b      	bne.n	80061f0 <_strtod_l+0x8f0>
 8006198:	9b05      	ldr	r3, [sp, #20]
 800619a:	4641      	mov	r1, r8
 800619c:	b303      	cbz	r3, 80061e0 <_strtod_l+0x8e0>
 800619e:	464a      	mov	r2, r9
 80061a0:	4b96      	ldr	r3, [pc, #600]	; (80063fc <_strtod_l+0xafc>)
 80061a2:	4013      	ands	r3, r2
 80061a4:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 80061a8:	f04f 32ff 	mov.w	r2, #4294967295
 80061ac:	d81b      	bhi.n	80061e6 <_strtod_l+0x8e6>
 80061ae:	0d1b      	lsrs	r3, r3, #20
 80061b0:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80061b4:	fa02 f303 	lsl.w	r3, r2, r3
 80061b8:	4299      	cmp	r1, r3
 80061ba:	d119      	bne.n	80061f0 <_strtod_l+0x8f0>
 80061bc:	4b90      	ldr	r3, [pc, #576]	; (8006400 <_strtod_l+0xb00>)
 80061be:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80061c0:	429a      	cmp	r2, r3
 80061c2:	d102      	bne.n	80061ca <_strtod_l+0x8ca>
 80061c4:	3101      	adds	r1, #1
 80061c6:	f43f adda 	beq.w	8005d7e <_strtod_l+0x47e>
 80061ca:	f04f 0800 	mov.w	r8, #0
 80061ce:	4b8b      	ldr	r3, [pc, #556]	; (80063fc <_strtod_l+0xafc>)
 80061d0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80061d2:	401a      	ands	r2, r3
 80061d4:	f502 1980 	add.w	r9, r2, #1048576	; 0x100000
 80061d8:	9b05      	ldr	r3, [sp, #20]
 80061da:	2b00      	cmp	r3, #0
 80061dc:	d19a      	bne.n	8006114 <_strtod_l+0x814>
 80061de:	e5d9      	b.n	8005d94 <_strtod_l+0x494>
 80061e0:	f04f 33ff 	mov.w	r3, #4294967295
 80061e4:	e7e8      	b.n	80061b8 <_strtod_l+0x8b8>
 80061e6:	4613      	mov	r3, r2
 80061e8:	e7e6      	b.n	80061b8 <_strtod_l+0x8b8>
 80061ea:	ea53 0308 	orrs.w	r3, r3, r8
 80061ee:	d081      	beq.n	80060f4 <_strtod_l+0x7f4>
 80061f0:	b1e5      	cbz	r5, 800622c <_strtod_l+0x92c>
 80061f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80061f4:	421d      	tst	r5, r3
 80061f6:	d0ef      	beq.n	80061d8 <_strtod_l+0x8d8>
 80061f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80061fa:	4640      	mov	r0, r8
 80061fc:	4649      	mov	r1, r9
 80061fe:	9a05      	ldr	r2, [sp, #20]
 8006200:	b1c3      	cbz	r3, 8006234 <_strtod_l+0x934>
 8006202:	f7ff fb5b 	bl	80058bc <sulp>
 8006206:	4602      	mov	r2, r0
 8006208:	460b      	mov	r3, r1
 800620a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800620e:	f7fa f86b 	bl	80002e8 <__adddf3>
 8006212:	4680      	mov	r8, r0
 8006214:	4689      	mov	r9, r1
 8006216:	e7df      	b.n	80061d8 <_strtod_l+0x8d8>
 8006218:	4013      	ands	r3, r2
 800621a:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 800621e:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 8006222:	f04f 38ff 	mov.w	r8, #4294967295
 8006226:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 800622a:	e7d5      	b.n	80061d8 <_strtod_l+0x8d8>
 800622c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800622e:	ea13 0f08 	tst.w	r3, r8
 8006232:	e7e0      	b.n	80061f6 <_strtod_l+0x8f6>
 8006234:	f7ff fb42 	bl	80058bc <sulp>
 8006238:	4602      	mov	r2, r0
 800623a:	460b      	mov	r3, r1
 800623c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8006240:	f7fa f850 	bl	80002e4 <__aeabi_dsub>
 8006244:	2200      	movs	r2, #0
 8006246:	2300      	movs	r3, #0
 8006248:	4680      	mov	r8, r0
 800624a:	4689      	mov	r9, r1
 800624c:	f7fa fc6a 	bl	8000b24 <__aeabi_dcmpeq>
 8006250:	2800      	cmp	r0, #0
 8006252:	d0c1      	beq.n	80061d8 <_strtod_l+0x8d8>
 8006254:	e608      	b.n	8005e68 <_strtod_l+0x568>
 8006256:	4658      	mov	r0, fp
 8006258:	9904      	ldr	r1, [sp, #16]
 800625a:	f001 fa75 	bl	8007748 <__ratio>
 800625e:	2200      	movs	r2, #0
 8006260:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8006264:	4606      	mov	r6, r0
 8006266:	460f      	mov	r7, r1
 8006268:	f7fa fc70 	bl	8000b4c <__aeabi_dcmple>
 800626c:	2800      	cmp	r0, #0
 800626e:	d070      	beq.n	8006352 <_strtod_l+0xa52>
 8006270:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006272:	2b00      	cmp	r3, #0
 8006274:	d042      	beq.n	80062fc <_strtod_l+0x9fc>
 8006276:	2600      	movs	r6, #0
 8006278:	4f62      	ldr	r7, [pc, #392]	; (8006404 <_strtod_l+0xb04>)
 800627a:	4d62      	ldr	r5, [pc, #392]	; (8006404 <_strtod_l+0xb04>)
 800627c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800627e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8006282:	0d1b      	lsrs	r3, r3, #20
 8006284:	051b      	lsls	r3, r3, #20
 8006286:	930f      	str	r3, [sp, #60]	; 0x3c
 8006288:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800628a:	4b5f      	ldr	r3, [pc, #380]	; (8006408 <_strtod_l+0xb08>)
 800628c:	429a      	cmp	r2, r3
 800628e:	f040 80c3 	bne.w	8006418 <_strtod_l+0xb18>
 8006292:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006294:	4640      	mov	r0, r8
 8006296:	f1a3 7954 	sub.w	r9, r3, #55574528	; 0x3500000
 800629a:	4649      	mov	r1, r9
 800629c:	f001 f97e 	bl	800759c <__ulp>
 80062a0:	4602      	mov	r2, r0
 80062a2:	460b      	mov	r3, r1
 80062a4:	4630      	mov	r0, r6
 80062a6:	4639      	mov	r1, r7
 80062a8:	f7fa f9d4 	bl	8000654 <__aeabi_dmul>
 80062ac:	4642      	mov	r2, r8
 80062ae:	464b      	mov	r3, r9
 80062b0:	f7fa f81a 	bl	80002e8 <__adddf3>
 80062b4:	460b      	mov	r3, r1
 80062b6:	4951      	ldr	r1, [pc, #324]	; (80063fc <_strtod_l+0xafc>)
 80062b8:	4a54      	ldr	r2, [pc, #336]	; (800640c <_strtod_l+0xb0c>)
 80062ba:	4019      	ands	r1, r3
 80062bc:	4291      	cmp	r1, r2
 80062be:	4680      	mov	r8, r0
 80062c0:	d95d      	bls.n	800637e <_strtod_l+0xa7e>
 80062c2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80062c4:	4b4e      	ldr	r3, [pc, #312]	; (8006400 <_strtod_l+0xb00>)
 80062c6:	429a      	cmp	r2, r3
 80062c8:	d103      	bne.n	80062d2 <_strtod_l+0x9d2>
 80062ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80062cc:	3301      	adds	r3, #1
 80062ce:	f43f ad56 	beq.w	8005d7e <_strtod_l+0x47e>
 80062d2:	f04f 38ff 	mov.w	r8, #4294967295
 80062d6:	f8df 9128 	ldr.w	r9, [pc, #296]	; 8006400 <_strtod_l+0xb00>
 80062da:	4650      	mov	r0, sl
 80062dc:	991a      	ldr	r1, [sp, #104]	; 0x68
 80062de:	f000 fe2d 	bl	8006f3c <_Bfree>
 80062e2:	4650      	mov	r0, sl
 80062e4:	9906      	ldr	r1, [sp, #24]
 80062e6:	f000 fe29 	bl	8006f3c <_Bfree>
 80062ea:	4650      	mov	r0, sl
 80062ec:	9904      	ldr	r1, [sp, #16]
 80062ee:	f000 fe25 	bl	8006f3c <_Bfree>
 80062f2:	4659      	mov	r1, fp
 80062f4:	4650      	mov	r0, sl
 80062f6:	f000 fe21 	bl	8006f3c <_Bfree>
 80062fa:	e627      	b.n	8005f4c <_strtod_l+0x64c>
 80062fc:	f1b8 0f00 	cmp.w	r8, #0
 8006300:	d119      	bne.n	8006336 <_strtod_l+0xa36>
 8006302:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006304:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006308:	b9e3      	cbnz	r3, 8006344 <_strtod_l+0xa44>
 800630a:	2200      	movs	r2, #0
 800630c:	4630      	mov	r0, r6
 800630e:	4639      	mov	r1, r7
 8006310:	4b3c      	ldr	r3, [pc, #240]	; (8006404 <_strtod_l+0xb04>)
 8006312:	f7fa fc11 	bl	8000b38 <__aeabi_dcmplt>
 8006316:	b9c8      	cbnz	r0, 800634c <_strtod_l+0xa4c>
 8006318:	2200      	movs	r2, #0
 800631a:	4630      	mov	r0, r6
 800631c:	4639      	mov	r1, r7
 800631e:	4b3c      	ldr	r3, [pc, #240]	; (8006410 <_strtod_l+0xb10>)
 8006320:	f7fa f998 	bl	8000654 <__aeabi_dmul>
 8006324:	4604      	mov	r4, r0
 8006326:	460d      	mov	r5, r1
 8006328:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 800632c:	9416      	str	r4, [sp, #88]	; 0x58
 800632e:	9317      	str	r3, [sp, #92]	; 0x5c
 8006330:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
 8006334:	e7a2      	b.n	800627c <_strtod_l+0x97c>
 8006336:	f1b8 0f01 	cmp.w	r8, #1
 800633a:	d103      	bne.n	8006344 <_strtod_l+0xa44>
 800633c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800633e:	2b00      	cmp	r3, #0
 8006340:	f43f ad92 	beq.w	8005e68 <_strtod_l+0x568>
 8006344:	2600      	movs	r6, #0
 8006346:	2400      	movs	r4, #0
 8006348:	4f32      	ldr	r7, [pc, #200]	; (8006414 <_strtod_l+0xb14>)
 800634a:	e796      	b.n	800627a <_strtod_l+0x97a>
 800634c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800634e:	4d30      	ldr	r5, [pc, #192]	; (8006410 <_strtod_l+0xb10>)
 8006350:	e7ea      	b.n	8006328 <_strtod_l+0xa28>
 8006352:	4b2f      	ldr	r3, [pc, #188]	; (8006410 <_strtod_l+0xb10>)
 8006354:	2200      	movs	r2, #0
 8006356:	4630      	mov	r0, r6
 8006358:	4639      	mov	r1, r7
 800635a:	f7fa f97b 	bl	8000654 <__aeabi_dmul>
 800635e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006360:	4604      	mov	r4, r0
 8006362:	460d      	mov	r5, r1
 8006364:	b933      	cbnz	r3, 8006374 <_strtod_l+0xa74>
 8006366:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800636a:	9010      	str	r0, [sp, #64]	; 0x40
 800636c:	9311      	str	r3, [sp, #68]	; 0x44
 800636e:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8006372:	e783      	b.n	800627c <_strtod_l+0x97c>
 8006374:	4602      	mov	r2, r0
 8006376:	460b      	mov	r3, r1
 8006378:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 800637c:	e7f7      	b.n	800636e <_strtod_l+0xa6e>
 800637e:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 8006382:	9b05      	ldr	r3, [sp, #20]
 8006384:	2b00      	cmp	r3, #0
 8006386:	d1a8      	bne.n	80062da <_strtod_l+0x9da>
 8006388:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800638c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800638e:	0d1b      	lsrs	r3, r3, #20
 8006390:	051b      	lsls	r3, r3, #20
 8006392:	429a      	cmp	r2, r3
 8006394:	d1a1      	bne.n	80062da <_strtod_l+0x9da>
 8006396:	4620      	mov	r0, r4
 8006398:	4629      	mov	r1, r5
 800639a:	f7fa fe35 	bl	8001008 <__aeabi_d2lz>
 800639e:	f7fa f92b 	bl	80005f8 <__aeabi_l2d>
 80063a2:	4602      	mov	r2, r0
 80063a4:	460b      	mov	r3, r1
 80063a6:	4620      	mov	r0, r4
 80063a8:	4629      	mov	r1, r5
 80063aa:	f7f9 ff9b 	bl	80002e4 <__aeabi_dsub>
 80063ae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80063b0:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80063b4:	ea43 0308 	orr.w	r3, r3, r8
 80063b8:	4313      	orrs	r3, r2
 80063ba:	4604      	mov	r4, r0
 80063bc:	460d      	mov	r5, r1
 80063be:	d066      	beq.n	800648e <_strtod_l+0xb8e>
 80063c0:	a309      	add	r3, pc, #36	; (adr r3, 80063e8 <_strtod_l+0xae8>)
 80063c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80063c6:	f7fa fbb7 	bl	8000b38 <__aeabi_dcmplt>
 80063ca:	2800      	cmp	r0, #0
 80063cc:	f47f ace2 	bne.w	8005d94 <_strtod_l+0x494>
 80063d0:	a307      	add	r3, pc, #28	; (adr r3, 80063f0 <_strtod_l+0xaf0>)
 80063d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80063d6:	4620      	mov	r0, r4
 80063d8:	4629      	mov	r1, r5
 80063da:	f7fa fbcb 	bl	8000b74 <__aeabi_dcmpgt>
 80063de:	2800      	cmp	r0, #0
 80063e0:	f43f af7b 	beq.w	80062da <_strtod_l+0x9da>
 80063e4:	e4d6      	b.n	8005d94 <_strtod_l+0x494>
 80063e6:	bf00      	nop
 80063e8:	94a03595 	.word	0x94a03595
 80063ec:	3fdfffff 	.word	0x3fdfffff
 80063f0:	35afe535 	.word	0x35afe535
 80063f4:	3fe00000 	.word	0x3fe00000
 80063f8:	000fffff 	.word	0x000fffff
 80063fc:	7ff00000 	.word	0x7ff00000
 8006400:	7fefffff 	.word	0x7fefffff
 8006404:	3ff00000 	.word	0x3ff00000
 8006408:	7fe00000 	.word	0x7fe00000
 800640c:	7c9fffff 	.word	0x7c9fffff
 8006410:	3fe00000 	.word	0x3fe00000
 8006414:	bff00000 	.word	0xbff00000
 8006418:	9b05      	ldr	r3, [sp, #20]
 800641a:	b313      	cbz	r3, 8006462 <_strtod_l+0xb62>
 800641c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800641e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8006422:	d81e      	bhi.n	8006462 <_strtod_l+0xb62>
 8006424:	a326      	add	r3, pc, #152	; (adr r3, 80064c0 <_strtod_l+0xbc0>)
 8006426:	e9d3 2300 	ldrd	r2, r3, [r3]
 800642a:	4620      	mov	r0, r4
 800642c:	4629      	mov	r1, r5
 800642e:	f7fa fb8d 	bl	8000b4c <__aeabi_dcmple>
 8006432:	b190      	cbz	r0, 800645a <_strtod_l+0xb5a>
 8006434:	4629      	mov	r1, r5
 8006436:	4620      	mov	r0, r4
 8006438:	f7fa fbbc 	bl	8000bb4 <__aeabi_d2uiz>
 800643c:	2801      	cmp	r0, #1
 800643e:	bf38      	it	cc
 8006440:	2001      	movcc	r0, #1
 8006442:	f7fa f88d 	bl	8000560 <__aeabi_ui2d>
 8006446:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006448:	4604      	mov	r4, r0
 800644a:	460d      	mov	r5, r1
 800644c:	b9d3      	cbnz	r3, 8006484 <_strtod_l+0xb84>
 800644e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8006452:	9012      	str	r0, [sp, #72]	; 0x48
 8006454:	9313      	str	r3, [sp, #76]	; 0x4c
 8006456:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 800645a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800645c:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 8006460:	1a9f      	subs	r7, r3, r2
 8006462:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8006466:	f001 f899 	bl	800759c <__ulp>
 800646a:	4602      	mov	r2, r0
 800646c:	460b      	mov	r3, r1
 800646e:	4630      	mov	r0, r6
 8006470:	4639      	mov	r1, r7
 8006472:	f7fa f8ef 	bl	8000654 <__aeabi_dmul>
 8006476:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800647a:	f7f9 ff35 	bl	80002e8 <__adddf3>
 800647e:	4680      	mov	r8, r0
 8006480:	4689      	mov	r9, r1
 8006482:	e77e      	b.n	8006382 <_strtod_l+0xa82>
 8006484:	4602      	mov	r2, r0
 8006486:	460b      	mov	r3, r1
 8006488:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 800648c:	e7e3      	b.n	8006456 <_strtod_l+0xb56>
 800648e:	a30e      	add	r3, pc, #56	; (adr r3, 80064c8 <_strtod_l+0xbc8>)
 8006490:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006494:	f7fa fb50 	bl	8000b38 <__aeabi_dcmplt>
 8006498:	e7a1      	b.n	80063de <_strtod_l+0xade>
 800649a:	2300      	movs	r3, #0
 800649c:	930a      	str	r3, [sp, #40]	; 0x28
 800649e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80064a0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80064a2:	6013      	str	r3, [r2, #0]
 80064a4:	f7ff ba71 	b.w	800598a <_strtod_l+0x8a>
 80064a8:	2a65      	cmp	r2, #101	; 0x65
 80064aa:	f43f ab63 	beq.w	8005b74 <_strtod_l+0x274>
 80064ae:	2a45      	cmp	r2, #69	; 0x45
 80064b0:	f43f ab60 	beq.w	8005b74 <_strtod_l+0x274>
 80064b4:	2301      	movs	r3, #1
 80064b6:	f7ff bb95 	b.w	8005be4 <_strtod_l+0x2e4>
 80064ba:	bf00      	nop
 80064bc:	f3af 8000 	nop.w
 80064c0:	ffc00000 	.word	0xffc00000
 80064c4:	41dfffff 	.word	0x41dfffff
 80064c8:	94a03595 	.word	0x94a03595
 80064cc:	3fcfffff 	.word	0x3fcfffff

080064d0 <strtof>:
 80064d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80064d4:	4f22      	ldr	r7, [pc, #136]	; (8006560 <strtof+0x90>)
 80064d6:	460a      	mov	r2, r1
 80064d8:	4b22      	ldr	r3, [pc, #136]	; (8006564 <strtof+0x94>)
 80064da:	4601      	mov	r1, r0
 80064dc:	6838      	ldr	r0, [r7, #0]
 80064de:	f7ff fa0f 	bl	8005900 <_strtod_l>
 80064e2:	4602      	mov	r2, r0
 80064e4:	460b      	mov	r3, r1
 80064e6:	4606      	mov	r6, r0
 80064e8:	460c      	mov	r4, r1
 80064ea:	f7fa fb4d 	bl	8000b88 <__aeabi_dcmpun>
 80064ee:	b168      	cbz	r0, 800650c <strtof+0x3c>
 80064f0:	2c00      	cmp	r4, #0
 80064f2:	481d      	ldr	r0, [pc, #116]	; (8006568 <strtof+0x98>)
 80064f4:	da06      	bge.n	8006504 <strtof+0x34>
 80064f6:	f001 fca1 	bl	8007e3c <nanf>
 80064fa:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 80064fe:	4628      	mov	r0, r5
 8006500:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006504:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006508:	f001 bc98 	b.w	8007e3c <nanf>
 800650c:	4621      	mov	r1, r4
 800650e:	4630      	mov	r0, r6
 8006510:	f7fa fb70 	bl	8000bf4 <__aeabi_d2f>
 8006514:	f020 4800 	bic.w	r8, r0, #2147483648	; 0x80000000
 8006518:	4605      	mov	r5, r0
 800651a:	4914      	ldr	r1, [pc, #80]	; (800656c <strtof+0x9c>)
 800651c:	4640      	mov	r0, r8
 800651e:	f7fa fd3d 	bl	8000f9c <__aeabi_fcmpun>
 8006522:	2800      	cmp	r0, #0
 8006524:	d1eb      	bne.n	80064fe <strtof+0x2e>
 8006526:	4640      	mov	r0, r8
 8006528:	4910      	ldr	r1, [pc, #64]	; (800656c <strtof+0x9c>)
 800652a:	f7fa fd19 	bl	8000f60 <__aeabi_fcmple>
 800652e:	2800      	cmp	r0, #0
 8006530:	d1e5      	bne.n	80064fe <strtof+0x2e>
 8006532:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
 8006536:	f04f 32ff 	mov.w	r2, #4294967295
 800653a:	4630      	mov	r0, r6
 800653c:	4621      	mov	r1, r4
 800653e:	4b0c      	ldr	r3, [pc, #48]	; (8006570 <strtof+0xa0>)
 8006540:	f7fa fb22 	bl	8000b88 <__aeabi_dcmpun>
 8006544:	b940      	cbnz	r0, 8006558 <strtof+0x88>
 8006546:	f04f 32ff 	mov.w	r2, #4294967295
 800654a:	4630      	mov	r0, r6
 800654c:	4621      	mov	r1, r4
 800654e:	4b08      	ldr	r3, [pc, #32]	; (8006570 <strtof+0xa0>)
 8006550:	f7fa fafc 	bl	8000b4c <__aeabi_dcmple>
 8006554:	2800      	cmp	r0, #0
 8006556:	d0d2      	beq.n	80064fe <strtof+0x2e>
 8006558:	2222      	movs	r2, #34	; 0x22
 800655a:	683b      	ldr	r3, [r7, #0]
 800655c:	601a      	str	r2, [r3, #0]
 800655e:	e7ce      	b.n	80064fe <strtof+0x2e>
 8006560:	20000018 	.word	0x20000018
 8006564:	20000080 	.word	0x20000080
 8006568:	080088ef 	.word	0x080088ef
 800656c:	7f7fffff 	.word	0x7f7fffff
 8006570:	7fefffff 	.word	0x7fefffff

08006574 <strtok>:
 8006574:	4b16      	ldr	r3, [pc, #88]	; (80065d0 <strtok+0x5c>)
 8006576:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800657a:	681f      	ldr	r7, [r3, #0]
 800657c:	4605      	mov	r5, r0
 800657e:	6dbc      	ldr	r4, [r7, #88]	; 0x58
 8006580:	460e      	mov	r6, r1
 8006582:	b9ec      	cbnz	r4, 80065c0 <strtok+0x4c>
 8006584:	2050      	movs	r0, #80	; 0x50
 8006586:	f7ff f895 	bl	80056b4 <malloc>
 800658a:	4602      	mov	r2, r0
 800658c:	65b8      	str	r0, [r7, #88]	; 0x58
 800658e:	b920      	cbnz	r0, 800659a <strtok+0x26>
 8006590:	2157      	movs	r1, #87	; 0x57
 8006592:	4b10      	ldr	r3, [pc, #64]	; (80065d4 <strtok+0x60>)
 8006594:	4810      	ldr	r0, [pc, #64]	; (80065d8 <strtok+0x64>)
 8006596:	f000 f8cf 	bl	8006738 <__assert_func>
 800659a:	e9c0 4400 	strd	r4, r4, [r0]
 800659e:	e9c0 4402 	strd	r4, r4, [r0, #8]
 80065a2:	e9c0 4404 	strd	r4, r4, [r0, #16]
 80065a6:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 80065aa:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 80065ae:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 80065b2:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 80065b6:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 80065ba:	6184      	str	r4, [r0, #24]
 80065bc:	7704      	strb	r4, [r0, #28]
 80065be:	6244      	str	r4, [r0, #36]	; 0x24
 80065c0:	4631      	mov	r1, r6
 80065c2:	4628      	mov	r0, r5
 80065c4:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80065c6:	2301      	movs	r3, #1
 80065c8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80065cc:	f000 b806 	b.w	80065dc <__strtok_r>
 80065d0:	20000018 	.word	0x20000018
 80065d4:	08008840 	.word	0x08008840
 80065d8:	08008857 	.word	0x08008857

080065dc <__strtok_r>:
 80065dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80065de:	b908      	cbnz	r0, 80065e4 <__strtok_r+0x8>
 80065e0:	6810      	ldr	r0, [r2, #0]
 80065e2:	b188      	cbz	r0, 8006608 <__strtok_r+0x2c>
 80065e4:	4604      	mov	r4, r0
 80065e6:	460f      	mov	r7, r1
 80065e8:	4620      	mov	r0, r4
 80065ea:	f814 5b01 	ldrb.w	r5, [r4], #1
 80065ee:	f817 6b01 	ldrb.w	r6, [r7], #1
 80065f2:	b91e      	cbnz	r6, 80065fc <__strtok_r+0x20>
 80065f4:	b965      	cbnz	r5, 8006610 <__strtok_r+0x34>
 80065f6:	4628      	mov	r0, r5
 80065f8:	6015      	str	r5, [r2, #0]
 80065fa:	e005      	b.n	8006608 <__strtok_r+0x2c>
 80065fc:	42b5      	cmp	r5, r6
 80065fe:	d1f6      	bne.n	80065ee <__strtok_r+0x12>
 8006600:	2b00      	cmp	r3, #0
 8006602:	d1f0      	bne.n	80065e6 <__strtok_r+0xa>
 8006604:	6014      	str	r4, [r2, #0]
 8006606:	7003      	strb	r3, [r0, #0]
 8006608:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800660a:	461c      	mov	r4, r3
 800660c:	e00c      	b.n	8006628 <__strtok_r+0x4c>
 800660e:	b915      	cbnz	r5, 8006616 <__strtok_r+0x3a>
 8006610:	460e      	mov	r6, r1
 8006612:	f814 3b01 	ldrb.w	r3, [r4], #1
 8006616:	f816 5b01 	ldrb.w	r5, [r6], #1
 800661a:	42ab      	cmp	r3, r5
 800661c:	d1f7      	bne.n	800660e <__strtok_r+0x32>
 800661e:	2b00      	cmp	r3, #0
 8006620:	d0f3      	beq.n	800660a <__strtok_r+0x2e>
 8006622:	2300      	movs	r3, #0
 8006624:	f804 3c01 	strb.w	r3, [r4, #-1]
 8006628:	6014      	str	r4, [r2, #0]
 800662a:	e7ed      	b.n	8006608 <__strtok_r+0x2c>

0800662c <_strtol_l.constprop.0>:
 800662c:	2b01      	cmp	r3, #1
 800662e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006632:	4680      	mov	r8, r0
 8006634:	d001      	beq.n	800663a <_strtol_l.constprop.0+0xe>
 8006636:	2b24      	cmp	r3, #36	; 0x24
 8006638:	d906      	bls.n	8006648 <_strtol_l.constprop.0+0x1c>
 800663a:	f7ff f811 	bl	8005660 <__errno>
 800663e:	2316      	movs	r3, #22
 8006640:	6003      	str	r3, [r0, #0]
 8006642:	2000      	movs	r0, #0
 8006644:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006648:	460d      	mov	r5, r1
 800664a:	4f35      	ldr	r7, [pc, #212]	; (8006720 <_strtol_l.constprop.0+0xf4>)
 800664c:	4628      	mov	r0, r5
 800664e:	f815 4b01 	ldrb.w	r4, [r5], #1
 8006652:	5de6      	ldrb	r6, [r4, r7]
 8006654:	f016 0608 	ands.w	r6, r6, #8
 8006658:	d1f8      	bne.n	800664c <_strtol_l.constprop.0+0x20>
 800665a:	2c2d      	cmp	r4, #45	; 0x2d
 800665c:	d12f      	bne.n	80066be <_strtol_l.constprop.0+0x92>
 800665e:	2601      	movs	r6, #1
 8006660:	782c      	ldrb	r4, [r5, #0]
 8006662:	1c85      	adds	r5, r0, #2
 8006664:	2b00      	cmp	r3, #0
 8006666:	d057      	beq.n	8006718 <_strtol_l.constprop.0+0xec>
 8006668:	2b10      	cmp	r3, #16
 800666a:	d109      	bne.n	8006680 <_strtol_l.constprop.0+0x54>
 800666c:	2c30      	cmp	r4, #48	; 0x30
 800666e:	d107      	bne.n	8006680 <_strtol_l.constprop.0+0x54>
 8006670:	7828      	ldrb	r0, [r5, #0]
 8006672:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8006676:	2858      	cmp	r0, #88	; 0x58
 8006678:	d149      	bne.n	800670e <_strtol_l.constprop.0+0xe2>
 800667a:	2310      	movs	r3, #16
 800667c:	786c      	ldrb	r4, [r5, #1]
 800667e:	3502      	adds	r5, #2
 8006680:	2700      	movs	r7, #0
 8006682:	f106 4e00 	add.w	lr, r6, #2147483648	; 0x80000000
 8006686:	f10e 3eff 	add.w	lr, lr, #4294967295
 800668a:	fbbe f9f3 	udiv	r9, lr, r3
 800668e:	4638      	mov	r0, r7
 8006690:	fb03 ea19 	mls	sl, r3, r9, lr
 8006694:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8006698:	f1bc 0f09 	cmp.w	ip, #9
 800669c:	d814      	bhi.n	80066c8 <_strtol_l.constprop.0+0x9c>
 800669e:	4664      	mov	r4, ip
 80066a0:	42a3      	cmp	r3, r4
 80066a2:	dd22      	ble.n	80066ea <_strtol_l.constprop.0+0xbe>
 80066a4:	2f00      	cmp	r7, #0
 80066a6:	db1d      	blt.n	80066e4 <_strtol_l.constprop.0+0xb8>
 80066a8:	4581      	cmp	r9, r0
 80066aa:	d31b      	bcc.n	80066e4 <_strtol_l.constprop.0+0xb8>
 80066ac:	d101      	bne.n	80066b2 <_strtol_l.constprop.0+0x86>
 80066ae:	45a2      	cmp	sl, r4
 80066b0:	db18      	blt.n	80066e4 <_strtol_l.constprop.0+0xb8>
 80066b2:	2701      	movs	r7, #1
 80066b4:	fb00 4003 	mla	r0, r0, r3, r4
 80066b8:	f815 4b01 	ldrb.w	r4, [r5], #1
 80066bc:	e7ea      	b.n	8006694 <_strtol_l.constprop.0+0x68>
 80066be:	2c2b      	cmp	r4, #43	; 0x2b
 80066c0:	bf04      	itt	eq
 80066c2:	782c      	ldrbeq	r4, [r5, #0]
 80066c4:	1c85      	addeq	r5, r0, #2
 80066c6:	e7cd      	b.n	8006664 <_strtol_l.constprop.0+0x38>
 80066c8:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 80066cc:	f1bc 0f19 	cmp.w	ip, #25
 80066d0:	d801      	bhi.n	80066d6 <_strtol_l.constprop.0+0xaa>
 80066d2:	3c37      	subs	r4, #55	; 0x37
 80066d4:	e7e4      	b.n	80066a0 <_strtol_l.constprop.0+0x74>
 80066d6:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 80066da:	f1bc 0f19 	cmp.w	ip, #25
 80066de:	d804      	bhi.n	80066ea <_strtol_l.constprop.0+0xbe>
 80066e0:	3c57      	subs	r4, #87	; 0x57
 80066e2:	e7dd      	b.n	80066a0 <_strtol_l.constprop.0+0x74>
 80066e4:	f04f 37ff 	mov.w	r7, #4294967295
 80066e8:	e7e6      	b.n	80066b8 <_strtol_l.constprop.0+0x8c>
 80066ea:	2f00      	cmp	r7, #0
 80066ec:	da07      	bge.n	80066fe <_strtol_l.constprop.0+0xd2>
 80066ee:	2322      	movs	r3, #34	; 0x22
 80066f0:	4670      	mov	r0, lr
 80066f2:	f8c8 3000 	str.w	r3, [r8]
 80066f6:	2a00      	cmp	r2, #0
 80066f8:	d0a4      	beq.n	8006644 <_strtol_l.constprop.0+0x18>
 80066fa:	1e69      	subs	r1, r5, #1
 80066fc:	e005      	b.n	800670a <_strtol_l.constprop.0+0xde>
 80066fe:	b106      	cbz	r6, 8006702 <_strtol_l.constprop.0+0xd6>
 8006700:	4240      	negs	r0, r0
 8006702:	2a00      	cmp	r2, #0
 8006704:	d09e      	beq.n	8006644 <_strtol_l.constprop.0+0x18>
 8006706:	2f00      	cmp	r7, #0
 8006708:	d1f7      	bne.n	80066fa <_strtol_l.constprop.0+0xce>
 800670a:	6011      	str	r1, [r2, #0]
 800670c:	e79a      	b.n	8006644 <_strtol_l.constprop.0+0x18>
 800670e:	2430      	movs	r4, #48	; 0x30
 8006710:	2b00      	cmp	r3, #0
 8006712:	d1b5      	bne.n	8006680 <_strtol_l.constprop.0+0x54>
 8006714:	2308      	movs	r3, #8
 8006716:	e7b3      	b.n	8006680 <_strtol_l.constprop.0+0x54>
 8006718:	2c30      	cmp	r4, #48	; 0x30
 800671a:	d0a9      	beq.n	8006670 <_strtol_l.constprop.0+0x44>
 800671c:	230a      	movs	r3, #10
 800671e:	e7af      	b.n	8006680 <_strtol_l.constprop.0+0x54>
 8006720:	080088f1 	.word	0x080088f1

08006724 <strtol>:
 8006724:	4613      	mov	r3, r2
 8006726:	460a      	mov	r2, r1
 8006728:	4601      	mov	r1, r0
 800672a:	4802      	ldr	r0, [pc, #8]	; (8006734 <strtol+0x10>)
 800672c:	6800      	ldr	r0, [r0, #0]
 800672e:	f7ff bf7d 	b.w	800662c <_strtol_l.constprop.0>
 8006732:	bf00      	nop
 8006734:	20000018 	.word	0x20000018

08006738 <__assert_func>:
 8006738:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800673a:	4614      	mov	r4, r2
 800673c:	461a      	mov	r2, r3
 800673e:	4b09      	ldr	r3, [pc, #36]	; (8006764 <__assert_func+0x2c>)
 8006740:	4605      	mov	r5, r0
 8006742:	681b      	ldr	r3, [r3, #0]
 8006744:	68d8      	ldr	r0, [r3, #12]
 8006746:	b14c      	cbz	r4, 800675c <__assert_func+0x24>
 8006748:	4b07      	ldr	r3, [pc, #28]	; (8006768 <__assert_func+0x30>)
 800674a:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800674e:	9100      	str	r1, [sp, #0]
 8006750:	462b      	mov	r3, r5
 8006752:	4906      	ldr	r1, [pc, #24]	; (800676c <__assert_func+0x34>)
 8006754:	f000 f80e 	bl	8006774 <fiprintf>
 8006758:	f001 fc56 	bl	8008008 <abort>
 800675c:	4b04      	ldr	r3, [pc, #16]	; (8006770 <__assert_func+0x38>)
 800675e:	461c      	mov	r4, r3
 8006760:	e7f3      	b.n	800674a <__assert_func+0x12>
 8006762:	bf00      	nop
 8006764:	20000018 	.word	0x20000018
 8006768:	080088b4 	.word	0x080088b4
 800676c:	080088c1 	.word	0x080088c1
 8006770:	080088ef 	.word	0x080088ef

08006774 <fiprintf>:
 8006774:	b40e      	push	{r1, r2, r3}
 8006776:	b503      	push	{r0, r1, lr}
 8006778:	4601      	mov	r1, r0
 800677a:	ab03      	add	r3, sp, #12
 800677c:	4805      	ldr	r0, [pc, #20]	; (8006794 <fiprintf+0x20>)
 800677e:	f853 2b04 	ldr.w	r2, [r3], #4
 8006782:	6800      	ldr	r0, [r0, #0]
 8006784:	9301      	str	r3, [sp, #4]
 8006786:	f001 f88d 	bl	80078a4 <_vfiprintf_r>
 800678a:	b002      	add	sp, #8
 800678c:	f85d eb04 	ldr.w	lr, [sp], #4
 8006790:	b003      	add	sp, #12
 8006792:	4770      	bx	lr
 8006794:	20000018 	.word	0x20000018

08006798 <rshift>:
 8006798:	6903      	ldr	r3, [r0, #16]
 800679a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800679e:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 80067a2:	f100 0414 	add.w	r4, r0, #20
 80067a6:	ea4f 1261 	mov.w	r2, r1, asr #5
 80067aa:	dd46      	ble.n	800683a <rshift+0xa2>
 80067ac:	f011 011f 	ands.w	r1, r1, #31
 80067b0:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80067b4:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80067b8:	d10c      	bne.n	80067d4 <rshift+0x3c>
 80067ba:	4629      	mov	r1, r5
 80067bc:	f100 0710 	add.w	r7, r0, #16
 80067c0:	42b1      	cmp	r1, r6
 80067c2:	d335      	bcc.n	8006830 <rshift+0x98>
 80067c4:	1a9b      	subs	r3, r3, r2
 80067c6:	009b      	lsls	r3, r3, #2
 80067c8:	1eea      	subs	r2, r5, #3
 80067ca:	4296      	cmp	r6, r2
 80067cc:	bf38      	it	cc
 80067ce:	2300      	movcc	r3, #0
 80067d0:	4423      	add	r3, r4
 80067d2:	e015      	b.n	8006800 <rshift+0x68>
 80067d4:	46a1      	mov	r9, r4
 80067d6:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80067da:	f1c1 0820 	rsb	r8, r1, #32
 80067de:	40cf      	lsrs	r7, r1
 80067e0:	f105 0e04 	add.w	lr, r5, #4
 80067e4:	4576      	cmp	r6, lr
 80067e6:	46f4      	mov	ip, lr
 80067e8:	d816      	bhi.n	8006818 <rshift+0x80>
 80067ea:	1a9a      	subs	r2, r3, r2
 80067ec:	0092      	lsls	r2, r2, #2
 80067ee:	3a04      	subs	r2, #4
 80067f0:	3501      	adds	r5, #1
 80067f2:	42ae      	cmp	r6, r5
 80067f4:	bf38      	it	cc
 80067f6:	2200      	movcc	r2, #0
 80067f8:	18a3      	adds	r3, r4, r2
 80067fa:	50a7      	str	r7, [r4, r2]
 80067fc:	b107      	cbz	r7, 8006800 <rshift+0x68>
 80067fe:	3304      	adds	r3, #4
 8006800:	42a3      	cmp	r3, r4
 8006802:	eba3 0204 	sub.w	r2, r3, r4
 8006806:	bf08      	it	eq
 8006808:	2300      	moveq	r3, #0
 800680a:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800680e:	6102      	str	r2, [r0, #16]
 8006810:	bf08      	it	eq
 8006812:	6143      	streq	r3, [r0, #20]
 8006814:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006818:	f8dc c000 	ldr.w	ip, [ip]
 800681c:	fa0c fc08 	lsl.w	ip, ip, r8
 8006820:	ea4c 0707 	orr.w	r7, ip, r7
 8006824:	f849 7b04 	str.w	r7, [r9], #4
 8006828:	f85e 7b04 	ldr.w	r7, [lr], #4
 800682c:	40cf      	lsrs	r7, r1
 800682e:	e7d9      	b.n	80067e4 <rshift+0x4c>
 8006830:	f851 cb04 	ldr.w	ip, [r1], #4
 8006834:	f847 cf04 	str.w	ip, [r7, #4]!
 8006838:	e7c2      	b.n	80067c0 <rshift+0x28>
 800683a:	4623      	mov	r3, r4
 800683c:	e7e0      	b.n	8006800 <rshift+0x68>

0800683e <__hexdig_fun>:
 800683e:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8006842:	2b09      	cmp	r3, #9
 8006844:	d802      	bhi.n	800684c <__hexdig_fun+0xe>
 8006846:	3820      	subs	r0, #32
 8006848:	b2c0      	uxtb	r0, r0
 800684a:	4770      	bx	lr
 800684c:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8006850:	2b05      	cmp	r3, #5
 8006852:	d801      	bhi.n	8006858 <__hexdig_fun+0x1a>
 8006854:	3847      	subs	r0, #71	; 0x47
 8006856:	e7f7      	b.n	8006848 <__hexdig_fun+0xa>
 8006858:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800685c:	2b05      	cmp	r3, #5
 800685e:	d801      	bhi.n	8006864 <__hexdig_fun+0x26>
 8006860:	3827      	subs	r0, #39	; 0x27
 8006862:	e7f1      	b.n	8006848 <__hexdig_fun+0xa>
 8006864:	2000      	movs	r0, #0
 8006866:	4770      	bx	lr

08006868 <__gethex>:
 8006868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800686c:	b08b      	sub	sp, #44	; 0x2c
 800686e:	9305      	str	r3, [sp, #20]
 8006870:	4bb2      	ldr	r3, [pc, #712]	; (8006b3c <__gethex+0x2d4>)
 8006872:	9002      	str	r0, [sp, #8]
 8006874:	681b      	ldr	r3, [r3, #0]
 8006876:	468b      	mov	fp, r1
 8006878:	4618      	mov	r0, r3
 800687a:	4690      	mov	r8, r2
 800687c:	9303      	str	r3, [sp, #12]
 800687e:	f7f9 fc71 	bl	8000164 <strlen>
 8006882:	4682      	mov	sl, r0
 8006884:	9b03      	ldr	r3, [sp, #12]
 8006886:	f8db 2000 	ldr.w	r2, [fp]
 800688a:	4403      	add	r3, r0
 800688c:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8006890:	9306      	str	r3, [sp, #24]
 8006892:	1c93      	adds	r3, r2, #2
 8006894:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8006898:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800689c:	32fe      	adds	r2, #254	; 0xfe
 800689e:	18d1      	adds	r1, r2, r3
 80068a0:	461f      	mov	r7, r3
 80068a2:	f813 0b01 	ldrb.w	r0, [r3], #1
 80068a6:	9101      	str	r1, [sp, #4]
 80068a8:	2830      	cmp	r0, #48	; 0x30
 80068aa:	d0f8      	beq.n	800689e <__gethex+0x36>
 80068ac:	f7ff ffc7 	bl	800683e <__hexdig_fun>
 80068b0:	4604      	mov	r4, r0
 80068b2:	2800      	cmp	r0, #0
 80068b4:	d13a      	bne.n	800692c <__gethex+0xc4>
 80068b6:	4652      	mov	r2, sl
 80068b8:	4638      	mov	r0, r7
 80068ba:	9903      	ldr	r1, [sp, #12]
 80068bc:	f001 fac2 	bl	8007e44 <strncmp>
 80068c0:	4605      	mov	r5, r0
 80068c2:	2800      	cmp	r0, #0
 80068c4:	d166      	bne.n	8006994 <__gethex+0x12c>
 80068c6:	f817 000a 	ldrb.w	r0, [r7, sl]
 80068ca:	eb07 060a 	add.w	r6, r7, sl
 80068ce:	f7ff ffb6 	bl	800683e <__hexdig_fun>
 80068d2:	2800      	cmp	r0, #0
 80068d4:	d060      	beq.n	8006998 <__gethex+0x130>
 80068d6:	4633      	mov	r3, r6
 80068d8:	7818      	ldrb	r0, [r3, #0]
 80068da:	461f      	mov	r7, r3
 80068dc:	2830      	cmp	r0, #48	; 0x30
 80068de:	f103 0301 	add.w	r3, r3, #1
 80068e2:	d0f9      	beq.n	80068d8 <__gethex+0x70>
 80068e4:	f7ff ffab 	bl	800683e <__hexdig_fun>
 80068e8:	2301      	movs	r3, #1
 80068ea:	fab0 f480 	clz	r4, r0
 80068ee:	4635      	mov	r5, r6
 80068f0:	0964      	lsrs	r4, r4, #5
 80068f2:	9301      	str	r3, [sp, #4]
 80068f4:	463a      	mov	r2, r7
 80068f6:	4616      	mov	r6, r2
 80068f8:	7830      	ldrb	r0, [r6, #0]
 80068fa:	3201      	adds	r2, #1
 80068fc:	f7ff ff9f 	bl	800683e <__hexdig_fun>
 8006900:	2800      	cmp	r0, #0
 8006902:	d1f8      	bne.n	80068f6 <__gethex+0x8e>
 8006904:	4652      	mov	r2, sl
 8006906:	4630      	mov	r0, r6
 8006908:	9903      	ldr	r1, [sp, #12]
 800690a:	f001 fa9b 	bl	8007e44 <strncmp>
 800690e:	b980      	cbnz	r0, 8006932 <__gethex+0xca>
 8006910:	b94d      	cbnz	r5, 8006926 <__gethex+0xbe>
 8006912:	eb06 050a 	add.w	r5, r6, sl
 8006916:	462a      	mov	r2, r5
 8006918:	4616      	mov	r6, r2
 800691a:	7830      	ldrb	r0, [r6, #0]
 800691c:	3201      	adds	r2, #1
 800691e:	f7ff ff8e 	bl	800683e <__hexdig_fun>
 8006922:	2800      	cmp	r0, #0
 8006924:	d1f8      	bne.n	8006918 <__gethex+0xb0>
 8006926:	1bad      	subs	r5, r5, r6
 8006928:	00ad      	lsls	r5, r5, #2
 800692a:	e004      	b.n	8006936 <__gethex+0xce>
 800692c:	2400      	movs	r4, #0
 800692e:	4625      	mov	r5, r4
 8006930:	e7e0      	b.n	80068f4 <__gethex+0x8c>
 8006932:	2d00      	cmp	r5, #0
 8006934:	d1f7      	bne.n	8006926 <__gethex+0xbe>
 8006936:	7833      	ldrb	r3, [r6, #0]
 8006938:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800693c:	2b50      	cmp	r3, #80	; 0x50
 800693e:	d139      	bne.n	80069b4 <__gethex+0x14c>
 8006940:	7873      	ldrb	r3, [r6, #1]
 8006942:	2b2b      	cmp	r3, #43	; 0x2b
 8006944:	d02a      	beq.n	800699c <__gethex+0x134>
 8006946:	2b2d      	cmp	r3, #45	; 0x2d
 8006948:	d02c      	beq.n	80069a4 <__gethex+0x13c>
 800694a:	f04f 0900 	mov.w	r9, #0
 800694e:	1c71      	adds	r1, r6, #1
 8006950:	7808      	ldrb	r0, [r1, #0]
 8006952:	f7ff ff74 	bl	800683e <__hexdig_fun>
 8006956:	1e43      	subs	r3, r0, #1
 8006958:	b2db      	uxtb	r3, r3
 800695a:	2b18      	cmp	r3, #24
 800695c:	d82a      	bhi.n	80069b4 <__gethex+0x14c>
 800695e:	f1a0 0210 	sub.w	r2, r0, #16
 8006962:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8006966:	f7ff ff6a 	bl	800683e <__hexdig_fun>
 800696a:	1e43      	subs	r3, r0, #1
 800696c:	b2db      	uxtb	r3, r3
 800696e:	2b18      	cmp	r3, #24
 8006970:	d91b      	bls.n	80069aa <__gethex+0x142>
 8006972:	f1b9 0f00 	cmp.w	r9, #0
 8006976:	d000      	beq.n	800697a <__gethex+0x112>
 8006978:	4252      	negs	r2, r2
 800697a:	4415      	add	r5, r2
 800697c:	f8cb 1000 	str.w	r1, [fp]
 8006980:	b1d4      	cbz	r4, 80069b8 <__gethex+0x150>
 8006982:	9b01      	ldr	r3, [sp, #4]
 8006984:	2b00      	cmp	r3, #0
 8006986:	bf14      	ite	ne
 8006988:	2700      	movne	r7, #0
 800698a:	2706      	moveq	r7, #6
 800698c:	4638      	mov	r0, r7
 800698e:	b00b      	add	sp, #44	; 0x2c
 8006990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006994:	463e      	mov	r6, r7
 8006996:	4625      	mov	r5, r4
 8006998:	2401      	movs	r4, #1
 800699a:	e7cc      	b.n	8006936 <__gethex+0xce>
 800699c:	f04f 0900 	mov.w	r9, #0
 80069a0:	1cb1      	adds	r1, r6, #2
 80069a2:	e7d5      	b.n	8006950 <__gethex+0xe8>
 80069a4:	f04f 0901 	mov.w	r9, #1
 80069a8:	e7fa      	b.n	80069a0 <__gethex+0x138>
 80069aa:	230a      	movs	r3, #10
 80069ac:	fb03 0202 	mla	r2, r3, r2, r0
 80069b0:	3a10      	subs	r2, #16
 80069b2:	e7d6      	b.n	8006962 <__gethex+0xfa>
 80069b4:	4631      	mov	r1, r6
 80069b6:	e7e1      	b.n	800697c <__gethex+0x114>
 80069b8:	4621      	mov	r1, r4
 80069ba:	1bf3      	subs	r3, r6, r7
 80069bc:	3b01      	subs	r3, #1
 80069be:	2b07      	cmp	r3, #7
 80069c0:	dc0a      	bgt.n	80069d8 <__gethex+0x170>
 80069c2:	9802      	ldr	r0, [sp, #8]
 80069c4:	f000 fa7a 	bl	8006ebc <_Balloc>
 80069c8:	4604      	mov	r4, r0
 80069ca:	b940      	cbnz	r0, 80069de <__gethex+0x176>
 80069cc:	4602      	mov	r2, r0
 80069ce:	21de      	movs	r1, #222	; 0xde
 80069d0:	4b5b      	ldr	r3, [pc, #364]	; (8006b40 <__gethex+0x2d8>)
 80069d2:	485c      	ldr	r0, [pc, #368]	; (8006b44 <__gethex+0x2dc>)
 80069d4:	f7ff feb0 	bl	8006738 <__assert_func>
 80069d8:	3101      	adds	r1, #1
 80069da:	105b      	asrs	r3, r3, #1
 80069dc:	e7ef      	b.n	80069be <__gethex+0x156>
 80069de:	f04f 0b00 	mov.w	fp, #0
 80069e2:	f100 0914 	add.w	r9, r0, #20
 80069e6:	f1ca 0301 	rsb	r3, sl, #1
 80069ea:	f8cd 9010 	str.w	r9, [sp, #16]
 80069ee:	f8cd b004 	str.w	fp, [sp, #4]
 80069f2:	9308      	str	r3, [sp, #32]
 80069f4:	42b7      	cmp	r7, r6
 80069f6:	d33f      	bcc.n	8006a78 <__gethex+0x210>
 80069f8:	9f04      	ldr	r7, [sp, #16]
 80069fa:	9b01      	ldr	r3, [sp, #4]
 80069fc:	f847 3b04 	str.w	r3, [r7], #4
 8006a00:	eba7 0709 	sub.w	r7, r7, r9
 8006a04:	10bf      	asrs	r7, r7, #2
 8006a06:	6127      	str	r7, [r4, #16]
 8006a08:	4618      	mov	r0, r3
 8006a0a:	f000 fb49 	bl	80070a0 <__hi0bits>
 8006a0e:	017f      	lsls	r7, r7, #5
 8006a10:	f8d8 6000 	ldr.w	r6, [r8]
 8006a14:	1a3f      	subs	r7, r7, r0
 8006a16:	42b7      	cmp	r7, r6
 8006a18:	dd62      	ble.n	8006ae0 <__gethex+0x278>
 8006a1a:	1bbf      	subs	r7, r7, r6
 8006a1c:	4639      	mov	r1, r7
 8006a1e:	4620      	mov	r0, r4
 8006a20:	f000 fee3 	bl	80077ea <__any_on>
 8006a24:	4682      	mov	sl, r0
 8006a26:	b1a8      	cbz	r0, 8006a54 <__gethex+0x1ec>
 8006a28:	f04f 0a01 	mov.w	sl, #1
 8006a2c:	1e7b      	subs	r3, r7, #1
 8006a2e:	1159      	asrs	r1, r3, #5
 8006a30:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8006a34:	f003 021f 	and.w	r2, r3, #31
 8006a38:	fa0a f202 	lsl.w	r2, sl, r2
 8006a3c:	420a      	tst	r2, r1
 8006a3e:	d009      	beq.n	8006a54 <__gethex+0x1ec>
 8006a40:	4553      	cmp	r3, sl
 8006a42:	dd05      	ble.n	8006a50 <__gethex+0x1e8>
 8006a44:	4620      	mov	r0, r4
 8006a46:	1eb9      	subs	r1, r7, #2
 8006a48:	f000 fecf 	bl	80077ea <__any_on>
 8006a4c:	2800      	cmp	r0, #0
 8006a4e:	d144      	bne.n	8006ada <__gethex+0x272>
 8006a50:	f04f 0a02 	mov.w	sl, #2
 8006a54:	4639      	mov	r1, r7
 8006a56:	4620      	mov	r0, r4
 8006a58:	f7ff fe9e 	bl	8006798 <rshift>
 8006a5c:	443d      	add	r5, r7
 8006a5e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8006a62:	42ab      	cmp	r3, r5
 8006a64:	da4a      	bge.n	8006afc <__gethex+0x294>
 8006a66:	4621      	mov	r1, r4
 8006a68:	9802      	ldr	r0, [sp, #8]
 8006a6a:	f000 fa67 	bl	8006f3c <_Bfree>
 8006a6e:	2300      	movs	r3, #0
 8006a70:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006a72:	27a3      	movs	r7, #163	; 0xa3
 8006a74:	6013      	str	r3, [r2, #0]
 8006a76:	e789      	b.n	800698c <__gethex+0x124>
 8006a78:	1e73      	subs	r3, r6, #1
 8006a7a:	9a06      	ldr	r2, [sp, #24]
 8006a7c:	9307      	str	r3, [sp, #28]
 8006a7e:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8006a82:	4293      	cmp	r3, r2
 8006a84:	d019      	beq.n	8006aba <__gethex+0x252>
 8006a86:	f1bb 0f20 	cmp.w	fp, #32
 8006a8a:	d107      	bne.n	8006a9c <__gethex+0x234>
 8006a8c:	9b04      	ldr	r3, [sp, #16]
 8006a8e:	9a01      	ldr	r2, [sp, #4]
 8006a90:	f843 2b04 	str.w	r2, [r3], #4
 8006a94:	9304      	str	r3, [sp, #16]
 8006a96:	2300      	movs	r3, #0
 8006a98:	469b      	mov	fp, r3
 8006a9a:	9301      	str	r3, [sp, #4]
 8006a9c:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 8006aa0:	f7ff fecd 	bl	800683e <__hexdig_fun>
 8006aa4:	9b01      	ldr	r3, [sp, #4]
 8006aa6:	f000 000f 	and.w	r0, r0, #15
 8006aaa:	fa00 f00b 	lsl.w	r0, r0, fp
 8006aae:	4303      	orrs	r3, r0
 8006ab0:	9301      	str	r3, [sp, #4]
 8006ab2:	f10b 0b04 	add.w	fp, fp, #4
 8006ab6:	9b07      	ldr	r3, [sp, #28]
 8006ab8:	e00d      	b.n	8006ad6 <__gethex+0x26e>
 8006aba:	9a08      	ldr	r2, [sp, #32]
 8006abc:	1e73      	subs	r3, r6, #1
 8006abe:	4413      	add	r3, r2
 8006ac0:	42bb      	cmp	r3, r7
 8006ac2:	d3e0      	bcc.n	8006a86 <__gethex+0x21e>
 8006ac4:	4618      	mov	r0, r3
 8006ac6:	4652      	mov	r2, sl
 8006ac8:	9903      	ldr	r1, [sp, #12]
 8006aca:	9309      	str	r3, [sp, #36]	; 0x24
 8006acc:	f001 f9ba 	bl	8007e44 <strncmp>
 8006ad0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006ad2:	2800      	cmp	r0, #0
 8006ad4:	d1d7      	bne.n	8006a86 <__gethex+0x21e>
 8006ad6:	461e      	mov	r6, r3
 8006ad8:	e78c      	b.n	80069f4 <__gethex+0x18c>
 8006ada:	f04f 0a03 	mov.w	sl, #3
 8006ade:	e7b9      	b.n	8006a54 <__gethex+0x1ec>
 8006ae0:	da09      	bge.n	8006af6 <__gethex+0x28e>
 8006ae2:	1bf7      	subs	r7, r6, r7
 8006ae4:	4621      	mov	r1, r4
 8006ae6:	463a      	mov	r2, r7
 8006ae8:	9802      	ldr	r0, [sp, #8]
 8006aea:	f000 fc3f 	bl	800736c <__lshift>
 8006aee:	4604      	mov	r4, r0
 8006af0:	1bed      	subs	r5, r5, r7
 8006af2:	f100 0914 	add.w	r9, r0, #20
 8006af6:	f04f 0a00 	mov.w	sl, #0
 8006afa:	e7b0      	b.n	8006a5e <__gethex+0x1f6>
 8006afc:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8006b00:	42a8      	cmp	r0, r5
 8006b02:	dd72      	ble.n	8006bea <__gethex+0x382>
 8006b04:	1b45      	subs	r5, r0, r5
 8006b06:	42ae      	cmp	r6, r5
 8006b08:	dc35      	bgt.n	8006b76 <__gethex+0x30e>
 8006b0a:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006b0e:	2b02      	cmp	r3, #2
 8006b10:	d029      	beq.n	8006b66 <__gethex+0x2fe>
 8006b12:	2b03      	cmp	r3, #3
 8006b14:	d02b      	beq.n	8006b6e <__gethex+0x306>
 8006b16:	2b01      	cmp	r3, #1
 8006b18:	d11c      	bne.n	8006b54 <__gethex+0x2ec>
 8006b1a:	42ae      	cmp	r6, r5
 8006b1c:	d11a      	bne.n	8006b54 <__gethex+0x2ec>
 8006b1e:	2e01      	cmp	r6, #1
 8006b20:	d112      	bne.n	8006b48 <__gethex+0x2e0>
 8006b22:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8006b26:	9a05      	ldr	r2, [sp, #20]
 8006b28:	2762      	movs	r7, #98	; 0x62
 8006b2a:	6013      	str	r3, [r2, #0]
 8006b2c:	2301      	movs	r3, #1
 8006b2e:	6123      	str	r3, [r4, #16]
 8006b30:	f8c9 3000 	str.w	r3, [r9]
 8006b34:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006b36:	601c      	str	r4, [r3, #0]
 8006b38:	e728      	b.n	800698c <__gethex+0x124>
 8006b3a:	bf00      	nop
 8006b3c:	08008a68 	.word	0x08008a68
 8006b40:	080089f1 	.word	0x080089f1
 8006b44:	08008a02 	.word	0x08008a02
 8006b48:	4620      	mov	r0, r4
 8006b4a:	1e71      	subs	r1, r6, #1
 8006b4c:	f000 fe4d 	bl	80077ea <__any_on>
 8006b50:	2800      	cmp	r0, #0
 8006b52:	d1e6      	bne.n	8006b22 <__gethex+0x2ba>
 8006b54:	4621      	mov	r1, r4
 8006b56:	9802      	ldr	r0, [sp, #8]
 8006b58:	f000 f9f0 	bl	8006f3c <_Bfree>
 8006b5c:	2300      	movs	r3, #0
 8006b5e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006b60:	2750      	movs	r7, #80	; 0x50
 8006b62:	6013      	str	r3, [r2, #0]
 8006b64:	e712      	b.n	800698c <__gethex+0x124>
 8006b66:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006b68:	2b00      	cmp	r3, #0
 8006b6a:	d1f3      	bne.n	8006b54 <__gethex+0x2ec>
 8006b6c:	e7d9      	b.n	8006b22 <__gethex+0x2ba>
 8006b6e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006b70:	2b00      	cmp	r3, #0
 8006b72:	d1d6      	bne.n	8006b22 <__gethex+0x2ba>
 8006b74:	e7ee      	b.n	8006b54 <__gethex+0x2ec>
 8006b76:	1e6f      	subs	r7, r5, #1
 8006b78:	f1ba 0f00 	cmp.w	sl, #0
 8006b7c:	d132      	bne.n	8006be4 <__gethex+0x37c>
 8006b7e:	b127      	cbz	r7, 8006b8a <__gethex+0x322>
 8006b80:	4639      	mov	r1, r7
 8006b82:	4620      	mov	r0, r4
 8006b84:	f000 fe31 	bl	80077ea <__any_on>
 8006b88:	4682      	mov	sl, r0
 8006b8a:	2101      	movs	r1, #1
 8006b8c:	117b      	asrs	r3, r7, #5
 8006b8e:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8006b92:	f007 071f 	and.w	r7, r7, #31
 8006b96:	fa01 f707 	lsl.w	r7, r1, r7
 8006b9a:	421f      	tst	r7, r3
 8006b9c:	f04f 0702 	mov.w	r7, #2
 8006ba0:	4629      	mov	r1, r5
 8006ba2:	4620      	mov	r0, r4
 8006ba4:	bf18      	it	ne
 8006ba6:	f04a 0a02 	orrne.w	sl, sl, #2
 8006baa:	1b76      	subs	r6, r6, r5
 8006bac:	f7ff fdf4 	bl	8006798 <rshift>
 8006bb0:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8006bb4:	f1ba 0f00 	cmp.w	sl, #0
 8006bb8:	d048      	beq.n	8006c4c <__gethex+0x3e4>
 8006bba:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006bbe:	2b02      	cmp	r3, #2
 8006bc0:	d015      	beq.n	8006bee <__gethex+0x386>
 8006bc2:	2b03      	cmp	r3, #3
 8006bc4:	d017      	beq.n	8006bf6 <__gethex+0x38e>
 8006bc6:	2b01      	cmp	r3, #1
 8006bc8:	d109      	bne.n	8006bde <__gethex+0x376>
 8006bca:	f01a 0f02 	tst.w	sl, #2
 8006bce:	d006      	beq.n	8006bde <__gethex+0x376>
 8006bd0:	f8d9 0000 	ldr.w	r0, [r9]
 8006bd4:	ea4a 0a00 	orr.w	sl, sl, r0
 8006bd8:	f01a 0f01 	tst.w	sl, #1
 8006bdc:	d10e      	bne.n	8006bfc <__gethex+0x394>
 8006bde:	f047 0710 	orr.w	r7, r7, #16
 8006be2:	e033      	b.n	8006c4c <__gethex+0x3e4>
 8006be4:	f04f 0a01 	mov.w	sl, #1
 8006be8:	e7cf      	b.n	8006b8a <__gethex+0x322>
 8006bea:	2701      	movs	r7, #1
 8006bec:	e7e2      	b.n	8006bb4 <__gethex+0x34c>
 8006bee:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006bf0:	f1c3 0301 	rsb	r3, r3, #1
 8006bf4:	9315      	str	r3, [sp, #84]	; 0x54
 8006bf6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006bf8:	2b00      	cmp	r3, #0
 8006bfa:	d0f0      	beq.n	8006bde <__gethex+0x376>
 8006bfc:	f04f 0c00 	mov.w	ip, #0
 8006c00:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8006c04:	f104 0314 	add.w	r3, r4, #20
 8006c08:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8006c0c:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8006c10:	4618      	mov	r0, r3
 8006c12:	f853 2b04 	ldr.w	r2, [r3], #4
 8006c16:	f1b2 3fff 	cmp.w	r2, #4294967295
 8006c1a:	d01c      	beq.n	8006c56 <__gethex+0x3ee>
 8006c1c:	3201      	adds	r2, #1
 8006c1e:	6002      	str	r2, [r0, #0]
 8006c20:	2f02      	cmp	r7, #2
 8006c22:	f104 0314 	add.w	r3, r4, #20
 8006c26:	d13d      	bne.n	8006ca4 <__gethex+0x43c>
 8006c28:	f8d8 2000 	ldr.w	r2, [r8]
 8006c2c:	3a01      	subs	r2, #1
 8006c2e:	42b2      	cmp	r2, r6
 8006c30:	d10a      	bne.n	8006c48 <__gethex+0x3e0>
 8006c32:	2201      	movs	r2, #1
 8006c34:	1171      	asrs	r1, r6, #5
 8006c36:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8006c3a:	f006 061f 	and.w	r6, r6, #31
 8006c3e:	fa02 f606 	lsl.w	r6, r2, r6
 8006c42:	421e      	tst	r6, r3
 8006c44:	bf18      	it	ne
 8006c46:	4617      	movne	r7, r2
 8006c48:	f047 0720 	orr.w	r7, r7, #32
 8006c4c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006c4e:	601c      	str	r4, [r3, #0]
 8006c50:	9b05      	ldr	r3, [sp, #20]
 8006c52:	601d      	str	r5, [r3, #0]
 8006c54:	e69a      	b.n	800698c <__gethex+0x124>
 8006c56:	4299      	cmp	r1, r3
 8006c58:	f843 cc04 	str.w	ip, [r3, #-4]
 8006c5c:	d8d8      	bhi.n	8006c10 <__gethex+0x3a8>
 8006c5e:	68a3      	ldr	r3, [r4, #8]
 8006c60:	459b      	cmp	fp, r3
 8006c62:	db17      	blt.n	8006c94 <__gethex+0x42c>
 8006c64:	6861      	ldr	r1, [r4, #4]
 8006c66:	9802      	ldr	r0, [sp, #8]
 8006c68:	3101      	adds	r1, #1
 8006c6a:	f000 f927 	bl	8006ebc <_Balloc>
 8006c6e:	4681      	mov	r9, r0
 8006c70:	b918      	cbnz	r0, 8006c7a <__gethex+0x412>
 8006c72:	4602      	mov	r2, r0
 8006c74:	2184      	movs	r1, #132	; 0x84
 8006c76:	4b19      	ldr	r3, [pc, #100]	; (8006cdc <__gethex+0x474>)
 8006c78:	e6ab      	b.n	80069d2 <__gethex+0x16a>
 8006c7a:	6922      	ldr	r2, [r4, #16]
 8006c7c:	f104 010c 	add.w	r1, r4, #12
 8006c80:	3202      	adds	r2, #2
 8006c82:	0092      	lsls	r2, r2, #2
 8006c84:	300c      	adds	r0, #12
 8006c86:	f000 f8ff 	bl	8006e88 <memcpy>
 8006c8a:	4621      	mov	r1, r4
 8006c8c:	9802      	ldr	r0, [sp, #8]
 8006c8e:	f000 f955 	bl	8006f3c <_Bfree>
 8006c92:	464c      	mov	r4, r9
 8006c94:	6923      	ldr	r3, [r4, #16]
 8006c96:	1c5a      	adds	r2, r3, #1
 8006c98:	6122      	str	r2, [r4, #16]
 8006c9a:	2201      	movs	r2, #1
 8006c9c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006ca0:	615a      	str	r2, [r3, #20]
 8006ca2:	e7bd      	b.n	8006c20 <__gethex+0x3b8>
 8006ca4:	6922      	ldr	r2, [r4, #16]
 8006ca6:	455a      	cmp	r2, fp
 8006ca8:	dd0b      	ble.n	8006cc2 <__gethex+0x45a>
 8006caa:	2101      	movs	r1, #1
 8006cac:	4620      	mov	r0, r4
 8006cae:	f7ff fd73 	bl	8006798 <rshift>
 8006cb2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8006cb6:	3501      	adds	r5, #1
 8006cb8:	42ab      	cmp	r3, r5
 8006cba:	f6ff aed4 	blt.w	8006a66 <__gethex+0x1fe>
 8006cbe:	2701      	movs	r7, #1
 8006cc0:	e7c2      	b.n	8006c48 <__gethex+0x3e0>
 8006cc2:	f016 061f 	ands.w	r6, r6, #31
 8006cc6:	d0fa      	beq.n	8006cbe <__gethex+0x456>
 8006cc8:	4453      	add	r3, sl
 8006cca:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8006cce:	f000 f9e7 	bl	80070a0 <__hi0bits>
 8006cd2:	f1c6 0620 	rsb	r6, r6, #32
 8006cd6:	42b0      	cmp	r0, r6
 8006cd8:	dbe7      	blt.n	8006caa <__gethex+0x442>
 8006cda:	e7f0      	b.n	8006cbe <__gethex+0x456>
 8006cdc:	080089f1 	.word	0x080089f1

08006ce0 <L_shift>:
 8006ce0:	f1c2 0208 	rsb	r2, r2, #8
 8006ce4:	0092      	lsls	r2, r2, #2
 8006ce6:	b570      	push	{r4, r5, r6, lr}
 8006ce8:	f1c2 0620 	rsb	r6, r2, #32
 8006cec:	6843      	ldr	r3, [r0, #4]
 8006cee:	6804      	ldr	r4, [r0, #0]
 8006cf0:	fa03 f506 	lsl.w	r5, r3, r6
 8006cf4:	432c      	orrs	r4, r5
 8006cf6:	40d3      	lsrs	r3, r2
 8006cf8:	6004      	str	r4, [r0, #0]
 8006cfa:	f840 3f04 	str.w	r3, [r0, #4]!
 8006cfe:	4288      	cmp	r0, r1
 8006d00:	d3f4      	bcc.n	8006cec <L_shift+0xc>
 8006d02:	bd70      	pop	{r4, r5, r6, pc}

08006d04 <__match>:
 8006d04:	b530      	push	{r4, r5, lr}
 8006d06:	6803      	ldr	r3, [r0, #0]
 8006d08:	3301      	adds	r3, #1
 8006d0a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006d0e:	b914      	cbnz	r4, 8006d16 <__match+0x12>
 8006d10:	6003      	str	r3, [r0, #0]
 8006d12:	2001      	movs	r0, #1
 8006d14:	bd30      	pop	{r4, r5, pc}
 8006d16:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006d1a:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8006d1e:	2d19      	cmp	r5, #25
 8006d20:	bf98      	it	ls
 8006d22:	3220      	addls	r2, #32
 8006d24:	42a2      	cmp	r2, r4
 8006d26:	d0f0      	beq.n	8006d0a <__match+0x6>
 8006d28:	2000      	movs	r0, #0
 8006d2a:	e7f3      	b.n	8006d14 <__match+0x10>

08006d2c <__hexnan>:
 8006d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006d30:	2500      	movs	r5, #0
 8006d32:	680b      	ldr	r3, [r1, #0]
 8006d34:	4682      	mov	sl, r0
 8006d36:	115e      	asrs	r6, r3, #5
 8006d38:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8006d3c:	f013 031f 	ands.w	r3, r3, #31
 8006d40:	bf18      	it	ne
 8006d42:	3604      	addne	r6, #4
 8006d44:	1f37      	subs	r7, r6, #4
 8006d46:	46b9      	mov	r9, r7
 8006d48:	463c      	mov	r4, r7
 8006d4a:	46ab      	mov	fp, r5
 8006d4c:	b087      	sub	sp, #28
 8006d4e:	4690      	mov	r8, r2
 8006d50:	6802      	ldr	r2, [r0, #0]
 8006d52:	9301      	str	r3, [sp, #4]
 8006d54:	f846 5c04 	str.w	r5, [r6, #-4]
 8006d58:	9502      	str	r5, [sp, #8]
 8006d5a:	7851      	ldrb	r1, [r2, #1]
 8006d5c:	1c53      	adds	r3, r2, #1
 8006d5e:	9303      	str	r3, [sp, #12]
 8006d60:	b341      	cbz	r1, 8006db4 <__hexnan+0x88>
 8006d62:	4608      	mov	r0, r1
 8006d64:	9205      	str	r2, [sp, #20]
 8006d66:	9104      	str	r1, [sp, #16]
 8006d68:	f7ff fd69 	bl	800683e <__hexdig_fun>
 8006d6c:	2800      	cmp	r0, #0
 8006d6e:	d14f      	bne.n	8006e10 <__hexnan+0xe4>
 8006d70:	9904      	ldr	r1, [sp, #16]
 8006d72:	9a05      	ldr	r2, [sp, #20]
 8006d74:	2920      	cmp	r1, #32
 8006d76:	d818      	bhi.n	8006daa <__hexnan+0x7e>
 8006d78:	9b02      	ldr	r3, [sp, #8]
 8006d7a:	459b      	cmp	fp, r3
 8006d7c:	dd13      	ble.n	8006da6 <__hexnan+0x7a>
 8006d7e:	454c      	cmp	r4, r9
 8006d80:	d206      	bcs.n	8006d90 <__hexnan+0x64>
 8006d82:	2d07      	cmp	r5, #7
 8006d84:	dc04      	bgt.n	8006d90 <__hexnan+0x64>
 8006d86:	462a      	mov	r2, r5
 8006d88:	4649      	mov	r1, r9
 8006d8a:	4620      	mov	r0, r4
 8006d8c:	f7ff ffa8 	bl	8006ce0 <L_shift>
 8006d90:	4544      	cmp	r4, r8
 8006d92:	d950      	bls.n	8006e36 <__hexnan+0x10a>
 8006d94:	2300      	movs	r3, #0
 8006d96:	f1a4 0904 	sub.w	r9, r4, #4
 8006d9a:	f844 3c04 	str.w	r3, [r4, #-4]
 8006d9e:	461d      	mov	r5, r3
 8006da0:	464c      	mov	r4, r9
 8006da2:	f8cd b008 	str.w	fp, [sp, #8]
 8006da6:	9a03      	ldr	r2, [sp, #12]
 8006da8:	e7d7      	b.n	8006d5a <__hexnan+0x2e>
 8006daa:	2929      	cmp	r1, #41	; 0x29
 8006dac:	d156      	bne.n	8006e5c <__hexnan+0x130>
 8006dae:	3202      	adds	r2, #2
 8006db0:	f8ca 2000 	str.w	r2, [sl]
 8006db4:	f1bb 0f00 	cmp.w	fp, #0
 8006db8:	d050      	beq.n	8006e5c <__hexnan+0x130>
 8006dba:	454c      	cmp	r4, r9
 8006dbc:	d206      	bcs.n	8006dcc <__hexnan+0xa0>
 8006dbe:	2d07      	cmp	r5, #7
 8006dc0:	dc04      	bgt.n	8006dcc <__hexnan+0xa0>
 8006dc2:	462a      	mov	r2, r5
 8006dc4:	4649      	mov	r1, r9
 8006dc6:	4620      	mov	r0, r4
 8006dc8:	f7ff ff8a 	bl	8006ce0 <L_shift>
 8006dcc:	4544      	cmp	r4, r8
 8006dce:	d934      	bls.n	8006e3a <__hexnan+0x10e>
 8006dd0:	4623      	mov	r3, r4
 8006dd2:	f1a8 0204 	sub.w	r2, r8, #4
 8006dd6:	f853 1b04 	ldr.w	r1, [r3], #4
 8006dda:	429f      	cmp	r7, r3
 8006ddc:	f842 1f04 	str.w	r1, [r2, #4]!
 8006de0:	d2f9      	bcs.n	8006dd6 <__hexnan+0xaa>
 8006de2:	1b3b      	subs	r3, r7, r4
 8006de4:	f023 0303 	bic.w	r3, r3, #3
 8006de8:	3304      	adds	r3, #4
 8006dea:	3401      	adds	r4, #1
 8006dec:	3e03      	subs	r6, #3
 8006dee:	42b4      	cmp	r4, r6
 8006df0:	bf88      	it	hi
 8006df2:	2304      	movhi	r3, #4
 8006df4:	2200      	movs	r2, #0
 8006df6:	4443      	add	r3, r8
 8006df8:	f843 2b04 	str.w	r2, [r3], #4
 8006dfc:	429f      	cmp	r7, r3
 8006dfe:	d2fb      	bcs.n	8006df8 <__hexnan+0xcc>
 8006e00:	683b      	ldr	r3, [r7, #0]
 8006e02:	b91b      	cbnz	r3, 8006e0c <__hexnan+0xe0>
 8006e04:	4547      	cmp	r7, r8
 8006e06:	d127      	bne.n	8006e58 <__hexnan+0x12c>
 8006e08:	2301      	movs	r3, #1
 8006e0a:	603b      	str	r3, [r7, #0]
 8006e0c:	2005      	movs	r0, #5
 8006e0e:	e026      	b.n	8006e5e <__hexnan+0x132>
 8006e10:	3501      	adds	r5, #1
 8006e12:	2d08      	cmp	r5, #8
 8006e14:	f10b 0b01 	add.w	fp, fp, #1
 8006e18:	dd06      	ble.n	8006e28 <__hexnan+0xfc>
 8006e1a:	4544      	cmp	r4, r8
 8006e1c:	d9c3      	bls.n	8006da6 <__hexnan+0x7a>
 8006e1e:	2300      	movs	r3, #0
 8006e20:	2501      	movs	r5, #1
 8006e22:	f844 3c04 	str.w	r3, [r4, #-4]
 8006e26:	3c04      	subs	r4, #4
 8006e28:	6822      	ldr	r2, [r4, #0]
 8006e2a:	f000 000f 	and.w	r0, r0, #15
 8006e2e:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 8006e32:	6022      	str	r2, [r4, #0]
 8006e34:	e7b7      	b.n	8006da6 <__hexnan+0x7a>
 8006e36:	2508      	movs	r5, #8
 8006e38:	e7b5      	b.n	8006da6 <__hexnan+0x7a>
 8006e3a:	9b01      	ldr	r3, [sp, #4]
 8006e3c:	2b00      	cmp	r3, #0
 8006e3e:	d0df      	beq.n	8006e00 <__hexnan+0xd4>
 8006e40:	f04f 32ff 	mov.w	r2, #4294967295
 8006e44:	f1c3 0320 	rsb	r3, r3, #32
 8006e48:	fa22 f303 	lsr.w	r3, r2, r3
 8006e4c:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8006e50:	401a      	ands	r2, r3
 8006e52:	f846 2c04 	str.w	r2, [r6, #-4]
 8006e56:	e7d3      	b.n	8006e00 <__hexnan+0xd4>
 8006e58:	3f04      	subs	r7, #4
 8006e5a:	e7d1      	b.n	8006e00 <__hexnan+0xd4>
 8006e5c:	2004      	movs	r0, #4
 8006e5e:	b007      	add	sp, #28
 8006e60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006e64 <__ascii_mbtowc>:
 8006e64:	b082      	sub	sp, #8
 8006e66:	b901      	cbnz	r1, 8006e6a <__ascii_mbtowc+0x6>
 8006e68:	a901      	add	r1, sp, #4
 8006e6a:	b142      	cbz	r2, 8006e7e <__ascii_mbtowc+0x1a>
 8006e6c:	b14b      	cbz	r3, 8006e82 <__ascii_mbtowc+0x1e>
 8006e6e:	7813      	ldrb	r3, [r2, #0]
 8006e70:	600b      	str	r3, [r1, #0]
 8006e72:	7812      	ldrb	r2, [r2, #0]
 8006e74:	1e10      	subs	r0, r2, #0
 8006e76:	bf18      	it	ne
 8006e78:	2001      	movne	r0, #1
 8006e7a:	b002      	add	sp, #8
 8006e7c:	4770      	bx	lr
 8006e7e:	4610      	mov	r0, r2
 8006e80:	e7fb      	b.n	8006e7a <__ascii_mbtowc+0x16>
 8006e82:	f06f 0001 	mvn.w	r0, #1
 8006e86:	e7f8      	b.n	8006e7a <__ascii_mbtowc+0x16>

08006e88 <memcpy>:
 8006e88:	440a      	add	r2, r1
 8006e8a:	4291      	cmp	r1, r2
 8006e8c:	f100 33ff 	add.w	r3, r0, #4294967295
 8006e90:	d100      	bne.n	8006e94 <memcpy+0xc>
 8006e92:	4770      	bx	lr
 8006e94:	b510      	push	{r4, lr}
 8006e96:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006e9a:	4291      	cmp	r1, r2
 8006e9c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006ea0:	d1f9      	bne.n	8006e96 <memcpy+0xe>
 8006ea2:	bd10      	pop	{r4, pc}

08006ea4 <__malloc_lock>:
 8006ea4:	4801      	ldr	r0, [pc, #4]	; (8006eac <__malloc_lock+0x8>)
 8006ea6:	f001 ba6b 	b.w	8008380 <__retarget_lock_acquire_recursive>
 8006eaa:	bf00      	nop
 8006eac:	2000047c 	.word	0x2000047c

08006eb0 <__malloc_unlock>:
 8006eb0:	4801      	ldr	r0, [pc, #4]	; (8006eb8 <__malloc_unlock+0x8>)
 8006eb2:	f001 ba66 	b.w	8008382 <__retarget_lock_release_recursive>
 8006eb6:	bf00      	nop
 8006eb8:	2000047c 	.word	0x2000047c

08006ebc <_Balloc>:
 8006ebc:	b570      	push	{r4, r5, r6, lr}
 8006ebe:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006ec0:	4604      	mov	r4, r0
 8006ec2:	460d      	mov	r5, r1
 8006ec4:	b976      	cbnz	r6, 8006ee4 <_Balloc+0x28>
 8006ec6:	2010      	movs	r0, #16
 8006ec8:	f7fe fbf4 	bl	80056b4 <malloc>
 8006ecc:	4602      	mov	r2, r0
 8006ece:	6260      	str	r0, [r4, #36]	; 0x24
 8006ed0:	b920      	cbnz	r0, 8006edc <_Balloc+0x20>
 8006ed2:	2166      	movs	r1, #102	; 0x66
 8006ed4:	4b17      	ldr	r3, [pc, #92]	; (8006f34 <_Balloc+0x78>)
 8006ed6:	4818      	ldr	r0, [pc, #96]	; (8006f38 <_Balloc+0x7c>)
 8006ed8:	f7ff fc2e 	bl	8006738 <__assert_func>
 8006edc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006ee0:	6006      	str	r6, [r0, #0]
 8006ee2:	60c6      	str	r6, [r0, #12]
 8006ee4:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8006ee6:	68f3      	ldr	r3, [r6, #12]
 8006ee8:	b183      	cbz	r3, 8006f0c <_Balloc+0x50>
 8006eea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006eec:	68db      	ldr	r3, [r3, #12]
 8006eee:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006ef2:	b9b8      	cbnz	r0, 8006f24 <_Balloc+0x68>
 8006ef4:	2101      	movs	r1, #1
 8006ef6:	fa01 f605 	lsl.w	r6, r1, r5
 8006efa:	1d72      	adds	r2, r6, #5
 8006efc:	4620      	mov	r0, r4
 8006efe:	0092      	lsls	r2, r2, #2
 8006f00:	f000 fc94 	bl	800782c <_calloc_r>
 8006f04:	b160      	cbz	r0, 8006f20 <_Balloc+0x64>
 8006f06:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8006f0a:	e00e      	b.n	8006f2a <_Balloc+0x6e>
 8006f0c:	2221      	movs	r2, #33	; 0x21
 8006f0e:	2104      	movs	r1, #4
 8006f10:	4620      	mov	r0, r4
 8006f12:	f000 fc8b 	bl	800782c <_calloc_r>
 8006f16:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006f18:	60f0      	str	r0, [r6, #12]
 8006f1a:	68db      	ldr	r3, [r3, #12]
 8006f1c:	2b00      	cmp	r3, #0
 8006f1e:	d1e4      	bne.n	8006eea <_Balloc+0x2e>
 8006f20:	2000      	movs	r0, #0
 8006f22:	bd70      	pop	{r4, r5, r6, pc}
 8006f24:	6802      	ldr	r2, [r0, #0]
 8006f26:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8006f2a:	2300      	movs	r3, #0
 8006f2c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8006f30:	e7f7      	b.n	8006f22 <_Balloc+0x66>
 8006f32:	bf00      	nop
 8006f34:	08008840 	.word	0x08008840
 8006f38:	08008a7c 	.word	0x08008a7c

08006f3c <_Bfree>:
 8006f3c:	b570      	push	{r4, r5, r6, lr}
 8006f3e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006f40:	4605      	mov	r5, r0
 8006f42:	460c      	mov	r4, r1
 8006f44:	b976      	cbnz	r6, 8006f64 <_Bfree+0x28>
 8006f46:	2010      	movs	r0, #16
 8006f48:	f7fe fbb4 	bl	80056b4 <malloc>
 8006f4c:	4602      	mov	r2, r0
 8006f4e:	6268      	str	r0, [r5, #36]	; 0x24
 8006f50:	b920      	cbnz	r0, 8006f5c <_Bfree+0x20>
 8006f52:	218a      	movs	r1, #138	; 0x8a
 8006f54:	4b08      	ldr	r3, [pc, #32]	; (8006f78 <_Bfree+0x3c>)
 8006f56:	4809      	ldr	r0, [pc, #36]	; (8006f7c <_Bfree+0x40>)
 8006f58:	f7ff fbee 	bl	8006738 <__assert_func>
 8006f5c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006f60:	6006      	str	r6, [r0, #0]
 8006f62:	60c6      	str	r6, [r0, #12]
 8006f64:	b13c      	cbz	r4, 8006f76 <_Bfree+0x3a>
 8006f66:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8006f68:	6862      	ldr	r2, [r4, #4]
 8006f6a:	68db      	ldr	r3, [r3, #12]
 8006f6c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8006f70:	6021      	str	r1, [r4, #0]
 8006f72:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8006f76:	bd70      	pop	{r4, r5, r6, pc}
 8006f78:	08008840 	.word	0x08008840
 8006f7c:	08008a7c 	.word	0x08008a7c

08006f80 <__multadd>:
 8006f80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006f84:	4607      	mov	r7, r0
 8006f86:	460c      	mov	r4, r1
 8006f88:	461e      	mov	r6, r3
 8006f8a:	2000      	movs	r0, #0
 8006f8c:	690d      	ldr	r5, [r1, #16]
 8006f8e:	f101 0c14 	add.w	ip, r1, #20
 8006f92:	f8dc 3000 	ldr.w	r3, [ip]
 8006f96:	3001      	adds	r0, #1
 8006f98:	b299      	uxth	r1, r3
 8006f9a:	fb02 6101 	mla	r1, r2, r1, r6
 8006f9e:	0c1e      	lsrs	r6, r3, #16
 8006fa0:	0c0b      	lsrs	r3, r1, #16
 8006fa2:	fb02 3306 	mla	r3, r2, r6, r3
 8006fa6:	b289      	uxth	r1, r1
 8006fa8:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8006fac:	4285      	cmp	r5, r0
 8006fae:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8006fb2:	f84c 1b04 	str.w	r1, [ip], #4
 8006fb6:	dcec      	bgt.n	8006f92 <__multadd+0x12>
 8006fb8:	b30e      	cbz	r6, 8006ffe <__multadd+0x7e>
 8006fba:	68a3      	ldr	r3, [r4, #8]
 8006fbc:	42ab      	cmp	r3, r5
 8006fbe:	dc19      	bgt.n	8006ff4 <__multadd+0x74>
 8006fc0:	6861      	ldr	r1, [r4, #4]
 8006fc2:	4638      	mov	r0, r7
 8006fc4:	3101      	adds	r1, #1
 8006fc6:	f7ff ff79 	bl	8006ebc <_Balloc>
 8006fca:	4680      	mov	r8, r0
 8006fcc:	b928      	cbnz	r0, 8006fda <__multadd+0x5a>
 8006fce:	4602      	mov	r2, r0
 8006fd0:	21b5      	movs	r1, #181	; 0xb5
 8006fd2:	4b0c      	ldr	r3, [pc, #48]	; (8007004 <__multadd+0x84>)
 8006fd4:	480c      	ldr	r0, [pc, #48]	; (8007008 <__multadd+0x88>)
 8006fd6:	f7ff fbaf 	bl	8006738 <__assert_func>
 8006fda:	6922      	ldr	r2, [r4, #16]
 8006fdc:	f104 010c 	add.w	r1, r4, #12
 8006fe0:	3202      	adds	r2, #2
 8006fe2:	0092      	lsls	r2, r2, #2
 8006fe4:	300c      	adds	r0, #12
 8006fe6:	f7ff ff4f 	bl	8006e88 <memcpy>
 8006fea:	4621      	mov	r1, r4
 8006fec:	4638      	mov	r0, r7
 8006fee:	f7ff ffa5 	bl	8006f3c <_Bfree>
 8006ff2:	4644      	mov	r4, r8
 8006ff4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8006ff8:	3501      	adds	r5, #1
 8006ffa:	615e      	str	r6, [r3, #20]
 8006ffc:	6125      	str	r5, [r4, #16]
 8006ffe:	4620      	mov	r0, r4
 8007000:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007004:	080089f1 	.word	0x080089f1
 8007008:	08008a7c 	.word	0x08008a7c

0800700c <__s2b>:
 800700c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007010:	4615      	mov	r5, r2
 8007012:	2209      	movs	r2, #9
 8007014:	461f      	mov	r7, r3
 8007016:	3308      	adds	r3, #8
 8007018:	460c      	mov	r4, r1
 800701a:	fb93 f3f2 	sdiv	r3, r3, r2
 800701e:	4606      	mov	r6, r0
 8007020:	2201      	movs	r2, #1
 8007022:	2100      	movs	r1, #0
 8007024:	429a      	cmp	r2, r3
 8007026:	db09      	blt.n	800703c <__s2b+0x30>
 8007028:	4630      	mov	r0, r6
 800702a:	f7ff ff47 	bl	8006ebc <_Balloc>
 800702e:	b940      	cbnz	r0, 8007042 <__s2b+0x36>
 8007030:	4602      	mov	r2, r0
 8007032:	21ce      	movs	r1, #206	; 0xce
 8007034:	4b18      	ldr	r3, [pc, #96]	; (8007098 <__s2b+0x8c>)
 8007036:	4819      	ldr	r0, [pc, #100]	; (800709c <__s2b+0x90>)
 8007038:	f7ff fb7e 	bl	8006738 <__assert_func>
 800703c:	0052      	lsls	r2, r2, #1
 800703e:	3101      	adds	r1, #1
 8007040:	e7f0      	b.n	8007024 <__s2b+0x18>
 8007042:	9b08      	ldr	r3, [sp, #32]
 8007044:	2d09      	cmp	r5, #9
 8007046:	6143      	str	r3, [r0, #20]
 8007048:	f04f 0301 	mov.w	r3, #1
 800704c:	6103      	str	r3, [r0, #16]
 800704e:	dd16      	ble.n	800707e <__s2b+0x72>
 8007050:	f104 0909 	add.w	r9, r4, #9
 8007054:	46c8      	mov	r8, r9
 8007056:	442c      	add	r4, r5
 8007058:	f818 3b01 	ldrb.w	r3, [r8], #1
 800705c:	4601      	mov	r1, r0
 800705e:	220a      	movs	r2, #10
 8007060:	4630      	mov	r0, r6
 8007062:	3b30      	subs	r3, #48	; 0x30
 8007064:	f7ff ff8c 	bl	8006f80 <__multadd>
 8007068:	45a0      	cmp	r8, r4
 800706a:	d1f5      	bne.n	8007058 <__s2b+0x4c>
 800706c:	f1a5 0408 	sub.w	r4, r5, #8
 8007070:	444c      	add	r4, r9
 8007072:	1b2d      	subs	r5, r5, r4
 8007074:	1963      	adds	r3, r4, r5
 8007076:	42bb      	cmp	r3, r7
 8007078:	db04      	blt.n	8007084 <__s2b+0x78>
 800707a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800707e:	2509      	movs	r5, #9
 8007080:	340a      	adds	r4, #10
 8007082:	e7f6      	b.n	8007072 <__s2b+0x66>
 8007084:	f814 3b01 	ldrb.w	r3, [r4], #1
 8007088:	4601      	mov	r1, r0
 800708a:	220a      	movs	r2, #10
 800708c:	4630      	mov	r0, r6
 800708e:	3b30      	subs	r3, #48	; 0x30
 8007090:	f7ff ff76 	bl	8006f80 <__multadd>
 8007094:	e7ee      	b.n	8007074 <__s2b+0x68>
 8007096:	bf00      	nop
 8007098:	080089f1 	.word	0x080089f1
 800709c:	08008a7c 	.word	0x08008a7c

080070a0 <__hi0bits>:
 80070a0:	0c02      	lsrs	r2, r0, #16
 80070a2:	0412      	lsls	r2, r2, #16
 80070a4:	4603      	mov	r3, r0
 80070a6:	b9ca      	cbnz	r2, 80070dc <__hi0bits+0x3c>
 80070a8:	0403      	lsls	r3, r0, #16
 80070aa:	2010      	movs	r0, #16
 80070ac:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80070b0:	bf04      	itt	eq
 80070b2:	021b      	lsleq	r3, r3, #8
 80070b4:	3008      	addeq	r0, #8
 80070b6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80070ba:	bf04      	itt	eq
 80070bc:	011b      	lsleq	r3, r3, #4
 80070be:	3004      	addeq	r0, #4
 80070c0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80070c4:	bf04      	itt	eq
 80070c6:	009b      	lsleq	r3, r3, #2
 80070c8:	3002      	addeq	r0, #2
 80070ca:	2b00      	cmp	r3, #0
 80070cc:	db05      	blt.n	80070da <__hi0bits+0x3a>
 80070ce:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 80070d2:	f100 0001 	add.w	r0, r0, #1
 80070d6:	bf08      	it	eq
 80070d8:	2020      	moveq	r0, #32
 80070da:	4770      	bx	lr
 80070dc:	2000      	movs	r0, #0
 80070de:	e7e5      	b.n	80070ac <__hi0bits+0xc>

080070e0 <__lo0bits>:
 80070e0:	6803      	ldr	r3, [r0, #0]
 80070e2:	4602      	mov	r2, r0
 80070e4:	f013 0007 	ands.w	r0, r3, #7
 80070e8:	d00b      	beq.n	8007102 <__lo0bits+0x22>
 80070ea:	07d9      	lsls	r1, r3, #31
 80070ec:	d421      	bmi.n	8007132 <__lo0bits+0x52>
 80070ee:	0798      	lsls	r0, r3, #30
 80070f0:	bf49      	itett	mi
 80070f2:	085b      	lsrmi	r3, r3, #1
 80070f4:	089b      	lsrpl	r3, r3, #2
 80070f6:	2001      	movmi	r0, #1
 80070f8:	6013      	strmi	r3, [r2, #0]
 80070fa:	bf5c      	itt	pl
 80070fc:	2002      	movpl	r0, #2
 80070fe:	6013      	strpl	r3, [r2, #0]
 8007100:	4770      	bx	lr
 8007102:	b299      	uxth	r1, r3
 8007104:	b909      	cbnz	r1, 800710a <__lo0bits+0x2a>
 8007106:	2010      	movs	r0, #16
 8007108:	0c1b      	lsrs	r3, r3, #16
 800710a:	b2d9      	uxtb	r1, r3
 800710c:	b909      	cbnz	r1, 8007112 <__lo0bits+0x32>
 800710e:	3008      	adds	r0, #8
 8007110:	0a1b      	lsrs	r3, r3, #8
 8007112:	0719      	lsls	r1, r3, #28
 8007114:	bf04      	itt	eq
 8007116:	091b      	lsreq	r3, r3, #4
 8007118:	3004      	addeq	r0, #4
 800711a:	0799      	lsls	r1, r3, #30
 800711c:	bf04      	itt	eq
 800711e:	089b      	lsreq	r3, r3, #2
 8007120:	3002      	addeq	r0, #2
 8007122:	07d9      	lsls	r1, r3, #31
 8007124:	d403      	bmi.n	800712e <__lo0bits+0x4e>
 8007126:	085b      	lsrs	r3, r3, #1
 8007128:	f100 0001 	add.w	r0, r0, #1
 800712c:	d003      	beq.n	8007136 <__lo0bits+0x56>
 800712e:	6013      	str	r3, [r2, #0]
 8007130:	4770      	bx	lr
 8007132:	2000      	movs	r0, #0
 8007134:	4770      	bx	lr
 8007136:	2020      	movs	r0, #32
 8007138:	4770      	bx	lr
	...

0800713c <__i2b>:
 800713c:	b510      	push	{r4, lr}
 800713e:	460c      	mov	r4, r1
 8007140:	2101      	movs	r1, #1
 8007142:	f7ff febb 	bl	8006ebc <_Balloc>
 8007146:	4602      	mov	r2, r0
 8007148:	b928      	cbnz	r0, 8007156 <__i2b+0x1a>
 800714a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800714e:	4b04      	ldr	r3, [pc, #16]	; (8007160 <__i2b+0x24>)
 8007150:	4804      	ldr	r0, [pc, #16]	; (8007164 <__i2b+0x28>)
 8007152:	f7ff faf1 	bl	8006738 <__assert_func>
 8007156:	2301      	movs	r3, #1
 8007158:	6144      	str	r4, [r0, #20]
 800715a:	6103      	str	r3, [r0, #16]
 800715c:	bd10      	pop	{r4, pc}
 800715e:	bf00      	nop
 8007160:	080089f1 	.word	0x080089f1
 8007164:	08008a7c 	.word	0x08008a7c

08007168 <__multiply>:
 8007168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800716c:	4691      	mov	r9, r2
 800716e:	690a      	ldr	r2, [r1, #16]
 8007170:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8007174:	460c      	mov	r4, r1
 8007176:	429a      	cmp	r2, r3
 8007178:	bfbe      	ittt	lt
 800717a:	460b      	movlt	r3, r1
 800717c:	464c      	movlt	r4, r9
 800717e:	4699      	movlt	r9, r3
 8007180:	6927      	ldr	r7, [r4, #16]
 8007182:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8007186:	68a3      	ldr	r3, [r4, #8]
 8007188:	6861      	ldr	r1, [r4, #4]
 800718a:	eb07 060a 	add.w	r6, r7, sl
 800718e:	42b3      	cmp	r3, r6
 8007190:	b085      	sub	sp, #20
 8007192:	bfb8      	it	lt
 8007194:	3101      	addlt	r1, #1
 8007196:	f7ff fe91 	bl	8006ebc <_Balloc>
 800719a:	b930      	cbnz	r0, 80071aa <__multiply+0x42>
 800719c:	4602      	mov	r2, r0
 800719e:	f240 115d 	movw	r1, #349	; 0x15d
 80071a2:	4b43      	ldr	r3, [pc, #268]	; (80072b0 <__multiply+0x148>)
 80071a4:	4843      	ldr	r0, [pc, #268]	; (80072b4 <__multiply+0x14c>)
 80071a6:	f7ff fac7 	bl	8006738 <__assert_func>
 80071aa:	f100 0514 	add.w	r5, r0, #20
 80071ae:	462b      	mov	r3, r5
 80071b0:	2200      	movs	r2, #0
 80071b2:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80071b6:	4543      	cmp	r3, r8
 80071b8:	d321      	bcc.n	80071fe <__multiply+0x96>
 80071ba:	f104 0314 	add.w	r3, r4, #20
 80071be:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80071c2:	f109 0314 	add.w	r3, r9, #20
 80071c6:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 80071ca:	9202      	str	r2, [sp, #8]
 80071cc:	1b3a      	subs	r2, r7, r4
 80071ce:	3a15      	subs	r2, #21
 80071d0:	f022 0203 	bic.w	r2, r2, #3
 80071d4:	3204      	adds	r2, #4
 80071d6:	f104 0115 	add.w	r1, r4, #21
 80071da:	428f      	cmp	r7, r1
 80071dc:	bf38      	it	cc
 80071de:	2204      	movcc	r2, #4
 80071e0:	9201      	str	r2, [sp, #4]
 80071e2:	9a02      	ldr	r2, [sp, #8]
 80071e4:	9303      	str	r3, [sp, #12]
 80071e6:	429a      	cmp	r2, r3
 80071e8:	d80c      	bhi.n	8007204 <__multiply+0x9c>
 80071ea:	2e00      	cmp	r6, #0
 80071ec:	dd03      	ble.n	80071f6 <__multiply+0x8e>
 80071ee:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80071f2:	2b00      	cmp	r3, #0
 80071f4:	d059      	beq.n	80072aa <__multiply+0x142>
 80071f6:	6106      	str	r6, [r0, #16]
 80071f8:	b005      	add	sp, #20
 80071fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80071fe:	f843 2b04 	str.w	r2, [r3], #4
 8007202:	e7d8      	b.n	80071b6 <__multiply+0x4e>
 8007204:	f8b3 a000 	ldrh.w	sl, [r3]
 8007208:	f1ba 0f00 	cmp.w	sl, #0
 800720c:	d023      	beq.n	8007256 <__multiply+0xee>
 800720e:	46a9      	mov	r9, r5
 8007210:	f04f 0c00 	mov.w	ip, #0
 8007214:	f104 0e14 	add.w	lr, r4, #20
 8007218:	f85e 2b04 	ldr.w	r2, [lr], #4
 800721c:	f8d9 1000 	ldr.w	r1, [r9]
 8007220:	fa1f fb82 	uxth.w	fp, r2
 8007224:	b289      	uxth	r1, r1
 8007226:	fb0a 110b 	mla	r1, sl, fp, r1
 800722a:	4461      	add	r1, ip
 800722c:	f8d9 c000 	ldr.w	ip, [r9]
 8007230:	0c12      	lsrs	r2, r2, #16
 8007232:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8007236:	fb0a c202 	mla	r2, sl, r2, ip
 800723a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800723e:	b289      	uxth	r1, r1
 8007240:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8007244:	4577      	cmp	r7, lr
 8007246:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800724a:	f849 1b04 	str.w	r1, [r9], #4
 800724e:	d8e3      	bhi.n	8007218 <__multiply+0xb0>
 8007250:	9a01      	ldr	r2, [sp, #4]
 8007252:	f845 c002 	str.w	ip, [r5, r2]
 8007256:	9a03      	ldr	r2, [sp, #12]
 8007258:	3304      	adds	r3, #4
 800725a:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800725e:	f1b9 0f00 	cmp.w	r9, #0
 8007262:	d020      	beq.n	80072a6 <__multiply+0x13e>
 8007264:	46ae      	mov	lr, r5
 8007266:	f04f 0a00 	mov.w	sl, #0
 800726a:	6829      	ldr	r1, [r5, #0]
 800726c:	f104 0c14 	add.w	ip, r4, #20
 8007270:	f8bc b000 	ldrh.w	fp, [ip]
 8007274:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8007278:	b289      	uxth	r1, r1
 800727a:	fb09 220b 	mla	r2, r9, fp, r2
 800727e:	4492      	add	sl, r2
 8007280:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8007284:	f84e 1b04 	str.w	r1, [lr], #4
 8007288:	f85c 2b04 	ldr.w	r2, [ip], #4
 800728c:	f8be 1000 	ldrh.w	r1, [lr]
 8007290:	0c12      	lsrs	r2, r2, #16
 8007292:	fb09 1102 	mla	r1, r9, r2, r1
 8007296:	4567      	cmp	r7, ip
 8007298:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800729c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80072a0:	d8e6      	bhi.n	8007270 <__multiply+0x108>
 80072a2:	9a01      	ldr	r2, [sp, #4]
 80072a4:	50a9      	str	r1, [r5, r2]
 80072a6:	3504      	adds	r5, #4
 80072a8:	e79b      	b.n	80071e2 <__multiply+0x7a>
 80072aa:	3e01      	subs	r6, #1
 80072ac:	e79d      	b.n	80071ea <__multiply+0x82>
 80072ae:	bf00      	nop
 80072b0:	080089f1 	.word	0x080089f1
 80072b4:	08008a7c 	.word	0x08008a7c

080072b8 <__pow5mult>:
 80072b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80072bc:	4615      	mov	r5, r2
 80072be:	f012 0203 	ands.w	r2, r2, #3
 80072c2:	4606      	mov	r6, r0
 80072c4:	460f      	mov	r7, r1
 80072c6:	d007      	beq.n	80072d8 <__pow5mult+0x20>
 80072c8:	4c25      	ldr	r4, [pc, #148]	; (8007360 <__pow5mult+0xa8>)
 80072ca:	3a01      	subs	r2, #1
 80072cc:	2300      	movs	r3, #0
 80072ce:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80072d2:	f7ff fe55 	bl	8006f80 <__multadd>
 80072d6:	4607      	mov	r7, r0
 80072d8:	10ad      	asrs	r5, r5, #2
 80072da:	d03d      	beq.n	8007358 <__pow5mult+0xa0>
 80072dc:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80072de:	b97c      	cbnz	r4, 8007300 <__pow5mult+0x48>
 80072e0:	2010      	movs	r0, #16
 80072e2:	f7fe f9e7 	bl	80056b4 <malloc>
 80072e6:	4602      	mov	r2, r0
 80072e8:	6270      	str	r0, [r6, #36]	; 0x24
 80072ea:	b928      	cbnz	r0, 80072f8 <__pow5mult+0x40>
 80072ec:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 80072f0:	4b1c      	ldr	r3, [pc, #112]	; (8007364 <__pow5mult+0xac>)
 80072f2:	481d      	ldr	r0, [pc, #116]	; (8007368 <__pow5mult+0xb0>)
 80072f4:	f7ff fa20 	bl	8006738 <__assert_func>
 80072f8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80072fc:	6004      	str	r4, [r0, #0]
 80072fe:	60c4      	str	r4, [r0, #12]
 8007300:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8007304:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8007308:	b94c      	cbnz	r4, 800731e <__pow5mult+0x66>
 800730a:	f240 2171 	movw	r1, #625	; 0x271
 800730e:	4630      	mov	r0, r6
 8007310:	f7ff ff14 	bl	800713c <__i2b>
 8007314:	2300      	movs	r3, #0
 8007316:	4604      	mov	r4, r0
 8007318:	f8c8 0008 	str.w	r0, [r8, #8]
 800731c:	6003      	str	r3, [r0, #0]
 800731e:	f04f 0900 	mov.w	r9, #0
 8007322:	07eb      	lsls	r3, r5, #31
 8007324:	d50a      	bpl.n	800733c <__pow5mult+0x84>
 8007326:	4639      	mov	r1, r7
 8007328:	4622      	mov	r2, r4
 800732a:	4630      	mov	r0, r6
 800732c:	f7ff ff1c 	bl	8007168 <__multiply>
 8007330:	4680      	mov	r8, r0
 8007332:	4639      	mov	r1, r7
 8007334:	4630      	mov	r0, r6
 8007336:	f7ff fe01 	bl	8006f3c <_Bfree>
 800733a:	4647      	mov	r7, r8
 800733c:	106d      	asrs	r5, r5, #1
 800733e:	d00b      	beq.n	8007358 <__pow5mult+0xa0>
 8007340:	6820      	ldr	r0, [r4, #0]
 8007342:	b938      	cbnz	r0, 8007354 <__pow5mult+0x9c>
 8007344:	4622      	mov	r2, r4
 8007346:	4621      	mov	r1, r4
 8007348:	4630      	mov	r0, r6
 800734a:	f7ff ff0d 	bl	8007168 <__multiply>
 800734e:	6020      	str	r0, [r4, #0]
 8007350:	f8c0 9000 	str.w	r9, [r0]
 8007354:	4604      	mov	r4, r0
 8007356:	e7e4      	b.n	8007322 <__pow5mult+0x6a>
 8007358:	4638      	mov	r0, r7
 800735a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800735e:	bf00      	nop
 8007360:	08008bc8 	.word	0x08008bc8
 8007364:	08008840 	.word	0x08008840
 8007368:	08008a7c 	.word	0x08008a7c

0800736c <__lshift>:
 800736c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007370:	460c      	mov	r4, r1
 8007372:	4607      	mov	r7, r0
 8007374:	4691      	mov	r9, r2
 8007376:	6923      	ldr	r3, [r4, #16]
 8007378:	6849      	ldr	r1, [r1, #4]
 800737a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800737e:	68a3      	ldr	r3, [r4, #8]
 8007380:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8007384:	f108 0601 	add.w	r6, r8, #1
 8007388:	42b3      	cmp	r3, r6
 800738a:	db0b      	blt.n	80073a4 <__lshift+0x38>
 800738c:	4638      	mov	r0, r7
 800738e:	f7ff fd95 	bl	8006ebc <_Balloc>
 8007392:	4605      	mov	r5, r0
 8007394:	b948      	cbnz	r0, 80073aa <__lshift+0x3e>
 8007396:	4602      	mov	r2, r0
 8007398:	f240 11d9 	movw	r1, #473	; 0x1d9
 800739c:	4b29      	ldr	r3, [pc, #164]	; (8007444 <__lshift+0xd8>)
 800739e:	482a      	ldr	r0, [pc, #168]	; (8007448 <__lshift+0xdc>)
 80073a0:	f7ff f9ca 	bl	8006738 <__assert_func>
 80073a4:	3101      	adds	r1, #1
 80073a6:	005b      	lsls	r3, r3, #1
 80073a8:	e7ee      	b.n	8007388 <__lshift+0x1c>
 80073aa:	2300      	movs	r3, #0
 80073ac:	f100 0114 	add.w	r1, r0, #20
 80073b0:	f100 0210 	add.w	r2, r0, #16
 80073b4:	4618      	mov	r0, r3
 80073b6:	4553      	cmp	r3, sl
 80073b8:	db37      	blt.n	800742a <__lshift+0xbe>
 80073ba:	6920      	ldr	r0, [r4, #16]
 80073bc:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80073c0:	f104 0314 	add.w	r3, r4, #20
 80073c4:	f019 091f 	ands.w	r9, r9, #31
 80073c8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80073cc:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 80073d0:	d02f      	beq.n	8007432 <__lshift+0xc6>
 80073d2:	468a      	mov	sl, r1
 80073d4:	f04f 0c00 	mov.w	ip, #0
 80073d8:	f1c9 0e20 	rsb	lr, r9, #32
 80073dc:	681a      	ldr	r2, [r3, #0]
 80073de:	fa02 f209 	lsl.w	r2, r2, r9
 80073e2:	ea42 020c 	orr.w	r2, r2, ip
 80073e6:	f84a 2b04 	str.w	r2, [sl], #4
 80073ea:	f853 2b04 	ldr.w	r2, [r3], #4
 80073ee:	4298      	cmp	r0, r3
 80073f0:	fa22 fc0e 	lsr.w	ip, r2, lr
 80073f4:	d8f2      	bhi.n	80073dc <__lshift+0x70>
 80073f6:	1b03      	subs	r3, r0, r4
 80073f8:	3b15      	subs	r3, #21
 80073fa:	f023 0303 	bic.w	r3, r3, #3
 80073fe:	3304      	adds	r3, #4
 8007400:	f104 0215 	add.w	r2, r4, #21
 8007404:	4290      	cmp	r0, r2
 8007406:	bf38      	it	cc
 8007408:	2304      	movcc	r3, #4
 800740a:	f841 c003 	str.w	ip, [r1, r3]
 800740e:	f1bc 0f00 	cmp.w	ip, #0
 8007412:	d001      	beq.n	8007418 <__lshift+0xac>
 8007414:	f108 0602 	add.w	r6, r8, #2
 8007418:	3e01      	subs	r6, #1
 800741a:	4638      	mov	r0, r7
 800741c:	4621      	mov	r1, r4
 800741e:	612e      	str	r6, [r5, #16]
 8007420:	f7ff fd8c 	bl	8006f3c <_Bfree>
 8007424:	4628      	mov	r0, r5
 8007426:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800742a:	f842 0f04 	str.w	r0, [r2, #4]!
 800742e:	3301      	adds	r3, #1
 8007430:	e7c1      	b.n	80073b6 <__lshift+0x4a>
 8007432:	3904      	subs	r1, #4
 8007434:	f853 2b04 	ldr.w	r2, [r3], #4
 8007438:	4298      	cmp	r0, r3
 800743a:	f841 2f04 	str.w	r2, [r1, #4]!
 800743e:	d8f9      	bhi.n	8007434 <__lshift+0xc8>
 8007440:	e7ea      	b.n	8007418 <__lshift+0xac>
 8007442:	bf00      	nop
 8007444:	080089f1 	.word	0x080089f1
 8007448:	08008a7c 	.word	0x08008a7c

0800744c <__mcmp>:
 800744c:	4603      	mov	r3, r0
 800744e:	690a      	ldr	r2, [r1, #16]
 8007450:	6900      	ldr	r0, [r0, #16]
 8007452:	b530      	push	{r4, r5, lr}
 8007454:	1a80      	subs	r0, r0, r2
 8007456:	d10d      	bne.n	8007474 <__mcmp+0x28>
 8007458:	3314      	adds	r3, #20
 800745a:	3114      	adds	r1, #20
 800745c:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8007460:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8007464:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8007468:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800746c:	4295      	cmp	r5, r2
 800746e:	d002      	beq.n	8007476 <__mcmp+0x2a>
 8007470:	d304      	bcc.n	800747c <__mcmp+0x30>
 8007472:	2001      	movs	r0, #1
 8007474:	bd30      	pop	{r4, r5, pc}
 8007476:	42a3      	cmp	r3, r4
 8007478:	d3f4      	bcc.n	8007464 <__mcmp+0x18>
 800747a:	e7fb      	b.n	8007474 <__mcmp+0x28>
 800747c:	f04f 30ff 	mov.w	r0, #4294967295
 8007480:	e7f8      	b.n	8007474 <__mcmp+0x28>
	...

08007484 <__mdiff>:
 8007484:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007488:	460d      	mov	r5, r1
 800748a:	4607      	mov	r7, r0
 800748c:	4611      	mov	r1, r2
 800748e:	4628      	mov	r0, r5
 8007490:	4614      	mov	r4, r2
 8007492:	f7ff ffdb 	bl	800744c <__mcmp>
 8007496:	1e06      	subs	r6, r0, #0
 8007498:	d111      	bne.n	80074be <__mdiff+0x3a>
 800749a:	4631      	mov	r1, r6
 800749c:	4638      	mov	r0, r7
 800749e:	f7ff fd0d 	bl	8006ebc <_Balloc>
 80074a2:	4602      	mov	r2, r0
 80074a4:	b928      	cbnz	r0, 80074b2 <__mdiff+0x2e>
 80074a6:	f240 2132 	movw	r1, #562	; 0x232
 80074aa:	4b3a      	ldr	r3, [pc, #232]	; (8007594 <__mdiff+0x110>)
 80074ac:	483a      	ldr	r0, [pc, #232]	; (8007598 <__mdiff+0x114>)
 80074ae:	f7ff f943 	bl	8006738 <__assert_func>
 80074b2:	2301      	movs	r3, #1
 80074b4:	e9c0 3604 	strd	r3, r6, [r0, #16]
 80074b8:	4610      	mov	r0, r2
 80074ba:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80074be:	bfa4      	itt	ge
 80074c0:	4623      	movge	r3, r4
 80074c2:	462c      	movge	r4, r5
 80074c4:	4638      	mov	r0, r7
 80074c6:	6861      	ldr	r1, [r4, #4]
 80074c8:	bfa6      	itte	ge
 80074ca:	461d      	movge	r5, r3
 80074cc:	2600      	movge	r6, #0
 80074ce:	2601      	movlt	r6, #1
 80074d0:	f7ff fcf4 	bl	8006ebc <_Balloc>
 80074d4:	4602      	mov	r2, r0
 80074d6:	b918      	cbnz	r0, 80074e0 <__mdiff+0x5c>
 80074d8:	f44f 7110 	mov.w	r1, #576	; 0x240
 80074dc:	4b2d      	ldr	r3, [pc, #180]	; (8007594 <__mdiff+0x110>)
 80074de:	e7e5      	b.n	80074ac <__mdiff+0x28>
 80074e0:	f102 0814 	add.w	r8, r2, #20
 80074e4:	46c2      	mov	sl, r8
 80074e6:	f04f 0c00 	mov.w	ip, #0
 80074ea:	6927      	ldr	r7, [r4, #16]
 80074ec:	60c6      	str	r6, [r0, #12]
 80074ee:	692e      	ldr	r6, [r5, #16]
 80074f0:	f104 0014 	add.w	r0, r4, #20
 80074f4:	f105 0914 	add.w	r9, r5, #20
 80074f8:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 80074fc:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8007500:	3410      	adds	r4, #16
 8007502:	f854 bf04 	ldr.w	fp, [r4, #4]!
 8007506:	f859 3b04 	ldr.w	r3, [r9], #4
 800750a:	fa1f f18b 	uxth.w	r1, fp
 800750e:	448c      	add	ip, r1
 8007510:	b299      	uxth	r1, r3
 8007512:	0c1b      	lsrs	r3, r3, #16
 8007514:	ebac 0101 	sub.w	r1, ip, r1
 8007518:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800751c:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8007520:	b289      	uxth	r1, r1
 8007522:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8007526:	454e      	cmp	r6, r9
 8007528:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800752c:	f84a 3b04 	str.w	r3, [sl], #4
 8007530:	d8e7      	bhi.n	8007502 <__mdiff+0x7e>
 8007532:	1b73      	subs	r3, r6, r5
 8007534:	3b15      	subs	r3, #21
 8007536:	f023 0303 	bic.w	r3, r3, #3
 800753a:	3515      	adds	r5, #21
 800753c:	3304      	adds	r3, #4
 800753e:	42ae      	cmp	r6, r5
 8007540:	bf38      	it	cc
 8007542:	2304      	movcc	r3, #4
 8007544:	4418      	add	r0, r3
 8007546:	4443      	add	r3, r8
 8007548:	461e      	mov	r6, r3
 800754a:	4605      	mov	r5, r0
 800754c:	4575      	cmp	r5, lr
 800754e:	d30e      	bcc.n	800756e <__mdiff+0xea>
 8007550:	f10e 0103 	add.w	r1, lr, #3
 8007554:	1a09      	subs	r1, r1, r0
 8007556:	f021 0103 	bic.w	r1, r1, #3
 800755a:	3803      	subs	r0, #3
 800755c:	4586      	cmp	lr, r0
 800755e:	bf38      	it	cc
 8007560:	2100      	movcc	r1, #0
 8007562:	4419      	add	r1, r3
 8007564:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8007568:	b18b      	cbz	r3, 800758e <__mdiff+0x10a>
 800756a:	6117      	str	r7, [r2, #16]
 800756c:	e7a4      	b.n	80074b8 <__mdiff+0x34>
 800756e:	f855 8b04 	ldr.w	r8, [r5], #4
 8007572:	fa1f f188 	uxth.w	r1, r8
 8007576:	4461      	add	r1, ip
 8007578:	140c      	asrs	r4, r1, #16
 800757a:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800757e:	b289      	uxth	r1, r1
 8007580:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8007584:	ea4f 4c24 	mov.w	ip, r4, asr #16
 8007588:	f846 1b04 	str.w	r1, [r6], #4
 800758c:	e7de      	b.n	800754c <__mdiff+0xc8>
 800758e:	3f01      	subs	r7, #1
 8007590:	e7e8      	b.n	8007564 <__mdiff+0xe0>
 8007592:	bf00      	nop
 8007594:	080089f1 	.word	0x080089f1
 8007598:	08008a7c 	.word	0x08008a7c

0800759c <__ulp>:
 800759c:	4b11      	ldr	r3, [pc, #68]	; (80075e4 <__ulp+0x48>)
 800759e:	400b      	ands	r3, r1
 80075a0:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 80075a4:	2b00      	cmp	r3, #0
 80075a6:	dd02      	ble.n	80075ae <__ulp+0x12>
 80075a8:	2000      	movs	r0, #0
 80075aa:	4619      	mov	r1, r3
 80075ac:	4770      	bx	lr
 80075ae:	425b      	negs	r3, r3
 80075b0:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 80075b4:	f04f 0000 	mov.w	r0, #0
 80075b8:	f04f 0100 	mov.w	r1, #0
 80075bc:	ea4f 5223 	mov.w	r2, r3, asr #20
 80075c0:	da04      	bge.n	80075cc <__ulp+0x30>
 80075c2:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 80075c6:	fa43 f102 	asr.w	r1, r3, r2
 80075ca:	4770      	bx	lr
 80075cc:	f1a2 0314 	sub.w	r3, r2, #20
 80075d0:	2b1e      	cmp	r3, #30
 80075d2:	bfd6      	itet	le
 80075d4:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 80075d8:	2301      	movgt	r3, #1
 80075da:	fa22 f303 	lsrle.w	r3, r2, r3
 80075de:	4618      	mov	r0, r3
 80075e0:	4770      	bx	lr
 80075e2:	bf00      	nop
 80075e4:	7ff00000 	.word	0x7ff00000

080075e8 <__b2d>:
 80075e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80075ec:	6907      	ldr	r7, [r0, #16]
 80075ee:	f100 0914 	add.w	r9, r0, #20
 80075f2:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 80075f6:	f857 6c04 	ldr.w	r6, [r7, #-4]
 80075fa:	f1a7 0804 	sub.w	r8, r7, #4
 80075fe:	4630      	mov	r0, r6
 8007600:	f7ff fd4e 	bl	80070a0 <__hi0bits>
 8007604:	f1c0 0320 	rsb	r3, r0, #32
 8007608:	280a      	cmp	r0, #10
 800760a:	600b      	str	r3, [r1, #0]
 800760c:	491f      	ldr	r1, [pc, #124]	; (800768c <__b2d+0xa4>)
 800760e:	dc17      	bgt.n	8007640 <__b2d+0x58>
 8007610:	45c1      	cmp	r9, r8
 8007612:	bf28      	it	cs
 8007614:	2200      	movcs	r2, #0
 8007616:	f1c0 0c0b 	rsb	ip, r0, #11
 800761a:	fa26 f30c 	lsr.w	r3, r6, ip
 800761e:	bf38      	it	cc
 8007620:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8007624:	ea43 0501 	orr.w	r5, r3, r1
 8007628:	f100 0315 	add.w	r3, r0, #21
 800762c:	fa06 f303 	lsl.w	r3, r6, r3
 8007630:	fa22 f20c 	lsr.w	r2, r2, ip
 8007634:	ea43 0402 	orr.w	r4, r3, r2
 8007638:	4620      	mov	r0, r4
 800763a:	4629      	mov	r1, r5
 800763c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007640:	45c1      	cmp	r9, r8
 8007642:	bf2e      	itee	cs
 8007644:	2200      	movcs	r2, #0
 8007646:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 800764a:	f1a7 0808 	subcc.w	r8, r7, #8
 800764e:	f1b0 030b 	subs.w	r3, r0, #11
 8007652:	d016      	beq.n	8007682 <__b2d+0x9a>
 8007654:	f1c3 0720 	rsb	r7, r3, #32
 8007658:	fa22 f107 	lsr.w	r1, r2, r7
 800765c:	45c8      	cmp	r8, r9
 800765e:	fa06 f603 	lsl.w	r6, r6, r3
 8007662:	ea46 0601 	orr.w	r6, r6, r1
 8007666:	bf94      	ite	ls
 8007668:	2100      	movls	r1, #0
 800766a:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 800766e:	f046 557f 	orr.w	r5, r6, #1069547520	; 0x3fc00000
 8007672:	fa02 f003 	lsl.w	r0, r2, r3
 8007676:	40f9      	lsrs	r1, r7
 8007678:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 800767c:	ea40 0401 	orr.w	r4, r0, r1
 8007680:	e7da      	b.n	8007638 <__b2d+0x50>
 8007682:	4614      	mov	r4, r2
 8007684:	ea46 0501 	orr.w	r5, r6, r1
 8007688:	e7d6      	b.n	8007638 <__b2d+0x50>
 800768a:	bf00      	nop
 800768c:	3ff00000 	.word	0x3ff00000

08007690 <__d2b>:
 8007690:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007694:	2101      	movs	r1, #1
 8007696:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 800769a:	4690      	mov	r8, r2
 800769c:	461d      	mov	r5, r3
 800769e:	f7ff fc0d 	bl	8006ebc <_Balloc>
 80076a2:	4604      	mov	r4, r0
 80076a4:	b930      	cbnz	r0, 80076b4 <__d2b+0x24>
 80076a6:	4602      	mov	r2, r0
 80076a8:	f240 310a 	movw	r1, #778	; 0x30a
 80076ac:	4b24      	ldr	r3, [pc, #144]	; (8007740 <__d2b+0xb0>)
 80076ae:	4825      	ldr	r0, [pc, #148]	; (8007744 <__d2b+0xb4>)
 80076b0:	f7ff f842 	bl	8006738 <__assert_func>
 80076b4:	f3c5 0313 	ubfx	r3, r5, #0, #20
 80076b8:	f3c5 550a 	ubfx	r5, r5, #20, #11
 80076bc:	bb2d      	cbnz	r5, 800770a <__d2b+0x7a>
 80076be:	9301      	str	r3, [sp, #4]
 80076c0:	f1b8 0300 	subs.w	r3, r8, #0
 80076c4:	d026      	beq.n	8007714 <__d2b+0x84>
 80076c6:	4668      	mov	r0, sp
 80076c8:	9300      	str	r3, [sp, #0]
 80076ca:	f7ff fd09 	bl	80070e0 <__lo0bits>
 80076ce:	9900      	ldr	r1, [sp, #0]
 80076d0:	b1f0      	cbz	r0, 8007710 <__d2b+0x80>
 80076d2:	9a01      	ldr	r2, [sp, #4]
 80076d4:	f1c0 0320 	rsb	r3, r0, #32
 80076d8:	fa02 f303 	lsl.w	r3, r2, r3
 80076dc:	430b      	orrs	r3, r1
 80076de:	40c2      	lsrs	r2, r0
 80076e0:	6163      	str	r3, [r4, #20]
 80076e2:	9201      	str	r2, [sp, #4]
 80076e4:	9b01      	ldr	r3, [sp, #4]
 80076e6:	2b00      	cmp	r3, #0
 80076e8:	bf14      	ite	ne
 80076ea:	2102      	movne	r1, #2
 80076ec:	2101      	moveq	r1, #1
 80076ee:	61a3      	str	r3, [r4, #24]
 80076f0:	6121      	str	r1, [r4, #16]
 80076f2:	b1c5      	cbz	r5, 8007726 <__d2b+0x96>
 80076f4:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 80076f8:	4405      	add	r5, r0
 80076fa:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80076fe:	603d      	str	r5, [r7, #0]
 8007700:	6030      	str	r0, [r6, #0]
 8007702:	4620      	mov	r0, r4
 8007704:	b002      	add	sp, #8
 8007706:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800770a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800770e:	e7d6      	b.n	80076be <__d2b+0x2e>
 8007710:	6161      	str	r1, [r4, #20]
 8007712:	e7e7      	b.n	80076e4 <__d2b+0x54>
 8007714:	a801      	add	r0, sp, #4
 8007716:	f7ff fce3 	bl	80070e0 <__lo0bits>
 800771a:	2101      	movs	r1, #1
 800771c:	9b01      	ldr	r3, [sp, #4]
 800771e:	6121      	str	r1, [r4, #16]
 8007720:	6163      	str	r3, [r4, #20]
 8007722:	3020      	adds	r0, #32
 8007724:	e7e5      	b.n	80076f2 <__d2b+0x62>
 8007726:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800772a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800772e:	6038      	str	r0, [r7, #0]
 8007730:	6918      	ldr	r0, [r3, #16]
 8007732:	f7ff fcb5 	bl	80070a0 <__hi0bits>
 8007736:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 800773a:	6031      	str	r1, [r6, #0]
 800773c:	e7e1      	b.n	8007702 <__d2b+0x72>
 800773e:	bf00      	nop
 8007740:	080089f1 	.word	0x080089f1
 8007744:	08008a7c 	.word	0x08008a7c

08007748 <__ratio>:
 8007748:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800774c:	4688      	mov	r8, r1
 800774e:	4669      	mov	r1, sp
 8007750:	4681      	mov	r9, r0
 8007752:	f7ff ff49 	bl	80075e8 <__b2d>
 8007756:	460f      	mov	r7, r1
 8007758:	4604      	mov	r4, r0
 800775a:	460d      	mov	r5, r1
 800775c:	4640      	mov	r0, r8
 800775e:	a901      	add	r1, sp, #4
 8007760:	f7ff ff42 	bl	80075e8 <__b2d>
 8007764:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8007768:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800776c:	468b      	mov	fp, r1
 800776e:	eba3 0c02 	sub.w	ip, r3, r2
 8007772:	e9dd 3200 	ldrd	r3, r2, [sp]
 8007776:	1a9b      	subs	r3, r3, r2
 8007778:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800777c:	2b00      	cmp	r3, #0
 800777e:	bfd5      	itete	le
 8007780:	460a      	movle	r2, r1
 8007782:	462a      	movgt	r2, r5
 8007784:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8007788:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800778c:	bfd8      	it	le
 800778e:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 8007792:	465b      	mov	r3, fp
 8007794:	4602      	mov	r2, r0
 8007796:	4639      	mov	r1, r7
 8007798:	4620      	mov	r0, r4
 800779a:	f7f9 f885 	bl	80008a8 <__aeabi_ddiv>
 800779e:	b003      	add	sp, #12
 80077a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080077a4 <__copybits>:
 80077a4:	3901      	subs	r1, #1
 80077a6:	b570      	push	{r4, r5, r6, lr}
 80077a8:	1149      	asrs	r1, r1, #5
 80077aa:	6914      	ldr	r4, [r2, #16]
 80077ac:	3101      	adds	r1, #1
 80077ae:	f102 0314 	add.w	r3, r2, #20
 80077b2:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80077b6:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80077ba:	1f05      	subs	r5, r0, #4
 80077bc:	42a3      	cmp	r3, r4
 80077be:	d30c      	bcc.n	80077da <__copybits+0x36>
 80077c0:	1aa3      	subs	r3, r4, r2
 80077c2:	3b11      	subs	r3, #17
 80077c4:	f023 0303 	bic.w	r3, r3, #3
 80077c8:	3211      	adds	r2, #17
 80077ca:	42a2      	cmp	r2, r4
 80077cc:	bf88      	it	hi
 80077ce:	2300      	movhi	r3, #0
 80077d0:	4418      	add	r0, r3
 80077d2:	2300      	movs	r3, #0
 80077d4:	4288      	cmp	r0, r1
 80077d6:	d305      	bcc.n	80077e4 <__copybits+0x40>
 80077d8:	bd70      	pop	{r4, r5, r6, pc}
 80077da:	f853 6b04 	ldr.w	r6, [r3], #4
 80077de:	f845 6f04 	str.w	r6, [r5, #4]!
 80077e2:	e7eb      	b.n	80077bc <__copybits+0x18>
 80077e4:	f840 3b04 	str.w	r3, [r0], #4
 80077e8:	e7f4      	b.n	80077d4 <__copybits+0x30>

080077ea <__any_on>:
 80077ea:	f100 0214 	add.w	r2, r0, #20
 80077ee:	6900      	ldr	r0, [r0, #16]
 80077f0:	114b      	asrs	r3, r1, #5
 80077f2:	4298      	cmp	r0, r3
 80077f4:	b510      	push	{r4, lr}
 80077f6:	db11      	blt.n	800781c <__any_on+0x32>
 80077f8:	dd0a      	ble.n	8007810 <__any_on+0x26>
 80077fa:	f011 011f 	ands.w	r1, r1, #31
 80077fe:	d007      	beq.n	8007810 <__any_on+0x26>
 8007800:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8007804:	fa24 f001 	lsr.w	r0, r4, r1
 8007808:	fa00 f101 	lsl.w	r1, r0, r1
 800780c:	428c      	cmp	r4, r1
 800780e:	d10b      	bne.n	8007828 <__any_on+0x3e>
 8007810:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8007814:	4293      	cmp	r3, r2
 8007816:	d803      	bhi.n	8007820 <__any_on+0x36>
 8007818:	2000      	movs	r0, #0
 800781a:	bd10      	pop	{r4, pc}
 800781c:	4603      	mov	r3, r0
 800781e:	e7f7      	b.n	8007810 <__any_on+0x26>
 8007820:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8007824:	2900      	cmp	r1, #0
 8007826:	d0f5      	beq.n	8007814 <__any_on+0x2a>
 8007828:	2001      	movs	r0, #1
 800782a:	e7f6      	b.n	800781a <__any_on+0x30>

0800782c <_calloc_r>:
 800782c:	b570      	push	{r4, r5, r6, lr}
 800782e:	fba1 5402 	umull	r5, r4, r1, r2
 8007832:	b934      	cbnz	r4, 8007842 <_calloc_r+0x16>
 8007834:	4629      	mov	r1, r5
 8007836:	f7fd ffbd 	bl	80057b4 <_malloc_r>
 800783a:	4606      	mov	r6, r0
 800783c:	b928      	cbnz	r0, 800784a <_calloc_r+0x1e>
 800783e:	4630      	mov	r0, r6
 8007840:	bd70      	pop	{r4, r5, r6, pc}
 8007842:	220c      	movs	r2, #12
 8007844:	2600      	movs	r6, #0
 8007846:	6002      	str	r2, [r0, #0]
 8007848:	e7f9      	b.n	800783e <_calloc_r+0x12>
 800784a:	462a      	mov	r2, r5
 800784c:	4621      	mov	r1, r4
 800784e:	f7fd ff41 	bl	80056d4 <memset>
 8007852:	e7f4      	b.n	800783e <_calloc_r+0x12>

08007854 <__sfputc_r>:
 8007854:	6893      	ldr	r3, [r2, #8]
 8007856:	b410      	push	{r4}
 8007858:	3b01      	subs	r3, #1
 800785a:	2b00      	cmp	r3, #0
 800785c:	6093      	str	r3, [r2, #8]
 800785e:	da07      	bge.n	8007870 <__sfputc_r+0x1c>
 8007860:	6994      	ldr	r4, [r2, #24]
 8007862:	42a3      	cmp	r3, r4
 8007864:	db01      	blt.n	800786a <__sfputc_r+0x16>
 8007866:	290a      	cmp	r1, #10
 8007868:	d102      	bne.n	8007870 <__sfputc_r+0x1c>
 800786a:	bc10      	pop	{r4}
 800786c:	f000 bafe 	b.w	8007e6c <__swbuf_r>
 8007870:	6813      	ldr	r3, [r2, #0]
 8007872:	1c58      	adds	r0, r3, #1
 8007874:	6010      	str	r0, [r2, #0]
 8007876:	7019      	strb	r1, [r3, #0]
 8007878:	4608      	mov	r0, r1
 800787a:	bc10      	pop	{r4}
 800787c:	4770      	bx	lr

0800787e <__sfputs_r>:
 800787e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007880:	4606      	mov	r6, r0
 8007882:	460f      	mov	r7, r1
 8007884:	4614      	mov	r4, r2
 8007886:	18d5      	adds	r5, r2, r3
 8007888:	42ac      	cmp	r4, r5
 800788a:	d101      	bne.n	8007890 <__sfputs_r+0x12>
 800788c:	2000      	movs	r0, #0
 800788e:	e007      	b.n	80078a0 <__sfputs_r+0x22>
 8007890:	463a      	mov	r2, r7
 8007892:	4630      	mov	r0, r6
 8007894:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007898:	f7ff ffdc 	bl	8007854 <__sfputc_r>
 800789c:	1c43      	adds	r3, r0, #1
 800789e:	d1f3      	bne.n	8007888 <__sfputs_r+0xa>
 80078a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080078a4 <_vfiprintf_r>:
 80078a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80078a8:	460d      	mov	r5, r1
 80078aa:	4614      	mov	r4, r2
 80078ac:	4698      	mov	r8, r3
 80078ae:	4606      	mov	r6, r0
 80078b0:	b09d      	sub	sp, #116	; 0x74
 80078b2:	b118      	cbz	r0, 80078bc <_vfiprintf_r+0x18>
 80078b4:	6983      	ldr	r3, [r0, #24]
 80078b6:	b90b      	cbnz	r3, 80078bc <_vfiprintf_r+0x18>
 80078b8:	f000 fcc4 	bl	8008244 <__sinit>
 80078bc:	4b89      	ldr	r3, [pc, #548]	; (8007ae4 <_vfiprintf_r+0x240>)
 80078be:	429d      	cmp	r5, r3
 80078c0:	d11b      	bne.n	80078fa <_vfiprintf_r+0x56>
 80078c2:	6875      	ldr	r5, [r6, #4]
 80078c4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80078c6:	07d9      	lsls	r1, r3, #31
 80078c8:	d405      	bmi.n	80078d6 <_vfiprintf_r+0x32>
 80078ca:	89ab      	ldrh	r3, [r5, #12]
 80078cc:	059a      	lsls	r2, r3, #22
 80078ce:	d402      	bmi.n	80078d6 <_vfiprintf_r+0x32>
 80078d0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80078d2:	f000 fd55 	bl	8008380 <__retarget_lock_acquire_recursive>
 80078d6:	89ab      	ldrh	r3, [r5, #12]
 80078d8:	071b      	lsls	r3, r3, #28
 80078da:	d501      	bpl.n	80078e0 <_vfiprintf_r+0x3c>
 80078dc:	692b      	ldr	r3, [r5, #16]
 80078de:	b9eb      	cbnz	r3, 800791c <_vfiprintf_r+0x78>
 80078e0:	4629      	mov	r1, r5
 80078e2:	4630      	mov	r0, r6
 80078e4:	f000 fb22 	bl	8007f2c <__swsetup_r>
 80078e8:	b1c0      	cbz	r0, 800791c <_vfiprintf_r+0x78>
 80078ea:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80078ec:	07dc      	lsls	r4, r3, #31
 80078ee:	d50e      	bpl.n	800790e <_vfiprintf_r+0x6a>
 80078f0:	f04f 30ff 	mov.w	r0, #4294967295
 80078f4:	b01d      	add	sp, #116	; 0x74
 80078f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80078fa:	4b7b      	ldr	r3, [pc, #492]	; (8007ae8 <_vfiprintf_r+0x244>)
 80078fc:	429d      	cmp	r5, r3
 80078fe:	d101      	bne.n	8007904 <_vfiprintf_r+0x60>
 8007900:	68b5      	ldr	r5, [r6, #8]
 8007902:	e7df      	b.n	80078c4 <_vfiprintf_r+0x20>
 8007904:	4b79      	ldr	r3, [pc, #484]	; (8007aec <_vfiprintf_r+0x248>)
 8007906:	429d      	cmp	r5, r3
 8007908:	bf08      	it	eq
 800790a:	68f5      	ldreq	r5, [r6, #12]
 800790c:	e7da      	b.n	80078c4 <_vfiprintf_r+0x20>
 800790e:	89ab      	ldrh	r3, [r5, #12]
 8007910:	0598      	lsls	r0, r3, #22
 8007912:	d4ed      	bmi.n	80078f0 <_vfiprintf_r+0x4c>
 8007914:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007916:	f000 fd34 	bl	8008382 <__retarget_lock_release_recursive>
 800791a:	e7e9      	b.n	80078f0 <_vfiprintf_r+0x4c>
 800791c:	2300      	movs	r3, #0
 800791e:	9309      	str	r3, [sp, #36]	; 0x24
 8007920:	2320      	movs	r3, #32
 8007922:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007926:	2330      	movs	r3, #48	; 0x30
 8007928:	f04f 0901 	mov.w	r9, #1
 800792c:	f8cd 800c 	str.w	r8, [sp, #12]
 8007930:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8007af0 <_vfiprintf_r+0x24c>
 8007934:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8007938:	4623      	mov	r3, r4
 800793a:	469a      	mov	sl, r3
 800793c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007940:	b10a      	cbz	r2, 8007946 <_vfiprintf_r+0xa2>
 8007942:	2a25      	cmp	r2, #37	; 0x25
 8007944:	d1f9      	bne.n	800793a <_vfiprintf_r+0x96>
 8007946:	ebba 0b04 	subs.w	fp, sl, r4
 800794a:	d00b      	beq.n	8007964 <_vfiprintf_r+0xc0>
 800794c:	465b      	mov	r3, fp
 800794e:	4622      	mov	r2, r4
 8007950:	4629      	mov	r1, r5
 8007952:	4630      	mov	r0, r6
 8007954:	f7ff ff93 	bl	800787e <__sfputs_r>
 8007958:	3001      	adds	r0, #1
 800795a:	f000 80aa 	beq.w	8007ab2 <_vfiprintf_r+0x20e>
 800795e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007960:	445a      	add	r2, fp
 8007962:	9209      	str	r2, [sp, #36]	; 0x24
 8007964:	f89a 3000 	ldrb.w	r3, [sl]
 8007968:	2b00      	cmp	r3, #0
 800796a:	f000 80a2 	beq.w	8007ab2 <_vfiprintf_r+0x20e>
 800796e:	2300      	movs	r3, #0
 8007970:	f04f 32ff 	mov.w	r2, #4294967295
 8007974:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007978:	f10a 0a01 	add.w	sl, sl, #1
 800797c:	9304      	str	r3, [sp, #16]
 800797e:	9307      	str	r3, [sp, #28]
 8007980:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8007984:	931a      	str	r3, [sp, #104]	; 0x68
 8007986:	4654      	mov	r4, sl
 8007988:	2205      	movs	r2, #5
 800798a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800798e:	4858      	ldr	r0, [pc, #352]	; (8007af0 <_vfiprintf_r+0x24c>)
 8007990:	f000 fd5e 	bl	8008450 <memchr>
 8007994:	9a04      	ldr	r2, [sp, #16]
 8007996:	b9d8      	cbnz	r0, 80079d0 <_vfiprintf_r+0x12c>
 8007998:	06d1      	lsls	r1, r2, #27
 800799a:	bf44      	itt	mi
 800799c:	2320      	movmi	r3, #32
 800799e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80079a2:	0713      	lsls	r3, r2, #28
 80079a4:	bf44      	itt	mi
 80079a6:	232b      	movmi	r3, #43	; 0x2b
 80079a8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80079ac:	f89a 3000 	ldrb.w	r3, [sl]
 80079b0:	2b2a      	cmp	r3, #42	; 0x2a
 80079b2:	d015      	beq.n	80079e0 <_vfiprintf_r+0x13c>
 80079b4:	4654      	mov	r4, sl
 80079b6:	2000      	movs	r0, #0
 80079b8:	f04f 0c0a 	mov.w	ip, #10
 80079bc:	9a07      	ldr	r2, [sp, #28]
 80079be:	4621      	mov	r1, r4
 80079c0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80079c4:	3b30      	subs	r3, #48	; 0x30
 80079c6:	2b09      	cmp	r3, #9
 80079c8:	d94e      	bls.n	8007a68 <_vfiprintf_r+0x1c4>
 80079ca:	b1b0      	cbz	r0, 80079fa <_vfiprintf_r+0x156>
 80079cc:	9207      	str	r2, [sp, #28]
 80079ce:	e014      	b.n	80079fa <_vfiprintf_r+0x156>
 80079d0:	eba0 0308 	sub.w	r3, r0, r8
 80079d4:	fa09 f303 	lsl.w	r3, r9, r3
 80079d8:	4313      	orrs	r3, r2
 80079da:	46a2      	mov	sl, r4
 80079dc:	9304      	str	r3, [sp, #16]
 80079de:	e7d2      	b.n	8007986 <_vfiprintf_r+0xe2>
 80079e0:	9b03      	ldr	r3, [sp, #12]
 80079e2:	1d19      	adds	r1, r3, #4
 80079e4:	681b      	ldr	r3, [r3, #0]
 80079e6:	9103      	str	r1, [sp, #12]
 80079e8:	2b00      	cmp	r3, #0
 80079ea:	bfbb      	ittet	lt
 80079ec:	425b      	neglt	r3, r3
 80079ee:	f042 0202 	orrlt.w	r2, r2, #2
 80079f2:	9307      	strge	r3, [sp, #28]
 80079f4:	9307      	strlt	r3, [sp, #28]
 80079f6:	bfb8      	it	lt
 80079f8:	9204      	strlt	r2, [sp, #16]
 80079fa:	7823      	ldrb	r3, [r4, #0]
 80079fc:	2b2e      	cmp	r3, #46	; 0x2e
 80079fe:	d10c      	bne.n	8007a1a <_vfiprintf_r+0x176>
 8007a00:	7863      	ldrb	r3, [r4, #1]
 8007a02:	2b2a      	cmp	r3, #42	; 0x2a
 8007a04:	d135      	bne.n	8007a72 <_vfiprintf_r+0x1ce>
 8007a06:	9b03      	ldr	r3, [sp, #12]
 8007a08:	3402      	adds	r4, #2
 8007a0a:	1d1a      	adds	r2, r3, #4
 8007a0c:	681b      	ldr	r3, [r3, #0]
 8007a0e:	9203      	str	r2, [sp, #12]
 8007a10:	2b00      	cmp	r3, #0
 8007a12:	bfb8      	it	lt
 8007a14:	f04f 33ff 	movlt.w	r3, #4294967295
 8007a18:	9305      	str	r3, [sp, #20]
 8007a1a:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8007af4 <_vfiprintf_r+0x250>
 8007a1e:	2203      	movs	r2, #3
 8007a20:	4650      	mov	r0, sl
 8007a22:	7821      	ldrb	r1, [r4, #0]
 8007a24:	f000 fd14 	bl	8008450 <memchr>
 8007a28:	b140      	cbz	r0, 8007a3c <_vfiprintf_r+0x198>
 8007a2a:	2340      	movs	r3, #64	; 0x40
 8007a2c:	eba0 000a 	sub.w	r0, r0, sl
 8007a30:	fa03 f000 	lsl.w	r0, r3, r0
 8007a34:	9b04      	ldr	r3, [sp, #16]
 8007a36:	3401      	adds	r4, #1
 8007a38:	4303      	orrs	r3, r0
 8007a3a:	9304      	str	r3, [sp, #16]
 8007a3c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007a40:	2206      	movs	r2, #6
 8007a42:	482d      	ldr	r0, [pc, #180]	; (8007af8 <_vfiprintf_r+0x254>)
 8007a44:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007a48:	f000 fd02 	bl	8008450 <memchr>
 8007a4c:	2800      	cmp	r0, #0
 8007a4e:	d03f      	beq.n	8007ad0 <_vfiprintf_r+0x22c>
 8007a50:	4b2a      	ldr	r3, [pc, #168]	; (8007afc <_vfiprintf_r+0x258>)
 8007a52:	bb1b      	cbnz	r3, 8007a9c <_vfiprintf_r+0x1f8>
 8007a54:	9b03      	ldr	r3, [sp, #12]
 8007a56:	3307      	adds	r3, #7
 8007a58:	f023 0307 	bic.w	r3, r3, #7
 8007a5c:	3308      	adds	r3, #8
 8007a5e:	9303      	str	r3, [sp, #12]
 8007a60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007a62:	443b      	add	r3, r7
 8007a64:	9309      	str	r3, [sp, #36]	; 0x24
 8007a66:	e767      	b.n	8007938 <_vfiprintf_r+0x94>
 8007a68:	460c      	mov	r4, r1
 8007a6a:	2001      	movs	r0, #1
 8007a6c:	fb0c 3202 	mla	r2, ip, r2, r3
 8007a70:	e7a5      	b.n	80079be <_vfiprintf_r+0x11a>
 8007a72:	2300      	movs	r3, #0
 8007a74:	f04f 0c0a 	mov.w	ip, #10
 8007a78:	4619      	mov	r1, r3
 8007a7a:	3401      	adds	r4, #1
 8007a7c:	9305      	str	r3, [sp, #20]
 8007a7e:	4620      	mov	r0, r4
 8007a80:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007a84:	3a30      	subs	r2, #48	; 0x30
 8007a86:	2a09      	cmp	r2, #9
 8007a88:	d903      	bls.n	8007a92 <_vfiprintf_r+0x1ee>
 8007a8a:	2b00      	cmp	r3, #0
 8007a8c:	d0c5      	beq.n	8007a1a <_vfiprintf_r+0x176>
 8007a8e:	9105      	str	r1, [sp, #20]
 8007a90:	e7c3      	b.n	8007a1a <_vfiprintf_r+0x176>
 8007a92:	4604      	mov	r4, r0
 8007a94:	2301      	movs	r3, #1
 8007a96:	fb0c 2101 	mla	r1, ip, r1, r2
 8007a9a:	e7f0      	b.n	8007a7e <_vfiprintf_r+0x1da>
 8007a9c:	ab03      	add	r3, sp, #12
 8007a9e:	9300      	str	r3, [sp, #0]
 8007aa0:	462a      	mov	r2, r5
 8007aa2:	4630      	mov	r0, r6
 8007aa4:	4b16      	ldr	r3, [pc, #88]	; (8007b00 <_vfiprintf_r+0x25c>)
 8007aa6:	a904      	add	r1, sp, #16
 8007aa8:	f3af 8000 	nop.w
 8007aac:	4607      	mov	r7, r0
 8007aae:	1c78      	adds	r0, r7, #1
 8007ab0:	d1d6      	bne.n	8007a60 <_vfiprintf_r+0x1bc>
 8007ab2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007ab4:	07d9      	lsls	r1, r3, #31
 8007ab6:	d405      	bmi.n	8007ac4 <_vfiprintf_r+0x220>
 8007ab8:	89ab      	ldrh	r3, [r5, #12]
 8007aba:	059a      	lsls	r2, r3, #22
 8007abc:	d402      	bmi.n	8007ac4 <_vfiprintf_r+0x220>
 8007abe:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007ac0:	f000 fc5f 	bl	8008382 <__retarget_lock_release_recursive>
 8007ac4:	89ab      	ldrh	r3, [r5, #12]
 8007ac6:	065b      	lsls	r3, r3, #25
 8007ac8:	f53f af12 	bmi.w	80078f0 <_vfiprintf_r+0x4c>
 8007acc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007ace:	e711      	b.n	80078f4 <_vfiprintf_r+0x50>
 8007ad0:	ab03      	add	r3, sp, #12
 8007ad2:	9300      	str	r3, [sp, #0]
 8007ad4:	462a      	mov	r2, r5
 8007ad6:	4630      	mov	r0, r6
 8007ad8:	4b09      	ldr	r3, [pc, #36]	; (8007b00 <_vfiprintf_r+0x25c>)
 8007ada:	a904      	add	r1, sp, #16
 8007adc:	f000 f882 	bl	8007be4 <_printf_i>
 8007ae0:	e7e4      	b.n	8007aac <_vfiprintf_r+0x208>
 8007ae2:	bf00      	nop
 8007ae4:	08008c28 	.word	0x08008c28
 8007ae8:	08008c48 	.word	0x08008c48
 8007aec:	08008c08 	.word	0x08008c08
 8007af0:	08008bd4 	.word	0x08008bd4
 8007af4:	08008bda 	.word	0x08008bda
 8007af8:	08008bde 	.word	0x08008bde
 8007afc:	00000000 	.word	0x00000000
 8007b00:	0800787f 	.word	0x0800787f

08007b04 <_printf_common>:
 8007b04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007b08:	4616      	mov	r6, r2
 8007b0a:	4699      	mov	r9, r3
 8007b0c:	688a      	ldr	r2, [r1, #8]
 8007b0e:	690b      	ldr	r3, [r1, #16]
 8007b10:	4607      	mov	r7, r0
 8007b12:	4293      	cmp	r3, r2
 8007b14:	bfb8      	it	lt
 8007b16:	4613      	movlt	r3, r2
 8007b18:	6033      	str	r3, [r6, #0]
 8007b1a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8007b1e:	460c      	mov	r4, r1
 8007b20:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8007b24:	b10a      	cbz	r2, 8007b2a <_printf_common+0x26>
 8007b26:	3301      	adds	r3, #1
 8007b28:	6033      	str	r3, [r6, #0]
 8007b2a:	6823      	ldr	r3, [r4, #0]
 8007b2c:	0699      	lsls	r1, r3, #26
 8007b2e:	bf42      	ittt	mi
 8007b30:	6833      	ldrmi	r3, [r6, #0]
 8007b32:	3302      	addmi	r3, #2
 8007b34:	6033      	strmi	r3, [r6, #0]
 8007b36:	6825      	ldr	r5, [r4, #0]
 8007b38:	f015 0506 	ands.w	r5, r5, #6
 8007b3c:	d106      	bne.n	8007b4c <_printf_common+0x48>
 8007b3e:	f104 0a19 	add.w	sl, r4, #25
 8007b42:	68e3      	ldr	r3, [r4, #12]
 8007b44:	6832      	ldr	r2, [r6, #0]
 8007b46:	1a9b      	subs	r3, r3, r2
 8007b48:	42ab      	cmp	r3, r5
 8007b4a:	dc28      	bgt.n	8007b9e <_printf_common+0x9a>
 8007b4c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8007b50:	1e13      	subs	r3, r2, #0
 8007b52:	6822      	ldr	r2, [r4, #0]
 8007b54:	bf18      	it	ne
 8007b56:	2301      	movne	r3, #1
 8007b58:	0692      	lsls	r2, r2, #26
 8007b5a:	d42d      	bmi.n	8007bb8 <_printf_common+0xb4>
 8007b5c:	4649      	mov	r1, r9
 8007b5e:	4638      	mov	r0, r7
 8007b60:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8007b64:	47c0      	blx	r8
 8007b66:	3001      	adds	r0, #1
 8007b68:	d020      	beq.n	8007bac <_printf_common+0xa8>
 8007b6a:	6823      	ldr	r3, [r4, #0]
 8007b6c:	68e5      	ldr	r5, [r4, #12]
 8007b6e:	f003 0306 	and.w	r3, r3, #6
 8007b72:	2b04      	cmp	r3, #4
 8007b74:	bf18      	it	ne
 8007b76:	2500      	movne	r5, #0
 8007b78:	6832      	ldr	r2, [r6, #0]
 8007b7a:	f04f 0600 	mov.w	r6, #0
 8007b7e:	68a3      	ldr	r3, [r4, #8]
 8007b80:	bf08      	it	eq
 8007b82:	1aad      	subeq	r5, r5, r2
 8007b84:	6922      	ldr	r2, [r4, #16]
 8007b86:	bf08      	it	eq
 8007b88:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8007b8c:	4293      	cmp	r3, r2
 8007b8e:	bfc4      	itt	gt
 8007b90:	1a9b      	subgt	r3, r3, r2
 8007b92:	18ed      	addgt	r5, r5, r3
 8007b94:	341a      	adds	r4, #26
 8007b96:	42b5      	cmp	r5, r6
 8007b98:	d11a      	bne.n	8007bd0 <_printf_common+0xcc>
 8007b9a:	2000      	movs	r0, #0
 8007b9c:	e008      	b.n	8007bb0 <_printf_common+0xac>
 8007b9e:	2301      	movs	r3, #1
 8007ba0:	4652      	mov	r2, sl
 8007ba2:	4649      	mov	r1, r9
 8007ba4:	4638      	mov	r0, r7
 8007ba6:	47c0      	blx	r8
 8007ba8:	3001      	adds	r0, #1
 8007baa:	d103      	bne.n	8007bb4 <_printf_common+0xb0>
 8007bac:	f04f 30ff 	mov.w	r0, #4294967295
 8007bb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007bb4:	3501      	adds	r5, #1
 8007bb6:	e7c4      	b.n	8007b42 <_printf_common+0x3e>
 8007bb8:	2030      	movs	r0, #48	; 0x30
 8007bba:	18e1      	adds	r1, r4, r3
 8007bbc:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8007bc0:	1c5a      	adds	r2, r3, #1
 8007bc2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8007bc6:	4422      	add	r2, r4
 8007bc8:	3302      	adds	r3, #2
 8007bca:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8007bce:	e7c5      	b.n	8007b5c <_printf_common+0x58>
 8007bd0:	2301      	movs	r3, #1
 8007bd2:	4622      	mov	r2, r4
 8007bd4:	4649      	mov	r1, r9
 8007bd6:	4638      	mov	r0, r7
 8007bd8:	47c0      	blx	r8
 8007bda:	3001      	adds	r0, #1
 8007bdc:	d0e6      	beq.n	8007bac <_printf_common+0xa8>
 8007bde:	3601      	adds	r6, #1
 8007be0:	e7d9      	b.n	8007b96 <_printf_common+0x92>
	...

08007be4 <_printf_i>:
 8007be4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007be8:	7e0f      	ldrb	r7, [r1, #24]
 8007bea:	4691      	mov	r9, r2
 8007bec:	2f78      	cmp	r7, #120	; 0x78
 8007bee:	4680      	mov	r8, r0
 8007bf0:	460c      	mov	r4, r1
 8007bf2:	469a      	mov	sl, r3
 8007bf4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8007bf6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8007bfa:	d807      	bhi.n	8007c0c <_printf_i+0x28>
 8007bfc:	2f62      	cmp	r7, #98	; 0x62
 8007bfe:	d80a      	bhi.n	8007c16 <_printf_i+0x32>
 8007c00:	2f00      	cmp	r7, #0
 8007c02:	f000 80d9 	beq.w	8007db8 <_printf_i+0x1d4>
 8007c06:	2f58      	cmp	r7, #88	; 0x58
 8007c08:	f000 80a4 	beq.w	8007d54 <_printf_i+0x170>
 8007c0c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8007c10:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8007c14:	e03a      	b.n	8007c8c <_printf_i+0xa8>
 8007c16:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8007c1a:	2b15      	cmp	r3, #21
 8007c1c:	d8f6      	bhi.n	8007c0c <_printf_i+0x28>
 8007c1e:	a101      	add	r1, pc, #4	; (adr r1, 8007c24 <_printf_i+0x40>)
 8007c20:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8007c24:	08007c7d 	.word	0x08007c7d
 8007c28:	08007c91 	.word	0x08007c91
 8007c2c:	08007c0d 	.word	0x08007c0d
 8007c30:	08007c0d 	.word	0x08007c0d
 8007c34:	08007c0d 	.word	0x08007c0d
 8007c38:	08007c0d 	.word	0x08007c0d
 8007c3c:	08007c91 	.word	0x08007c91
 8007c40:	08007c0d 	.word	0x08007c0d
 8007c44:	08007c0d 	.word	0x08007c0d
 8007c48:	08007c0d 	.word	0x08007c0d
 8007c4c:	08007c0d 	.word	0x08007c0d
 8007c50:	08007d9f 	.word	0x08007d9f
 8007c54:	08007cc1 	.word	0x08007cc1
 8007c58:	08007d81 	.word	0x08007d81
 8007c5c:	08007c0d 	.word	0x08007c0d
 8007c60:	08007c0d 	.word	0x08007c0d
 8007c64:	08007dc1 	.word	0x08007dc1
 8007c68:	08007c0d 	.word	0x08007c0d
 8007c6c:	08007cc1 	.word	0x08007cc1
 8007c70:	08007c0d 	.word	0x08007c0d
 8007c74:	08007c0d 	.word	0x08007c0d
 8007c78:	08007d89 	.word	0x08007d89
 8007c7c:	682b      	ldr	r3, [r5, #0]
 8007c7e:	1d1a      	adds	r2, r3, #4
 8007c80:	681b      	ldr	r3, [r3, #0]
 8007c82:	602a      	str	r2, [r5, #0]
 8007c84:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8007c88:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8007c8c:	2301      	movs	r3, #1
 8007c8e:	e0a4      	b.n	8007dda <_printf_i+0x1f6>
 8007c90:	6820      	ldr	r0, [r4, #0]
 8007c92:	6829      	ldr	r1, [r5, #0]
 8007c94:	0606      	lsls	r6, r0, #24
 8007c96:	f101 0304 	add.w	r3, r1, #4
 8007c9a:	d50a      	bpl.n	8007cb2 <_printf_i+0xce>
 8007c9c:	680e      	ldr	r6, [r1, #0]
 8007c9e:	602b      	str	r3, [r5, #0]
 8007ca0:	2e00      	cmp	r6, #0
 8007ca2:	da03      	bge.n	8007cac <_printf_i+0xc8>
 8007ca4:	232d      	movs	r3, #45	; 0x2d
 8007ca6:	4276      	negs	r6, r6
 8007ca8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007cac:	230a      	movs	r3, #10
 8007cae:	485e      	ldr	r0, [pc, #376]	; (8007e28 <_printf_i+0x244>)
 8007cb0:	e019      	b.n	8007ce6 <_printf_i+0x102>
 8007cb2:	680e      	ldr	r6, [r1, #0]
 8007cb4:	f010 0f40 	tst.w	r0, #64	; 0x40
 8007cb8:	602b      	str	r3, [r5, #0]
 8007cba:	bf18      	it	ne
 8007cbc:	b236      	sxthne	r6, r6
 8007cbe:	e7ef      	b.n	8007ca0 <_printf_i+0xbc>
 8007cc0:	682b      	ldr	r3, [r5, #0]
 8007cc2:	6820      	ldr	r0, [r4, #0]
 8007cc4:	1d19      	adds	r1, r3, #4
 8007cc6:	6029      	str	r1, [r5, #0]
 8007cc8:	0601      	lsls	r1, r0, #24
 8007cca:	d501      	bpl.n	8007cd0 <_printf_i+0xec>
 8007ccc:	681e      	ldr	r6, [r3, #0]
 8007cce:	e002      	b.n	8007cd6 <_printf_i+0xf2>
 8007cd0:	0646      	lsls	r6, r0, #25
 8007cd2:	d5fb      	bpl.n	8007ccc <_printf_i+0xe8>
 8007cd4:	881e      	ldrh	r6, [r3, #0]
 8007cd6:	2f6f      	cmp	r7, #111	; 0x6f
 8007cd8:	bf0c      	ite	eq
 8007cda:	2308      	moveq	r3, #8
 8007cdc:	230a      	movne	r3, #10
 8007cde:	4852      	ldr	r0, [pc, #328]	; (8007e28 <_printf_i+0x244>)
 8007ce0:	2100      	movs	r1, #0
 8007ce2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8007ce6:	6865      	ldr	r5, [r4, #4]
 8007ce8:	2d00      	cmp	r5, #0
 8007cea:	bfa8      	it	ge
 8007cec:	6821      	ldrge	r1, [r4, #0]
 8007cee:	60a5      	str	r5, [r4, #8]
 8007cf0:	bfa4      	itt	ge
 8007cf2:	f021 0104 	bicge.w	r1, r1, #4
 8007cf6:	6021      	strge	r1, [r4, #0]
 8007cf8:	b90e      	cbnz	r6, 8007cfe <_printf_i+0x11a>
 8007cfa:	2d00      	cmp	r5, #0
 8007cfc:	d04d      	beq.n	8007d9a <_printf_i+0x1b6>
 8007cfe:	4615      	mov	r5, r2
 8007d00:	fbb6 f1f3 	udiv	r1, r6, r3
 8007d04:	fb03 6711 	mls	r7, r3, r1, r6
 8007d08:	5dc7      	ldrb	r7, [r0, r7]
 8007d0a:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8007d0e:	4637      	mov	r7, r6
 8007d10:	42bb      	cmp	r3, r7
 8007d12:	460e      	mov	r6, r1
 8007d14:	d9f4      	bls.n	8007d00 <_printf_i+0x11c>
 8007d16:	2b08      	cmp	r3, #8
 8007d18:	d10b      	bne.n	8007d32 <_printf_i+0x14e>
 8007d1a:	6823      	ldr	r3, [r4, #0]
 8007d1c:	07de      	lsls	r6, r3, #31
 8007d1e:	d508      	bpl.n	8007d32 <_printf_i+0x14e>
 8007d20:	6923      	ldr	r3, [r4, #16]
 8007d22:	6861      	ldr	r1, [r4, #4]
 8007d24:	4299      	cmp	r1, r3
 8007d26:	bfde      	ittt	le
 8007d28:	2330      	movle	r3, #48	; 0x30
 8007d2a:	f805 3c01 	strble.w	r3, [r5, #-1]
 8007d2e:	f105 35ff 	addle.w	r5, r5, #4294967295
 8007d32:	1b52      	subs	r2, r2, r5
 8007d34:	6122      	str	r2, [r4, #16]
 8007d36:	464b      	mov	r3, r9
 8007d38:	4621      	mov	r1, r4
 8007d3a:	4640      	mov	r0, r8
 8007d3c:	f8cd a000 	str.w	sl, [sp]
 8007d40:	aa03      	add	r2, sp, #12
 8007d42:	f7ff fedf 	bl	8007b04 <_printf_common>
 8007d46:	3001      	adds	r0, #1
 8007d48:	d14c      	bne.n	8007de4 <_printf_i+0x200>
 8007d4a:	f04f 30ff 	mov.w	r0, #4294967295
 8007d4e:	b004      	add	sp, #16
 8007d50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007d54:	4834      	ldr	r0, [pc, #208]	; (8007e28 <_printf_i+0x244>)
 8007d56:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8007d5a:	6829      	ldr	r1, [r5, #0]
 8007d5c:	6823      	ldr	r3, [r4, #0]
 8007d5e:	f851 6b04 	ldr.w	r6, [r1], #4
 8007d62:	6029      	str	r1, [r5, #0]
 8007d64:	061d      	lsls	r5, r3, #24
 8007d66:	d514      	bpl.n	8007d92 <_printf_i+0x1ae>
 8007d68:	07df      	lsls	r7, r3, #31
 8007d6a:	bf44      	itt	mi
 8007d6c:	f043 0320 	orrmi.w	r3, r3, #32
 8007d70:	6023      	strmi	r3, [r4, #0]
 8007d72:	b91e      	cbnz	r6, 8007d7c <_printf_i+0x198>
 8007d74:	6823      	ldr	r3, [r4, #0]
 8007d76:	f023 0320 	bic.w	r3, r3, #32
 8007d7a:	6023      	str	r3, [r4, #0]
 8007d7c:	2310      	movs	r3, #16
 8007d7e:	e7af      	b.n	8007ce0 <_printf_i+0xfc>
 8007d80:	6823      	ldr	r3, [r4, #0]
 8007d82:	f043 0320 	orr.w	r3, r3, #32
 8007d86:	6023      	str	r3, [r4, #0]
 8007d88:	2378      	movs	r3, #120	; 0x78
 8007d8a:	4828      	ldr	r0, [pc, #160]	; (8007e2c <_printf_i+0x248>)
 8007d8c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8007d90:	e7e3      	b.n	8007d5a <_printf_i+0x176>
 8007d92:	0659      	lsls	r1, r3, #25
 8007d94:	bf48      	it	mi
 8007d96:	b2b6      	uxthmi	r6, r6
 8007d98:	e7e6      	b.n	8007d68 <_printf_i+0x184>
 8007d9a:	4615      	mov	r5, r2
 8007d9c:	e7bb      	b.n	8007d16 <_printf_i+0x132>
 8007d9e:	682b      	ldr	r3, [r5, #0]
 8007da0:	6826      	ldr	r6, [r4, #0]
 8007da2:	1d18      	adds	r0, r3, #4
 8007da4:	6961      	ldr	r1, [r4, #20]
 8007da6:	6028      	str	r0, [r5, #0]
 8007da8:	0635      	lsls	r5, r6, #24
 8007daa:	681b      	ldr	r3, [r3, #0]
 8007dac:	d501      	bpl.n	8007db2 <_printf_i+0x1ce>
 8007dae:	6019      	str	r1, [r3, #0]
 8007db0:	e002      	b.n	8007db8 <_printf_i+0x1d4>
 8007db2:	0670      	lsls	r0, r6, #25
 8007db4:	d5fb      	bpl.n	8007dae <_printf_i+0x1ca>
 8007db6:	8019      	strh	r1, [r3, #0]
 8007db8:	2300      	movs	r3, #0
 8007dba:	4615      	mov	r5, r2
 8007dbc:	6123      	str	r3, [r4, #16]
 8007dbe:	e7ba      	b.n	8007d36 <_printf_i+0x152>
 8007dc0:	682b      	ldr	r3, [r5, #0]
 8007dc2:	2100      	movs	r1, #0
 8007dc4:	1d1a      	adds	r2, r3, #4
 8007dc6:	602a      	str	r2, [r5, #0]
 8007dc8:	681d      	ldr	r5, [r3, #0]
 8007dca:	6862      	ldr	r2, [r4, #4]
 8007dcc:	4628      	mov	r0, r5
 8007dce:	f000 fb3f 	bl	8008450 <memchr>
 8007dd2:	b108      	cbz	r0, 8007dd8 <_printf_i+0x1f4>
 8007dd4:	1b40      	subs	r0, r0, r5
 8007dd6:	6060      	str	r0, [r4, #4]
 8007dd8:	6863      	ldr	r3, [r4, #4]
 8007dda:	6123      	str	r3, [r4, #16]
 8007ddc:	2300      	movs	r3, #0
 8007dde:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007de2:	e7a8      	b.n	8007d36 <_printf_i+0x152>
 8007de4:	462a      	mov	r2, r5
 8007de6:	4649      	mov	r1, r9
 8007de8:	4640      	mov	r0, r8
 8007dea:	6923      	ldr	r3, [r4, #16]
 8007dec:	47d0      	blx	sl
 8007dee:	3001      	adds	r0, #1
 8007df0:	d0ab      	beq.n	8007d4a <_printf_i+0x166>
 8007df2:	6823      	ldr	r3, [r4, #0]
 8007df4:	079b      	lsls	r3, r3, #30
 8007df6:	d413      	bmi.n	8007e20 <_printf_i+0x23c>
 8007df8:	68e0      	ldr	r0, [r4, #12]
 8007dfa:	9b03      	ldr	r3, [sp, #12]
 8007dfc:	4298      	cmp	r0, r3
 8007dfe:	bfb8      	it	lt
 8007e00:	4618      	movlt	r0, r3
 8007e02:	e7a4      	b.n	8007d4e <_printf_i+0x16a>
 8007e04:	2301      	movs	r3, #1
 8007e06:	4632      	mov	r2, r6
 8007e08:	4649      	mov	r1, r9
 8007e0a:	4640      	mov	r0, r8
 8007e0c:	47d0      	blx	sl
 8007e0e:	3001      	adds	r0, #1
 8007e10:	d09b      	beq.n	8007d4a <_printf_i+0x166>
 8007e12:	3501      	adds	r5, #1
 8007e14:	68e3      	ldr	r3, [r4, #12]
 8007e16:	9903      	ldr	r1, [sp, #12]
 8007e18:	1a5b      	subs	r3, r3, r1
 8007e1a:	42ab      	cmp	r3, r5
 8007e1c:	dcf2      	bgt.n	8007e04 <_printf_i+0x220>
 8007e1e:	e7eb      	b.n	8007df8 <_printf_i+0x214>
 8007e20:	2500      	movs	r5, #0
 8007e22:	f104 0619 	add.w	r6, r4, #25
 8007e26:	e7f5      	b.n	8007e14 <_printf_i+0x230>
 8007e28:	08008be5 	.word	0x08008be5
 8007e2c:	08008bf6 	.word	0x08008bf6

08007e30 <nan>:
 8007e30:	2000      	movs	r0, #0
 8007e32:	4901      	ldr	r1, [pc, #4]	; (8007e38 <nan+0x8>)
 8007e34:	4770      	bx	lr
 8007e36:	bf00      	nop
 8007e38:	7ff80000 	.word	0x7ff80000

08007e3c <nanf>:
 8007e3c:	4800      	ldr	r0, [pc, #0]	; (8007e40 <nanf+0x4>)
 8007e3e:	4770      	bx	lr
 8007e40:	7fc00000 	.word	0x7fc00000

08007e44 <strncmp>:
 8007e44:	4603      	mov	r3, r0
 8007e46:	b510      	push	{r4, lr}
 8007e48:	b172      	cbz	r2, 8007e68 <strncmp+0x24>
 8007e4a:	3901      	subs	r1, #1
 8007e4c:	1884      	adds	r4, r0, r2
 8007e4e:	f813 0b01 	ldrb.w	r0, [r3], #1
 8007e52:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8007e56:	4290      	cmp	r0, r2
 8007e58:	d101      	bne.n	8007e5e <strncmp+0x1a>
 8007e5a:	42a3      	cmp	r3, r4
 8007e5c:	d101      	bne.n	8007e62 <strncmp+0x1e>
 8007e5e:	1a80      	subs	r0, r0, r2
 8007e60:	bd10      	pop	{r4, pc}
 8007e62:	2800      	cmp	r0, #0
 8007e64:	d1f3      	bne.n	8007e4e <strncmp+0xa>
 8007e66:	e7fa      	b.n	8007e5e <strncmp+0x1a>
 8007e68:	4610      	mov	r0, r2
 8007e6a:	e7f9      	b.n	8007e60 <strncmp+0x1c>

08007e6c <__swbuf_r>:
 8007e6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007e6e:	460e      	mov	r6, r1
 8007e70:	4614      	mov	r4, r2
 8007e72:	4605      	mov	r5, r0
 8007e74:	b118      	cbz	r0, 8007e7e <__swbuf_r+0x12>
 8007e76:	6983      	ldr	r3, [r0, #24]
 8007e78:	b90b      	cbnz	r3, 8007e7e <__swbuf_r+0x12>
 8007e7a:	f000 f9e3 	bl	8008244 <__sinit>
 8007e7e:	4b21      	ldr	r3, [pc, #132]	; (8007f04 <__swbuf_r+0x98>)
 8007e80:	429c      	cmp	r4, r3
 8007e82:	d12b      	bne.n	8007edc <__swbuf_r+0x70>
 8007e84:	686c      	ldr	r4, [r5, #4]
 8007e86:	69a3      	ldr	r3, [r4, #24]
 8007e88:	60a3      	str	r3, [r4, #8]
 8007e8a:	89a3      	ldrh	r3, [r4, #12]
 8007e8c:	071a      	lsls	r2, r3, #28
 8007e8e:	d52f      	bpl.n	8007ef0 <__swbuf_r+0x84>
 8007e90:	6923      	ldr	r3, [r4, #16]
 8007e92:	b36b      	cbz	r3, 8007ef0 <__swbuf_r+0x84>
 8007e94:	6923      	ldr	r3, [r4, #16]
 8007e96:	6820      	ldr	r0, [r4, #0]
 8007e98:	b2f6      	uxtb	r6, r6
 8007e9a:	1ac0      	subs	r0, r0, r3
 8007e9c:	6963      	ldr	r3, [r4, #20]
 8007e9e:	4637      	mov	r7, r6
 8007ea0:	4283      	cmp	r3, r0
 8007ea2:	dc04      	bgt.n	8007eae <__swbuf_r+0x42>
 8007ea4:	4621      	mov	r1, r4
 8007ea6:	4628      	mov	r0, r5
 8007ea8:	f000 f938 	bl	800811c <_fflush_r>
 8007eac:	bb30      	cbnz	r0, 8007efc <__swbuf_r+0x90>
 8007eae:	68a3      	ldr	r3, [r4, #8]
 8007eb0:	3001      	adds	r0, #1
 8007eb2:	3b01      	subs	r3, #1
 8007eb4:	60a3      	str	r3, [r4, #8]
 8007eb6:	6823      	ldr	r3, [r4, #0]
 8007eb8:	1c5a      	adds	r2, r3, #1
 8007eba:	6022      	str	r2, [r4, #0]
 8007ebc:	701e      	strb	r6, [r3, #0]
 8007ebe:	6963      	ldr	r3, [r4, #20]
 8007ec0:	4283      	cmp	r3, r0
 8007ec2:	d004      	beq.n	8007ece <__swbuf_r+0x62>
 8007ec4:	89a3      	ldrh	r3, [r4, #12]
 8007ec6:	07db      	lsls	r3, r3, #31
 8007ec8:	d506      	bpl.n	8007ed8 <__swbuf_r+0x6c>
 8007eca:	2e0a      	cmp	r6, #10
 8007ecc:	d104      	bne.n	8007ed8 <__swbuf_r+0x6c>
 8007ece:	4621      	mov	r1, r4
 8007ed0:	4628      	mov	r0, r5
 8007ed2:	f000 f923 	bl	800811c <_fflush_r>
 8007ed6:	b988      	cbnz	r0, 8007efc <__swbuf_r+0x90>
 8007ed8:	4638      	mov	r0, r7
 8007eda:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007edc:	4b0a      	ldr	r3, [pc, #40]	; (8007f08 <__swbuf_r+0x9c>)
 8007ede:	429c      	cmp	r4, r3
 8007ee0:	d101      	bne.n	8007ee6 <__swbuf_r+0x7a>
 8007ee2:	68ac      	ldr	r4, [r5, #8]
 8007ee4:	e7cf      	b.n	8007e86 <__swbuf_r+0x1a>
 8007ee6:	4b09      	ldr	r3, [pc, #36]	; (8007f0c <__swbuf_r+0xa0>)
 8007ee8:	429c      	cmp	r4, r3
 8007eea:	bf08      	it	eq
 8007eec:	68ec      	ldreq	r4, [r5, #12]
 8007eee:	e7ca      	b.n	8007e86 <__swbuf_r+0x1a>
 8007ef0:	4621      	mov	r1, r4
 8007ef2:	4628      	mov	r0, r5
 8007ef4:	f000 f81a 	bl	8007f2c <__swsetup_r>
 8007ef8:	2800      	cmp	r0, #0
 8007efa:	d0cb      	beq.n	8007e94 <__swbuf_r+0x28>
 8007efc:	f04f 37ff 	mov.w	r7, #4294967295
 8007f00:	e7ea      	b.n	8007ed8 <__swbuf_r+0x6c>
 8007f02:	bf00      	nop
 8007f04:	08008c28 	.word	0x08008c28
 8007f08:	08008c48 	.word	0x08008c48
 8007f0c:	08008c08 	.word	0x08008c08

08007f10 <__ascii_wctomb>:
 8007f10:	4603      	mov	r3, r0
 8007f12:	4608      	mov	r0, r1
 8007f14:	b141      	cbz	r1, 8007f28 <__ascii_wctomb+0x18>
 8007f16:	2aff      	cmp	r2, #255	; 0xff
 8007f18:	d904      	bls.n	8007f24 <__ascii_wctomb+0x14>
 8007f1a:	228a      	movs	r2, #138	; 0x8a
 8007f1c:	f04f 30ff 	mov.w	r0, #4294967295
 8007f20:	601a      	str	r2, [r3, #0]
 8007f22:	4770      	bx	lr
 8007f24:	2001      	movs	r0, #1
 8007f26:	700a      	strb	r2, [r1, #0]
 8007f28:	4770      	bx	lr
	...

08007f2c <__swsetup_r>:
 8007f2c:	4b32      	ldr	r3, [pc, #200]	; (8007ff8 <__swsetup_r+0xcc>)
 8007f2e:	b570      	push	{r4, r5, r6, lr}
 8007f30:	681d      	ldr	r5, [r3, #0]
 8007f32:	4606      	mov	r6, r0
 8007f34:	460c      	mov	r4, r1
 8007f36:	b125      	cbz	r5, 8007f42 <__swsetup_r+0x16>
 8007f38:	69ab      	ldr	r3, [r5, #24]
 8007f3a:	b913      	cbnz	r3, 8007f42 <__swsetup_r+0x16>
 8007f3c:	4628      	mov	r0, r5
 8007f3e:	f000 f981 	bl	8008244 <__sinit>
 8007f42:	4b2e      	ldr	r3, [pc, #184]	; (8007ffc <__swsetup_r+0xd0>)
 8007f44:	429c      	cmp	r4, r3
 8007f46:	d10f      	bne.n	8007f68 <__swsetup_r+0x3c>
 8007f48:	686c      	ldr	r4, [r5, #4]
 8007f4a:	89a3      	ldrh	r3, [r4, #12]
 8007f4c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8007f50:	0719      	lsls	r1, r3, #28
 8007f52:	d42c      	bmi.n	8007fae <__swsetup_r+0x82>
 8007f54:	06dd      	lsls	r5, r3, #27
 8007f56:	d411      	bmi.n	8007f7c <__swsetup_r+0x50>
 8007f58:	2309      	movs	r3, #9
 8007f5a:	6033      	str	r3, [r6, #0]
 8007f5c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8007f60:	f04f 30ff 	mov.w	r0, #4294967295
 8007f64:	81a3      	strh	r3, [r4, #12]
 8007f66:	e03e      	b.n	8007fe6 <__swsetup_r+0xba>
 8007f68:	4b25      	ldr	r3, [pc, #148]	; (8008000 <__swsetup_r+0xd4>)
 8007f6a:	429c      	cmp	r4, r3
 8007f6c:	d101      	bne.n	8007f72 <__swsetup_r+0x46>
 8007f6e:	68ac      	ldr	r4, [r5, #8]
 8007f70:	e7eb      	b.n	8007f4a <__swsetup_r+0x1e>
 8007f72:	4b24      	ldr	r3, [pc, #144]	; (8008004 <__swsetup_r+0xd8>)
 8007f74:	429c      	cmp	r4, r3
 8007f76:	bf08      	it	eq
 8007f78:	68ec      	ldreq	r4, [r5, #12]
 8007f7a:	e7e6      	b.n	8007f4a <__swsetup_r+0x1e>
 8007f7c:	0758      	lsls	r0, r3, #29
 8007f7e:	d512      	bpl.n	8007fa6 <__swsetup_r+0x7a>
 8007f80:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007f82:	b141      	cbz	r1, 8007f96 <__swsetup_r+0x6a>
 8007f84:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007f88:	4299      	cmp	r1, r3
 8007f8a:	d002      	beq.n	8007f92 <__swsetup_r+0x66>
 8007f8c:	4630      	mov	r0, r6
 8007f8e:	f7fd fba9 	bl	80056e4 <_free_r>
 8007f92:	2300      	movs	r3, #0
 8007f94:	6363      	str	r3, [r4, #52]	; 0x34
 8007f96:	89a3      	ldrh	r3, [r4, #12]
 8007f98:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8007f9c:	81a3      	strh	r3, [r4, #12]
 8007f9e:	2300      	movs	r3, #0
 8007fa0:	6063      	str	r3, [r4, #4]
 8007fa2:	6923      	ldr	r3, [r4, #16]
 8007fa4:	6023      	str	r3, [r4, #0]
 8007fa6:	89a3      	ldrh	r3, [r4, #12]
 8007fa8:	f043 0308 	orr.w	r3, r3, #8
 8007fac:	81a3      	strh	r3, [r4, #12]
 8007fae:	6923      	ldr	r3, [r4, #16]
 8007fb0:	b94b      	cbnz	r3, 8007fc6 <__swsetup_r+0x9a>
 8007fb2:	89a3      	ldrh	r3, [r4, #12]
 8007fb4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8007fb8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007fbc:	d003      	beq.n	8007fc6 <__swsetup_r+0x9a>
 8007fbe:	4621      	mov	r1, r4
 8007fc0:	4630      	mov	r0, r6
 8007fc2:	f000 fa05 	bl	80083d0 <__smakebuf_r>
 8007fc6:	89a0      	ldrh	r0, [r4, #12]
 8007fc8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8007fcc:	f010 0301 	ands.w	r3, r0, #1
 8007fd0:	d00a      	beq.n	8007fe8 <__swsetup_r+0xbc>
 8007fd2:	2300      	movs	r3, #0
 8007fd4:	60a3      	str	r3, [r4, #8]
 8007fd6:	6963      	ldr	r3, [r4, #20]
 8007fd8:	425b      	negs	r3, r3
 8007fda:	61a3      	str	r3, [r4, #24]
 8007fdc:	6923      	ldr	r3, [r4, #16]
 8007fde:	b943      	cbnz	r3, 8007ff2 <__swsetup_r+0xc6>
 8007fe0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8007fe4:	d1ba      	bne.n	8007f5c <__swsetup_r+0x30>
 8007fe6:	bd70      	pop	{r4, r5, r6, pc}
 8007fe8:	0781      	lsls	r1, r0, #30
 8007fea:	bf58      	it	pl
 8007fec:	6963      	ldrpl	r3, [r4, #20]
 8007fee:	60a3      	str	r3, [r4, #8]
 8007ff0:	e7f4      	b.n	8007fdc <__swsetup_r+0xb0>
 8007ff2:	2000      	movs	r0, #0
 8007ff4:	e7f7      	b.n	8007fe6 <__swsetup_r+0xba>
 8007ff6:	bf00      	nop
 8007ff8:	20000018 	.word	0x20000018
 8007ffc:	08008c28 	.word	0x08008c28
 8008000:	08008c48 	.word	0x08008c48
 8008004:	08008c08 	.word	0x08008c08

08008008 <abort>:
 8008008:	2006      	movs	r0, #6
 800800a:	b508      	push	{r3, lr}
 800800c:	f000 fa56 	bl	80084bc <raise>
 8008010:	2001      	movs	r0, #1
 8008012:	f7fa fb2a 	bl	800266a <_exit>
	...

08008018 <__sflush_r>:
 8008018:	898a      	ldrh	r2, [r1, #12]
 800801a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800801c:	4605      	mov	r5, r0
 800801e:	0710      	lsls	r0, r2, #28
 8008020:	460c      	mov	r4, r1
 8008022:	d457      	bmi.n	80080d4 <__sflush_r+0xbc>
 8008024:	684b      	ldr	r3, [r1, #4]
 8008026:	2b00      	cmp	r3, #0
 8008028:	dc04      	bgt.n	8008034 <__sflush_r+0x1c>
 800802a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800802c:	2b00      	cmp	r3, #0
 800802e:	dc01      	bgt.n	8008034 <__sflush_r+0x1c>
 8008030:	2000      	movs	r0, #0
 8008032:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008034:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8008036:	2e00      	cmp	r6, #0
 8008038:	d0fa      	beq.n	8008030 <__sflush_r+0x18>
 800803a:	2300      	movs	r3, #0
 800803c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8008040:	682f      	ldr	r7, [r5, #0]
 8008042:	602b      	str	r3, [r5, #0]
 8008044:	d032      	beq.n	80080ac <__sflush_r+0x94>
 8008046:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8008048:	89a3      	ldrh	r3, [r4, #12]
 800804a:	075a      	lsls	r2, r3, #29
 800804c:	d505      	bpl.n	800805a <__sflush_r+0x42>
 800804e:	6863      	ldr	r3, [r4, #4]
 8008050:	1ac0      	subs	r0, r0, r3
 8008052:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8008054:	b10b      	cbz	r3, 800805a <__sflush_r+0x42>
 8008056:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008058:	1ac0      	subs	r0, r0, r3
 800805a:	2300      	movs	r3, #0
 800805c:	4602      	mov	r2, r0
 800805e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8008060:	4628      	mov	r0, r5
 8008062:	6a21      	ldr	r1, [r4, #32]
 8008064:	47b0      	blx	r6
 8008066:	1c43      	adds	r3, r0, #1
 8008068:	89a3      	ldrh	r3, [r4, #12]
 800806a:	d106      	bne.n	800807a <__sflush_r+0x62>
 800806c:	6829      	ldr	r1, [r5, #0]
 800806e:	291d      	cmp	r1, #29
 8008070:	d82c      	bhi.n	80080cc <__sflush_r+0xb4>
 8008072:	4a29      	ldr	r2, [pc, #164]	; (8008118 <__sflush_r+0x100>)
 8008074:	40ca      	lsrs	r2, r1
 8008076:	07d6      	lsls	r6, r2, #31
 8008078:	d528      	bpl.n	80080cc <__sflush_r+0xb4>
 800807a:	2200      	movs	r2, #0
 800807c:	6062      	str	r2, [r4, #4]
 800807e:	6922      	ldr	r2, [r4, #16]
 8008080:	04d9      	lsls	r1, r3, #19
 8008082:	6022      	str	r2, [r4, #0]
 8008084:	d504      	bpl.n	8008090 <__sflush_r+0x78>
 8008086:	1c42      	adds	r2, r0, #1
 8008088:	d101      	bne.n	800808e <__sflush_r+0x76>
 800808a:	682b      	ldr	r3, [r5, #0]
 800808c:	b903      	cbnz	r3, 8008090 <__sflush_r+0x78>
 800808e:	6560      	str	r0, [r4, #84]	; 0x54
 8008090:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8008092:	602f      	str	r7, [r5, #0]
 8008094:	2900      	cmp	r1, #0
 8008096:	d0cb      	beq.n	8008030 <__sflush_r+0x18>
 8008098:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800809c:	4299      	cmp	r1, r3
 800809e:	d002      	beq.n	80080a6 <__sflush_r+0x8e>
 80080a0:	4628      	mov	r0, r5
 80080a2:	f7fd fb1f 	bl	80056e4 <_free_r>
 80080a6:	2000      	movs	r0, #0
 80080a8:	6360      	str	r0, [r4, #52]	; 0x34
 80080aa:	e7c2      	b.n	8008032 <__sflush_r+0x1a>
 80080ac:	6a21      	ldr	r1, [r4, #32]
 80080ae:	2301      	movs	r3, #1
 80080b0:	4628      	mov	r0, r5
 80080b2:	47b0      	blx	r6
 80080b4:	1c41      	adds	r1, r0, #1
 80080b6:	d1c7      	bne.n	8008048 <__sflush_r+0x30>
 80080b8:	682b      	ldr	r3, [r5, #0]
 80080ba:	2b00      	cmp	r3, #0
 80080bc:	d0c4      	beq.n	8008048 <__sflush_r+0x30>
 80080be:	2b1d      	cmp	r3, #29
 80080c0:	d001      	beq.n	80080c6 <__sflush_r+0xae>
 80080c2:	2b16      	cmp	r3, #22
 80080c4:	d101      	bne.n	80080ca <__sflush_r+0xb2>
 80080c6:	602f      	str	r7, [r5, #0]
 80080c8:	e7b2      	b.n	8008030 <__sflush_r+0x18>
 80080ca:	89a3      	ldrh	r3, [r4, #12]
 80080cc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80080d0:	81a3      	strh	r3, [r4, #12]
 80080d2:	e7ae      	b.n	8008032 <__sflush_r+0x1a>
 80080d4:	690f      	ldr	r7, [r1, #16]
 80080d6:	2f00      	cmp	r7, #0
 80080d8:	d0aa      	beq.n	8008030 <__sflush_r+0x18>
 80080da:	0793      	lsls	r3, r2, #30
 80080dc:	bf18      	it	ne
 80080de:	2300      	movne	r3, #0
 80080e0:	680e      	ldr	r6, [r1, #0]
 80080e2:	bf08      	it	eq
 80080e4:	694b      	ldreq	r3, [r1, #20]
 80080e6:	1bf6      	subs	r6, r6, r7
 80080e8:	600f      	str	r7, [r1, #0]
 80080ea:	608b      	str	r3, [r1, #8]
 80080ec:	2e00      	cmp	r6, #0
 80080ee:	dd9f      	ble.n	8008030 <__sflush_r+0x18>
 80080f0:	4633      	mov	r3, r6
 80080f2:	463a      	mov	r2, r7
 80080f4:	4628      	mov	r0, r5
 80080f6:	6a21      	ldr	r1, [r4, #32]
 80080f8:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 80080fc:	47e0      	blx	ip
 80080fe:	2800      	cmp	r0, #0
 8008100:	dc06      	bgt.n	8008110 <__sflush_r+0xf8>
 8008102:	89a3      	ldrh	r3, [r4, #12]
 8008104:	f04f 30ff 	mov.w	r0, #4294967295
 8008108:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800810c:	81a3      	strh	r3, [r4, #12]
 800810e:	e790      	b.n	8008032 <__sflush_r+0x1a>
 8008110:	4407      	add	r7, r0
 8008112:	1a36      	subs	r6, r6, r0
 8008114:	e7ea      	b.n	80080ec <__sflush_r+0xd4>
 8008116:	bf00      	nop
 8008118:	20400001 	.word	0x20400001

0800811c <_fflush_r>:
 800811c:	b538      	push	{r3, r4, r5, lr}
 800811e:	690b      	ldr	r3, [r1, #16]
 8008120:	4605      	mov	r5, r0
 8008122:	460c      	mov	r4, r1
 8008124:	b913      	cbnz	r3, 800812c <_fflush_r+0x10>
 8008126:	2500      	movs	r5, #0
 8008128:	4628      	mov	r0, r5
 800812a:	bd38      	pop	{r3, r4, r5, pc}
 800812c:	b118      	cbz	r0, 8008136 <_fflush_r+0x1a>
 800812e:	6983      	ldr	r3, [r0, #24]
 8008130:	b90b      	cbnz	r3, 8008136 <_fflush_r+0x1a>
 8008132:	f000 f887 	bl	8008244 <__sinit>
 8008136:	4b14      	ldr	r3, [pc, #80]	; (8008188 <_fflush_r+0x6c>)
 8008138:	429c      	cmp	r4, r3
 800813a:	d11b      	bne.n	8008174 <_fflush_r+0x58>
 800813c:	686c      	ldr	r4, [r5, #4]
 800813e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008142:	2b00      	cmp	r3, #0
 8008144:	d0ef      	beq.n	8008126 <_fflush_r+0xa>
 8008146:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8008148:	07d0      	lsls	r0, r2, #31
 800814a:	d404      	bmi.n	8008156 <_fflush_r+0x3a>
 800814c:	0599      	lsls	r1, r3, #22
 800814e:	d402      	bmi.n	8008156 <_fflush_r+0x3a>
 8008150:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008152:	f000 f915 	bl	8008380 <__retarget_lock_acquire_recursive>
 8008156:	4628      	mov	r0, r5
 8008158:	4621      	mov	r1, r4
 800815a:	f7ff ff5d 	bl	8008018 <__sflush_r>
 800815e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008160:	4605      	mov	r5, r0
 8008162:	07da      	lsls	r2, r3, #31
 8008164:	d4e0      	bmi.n	8008128 <_fflush_r+0xc>
 8008166:	89a3      	ldrh	r3, [r4, #12]
 8008168:	059b      	lsls	r3, r3, #22
 800816a:	d4dd      	bmi.n	8008128 <_fflush_r+0xc>
 800816c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800816e:	f000 f908 	bl	8008382 <__retarget_lock_release_recursive>
 8008172:	e7d9      	b.n	8008128 <_fflush_r+0xc>
 8008174:	4b05      	ldr	r3, [pc, #20]	; (800818c <_fflush_r+0x70>)
 8008176:	429c      	cmp	r4, r3
 8008178:	d101      	bne.n	800817e <_fflush_r+0x62>
 800817a:	68ac      	ldr	r4, [r5, #8]
 800817c:	e7df      	b.n	800813e <_fflush_r+0x22>
 800817e:	4b04      	ldr	r3, [pc, #16]	; (8008190 <_fflush_r+0x74>)
 8008180:	429c      	cmp	r4, r3
 8008182:	bf08      	it	eq
 8008184:	68ec      	ldreq	r4, [r5, #12]
 8008186:	e7da      	b.n	800813e <_fflush_r+0x22>
 8008188:	08008c28 	.word	0x08008c28
 800818c:	08008c48 	.word	0x08008c48
 8008190:	08008c08 	.word	0x08008c08

08008194 <std>:
 8008194:	2300      	movs	r3, #0
 8008196:	b510      	push	{r4, lr}
 8008198:	4604      	mov	r4, r0
 800819a:	e9c0 3300 	strd	r3, r3, [r0]
 800819e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80081a2:	6083      	str	r3, [r0, #8]
 80081a4:	8181      	strh	r1, [r0, #12]
 80081a6:	6643      	str	r3, [r0, #100]	; 0x64
 80081a8:	81c2      	strh	r2, [r0, #14]
 80081aa:	6183      	str	r3, [r0, #24]
 80081ac:	4619      	mov	r1, r3
 80081ae:	2208      	movs	r2, #8
 80081b0:	305c      	adds	r0, #92	; 0x5c
 80081b2:	f7fd fa8f 	bl	80056d4 <memset>
 80081b6:	4b05      	ldr	r3, [pc, #20]	; (80081cc <std+0x38>)
 80081b8:	6224      	str	r4, [r4, #32]
 80081ba:	6263      	str	r3, [r4, #36]	; 0x24
 80081bc:	4b04      	ldr	r3, [pc, #16]	; (80081d0 <std+0x3c>)
 80081be:	62a3      	str	r3, [r4, #40]	; 0x28
 80081c0:	4b04      	ldr	r3, [pc, #16]	; (80081d4 <std+0x40>)
 80081c2:	62e3      	str	r3, [r4, #44]	; 0x2c
 80081c4:	4b04      	ldr	r3, [pc, #16]	; (80081d8 <std+0x44>)
 80081c6:	6323      	str	r3, [r4, #48]	; 0x30
 80081c8:	bd10      	pop	{r4, pc}
 80081ca:	bf00      	nop
 80081cc:	080084f5 	.word	0x080084f5
 80081d0:	08008517 	.word	0x08008517
 80081d4:	0800854f 	.word	0x0800854f
 80081d8:	08008573 	.word	0x08008573

080081dc <_cleanup_r>:
 80081dc:	4901      	ldr	r1, [pc, #4]	; (80081e4 <_cleanup_r+0x8>)
 80081de:	f000 b8af 	b.w	8008340 <_fwalk_reent>
 80081e2:	bf00      	nop
 80081e4:	0800811d 	.word	0x0800811d

080081e8 <__sfmoreglue>:
 80081e8:	2268      	movs	r2, #104	; 0x68
 80081ea:	b570      	push	{r4, r5, r6, lr}
 80081ec:	1e4d      	subs	r5, r1, #1
 80081ee:	4355      	muls	r5, r2
 80081f0:	460e      	mov	r6, r1
 80081f2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80081f6:	f7fd fadd 	bl	80057b4 <_malloc_r>
 80081fa:	4604      	mov	r4, r0
 80081fc:	b140      	cbz	r0, 8008210 <__sfmoreglue+0x28>
 80081fe:	2100      	movs	r1, #0
 8008200:	e9c0 1600 	strd	r1, r6, [r0]
 8008204:	300c      	adds	r0, #12
 8008206:	60a0      	str	r0, [r4, #8]
 8008208:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800820c:	f7fd fa62 	bl	80056d4 <memset>
 8008210:	4620      	mov	r0, r4
 8008212:	bd70      	pop	{r4, r5, r6, pc}

08008214 <__sfp_lock_acquire>:
 8008214:	4801      	ldr	r0, [pc, #4]	; (800821c <__sfp_lock_acquire+0x8>)
 8008216:	f000 b8b3 	b.w	8008380 <__retarget_lock_acquire_recursive>
 800821a:	bf00      	nop
 800821c:	2000047d 	.word	0x2000047d

08008220 <__sfp_lock_release>:
 8008220:	4801      	ldr	r0, [pc, #4]	; (8008228 <__sfp_lock_release+0x8>)
 8008222:	f000 b8ae 	b.w	8008382 <__retarget_lock_release_recursive>
 8008226:	bf00      	nop
 8008228:	2000047d 	.word	0x2000047d

0800822c <__sinit_lock_acquire>:
 800822c:	4801      	ldr	r0, [pc, #4]	; (8008234 <__sinit_lock_acquire+0x8>)
 800822e:	f000 b8a7 	b.w	8008380 <__retarget_lock_acquire_recursive>
 8008232:	bf00      	nop
 8008234:	2000047e 	.word	0x2000047e

08008238 <__sinit_lock_release>:
 8008238:	4801      	ldr	r0, [pc, #4]	; (8008240 <__sinit_lock_release+0x8>)
 800823a:	f000 b8a2 	b.w	8008382 <__retarget_lock_release_recursive>
 800823e:	bf00      	nop
 8008240:	2000047e 	.word	0x2000047e

08008244 <__sinit>:
 8008244:	b510      	push	{r4, lr}
 8008246:	4604      	mov	r4, r0
 8008248:	f7ff fff0 	bl	800822c <__sinit_lock_acquire>
 800824c:	69a3      	ldr	r3, [r4, #24]
 800824e:	b11b      	cbz	r3, 8008258 <__sinit+0x14>
 8008250:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008254:	f7ff bff0 	b.w	8008238 <__sinit_lock_release>
 8008258:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800825c:	6523      	str	r3, [r4, #80]	; 0x50
 800825e:	4b13      	ldr	r3, [pc, #76]	; (80082ac <__sinit+0x68>)
 8008260:	4a13      	ldr	r2, [pc, #76]	; (80082b0 <__sinit+0x6c>)
 8008262:	681b      	ldr	r3, [r3, #0]
 8008264:	62a2      	str	r2, [r4, #40]	; 0x28
 8008266:	42a3      	cmp	r3, r4
 8008268:	bf08      	it	eq
 800826a:	2301      	moveq	r3, #1
 800826c:	4620      	mov	r0, r4
 800826e:	bf08      	it	eq
 8008270:	61a3      	streq	r3, [r4, #24]
 8008272:	f000 f81f 	bl	80082b4 <__sfp>
 8008276:	6060      	str	r0, [r4, #4]
 8008278:	4620      	mov	r0, r4
 800827a:	f000 f81b 	bl	80082b4 <__sfp>
 800827e:	60a0      	str	r0, [r4, #8]
 8008280:	4620      	mov	r0, r4
 8008282:	f000 f817 	bl	80082b4 <__sfp>
 8008286:	2200      	movs	r2, #0
 8008288:	2104      	movs	r1, #4
 800828a:	60e0      	str	r0, [r4, #12]
 800828c:	6860      	ldr	r0, [r4, #4]
 800828e:	f7ff ff81 	bl	8008194 <std>
 8008292:	2201      	movs	r2, #1
 8008294:	2109      	movs	r1, #9
 8008296:	68a0      	ldr	r0, [r4, #8]
 8008298:	f7ff ff7c 	bl	8008194 <std>
 800829c:	2202      	movs	r2, #2
 800829e:	2112      	movs	r1, #18
 80082a0:	68e0      	ldr	r0, [r4, #12]
 80082a2:	f7ff ff77 	bl	8008194 <std>
 80082a6:	2301      	movs	r3, #1
 80082a8:	61a3      	str	r3, [r4, #24]
 80082aa:	e7d1      	b.n	8008250 <__sinit+0xc>
 80082ac:	080087dc 	.word	0x080087dc
 80082b0:	080081dd 	.word	0x080081dd

080082b4 <__sfp>:
 80082b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80082b6:	4607      	mov	r7, r0
 80082b8:	f7ff ffac 	bl	8008214 <__sfp_lock_acquire>
 80082bc:	4b1e      	ldr	r3, [pc, #120]	; (8008338 <__sfp+0x84>)
 80082be:	681e      	ldr	r6, [r3, #0]
 80082c0:	69b3      	ldr	r3, [r6, #24]
 80082c2:	b913      	cbnz	r3, 80082ca <__sfp+0x16>
 80082c4:	4630      	mov	r0, r6
 80082c6:	f7ff ffbd 	bl	8008244 <__sinit>
 80082ca:	3648      	adds	r6, #72	; 0x48
 80082cc:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80082d0:	3b01      	subs	r3, #1
 80082d2:	d503      	bpl.n	80082dc <__sfp+0x28>
 80082d4:	6833      	ldr	r3, [r6, #0]
 80082d6:	b30b      	cbz	r3, 800831c <__sfp+0x68>
 80082d8:	6836      	ldr	r6, [r6, #0]
 80082da:	e7f7      	b.n	80082cc <__sfp+0x18>
 80082dc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80082e0:	b9d5      	cbnz	r5, 8008318 <__sfp+0x64>
 80082e2:	4b16      	ldr	r3, [pc, #88]	; (800833c <__sfp+0x88>)
 80082e4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80082e8:	60e3      	str	r3, [r4, #12]
 80082ea:	6665      	str	r5, [r4, #100]	; 0x64
 80082ec:	f000 f847 	bl	800837e <__retarget_lock_init_recursive>
 80082f0:	f7ff ff96 	bl	8008220 <__sfp_lock_release>
 80082f4:	2208      	movs	r2, #8
 80082f6:	4629      	mov	r1, r5
 80082f8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80082fc:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8008300:	6025      	str	r5, [r4, #0]
 8008302:	61a5      	str	r5, [r4, #24]
 8008304:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8008308:	f7fd f9e4 	bl	80056d4 <memset>
 800830c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8008310:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8008314:	4620      	mov	r0, r4
 8008316:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008318:	3468      	adds	r4, #104	; 0x68
 800831a:	e7d9      	b.n	80082d0 <__sfp+0x1c>
 800831c:	2104      	movs	r1, #4
 800831e:	4638      	mov	r0, r7
 8008320:	f7ff ff62 	bl	80081e8 <__sfmoreglue>
 8008324:	4604      	mov	r4, r0
 8008326:	6030      	str	r0, [r6, #0]
 8008328:	2800      	cmp	r0, #0
 800832a:	d1d5      	bne.n	80082d8 <__sfp+0x24>
 800832c:	f7ff ff78 	bl	8008220 <__sfp_lock_release>
 8008330:	230c      	movs	r3, #12
 8008332:	603b      	str	r3, [r7, #0]
 8008334:	e7ee      	b.n	8008314 <__sfp+0x60>
 8008336:	bf00      	nop
 8008338:	080087dc 	.word	0x080087dc
 800833c:	ffff0001 	.word	0xffff0001

08008340 <_fwalk_reent>:
 8008340:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008344:	4606      	mov	r6, r0
 8008346:	4688      	mov	r8, r1
 8008348:	2700      	movs	r7, #0
 800834a:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800834e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8008352:	f1b9 0901 	subs.w	r9, r9, #1
 8008356:	d505      	bpl.n	8008364 <_fwalk_reent+0x24>
 8008358:	6824      	ldr	r4, [r4, #0]
 800835a:	2c00      	cmp	r4, #0
 800835c:	d1f7      	bne.n	800834e <_fwalk_reent+0xe>
 800835e:	4638      	mov	r0, r7
 8008360:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008364:	89ab      	ldrh	r3, [r5, #12]
 8008366:	2b01      	cmp	r3, #1
 8008368:	d907      	bls.n	800837a <_fwalk_reent+0x3a>
 800836a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800836e:	3301      	adds	r3, #1
 8008370:	d003      	beq.n	800837a <_fwalk_reent+0x3a>
 8008372:	4629      	mov	r1, r5
 8008374:	4630      	mov	r0, r6
 8008376:	47c0      	blx	r8
 8008378:	4307      	orrs	r7, r0
 800837a:	3568      	adds	r5, #104	; 0x68
 800837c:	e7e9      	b.n	8008352 <_fwalk_reent+0x12>

0800837e <__retarget_lock_init_recursive>:
 800837e:	4770      	bx	lr

08008380 <__retarget_lock_acquire_recursive>:
 8008380:	4770      	bx	lr

08008382 <__retarget_lock_release_recursive>:
 8008382:	4770      	bx	lr

08008384 <__swhatbuf_r>:
 8008384:	b570      	push	{r4, r5, r6, lr}
 8008386:	460e      	mov	r6, r1
 8008388:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800838c:	4614      	mov	r4, r2
 800838e:	2900      	cmp	r1, #0
 8008390:	461d      	mov	r5, r3
 8008392:	b096      	sub	sp, #88	; 0x58
 8008394:	da08      	bge.n	80083a8 <__swhatbuf_r+0x24>
 8008396:	2200      	movs	r2, #0
 8008398:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800839c:	602a      	str	r2, [r5, #0]
 800839e:	061a      	lsls	r2, r3, #24
 80083a0:	d410      	bmi.n	80083c4 <__swhatbuf_r+0x40>
 80083a2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80083a6:	e00e      	b.n	80083c6 <__swhatbuf_r+0x42>
 80083a8:	466a      	mov	r2, sp
 80083aa:	f000 f909 	bl	80085c0 <_fstat_r>
 80083ae:	2800      	cmp	r0, #0
 80083b0:	dbf1      	blt.n	8008396 <__swhatbuf_r+0x12>
 80083b2:	9a01      	ldr	r2, [sp, #4]
 80083b4:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80083b8:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80083bc:	425a      	negs	r2, r3
 80083be:	415a      	adcs	r2, r3
 80083c0:	602a      	str	r2, [r5, #0]
 80083c2:	e7ee      	b.n	80083a2 <__swhatbuf_r+0x1e>
 80083c4:	2340      	movs	r3, #64	; 0x40
 80083c6:	2000      	movs	r0, #0
 80083c8:	6023      	str	r3, [r4, #0]
 80083ca:	b016      	add	sp, #88	; 0x58
 80083cc:	bd70      	pop	{r4, r5, r6, pc}
	...

080083d0 <__smakebuf_r>:
 80083d0:	898b      	ldrh	r3, [r1, #12]
 80083d2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80083d4:	079d      	lsls	r5, r3, #30
 80083d6:	4606      	mov	r6, r0
 80083d8:	460c      	mov	r4, r1
 80083da:	d507      	bpl.n	80083ec <__smakebuf_r+0x1c>
 80083dc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80083e0:	6023      	str	r3, [r4, #0]
 80083e2:	6123      	str	r3, [r4, #16]
 80083e4:	2301      	movs	r3, #1
 80083e6:	6163      	str	r3, [r4, #20]
 80083e8:	b002      	add	sp, #8
 80083ea:	bd70      	pop	{r4, r5, r6, pc}
 80083ec:	466a      	mov	r2, sp
 80083ee:	ab01      	add	r3, sp, #4
 80083f0:	f7ff ffc8 	bl	8008384 <__swhatbuf_r>
 80083f4:	9900      	ldr	r1, [sp, #0]
 80083f6:	4605      	mov	r5, r0
 80083f8:	4630      	mov	r0, r6
 80083fa:	f7fd f9db 	bl	80057b4 <_malloc_r>
 80083fe:	b948      	cbnz	r0, 8008414 <__smakebuf_r+0x44>
 8008400:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008404:	059a      	lsls	r2, r3, #22
 8008406:	d4ef      	bmi.n	80083e8 <__smakebuf_r+0x18>
 8008408:	f023 0303 	bic.w	r3, r3, #3
 800840c:	f043 0302 	orr.w	r3, r3, #2
 8008410:	81a3      	strh	r3, [r4, #12]
 8008412:	e7e3      	b.n	80083dc <__smakebuf_r+0xc>
 8008414:	4b0d      	ldr	r3, [pc, #52]	; (800844c <__smakebuf_r+0x7c>)
 8008416:	62b3      	str	r3, [r6, #40]	; 0x28
 8008418:	89a3      	ldrh	r3, [r4, #12]
 800841a:	6020      	str	r0, [r4, #0]
 800841c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008420:	81a3      	strh	r3, [r4, #12]
 8008422:	9b00      	ldr	r3, [sp, #0]
 8008424:	6120      	str	r0, [r4, #16]
 8008426:	6163      	str	r3, [r4, #20]
 8008428:	9b01      	ldr	r3, [sp, #4]
 800842a:	b15b      	cbz	r3, 8008444 <__smakebuf_r+0x74>
 800842c:	4630      	mov	r0, r6
 800842e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008432:	f000 f8d7 	bl	80085e4 <_isatty_r>
 8008436:	b128      	cbz	r0, 8008444 <__smakebuf_r+0x74>
 8008438:	89a3      	ldrh	r3, [r4, #12]
 800843a:	f023 0303 	bic.w	r3, r3, #3
 800843e:	f043 0301 	orr.w	r3, r3, #1
 8008442:	81a3      	strh	r3, [r4, #12]
 8008444:	89a0      	ldrh	r0, [r4, #12]
 8008446:	4305      	orrs	r5, r0
 8008448:	81a5      	strh	r5, [r4, #12]
 800844a:	e7cd      	b.n	80083e8 <__smakebuf_r+0x18>
 800844c:	080081dd 	.word	0x080081dd

08008450 <memchr>:
 8008450:	4603      	mov	r3, r0
 8008452:	b510      	push	{r4, lr}
 8008454:	b2c9      	uxtb	r1, r1
 8008456:	4402      	add	r2, r0
 8008458:	4293      	cmp	r3, r2
 800845a:	4618      	mov	r0, r3
 800845c:	d101      	bne.n	8008462 <memchr+0x12>
 800845e:	2000      	movs	r0, #0
 8008460:	e003      	b.n	800846a <memchr+0x1a>
 8008462:	7804      	ldrb	r4, [r0, #0]
 8008464:	3301      	adds	r3, #1
 8008466:	428c      	cmp	r4, r1
 8008468:	d1f6      	bne.n	8008458 <memchr+0x8>
 800846a:	bd10      	pop	{r4, pc}

0800846c <_raise_r>:
 800846c:	291f      	cmp	r1, #31
 800846e:	b538      	push	{r3, r4, r5, lr}
 8008470:	4604      	mov	r4, r0
 8008472:	460d      	mov	r5, r1
 8008474:	d904      	bls.n	8008480 <_raise_r+0x14>
 8008476:	2316      	movs	r3, #22
 8008478:	6003      	str	r3, [r0, #0]
 800847a:	f04f 30ff 	mov.w	r0, #4294967295
 800847e:	bd38      	pop	{r3, r4, r5, pc}
 8008480:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8008482:	b112      	cbz	r2, 800848a <_raise_r+0x1e>
 8008484:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8008488:	b94b      	cbnz	r3, 800849e <_raise_r+0x32>
 800848a:	4620      	mov	r0, r4
 800848c:	f000 f830 	bl	80084f0 <_getpid_r>
 8008490:	462a      	mov	r2, r5
 8008492:	4601      	mov	r1, r0
 8008494:	4620      	mov	r0, r4
 8008496:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800849a:	f000 b817 	b.w	80084cc <_kill_r>
 800849e:	2b01      	cmp	r3, #1
 80084a0:	d00a      	beq.n	80084b8 <_raise_r+0x4c>
 80084a2:	1c59      	adds	r1, r3, #1
 80084a4:	d103      	bne.n	80084ae <_raise_r+0x42>
 80084a6:	2316      	movs	r3, #22
 80084a8:	6003      	str	r3, [r0, #0]
 80084aa:	2001      	movs	r0, #1
 80084ac:	e7e7      	b.n	800847e <_raise_r+0x12>
 80084ae:	2400      	movs	r4, #0
 80084b0:	4628      	mov	r0, r5
 80084b2:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80084b6:	4798      	blx	r3
 80084b8:	2000      	movs	r0, #0
 80084ba:	e7e0      	b.n	800847e <_raise_r+0x12>

080084bc <raise>:
 80084bc:	4b02      	ldr	r3, [pc, #8]	; (80084c8 <raise+0xc>)
 80084be:	4601      	mov	r1, r0
 80084c0:	6818      	ldr	r0, [r3, #0]
 80084c2:	f7ff bfd3 	b.w	800846c <_raise_r>
 80084c6:	bf00      	nop
 80084c8:	20000018 	.word	0x20000018

080084cc <_kill_r>:
 80084cc:	b538      	push	{r3, r4, r5, lr}
 80084ce:	2300      	movs	r3, #0
 80084d0:	4d06      	ldr	r5, [pc, #24]	; (80084ec <_kill_r+0x20>)
 80084d2:	4604      	mov	r4, r0
 80084d4:	4608      	mov	r0, r1
 80084d6:	4611      	mov	r1, r2
 80084d8:	602b      	str	r3, [r5, #0]
 80084da:	f7fa f8b6 	bl	800264a <_kill>
 80084de:	1c43      	adds	r3, r0, #1
 80084e0:	d102      	bne.n	80084e8 <_kill_r+0x1c>
 80084e2:	682b      	ldr	r3, [r5, #0]
 80084e4:	b103      	cbz	r3, 80084e8 <_kill_r+0x1c>
 80084e6:	6023      	str	r3, [r4, #0]
 80084e8:	bd38      	pop	{r3, r4, r5, pc}
 80084ea:	bf00      	nop
 80084ec:	20000478 	.word	0x20000478

080084f0 <_getpid_r>:
 80084f0:	f7fa b8a4 	b.w	800263c <_getpid>

080084f4 <__sread>:
 80084f4:	b510      	push	{r4, lr}
 80084f6:	460c      	mov	r4, r1
 80084f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80084fc:	f000 f894 	bl	8008628 <_read_r>
 8008500:	2800      	cmp	r0, #0
 8008502:	bfab      	itete	ge
 8008504:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8008506:	89a3      	ldrhlt	r3, [r4, #12]
 8008508:	181b      	addge	r3, r3, r0
 800850a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800850e:	bfac      	ite	ge
 8008510:	6563      	strge	r3, [r4, #84]	; 0x54
 8008512:	81a3      	strhlt	r3, [r4, #12]
 8008514:	bd10      	pop	{r4, pc}

08008516 <__swrite>:
 8008516:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800851a:	461f      	mov	r7, r3
 800851c:	898b      	ldrh	r3, [r1, #12]
 800851e:	4605      	mov	r5, r0
 8008520:	05db      	lsls	r3, r3, #23
 8008522:	460c      	mov	r4, r1
 8008524:	4616      	mov	r6, r2
 8008526:	d505      	bpl.n	8008534 <__swrite+0x1e>
 8008528:	2302      	movs	r3, #2
 800852a:	2200      	movs	r2, #0
 800852c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008530:	f000 f868 	bl	8008604 <_lseek_r>
 8008534:	89a3      	ldrh	r3, [r4, #12]
 8008536:	4632      	mov	r2, r6
 8008538:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800853c:	81a3      	strh	r3, [r4, #12]
 800853e:	4628      	mov	r0, r5
 8008540:	463b      	mov	r3, r7
 8008542:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008546:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800854a:	f000 b817 	b.w	800857c <_write_r>

0800854e <__sseek>:
 800854e:	b510      	push	{r4, lr}
 8008550:	460c      	mov	r4, r1
 8008552:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008556:	f000 f855 	bl	8008604 <_lseek_r>
 800855a:	1c43      	adds	r3, r0, #1
 800855c:	89a3      	ldrh	r3, [r4, #12]
 800855e:	bf15      	itete	ne
 8008560:	6560      	strne	r0, [r4, #84]	; 0x54
 8008562:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8008566:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800856a:	81a3      	strheq	r3, [r4, #12]
 800856c:	bf18      	it	ne
 800856e:	81a3      	strhne	r3, [r4, #12]
 8008570:	bd10      	pop	{r4, pc}

08008572 <__sclose>:
 8008572:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008576:	f000 b813 	b.w	80085a0 <_close_r>
	...

0800857c <_write_r>:
 800857c:	b538      	push	{r3, r4, r5, lr}
 800857e:	4604      	mov	r4, r0
 8008580:	4608      	mov	r0, r1
 8008582:	4611      	mov	r1, r2
 8008584:	2200      	movs	r2, #0
 8008586:	4d05      	ldr	r5, [pc, #20]	; (800859c <_write_r+0x20>)
 8008588:	602a      	str	r2, [r5, #0]
 800858a:	461a      	mov	r2, r3
 800858c:	f7fa f894 	bl	80026b8 <_write>
 8008590:	1c43      	adds	r3, r0, #1
 8008592:	d102      	bne.n	800859a <_write_r+0x1e>
 8008594:	682b      	ldr	r3, [r5, #0]
 8008596:	b103      	cbz	r3, 800859a <_write_r+0x1e>
 8008598:	6023      	str	r3, [r4, #0]
 800859a:	bd38      	pop	{r3, r4, r5, pc}
 800859c:	20000478 	.word	0x20000478

080085a0 <_close_r>:
 80085a0:	b538      	push	{r3, r4, r5, lr}
 80085a2:	2300      	movs	r3, #0
 80085a4:	4d05      	ldr	r5, [pc, #20]	; (80085bc <_close_r+0x1c>)
 80085a6:	4604      	mov	r4, r0
 80085a8:	4608      	mov	r0, r1
 80085aa:	602b      	str	r3, [r5, #0]
 80085ac:	f7fa f8a0 	bl	80026f0 <_close>
 80085b0:	1c43      	adds	r3, r0, #1
 80085b2:	d102      	bne.n	80085ba <_close_r+0x1a>
 80085b4:	682b      	ldr	r3, [r5, #0]
 80085b6:	b103      	cbz	r3, 80085ba <_close_r+0x1a>
 80085b8:	6023      	str	r3, [r4, #0]
 80085ba:	bd38      	pop	{r3, r4, r5, pc}
 80085bc:	20000478 	.word	0x20000478

080085c0 <_fstat_r>:
 80085c0:	b538      	push	{r3, r4, r5, lr}
 80085c2:	2300      	movs	r3, #0
 80085c4:	4d06      	ldr	r5, [pc, #24]	; (80085e0 <_fstat_r+0x20>)
 80085c6:	4604      	mov	r4, r0
 80085c8:	4608      	mov	r0, r1
 80085ca:	4611      	mov	r1, r2
 80085cc:	602b      	str	r3, [r5, #0]
 80085ce:	f7fa f89a 	bl	8002706 <_fstat>
 80085d2:	1c43      	adds	r3, r0, #1
 80085d4:	d102      	bne.n	80085dc <_fstat_r+0x1c>
 80085d6:	682b      	ldr	r3, [r5, #0]
 80085d8:	b103      	cbz	r3, 80085dc <_fstat_r+0x1c>
 80085da:	6023      	str	r3, [r4, #0]
 80085dc:	bd38      	pop	{r3, r4, r5, pc}
 80085de:	bf00      	nop
 80085e0:	20000478 	.word	0x20000478

080085e4 <_isatty_r>:
 80085e4:	b538      	push	{r3, r4, r5, lr}
 80085e6:	2300      	movs	r3, #0
 80085e8:	4d05      	ldr	r5, [pc, #20]	; (8008600 <_isatty_r+0x1c>)
 80085ea:	4604      	mov	r4, r0
 80085ec:	4608      	mov	r0, r1
 80085ee:	602b      	str	r3, [r5, #0]
 80085f0:	f7fa f898 	bl	8002724 <_isatty>
 80085f4:	1c43      	adds	r3, r0, #1
 80085f6:	d102      	bne.n	80085fe <_isatty_r+0x1a>
 80085f8:	682b      	ldr	r3, [r5, #0]
 80085fa:	b103      	cbz	r3, 80085fe <_isatty_r+0x1a>
 80085fc:	6023      	str	r3, [r4, #0]
 80085fe:	bd38      	pop	{r3, r4, r5, pc}
 8008600:	20000478 	.word	0x20000478

08008604 <_lseek_r>:
 8008604:	b538      	push	{r3, r4, r5, lr}
 8008606:	4604      	mov	r4, r0
 8008608:	4608      	mov	r0, r1
 800860a:	4611      	mov	r1, r2
 800860c:	2200      	movs	r2, #0
 800860e:	4d05      	ldr	r5, [pc, #20]	; (8008624 <_lseek_r+0x20>)
 8008610:	602a      	str	r2, [r5, #0]
 8008612:	461a      	mov	r2, r3
 8008614:	f7fa f890 	bl	8002738 <_lseek>
 8008618:	1c43      	adds	r3, r0, #1
 800861a:	d102      	bne.n	8008622 <_lseek_r+0x1e>
 800861c:	682b      	ldr	r3, [r5, #0]
 800861e:	b103      	cbz	r3, 8008622 <_lseek_r+0x1e>
 8008620:	6023      	str	r3, [r4, #0]
 8008622:	bd38      	pop	{r3, r4, r5, pc}
 8008624:	20000478 	.word	0x20000478

08008628 <_read_r>:
 8008628:	b538      	push	{r3, r4, r5, lr}
 800862a:	4604      	mov	r4, r0
 800862c:	4608      	mov	r0, r1
 800862e:	4611      	mov	r1, r2
 8008630:	2200      	movs	r2, #0
 8008632:	4d05      	ldr	r5, [pc, #20]	; (8008648 <_read_r+0x20>)
 8008634:	602a      	str	r2, [r5, #0]
 8008636:	461a      	mov	r2, r3
 8008638:	f7fa f821 	bl	800267e <_read>
 800863c:	1c43      	adds	r3, r0, #1
 800863e:	d102      	bne.n	8008646 <_read_r+0x1e>
 8008640:	682b      	ldr	r3, [r5, #0]
 8008642:	b103      	cbz	r3, 8008646 <_read_r+0x1e>
 8008644:	6023      	str	r3, [r4, #0]
 8008646:	bd38      	pop	{r3, r4, r5, pc}
 8008648:	20000478 	.word	0x20000478

0800864c <_init>:
 800864c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800864e:	bf00      	nop
 8008650:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008652:	bc08      	pop	{r3}
 8008654:	469e      	mov	lr, r3
 8008656:	4770      	bx	lr

08008658 <_fini>:
 8008658:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800865a:	bf00      	nop
 800865c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800865e:	bc08      	pop	{r3}
 8008660:	469e      	mov	lr, r3
 8008662:	4770      	bx	lr
