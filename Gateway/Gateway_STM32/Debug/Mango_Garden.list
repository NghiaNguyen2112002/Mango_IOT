
Mango_Garden.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000089b8  08000110  08000110  00010110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000628  08008ac8  08008ac8  00018ac8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080090f0  080090f0  000201ec  2**0
                  CONTENTS
  4 .ARM          00000000  080090f0  080090f0  000201ec  2**0
                  CONTENTS
  5 .preinit_array 00000000  080090f0  080090f0  000201ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080090f0  080090f0  000190f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080090f4  080090f4  000190f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001ec  20000000  080090f8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000002f4  200001ec  080092e4  000201ec  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200004e0  080092e4  000204e0  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201ec  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000fddb  00000000  00000000  00020215  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002889  00000000  00000000  0002fff0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000010e8  00000000  00000000  00032880  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000fe0  00000000  00000000  00033968  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a278  00000000  00000000  00034948  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00014199  00000000  00000000  0004ebc0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008ecf6  00000000  00000000  00062d59  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000f1a4f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005c14  00000000  00000000  000f1aa0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001ec 	.word	0x200001ec
 800012c:	00000000 	.word	0x00000000
 8000130:	08008ab0 	.word	0x08008ab0

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001f0 	.word	0x200001f0
 800014c:	08008ab0 	.word	0x08008ab0

08000150 <strcmp>:
 8000150:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000154:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000158:	2a01      	cmp	r2, #1
 800015a:	bf28      	it	cs
 800015c:	429a      	cmpcs	r2, r3
 800015e:	d0f7      	beq.n	8000150 <strcmp>
 8000160:	1ad0      	subs	r0, r2, r3
 8000162:	4770      	bx	lr

08000164 <strlen>:
 8000164:	4603      	mov	r3, r0
 8000166:	f813 2b01 	ldrb.w	r2, [r3], #1
 800016a:	2a00      	cmp	r2, #0
 800016c:	d1fb      	bne.n	8000166 <strlen+0x2>
 800016e:	1a18      	subs	r0, r3, r0
 8000170:	3801      	subs	r0, #1
 8000172:	4770      	bx	lr

08000174 <__aeabi_fmul>:
 8000174:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000178:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 800017c:	bf1e      	ittt	ne
 800017e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000182:	ea92 0f0c 	teqne	r2, ip
 8000186:	ea93 0f0c 	teqne	r3, ip
 800018a:	d06f      	beq.n	800026c <__aeabi_fmul+0xf8>
 800018c:	441a      	add	r2, r3
 800018e:	ea80 0c01 	eor.w	ip, r0, r1
 8000192:	0240      	lsls	r0, r0, #9
 8000194:	bf18      	it	ne
 8000196:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 800019a:	d01e      	beq.n	80001da <__aeabi_fmul+0x66>
 800019c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80001a0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80001a4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80001a8:	fba0 3101 	umull	r3, r1, r0, r1
 80001ac:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 80001b0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80001b4:	bf3e      	ittt	cc
 80001b6:	0049      	lslcc	r1, r1, #1
 80001b8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80001bc:	005b      	lslcc	r3, r3, #1
 80001be:	ea40 0001 	orr.w	r0, r0, r1
 80001c2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80001c6:	2afd      	cmp	r2, #253	; 0xfd
 80001c8:	d81d      	bhi.n	8000206 <__aeabi_fmul+0x92>
 80001ca:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80001ce:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80001d2:	bf08      	it	eq
 80001d4:	f020 0001 	biceq.w	r0, r0, #1
 80001d8:	4770      	bx	lr
 80001da:	f090 0f00 	teq	r0, #0
 80001de:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80001e2:	bf08      	it	eq
 80001e4:	0249      	lsleq	r1, r1, #9
 80001e6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80001ea:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80001ee:	3a7f      	subs	r2, #127	; 0x7f
 80001f0:	bfc2      	ittt	gt
 80001f2:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80001f6:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80001fa:	4770      	bxgt	lr
 80001fc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000200:	f04f 0300 	mov.w	r3, #0
 8000204:	3a01      	subs	r2, #1
 8000206:	dc5d      	bgt.n	80002c4 <__aeabi_fmul+0x150>
 8000208:	f112 0f19 	cmn.w	r2, #25
 800020c:	bfdc      	itt	le
 800020e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000212:	4770      	bxle	lr
 8000214:	f1c2 0200 	rsb	r2, r2, #0
 8000218:	0041      	lsls	r1, r0, #1
 800021a:	fa21 f102 	lsr.w	r1, r1, r2
 800021e:	f1c2 0220 	rsb	r2, r2, #32
 8000222:	fa00 fc02 	lsl.w	ip, r0, r2
 8000226:	ea5f 0031 	movs.w	r0, r1, rrx
 800022a:	f140 0000 	adc.w	r0, r0, #0
 800022e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000232:	bf08      	it	eq
 8000234:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000238:	4770      	bx	lr
 800023a:	f092 0f00 	teq	r2, #0
 800023e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000242:	bf02      	ittt	eq
 8000244:	0040      	lsleq	r0, r0, #1
 8000246:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800024a:	3a01      	subeq	r2, #1
 800024c:	d0f9      	beq.n	8000242 <__aeabi_fmul+0xce>
 800024e:	ea40 000c 	orr.w	r0, r0, ip
 8000252:	f093 0f00 	teq	r3, #0
 8000256:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800025a:	bf02      	ittt	eq
 800025c:	0049      	lsleq	r1, r1, #1
 800025e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000262:	3b01      	subeq	r3, #1
 8000264:	d0f9      	beq.n	800025a <__aeabi_fmul+0xe6>
 8000266:	ea41 010c 	orr.w	r1, r1, ip
 800026a:	e78f      	b.n	800018c <__aeabi_fmul+0x18>
 800026c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000270:	ea92 0f0c 	teq	r2, ip
 8000274:	bf18      	it	ne
 8000276:	ea93 0f0c 	teqne	r3, ip
 800027a:	d00a      	beq.n	8000292 <__aeabi_fmul+0x11e>
 800027c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000280:	bf18      	it	ne
 8000282:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000286:	d1d8      	bne.n	800023a <__aeabi_fmul+0xc6>
 8000288:	ea80 0001 	eor.w	r0, r0, r1
 800028c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000290:	4770      	bx	lr
 8000292:	f090 0f00 	teq	r0, #0
 8000296:	bf17      	itett	ne
 8000298:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 800029c:	4608      	moveq	r0, r1
 800029e:	f091 0f00 	teqne	r1, #0
 80002a2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 80002a6:	d014      	beq.n	80002d2 <__aeabi_fmul+0x15e>
 80002a8:	ea92 0f0c 	teq	r2, ip
 80002ac:	d101      	bne.n	80002b2 <__aeabi_fmul+0x13e>
 80002ae:	0242      	lsls	r2, r0, #9
 80002b0:	d10f      	bne.n	80002d2 <__aeabi_fmul+0x15e>
 80002b2:	ea93 0f0c 	teq	r3, ip
 80002b6:	d103      	bne.n	80002c0 <__aeabi_fmul+0x14c>
 80002b8:	024b      	lsls	r3, r1, #9
 80002ba:	bf18      	it	ne
 80002bc:	4608      	movne	r0, r1
 80002be:	d108      	bne.n	80002d2 <__aeabi_fmul+0x15e>
 80002c0:	ea80 0001 	eor.w	r0, r0, r1
 80002c4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80002c8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80002cc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80002d0:	4770      	bx	lr
 80002d2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80002d6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80002da:	4770      	bx	lr

080002dc <__aeabi_drsub>:
 80002dc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002e0:	e002      	b.n	80002e8 <__adddf3>
 80002e2:	bf00      	nop

080002e4 <__aeabi_dsub>:
 80002e4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002e8 <__adddf3>:
 80002e8:	b530      	push	{r4, r5, lr}
 80002ea:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002ee:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002f2:	ea94 0f05 	teq	r4, r5
 80002f6:	bf08      	it	eq
 80002f8:	ea90 0f02 	teqeq	r0, r2
 80002fc:	bf1f      	itttt	ne
 80002fe:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000302:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000306:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800030a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800030e:	f000 80e2 	beq.w	80004d6 <__adddf3+0x1ee>
 8000312:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000316:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800031a:	bfb8      	it	lt
 800031c:	426d      	neglt	r5, r5
 800031e:	dd0c      	ble.n	800033a <__adddf3+0x52>
 8000320:	442c      	add	r4, r5
 8000322:	ea80 0202 	eor.w	r2, r0, r2
 8000326:	ea81 0303 	eor.w	r3, r1, r3
 800032a:	ea82 0000 	eor.w	r0, r2, r0
 800032e:	ea83 0101 	eor.w	r1, r3, r1
 8000332:	ea80 0202 	eor.w	r2, r0, r2
 8000336:	ea81 0303 	eor.w	r3, r1, r3
 800033a:	2d36      	cmp	r5, #54	; 0x36
 800033c:	bf88      	it	hi
 800033e:	bd30      	pophi	{r4, r5, pc}
 8000340:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000344:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000348:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 800034c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000350:	d002      	beq.n	8000358 <__adddf3+0x70>
 8000352:	4240      	negs	r0, r0
 8000354:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000358:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 800035c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000360:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000364:	d002      	beq.n	800036c <__adddf3+0x84>
 8000366:	4252      	negs	r2, r2
 8000368:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800036c:	ea94 0f05 	teq	r4, r5
 8000370:	f000 80a7 	beq.w	80004c2 <__adddf3+0x1da>
 8000374:	f1a4 0401 	sub.w	r4, r4, #1
 8000378:	f1d5 0e20 	rsbs	lr, r5, #32
 800037c:	db0d      	blt.n	800039a <__adddf3+0xb2>
 800037e:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000382:	fa22 f205 	lsr.w	r2, r2, r5
 8000386:	1880      	adds	r0, r0, r2
 8000388:	f141 0100 	adc.w	r1, r1, #0
 800038c:	fa03 f20e 	lsl.w	r2, r3, lr
 8000390:	1880      	adds	r0, r0, r2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	4159      	adcs	r1, r3
 8000398:	e00e      	b.n	80003b8 <__adddf3+0xd0>
 800039a:	f1a5 0520 	sub.w	r5, r5, #32
 800039e:	f10e 0e20 	add.w	lr, lr, #32
 80003a2:	2a01      	cmp	r2, #1
 80003a4:	fa03 fc0e 	lsl.w	ip, r3, lr
 80003a8:	bf28      	it	cs
 80003aa:	f04c 0c02 	orrcs.w	ip, ip, #2
 80003ae:	fa43 f305 	asr.w	r3, r3, r5
 80003b2:	18c0      	adds	r0, r0, r3
 80003b4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003b8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003bc:	d507      	bpl.n	80003ce <__adddf3+0xe6>
 80003be:	f04f 0e00 	mov.w	lr, #0
 80003c2:	f1dc 0c00 	rsbs	ip, ip, #0
 80003c6:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ca:	eb6e 0101 	sbc.w	r1, lr, r1
 80003ce:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003d2:	d31b      	bcc.n	800040c <__adddf3+0x124>
 80003d4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003d8:	d30c      	bcc.n	80003f4 <__adddf3+0x10c>
 80003da:	0849      	lsrs	r1, r1, #1
 80003dc:	ea5f 0030 	movs.w	r0, r0, rrx
 80003e0:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003e4:	f104 0401 	add.w	r4, r4, #1
 80003e8:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003ec:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003f0:	f080 809a 	bcs.w	8000528 <__adddf3+0x240>
 80003f4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003f8:	bf08      	it	eq
 80003fa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003fe:	f150 0000 	adcs.w	r0, r0, #0
 8000402:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000406:	ea41 0105 	orr.w	r1, r1, r5
 800040a:	bd30      	pop	{r4, r5, pc}
 800040c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000410:	4140      	adcs	r0, r0
 8000412:	eb41 0101 	adc.w	r1, r1, r1
 8000416:	3c01      	subs	r4, #1
 8000418:	bf28      	it	cs
 800041a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800041e:	d2e9      	bcs.n	80003f4 <__adddf3+0x10c>
 8000420:	f091 0f00 	teq	r1, #0
 8000424:	bf04      	itt	eq
 8000426:	4601      	moveq	r1, r0
 8000428:	2000      	moveq	r0, #0
 800042a:	fab1 f381 	clz	r3, r1
 800042e:	bf08      	it	eq
 8000430:	3320      	addeq	r3, #32
 8000432:	f1a3 030b 	sub.w	r3, r3, #11
 8000436:	f1b3 0220 	subs.w	r2, r3, #32
 800043a:	da0c      	bge.n	8000456 <__adddf3+0x16e>
 800043c:	320c      	adds	r2, #12
 800043e:	dd08      	ble.n	8000452 <__adddf3+0x16a>
 8000440:	f102 0c14 	add.w	ip, r2, #20
 8000444:	f1c2 020c 	rsb	r2, r2, #12
 8000448:	fa01 f00c 	lsl.w	r0, r1, ip
 800044c:	fa21 f102 	lsr.w	r1, r1, r2
 8000450:	e00c      	b.n	800046c <__adddf3+0x184>
 8000452:	f102 0214 	add.w	r2, r2, #20
 8000456:	bfd8      	it	le
 8000458:	f1c2 0c20 	rsble	ip, r2, #32
 800045c:	fa01 f102 	lsl.w	r1, r1, r2
 8000460:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000464:	bfdc      	itt	le
 8000466:	ea41 010c 	orrle.w	r1, r1, ip
 800046a:	4090      	lslle	r0, r2
 800046c:	1ae4      	subs	r4, r4, r3
 800046e:	bfa2      	ittt	ge
 8000470:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000474:	4329      	orrge	r1, r5
 8000476:	bd30      	popge	{r4, r5, pc}
 8000478:	ea6f 0404 	mvn.w	r4, r4
 800047c:	3c1f      	subs	r4, #31
 800047e:	da1c      	bge.n	80004ba <__adddf3+0x1d2>
 8000480:	340c      	adds	r4, #12
 8000482:	dc0e      	bgt.n	80004a2 <__adddf3+0x1ba>
 8000484:	f104 0414 	add.w	r4, r4, #20
 8000488:	f1c4 0220 	rsb	r2, r4, #32
 800048c:	fa20 f004 	lsr.w	r0, r0, r4
 8000490:	fa01 f302 	lsl.w	r3, r1, r2
 8000494:	ea40 0003 	orr.w	r0, r0, r3
 8000498:	fa21 f304 	lsr.w	r3, r1, r4
 800049c:	ea45 0103 	orr.w	r1, r5, r3
 80004a0:	bd30      	pop	{r4, r5, pc}
 80004a2:	f1c4 040c 	rsb	r4, r4, #12
 80004a6:	f1c4 0220 	rsb	r2, r4, #32
 80004aa:	fa20 f002 	lsr.w	r0, r0, r2
 80004ae:	fa01 f304 	lsl.w	r3, r1, r4
 80004b2:	ea40 0003 	orr.w	r0, r0, r3
 80004b6:	4629      	mov	r1, r5
 80004b8:	bd30      	pop	{r4, r5, pc}
 80004ba:	fa21 f004 	lsr.w	r0, r1, r4
 80004be:	4629      	mov	r1, r5
 80004c0:	bd30      	pop	{r4, r5, pc}
 80004c2:	f094 0f00 	teq	r4, #0
 80004c6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ca:	bf06      	itte	eq
 80004cc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004d0:	3401      	addeq	r4, #1
 80004d2:	3d01      	subne	r5, #1
 80004d4:	e74e      	b.n	8000374 <__adddf3+0x8c>
 80004d6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004da:	bf18      	it	ne
 80004dc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004e0:	d029      	beq.n	8000536 <__adddf3+0x24e>
 80004e2:	ea94 0f05 	teq	r4, r5
 80004e6:	bf08      	it	eq
 80004e8:	ea90 0f02 	teqeq	r0, r2
 80004ec:	d005      	beq.n	80004fa <__adddf3+0x212>
 80004ee:	ea54 0c00 	orrs.w	ip, r4, r0
 80004f2:	bf04      	itt	eq
 80004f4:	4619      	moveq	r1, r3
 80004f6:	4610      	moveq	r0, r2
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea91 0f03 	teq	r1, r3
 80004fe:	bf1e      	ittt	ne
 8000500:	2100      	movne	r1, #0
 8000502:	2000      	movne	r0, #0
 8000504:	bd30      	popne	{r4, r5, pc}
 8000506:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800050a:	d105      	bne.n	8000518 <__adddf3+0x230>
 800050c:	0040      	lsls	r0, r0, #1
 800050e:	4149      	adcs	r1, r1
 8000510:	bf28      	it	cs
 8000512:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000516:	bd30      	pop	{r4, r5, pc}
 8000518:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 800051c:	bf3c      	itt	cc
 800051e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000522:	bd30      	popcc	{r4, r5, pc}
 8000524:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000528:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800052c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000530:	f04f 0000 	mov.w	r0, #0
 8000534:	bd30      	pop	{r4, r5, pc}
 8000536:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800053a:	bf1a      	itte	ne
 800053c:	4619      	movne	r1, r3
 800053e:	4610      	movne	r0, r2
 8000540:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000544:	bf1c      	itt	ne
 8000546:	460b      	movne	r3, r1
 8000548:	4602      	movne	r2, r0
 800054a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800054e:	bf06      	itte	eq
 8000550:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000554:	ea91 0f03 	teqeq	r1, r3
 8000558:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 800055c:	bd30      	pop	{r4, r5, pc}
 800055e:	bf00      	nop

08000560 <__aeabi_ui2d>:
 8000560:	f090 0f00 	teq	r0, #0
 8000564:	bf04      	itt	eq
 8000566:	2100      	moveq	r1, #0
 8000568:	4770      	bxeq	lr
 800056a:	b530      	push	{r4, r5, lr}
 800056c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000570:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000574:	f04f 0500 	mov.w	r5, #0
 8000578:	f04f 0100 	mov.w	r1, #0
 800057c:	e750      	b.n	8000420 <__adddf3+0x138>
 800057e:	bf00      	nop

08000580 <__aeabi_i2d>:
 8000580:	f090 0f00 	teq	r0, #0
 8000584:	bf04      	itt	eq
 8000586:	2100      	moveq	r1, #0
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000590:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000594:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000598:	bf48      	it	mi
 800059a:	4240      	negmi	r0, r0
 800059c:	f04f 0100 	mov.w	r1, #0
 80005a0:	e73e      	b.n	8000420 <__adddf3+0x138>
 80005a2:	bf00      	nop

080005a4 <__aeabi_f2d>:
 80005a4:	0042      	lsls	r2, r0, #1
 80005a6:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80005aa:	ea4f 0131 	mov.w	r1, r1, rrx
 80005ae:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80005b2:	bf1f      	itttt	ne
 80005b4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80005b8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005bc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005c0:	4770      	bxne	lr
 80005c2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005c6:	bf08      	it	eq
 80005c8:	4770      	bxeq	lr
 80005ca:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005ce:	bf04      	itt	eq
 80005d0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005d4:	4770      	bxeq	lr
 80005d6:	b530      	push	{r4, r5, lr}
 80005d8:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005dc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005e0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005e4:	e71c      	b.n	8000420 <__adddf3+0x138>
 80005e6:	bf00      	nop

080005e8 <__aeabi_ul2d>:
 80005e8:	ea50 0201 	orrs.w	r2, r0, r1
 80005ec:	bf08      	it	eq
 80005ee:	4770      	bxeq	lr
 80005f0:	b530      	push	{r4, r5, lr}
 80005f2:	f04f 0500 	mov.w	r5, #0
 80005f6:	e00a      	b.n	800060e <__aeabi_l2d+0x16>

080005f8 <__aeabi_l2d>:
 80005f8:	ea50 0201 	orrs.w	r2, r0, r1
 80005fc:	bf08      	it	eq
 80005fe:	4770      	bxeq	lr
 8000600:	b530      	push	{r4, r5, lr}
 8000602:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000606:	d502      	bpl.n	800060e <__aeabi_l2d+0x16>
 8000608:	4240      	negs	r0, r0
 800060a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800060e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000612:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000616:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800061a:	f43f aed8 	beq.w	80003ce <__adddf3+0xe6>
 800061e:	f04f 0203 	mov.w	r2, #3
 8000622:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000626:	bf18      	it	ne
 8000628:	3203      	addne	r2, #3
 800062a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800062e:	bf18      	it	ne
 8000630:	3203      	addne	r2, #3
 8000632:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000636:	f1c2 0320 	rsb	r3, r2, #32
 800063a:	fa00 fc03 	lsl.w	ip, r0, r3
 800063e:	fa20 f002 	lsr.w	r0, r0, r2
 8000642:	fa01 fe03 	lsl.w	lr, r1, r3
 8000646:	ea40 000e 	orr.w	r0, r0, lr
 800064a:	fa21 f102 	lsr.w	r1, r1, r2
 800064e:	4414      	add	r4, r2
 8000650:	e6bd      	b.n	80003ce <__adddf3+0xe6>
 8000652:	bf00      	nop

08000654 <__aeabi_dmul>:
 8000654:	b570      	push	{r4, r5, r6, lr}
 8000656:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800065a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800065e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000662:	bf1d      	ittte	ne
 8000664:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000668:	ea94 0f0c 	teqne	r4, ip
 800066c:	ea95 0f0c 	teqne	r5, ip
 8000670:	f000 f8de 	bleq	8000830 <__aeabi_dmul+0x1dc>
 8000674:	442c      	add	r4, r5
 8000676:	ea81 0603 	eor.w	r6, r1, r3
 800067a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800067e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000682:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000686:	bf18      	it	ne
 8000688:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 800068c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000690:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000694:	d038      	beq.n	8000708 <__aeabi_dmul+0xb4>
 8000696:	fba0 ce02 	umull	ip, lr, r0, r2
 800069a:	f04f 0500 	mov.w	r5, #0
 800069e:	fbe1 e502 	umlal	lr, r5, r1, r2
 80006a2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80006a6:	fbe0 e503 	umlal	lr, r5, r0, r3
 80006aa:	f04f 0600 	mov.w	r6, #0
 80006ae:	fbe1 5603 	umlal	r5, r6, r1, r3
 80006b2:	f09c 0f00 	teq	ip, #0
 80006b6:	bf18      	it	ne
 80006b8:	f04e 0e01 	orrne.w	lr, lr, #1
 80006bc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006c0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006c4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006c8:	d204      	bcs.n	80006d4 <__aeabi_dmul+0x80>
 80006ca:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006ce:	416d      	adcs	r5, r5
 80006d0:	eb46 0606 	adc.w	r6, r6, r6
 80006d4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006d8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006dc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006e0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006e4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006e8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006ec:	bf88      	it	hi
 80006ee:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006f2:	d81e      	bhi.n	8000732 <__aeabi_dmul+0xde>
 80006f4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006f8:	bf08      	it	eq
 80006fa:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006fe:	f150 0000 	adcs.w	r0, r0, #0
 8000702:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000706:	bd70      	pop	{r4, r5, r6, pc}
 8000708:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 800070c:	ea46 0101 	orr.w	r1, r6, r1
 8000710:	ea40 0002 	orr.w	r0, r0, r2
 8000714:	ea81 0103 	eor.w	r1, r1, r3
 8000718:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 800071c:	bfc2      	ittt	gt
 800071e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000722:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000726:	bd70      	popgt	{r4, r5, r6, pc}
 8000728:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800072c:	f04f 0e00 	mov.w	lr, #0
 8000730:	3c01      	subs	r4, #1
 8000732:	f300 80ab 	bgt.w	800088c <__aeabi_dmul+0x238>
 8000736:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800073a:	bfde      	ittt	le
 800073c:	2000      	movle	r0, #0
 800073e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000742:	bd70      	pople	{r4, r5, r6, pc}
 8000744:	f1c4 0400 	rsb	r4, r4, #0
 8000748:	3c20      	subs	r4, #32
 800074a:	da35      	bge.n	80007b8 <__aeabi_dmul+0x164>
 800074c:	340c      	adds	r4, #12
 800074e:	dc1b      	bgt.n	8000788 <__aeabi_dmul+0x134>
 8000750:	f104 0414 	add.w	r4, r4, #20
 8000754:	f1c4 0520 	rsb	r5, r4, #32
 8000758:	fa00 f305 	lsl.w	r3, r0, r5
 800075c:	fa20 f004 	lsr.w	r0, r0, r4
 8000760:	fa01 f205 	lsl.w	r2, r1, r5
 8000764:	ea40 0002 	orr.w	r0, r0, r2
 8000768:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 800076c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000770:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000774:	fa21 f604 	lsr.w	r6, r1, r4
 8000778:	eb42 0106 	adc.w	r1, r2, r6
 800077c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000780:	bf08      	it	eq
 8000782:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000786:	bd70      	pop	{r4, r5, r6, pc}
 8000788:	f1c4 040c 	rsb	r4, r4, #12
 800078c:	f1c4 0520 	rsb	r5, r4, #32
 8000790:	fa00 f304 	lsl.w	r3, r0, r4
 8000794:	fa20 f005 	lsr.w	r0, r0, r5
 8000798:	fa01 f204 	lsl.w	r2, r1, r4
 800079c:	ea40 0002 	orr.w	r0, r0, r2
 80007a0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007a4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80007a8:	f141 0100 	adc.w	r1, r1, #0
 80007ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007b0:	bf08      	it	eq
 80007b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b6:	bd70      	pop	{r4, r5, r6, pc}
 80007b8:	f1c4 0520 	rsb	r5, r4, #32
 80007bc:	fa00 f205 	lsl.w	r2, r0, r5
 80007c0:	ea4e 0e02 	orr.w	lr, lr, r2
 80007c4:	fa20 f304 	lsr.w	r3, r0, r4
 80007c8:	fa01 f205 	lsl.w	r2, r1, r5
 80007cc:	ea43 0302 	orr.w	r3, r3, r2
 80007d0:	fa21 f004 	lsr.w	r0, r1, r4
 80007d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007d8:	fa21 f204 	lsr.w	r2, r1, r4
 80007dc:	ea20 0002 	bic.w	r0, r0, r2
 80007e0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007e4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007e8:	bf08      	it	eq
 80007ea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007ee:	bd70      	pop	{r4, r5, r6, pc}
 80007f0:	f094 0f00 	teq	r4, #0
 80007f4:	d10f      	bne.n	8000816 <__aeabi_dmul+0x1c2>
 80007f6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007fa:	0040      	lsls	r0, r0, #1
 80007fc:	eb41 0101 	adc.w	r1, r1, r1
 8000800:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000804:	bf08      	it	eq
 8000806:	3c01      	subeq	r4, #1
 8000808:	d0f7      	beq.n	80007fa <__aeabi_dmul+0x1a6>
 800080a:	ea41 0106 	orr.w	r1, r1, r6
 800080e:	f095 0f00 	teq	r5, #0
 8000812:	bf18      	it	ne
 8000814:	4770      	bxne	lr
 8000816:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800081a:	0052      	lsls	r2, r2, #1
 800081c:	eb43 0303 	adc.w	r3, r3, r3
 8000820:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000824:	bf08      	it	eq
 8000826:	3d01      	subeq	r5, #1
 8000828:	d0f7      	beq.n	800081a <__aeabi_dmul+0x1c6>
 800082a:	ea43 0306 	orr.w	r3, r3, r6
 800082e:	4770      	bx	lr
 8000830:	ea94 0f0c 	teq	r4, ip
 8000834:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000838:	bf18      	it	ne
 800083a:	ea95 0f0c 	teqne	r5, ip
 800083e:	d00c      	beq.n	800085a <__aeabi_dmul+0x206>
 8000840:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000844:	bf18      	it	ne
 8000846:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084a:	d1d1      	bne.n	80007f0 <__aeabi_dmul+0x19c>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f04f 0000 	mov.w	r0, #0
 8000858:	bd70      	pop	{r4, r5, r6, pc}
 800085a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800085e:	bf06      	itte	eq
 8000860:	4610      	moveq	r0, r2
 8000862:	4619      	moveq	r1, r3
 8000864:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000868:	d019      	beq.n	800089e <__aeabi_dmul+0x24a>
 800086a:	ea94 0f0c 	teq	r4, ip
 800086e:	d102      	bne.n	8000876 <__aeabi_dmul+0x222>
 8000870:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000874:	d113      	bne.n	800089e <__aeabi_dmul+0x24a>
 8000876:	ea95 0f0c 	teq	r5, ip
 800087a:	d105      	bne.n	8000888 <__aeabi_dmul+0x234>
 800087c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000880:	bf1c      	itt	ne
 8000882:	4610      	movne	r0, r2
 8000884:	4619      	movne	r1, r3
 8000886:	d10a      	bne.n	800089e <__aeabi_dmul+0x24a>
 8000888:	ea81 0103 	eor.w	r1, r1, r3
 800088c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000890:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000894:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000898:	f04f 0000 	mov.w	r0, #0
 800089c:	bd70      	pop	{r4, r5, r6, pc}
 800089e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80008a2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80008a6:	bd70      	pop	{r4, r5, r6, pc}

080008a8 <__aeabi_ddiv>:
 80008a8:	b570      	push	{r4, r5, r6, lr}
 80008aa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80008ae:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80008b2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80008b6:	bf1d      	ittte	ne
 80008b8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008bc:	ea94 0f0c 	teqne	r4, ip
 80008c0:	ea95 0f0c 	teqne	r5, ip
 80008c4:	f000 f8a7 	bleq	8000a16 <__aeabi_ddiv+0x16e>
 80008c8:	eba4 0405 	sub.w	r4, r4, r5
 80008cc:	ea81 0e03 	eor.w	lr, r1, r3
 80008d0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d4:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008d8:	f000 8088 	beq.w	80009ec <__aeabi_ddiv+0x144>
 80008dc:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008e0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008e4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008e8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008ec:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008f0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008f4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008f8:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008fc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000900:	429d      	cmp	r5, r3
 8000902:	bf08      	it	eq
 8000904:	4296      	cmpeq	r6, r2
 8000906:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800090a:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800090e:	d202      	bcs.n	8000916 <__aeabi_ddiv+0x6e>
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	1ab6      	subs	r6, r6, r2
 8000918:	eb65 0503 	sbc.w	r5, r5, r3
 800091c:	085b      	lsrs	r3, r3, #1
 800091e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000922:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000926:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800092a:	ebb6 0e02 	subs.w	lr, r6, r2
 800092e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000932:	bf22      	ittt	cs
 8000934:	1ab6      	subcs	r6, r6, r2
 8000936:	4675      	movcs	r5, lr
 8000938:	ea40 000c 	orrcs.w	r0, r0, ip
 800093c:	085b      	lsrs	r3, r3, #1
 800093e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000942:	ebb6 0e02 	subs.w	lr, r6, r2
 8000946:	eb75 0e03 	sbcs.w	lr, r5, r3
 800094a:	bf22      	ittt	cs
 800094c:	1ab6      	subcs	r6, r6, r2
 800094e:	4675      	movcs	r5, lr
 8000950:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000954:	085b      	lsrs	r3, r3, #1
 8000956:	ea4f 0232 	mov.w	r2, r2, rrx
 800095a:	ebb6 0e02 	subs.w	lr, r6, r2
 800095e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000962:	bf22      	ittt	cs
 8000964:	1ab6      	subcs	r6, r6, r2
 8000966:	4675      	movcs	r5, lr
 8000968:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 800096c:	085b      	lsrs	r3, r3, #1
 800096e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000972:	ebb6 0e02 	subs.w	lr, r6, r2
 8000976:	eb75 0e03 	sbcs.w	lr, r5, r3
 800097a:	bf22      	ittt	cs
 800097c:	1ab6      	subcs	r6, r6, r2
 800097e:	4675      	movcs	r5, lr
 8000980:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000984:	ea55 0e06 	orrs.w	lr, r5, r6
 8000988:	d018      	beq.n	80009bc <__aeabi_ddiv+0x114>
 800098a:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800098e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000992:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000996:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800099a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800099e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80009a2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80009a6:	d1c0      	bne.n	800092a <__aeabi_ddiv+0x82>
 80009a8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009ac:	d10b      	bne.n	80009c6 <__aeabi_ddiv+0x11e>
 80009ae:	ea41 0100 	orr.w	r1, r1, r0
 80009b2:	f04f 0000 	mov.w	r0, #0
 80009b6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80009ba:	e7b6      	b.n	800092a <__aeabi_ddiv+0x82>
 80009bc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009c0:	bf04      	itt	eq
 80009c2:	4301      	orreq	r1, r0
 80009c4:	2000      	moveq	r0, #0
 80009c6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ca:	bf88      	it	hi
 80009cc:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009d0:	f63f aeaf 	bhi.w	8000732 <__aeabi_dmul+0xde>
 80009d4:	ebb5 0c03 	subs.w	ip, r5, r3
 80009d8:	bf04      	itt	eq
 80009da:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009e2:	f150 0000 	adcs.w	r0, r0, #0
 80009e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ea:	bd70      	pop	{r4, r5, r6, pc}
 80009ec:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009f0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009f4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009f8:	bfc2      	ittt	gt
 80009fa:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009fe:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000a02:	bd70      	popgt	{r4, r5, r6, pc}
 8000a04:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a08:	f04f 0e00 	mov.w	lr, #0
 8000a0c:	3c01      	subs	r4, #1
 8000a0e:	e690      	b.n	8000732 <__aeabi_dmul+0xde>
 8000a10:	ea45 0e06 	orr.w	lr, r5, r6
 8000a14:	e68d      	b.n	8000732 <__aeabi_dmul+0xde>
 8000a16:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a1a:	ea94 0f0c 	teq	r4, ip
 8000a1e:	bf08      	it	eq
 8000a20:	ea95 0f0c 	teqeq	r5, ip
 8000a24:	f43f af3b 	beq.w	800089e <__aeabi_dmul+0x24a>
 8000a28:	ea94 0f0c 	teq	r4, ip
 8000a2c:	d10a      	bne.n	8000a44 <__aeabi_ddiv+0x19c>
 8000a2e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a32:	f47f af34 	bne.w	800089e <__aeabi_dmul+0x24a>
 8000a36:	ea95 0f0c 	teq	r5, ip
 8000a3a:	f47f af25 	bne.w	8000888 <__aeabi_dmul+0x234>
 8000a3e:	4610      	mov	r0, r2
 8000a40:	4619      	mov	r1, r3
 8000a42:	e72c      	b.n	800089e <__aeabi_dmul+0x24a>
 8000a44:	ea95 0f0c 	teq	r5, ip
 8000a48:	d106      	bne.n	8000a58 <__aeabi_ddiv+0x1b0>
 8000a4a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a4e:	f43f aefd 	beq.w	800084c <__aeabi_dmul+0x1f8>
 8000a52:	4610      	mov	r0, r2
 8000a54:	4619      	mov	r1, r3
 8000a56:	e722      	b.n	800089e <__aeabi_dmul+0x24a>
 8000a58:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a5c:	bf18      	it	ne
 8000a5e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a62:	f47f aec5 	bne.w	80007f0 <__aeabi_dmul+0x19c>
 8000a66:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a6a:	f47f af0d 	bne.w	8000888 <__aeabi_dmul+0x234>
 8000a6e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a72:	f47f aeeb 	bne.w	800084c <__aeabi_dmul+0x1f8>
 8000a76:	e712      	b.n	800089e <__aeabi_dmul+0x24a>

08000a78 <__gedf2>:
 8000a78:	f04f 3cff 	mov.w	ip, #4294967295
 8000a7c:	e006      	b.n	8000a8c <__cmpdf2+0x4>
 8000a7e:	bf00      	nop

08000a80 <__ledf2>:
 8000a80:	f04f 0c01 	mov.w	ip, #1
 8000a84:	e002      	b.n	8000a8c <__cmpdf2+0x4>
 8000a86:	bf00      	nop

08000a88 <__cmpdf2>:
 8000a88:	f04f 0c01 	mov.w	ip, #1
 8000a8c:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a9c:	bf18      	it	ne
 8000a9e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000aa2:	d01b      	beq.n	8000adc <__cmpdf2+0x54>
 8000aa4:	b001      	add	sp, #4
 8000aa6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000aaa:	bf0c      	ite	eq
 8000aac:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000ab0:	ea91 0f03 	teqne	r1, r3
 8000ab4:	bf02      	ittt	eq
 8000ab6:	ea90 0f02 	teqeq	r0, r2
 8000aba:	2000      	moveq	r0, #0
 8000abc:	4770      	bxeq	lr
 8000abe:	f110 0f00 	cmn.w	r0, #0
 8000ac2:	ea91 0f03 	teq	r1, r3
 8000ac6:	bf58      	it	pl
 8000ac8:	4299      	cmppl	r1, r3
 8000aca:	bf08      	it	eq
 8000acc:	4290      	cmpeq	r0, r2
 8000ace:	bf2c      	ite	cs
 8000ad0:	17d8      	asrcs	r0, r3, #31
 8000ad2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000ad6:	f040 0001 	orr.w	r0, r0, #1
 8000ada:	4770      	bx	lr
 8000adc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ae0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ae4:	d102      	bne.n	8000aec <__cmpdf2+0x64>
 8000ae6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aea:	d107      	bne.n	8000afc <__cmpdf2+0x74>
 8000aec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000af0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000af4:	d1d6      	bne.n	8000aa4 <__cmpdf2+0x1c>
 8000af6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000afa:	d0d3      	beq.n	8000aa4 <__cmpdf2+0x1c>
 8000afc:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000b00:	4770      	bx	lr
 8000b02:	bf00      	nop

08000b04 <__aeabi_cdrcmple>:
 8000b04:	4684      	mov	ip, r0
 8000b06:	4610      	mov	r0, r2
 8000b08:	4662      	mov	r2, ip
 8000b0a:	468c      	mov	ip, r1
 8000b0c:	4619      	mov	r1, r3
 8000b0e:	4663      	mov	r3, ip
 8000b10:	e000      	b.n	8000b14 <__aeabi_cdcmpeq>
 8000b12:	bf00      	nop

08000b14 <__aeabi_cdcmpeq>:
 8000b14:	b501      	push	{r0, lr}
 8000b16:	f7ff ffb7 	bl	8000a88 <__cmpdf2>
 8000b1a:	2800      	cmp	r0, #0
 8000b1c:	bf48      	it	mi
 8000b1e:	f110 0f00 	cmnmi.w	r0, #0
 8000b22:	bd01      	pop	{r0, pc}

08000b24 <__aeabi_dcmpeq>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff fff4 	bl	8000b14 <__aeabi_cdcmpeq>
 8000b2c:	bf0c      	ite	eq
 8000b2e:	2001      	moveq	r0, #1
 8000b30:	2000      	movne	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmplt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffea 	bl	8000b14 <__aeabi_cdcmpeq>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmple>:
 8000b4c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b50:	f7ff ffe0 	bl	8000b14 <__aeabi_cdcmpeq>
 8000b54:	bf94      	ite	ls
 8000b56:	2001      	movls	r0, #1
 8000b58:	2000      	movhi	r0, #0
 8000b5a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b5e:	bf00      	nop

08000b60 <__aeabi_dcmpge>:
 8000b60:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b64:	f7ff ffce 	bl	8000b04 <__aeabi_cdrcmple>
 8000b68:	bf94      	ite	ls
 8000b6a:	2001      	movls	r0, #1
 8000b6c:	2000      	movhi	r0, #0
 8000b6e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b72:	bf00      	nop

08000b74 <__aeabi_dcmpgt>:
 8000b74:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b78:	f7ff ffc4 	bl	8000b04 <__aeabi_cdrcmple>
 8000b7c:	bf34      	ite	cc
 8000b7e:	2001      	movcc	r0, #1
 8000b80:	2000      	movcs	r0, #0
 8000b82:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b86:	bf00      	nop

08000b88 <__aeabi_dcmpun>:
 8000b88:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b8c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b90:	d102      	bne.n	8000b98 <__aeabi_dcmpun+0x10>
 8000b92:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b96:	d10a      	bne.n	8000bae <__aeabi_dcmpun+0x26>
 8000b98:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b9c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ba0:	d102      	bne.n	8000ba8 <__aeabi_dcmpun+0x20>
 8000ba2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ba6:	d102      	bne.n	8000bae <__aeabi_dcmpun+0x26>
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	f04f 0001 	mov.w	r0, #1
 8000bb2:	4770      	bx	lr

08000bb4 <__aeabi_d2uiz>:
 8000bb4:	004a      	lsls	r2, r1, #1
 8000bb6:	d211      	bcs.n	8000bdc <__aeabi_d2uiz+0x28>
 8000bb8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bbc:	d211      	bcs.n	8000be2 <__aeabi_d2uiz+0x2e>
 8000bbe:	d50d      	bpl.n	8000bdc <__aeabi_d2uiz+0x28>
 8000bc0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bc4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bc8:	d40e      	bmi.n	8000be8 <__aeabi_d2uiz+0x34>
 8000bca:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bce:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bd2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bd6:	fa23 f002 	lsr.w	r0, r3, r2
 8000bda:	4770      	bx	lr
 8000bdc:	f04f 0000 	mov.w	r0, #0
 8000be0:	4770      	bx	lr
 8000be2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000be6:	d102      	bne.n	8000bee <__aeabi_d2uiz+0x3a>
 8000be8:	f04f 30ff 	mov.w	r0, #4294967295
 8000bec:	4770      	bx	lr
 8000bee:	f04f 0000 	mov.w	r0, #0
 8000bf2:	4770      	bx	lr

08000bf4 <__aeabi_d2f>:
 8000bf4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bf8:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bfc:	bf24      	itt	cs
 8000bfe:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c02:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c06:	d90d      	bls.n	8000c24 <__aeabi_d2f+0x30>
 8000c08:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c0c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c10:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c14:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c18:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c1c:	bf08      	it	eq
 8000c1e:	f020 0001 	biceq.w	r0, r0, #1
 8000c22:	4770      	bx	lr
 8000c24:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c28:	d121      	bne.n	8000c6e <__aeabi_d2f+0x7a>
 8000c2a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c2e:	bfbc      	itt	lt
 8000c30:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c34:	4770      	bxlt	lr
 8000c36:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c3a:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c3e:	f1c2 0218 	rsb	r2, r2, #24
 8000c42:	f1c2 0c20 	rsb	ip, r2, #32
 8000c46:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c4a:	fa20 f002 	lsr.w	r0, r0, r2
 8000c4e:	bf18      	it	ne
 8000c50:	f040 0001 	orrne.w	r0, r0, #1
 8000c54:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c58:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c5c:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c60:	ea40 000c 	orr.w	r0, r0, ip
 8000c64:	fa23 f302 	lsr.w	r3, r3, r2
 8000c68:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c6c:	e7cc      	b.n	8000c08 <__aeabi_d2f+0x14>
 8000c6e:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c72:	d107      	bne.n	8000c84 <__aeabi_d2f+0x90>
 8000c74:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c78:	bf1e      	ittt	ne
 8000c7a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c7e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c82:	4770      	bxne	lr
 8000c84:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c88:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c8c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c90:	4770      	bx	lr
 8000c92:	bf00      	nop

08000c94 <__aeabi_frsub>:
 8000c94:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000c98:	e002      	b.n	8000ca0 <__addsf3>
 8000c9a:	bf00      	nop

08000c9c <__aeabi_fsub>:
 8000c9c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000ca0 <__addsf3>:
 8000ca0:	0042      	lsls	r2, r0, #1
 8000ca2:	bf1f      	itttt	ne
 8000ca4:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000ca8:	ea92 0f03 	teqne	r2, r3
 8000cac:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000cb0:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000cb4:	d06a      	beq.n	8000d8c <__addsf3+0xec>
 8000cb6:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000cba:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000cbe:	bfc1      	itttt	gt
 8000cc0:	18d2      	addgt	r2, r2, r3
 8000cc2:	4041      	eorgt	r1, r0
 8000cc4:	4048      	eorgt	r0, r1
 8000cc6:	4041      	eorgt	r1, r0
 8000cc8:	bfb8      	it	lt
 8000cca:	425b      	neglt	r3, r3
 8000ccc:	2b19      	cmp	r3, #25
 8000cce:	bf88      	it	hi
 8000cd0:	4770      	bxhi	lr
 8000cd2:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000cd6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cda:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000cde:	bf18      	it	ne
 8000ce0:	4240      	negne	r0, r0
 8000ce2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000ce6:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000cea:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000cee:	bf18      	it	ne
 8000cf0:	4249      	negne	r1, r1
 8000cf2:	ea92 0f03 	teq	r2, r3
 8000cf6:	d03f      	beq.n	8000d78 <__addsf3+0xd8>
 8000cf8:	f1a2 0201 	sub.w	r2, r2, #1
 8000cfc:	fa41 fc03 	asr.w	ip, r1, r3
 8000d00:	eb10 000c 	adds.w	r0, r0, ip
 8000d04:	f1c3 0320 	rsb	r3, r3, #32
 8000d08:	fa01 f103 	lsl.w	r1, r1, r3
 8000d0c:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000d10:	d502      	bpl.n	8000d18 <__addsf3+0x78>
 8000d12:	4249      	negs	r1, r1
 8000d14:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000d18:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000d1c:	d313      	bcc.n	8000d46 <__addsf3+0xa6>
 8000d1e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000d22:	d306      	bcc.n	8000d32 <__addsf3+0x92>
 8000d24:	0840      	lsrs	r0, r0, #1
 8000d26:	ea4f 0131 	mov.w	r1, r1, rrx
 8000d2a:	f102 0201 	add.w	r2, r2, #1
 8000d2e:	2afe      	cmp	r2, #254	; 0xfe
 8000d30:	d251      	bcs.n	8000dd6 <__addsf3+0x136>
 8000d32:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000d36:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000d3a:	bf08      	it	eq
 8000d3c:	f020 0001 	biceq.w	r0, r0, #1
 8000d40:	ea40 0003 	orr.w	r0, r0, r3
 8000d44:	4770      	bx	lr
 8000d46:	0049      	lsls	r1, r1, #1
 8000d48:	eb40 0000 	adc.w	r0, r0, r0
 8000d4c:	3a01      	subs	r2, #1
 8000d4e:	bf28      	it	cs
 8000d50:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000d54:	d2ed      	bcs.n	8000d32 <__addsf3+0x92>
 8000d56:	fab0 fc80 	clz	ip, r0
 8000d5a:	f1ac 0c08 	sub.w	ip, ip, #8
 8000d5e:	ebb2 020c 	subs.w	r2, r2, ip
 8000d62:	fa00 f00c 	lsl.w	r0, r0, ip
 8000d66:	bfaa      	itet	ge
 8000d68:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000d6c:	4252      	neglt	r2, r2
 8000d6e:	4318      	orrge	r0, r3
 8000d70:	bfbc      	itt	lt
 8000d72:	40d0      	lsrlt	r0, r2
 8000d74:	4318      	orrlt	r0, r3
 8000d76:	4770      	bx	lr
 8000d78:	f092 0f00 	teq	r2, #0
 8000d7c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000d80:	bf06      	itte	eq
 8000d82:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000d86:	3201      	addeq	r2, #1
 8000d88:	3b01      	subne	r3, #1
 8000d8a:	e7b5      	b.n	8000cf8 <__addsf3+0x58>
 8000d8c:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000d90:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000d94:	bf18      	it	ne
 8000d96:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000d9a:	d021      	beq.n	8000de0 <__addsf3+0x140>
 8000d9c:	ea92 0f03 	teq	r2, r3
 8000da0:	d004      	beq.n	8000dac <__addsf3+0x10c>
 8000da2:	f092 0f00 	teq	r2, #0
 8000da6:	bf08      	it	eq
 8000da8:	4608      	moveq	r0, r1
 8000daa:	4770      	bx	lr
 8000dac:	ea90 0f01 	teq	r0, r1
 8000db0:	bf1c      	itt	ne
 8000db2:	2000      	movne	r0, #0
 8000db4:	4770      	bxne	lr
 8000db6:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000dba:	d104      	bne.n	8000dc6 <__addsf3+0x126>
 8000dbc:	0040      	lsls	r0, r0, #1
 8000dbe:	bf28      	it	cs
 8000dc0:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000dc4:	4770      	bx	lr
 8000dc6:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000dca:	bf3c      	itt	cc
 8000dcc:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000dd0:	4770      	bxcc	lr
 8000dd2:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000dd6:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000dda:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000dde:	4770      	bx	lr
 8000de0:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000de4:	bf16      	itet	ne
 8000de6:	4608      	movne	r0, r1
 8000de8:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000dec:	4601      	movne	r1, r0
 8000dee:	0242      	lsls	r2, r0, #9
 8000df0:	bf06      	itte	eq
 8000df2:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000df6:	ea90 0f01 	teqeq	r0, r1
 8000dfa:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000dfe:	4770      	bx	lr

08000e00 <__aeabi_ui2f>:
 8000e00:	f04f 0300 	mov.w	r3, #0
 8000e04:	e004      	b.n	8000e10 <__aeabi_i2f+0x8>
 8000e06:	bf00      	nop

08000e08 <__aeabi_i2f>:
 8000e08:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000e0c:	bf48      	it	mi
 8000e0e:	4240      	negmi	r0, r0
 8000e10:	ea5f 0c00 	movs.w	ip, r0
 8000e14:	bf08      	it	eq
 8000e16:	4770      	bxeq	lr
 8000e18:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000e1c:	4601      	mov	r1, r0
 8000e1e:	f04f 0000 	mov.w	r0, #0
 8000e22:	e01c      	b.n	8000e5e <__aeabi_l2f+0x2a>

08000e24 <__aeabi_ul2f>:
 8000e24:	ea50 0201 	orrs.w	r2, r0, r1
 8000e28:	bf08      	it	eq
 8000e2a:	4770      	bxeq	lr
 8000e2c:	f04f 0300 	mov.w	r3, #0
 8000e30:	e00a      	b.n	8000e48 <__aeabi_l2f+0x14>
 8000e32:	bf00      	nop

08000e34 <__aeabi_l2f>:
 8000e34:	ea50 0201 	orrs.w	r2, r0, r1
 8000e38:	bf08      	it	eq
 8000e3a:	4770      	bxeq	lr
 8000e3c:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000e40:	d502      	bpl.n	8000e48 <__aeabi_l2f+0x14>
 8000e42:	4240      	negs	r0, r0
 8000e44:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000e48:	ea5f 0c01 	movs.w	ip, r1
 8000e4c:	bf02      	ittt	eq
 8000e4e:	4684      	moveq	ip, r0
 8000e50:	4601      	moveq	r1, r0
 8000e52:	2000      	moveq	r0, #0
 8000e54:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000e58:	bf08      	it	eq
 8000e5a:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000e5e:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000e62:	fabc f28c 	clz	r2, ip
 8000e66:	3a08      	subs	r2, #8
 8000e68:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000e6c:	db10      	blt.n	8000e90 <__aeabi_l2f+0x5c>
 8000e6e:	fa01 fc02 	lsl.w	ip, r1, r2
 8000e72:	4463      	add	r3, ip
 8000e74:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e78:	f1c2 0220 	rsb	r2, r2, #32
 8000e7c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000e80:	fa20 f202 	lsr.w	r2, r0, r2
 8000e84:	eb43 0002 	adc.w	r0, r3, r2
 8000e88:	bf08      	it	eq
 8000e8a:	f020 0001 	biceq.w	r0, r0, #1
 8000e8e:	4770      	bx	lr
 8000e90:	f102 0220 	add.w	r2, r2, #32
 8000e94:	fa01 fc02 	lsl.w	ip, r1, r2
 8000e98:	f1c2 0220 	rsb	r2, r2, #32
 8000e9c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000ea0:	fa21 f202 	lsr.w	r2, r1, r2
 8000ea4:	eb43 0002 	adc.w	r0, r3, r2
 8000ea8:	bf08      	it	eq
 8000eaa:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000eae:	4770      	bx	lr

08000eb0 <__gesf2>:
 8000eb0:	f04f 3cff 	mov.w	ip, #4294967295
 8000eb4:	e006      	b.n	8000ec4 <__cmpsf2+0x4>
 8000eb6:	bf00      	nop

08000eb8 <__lesf2>:
 8000eb8:	f04f 0c01 	mov.w	ip, #1
 8000ebc:	e002      	b.n	8000ec4 <__cmpsf2+0x4>
 8000ebe:	bf00      	nop

08000ec0 <__cmpsf2>:
 8000ec0:	f04f 0c01 	mov.w	ip, #1
 8000ec4:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000ec8:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000ecc:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000ed0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000ed4:	bf18      	it	ne
 8000ed6:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000eda:	d011      	beq.n	8000f00 <__cmpsf2+0x40>
 8000edc:	b001      	add	sp, #4
 8000ede:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8000ee2:	bf18      	it	ne
 8000ee4:	ea90 0f01 	teqne	r0, r1
 8000ee8:	bf58      	it	pl
 8000eea:	ebb2 0003 	subspl.w	r0, r2, r3
 8000eee:	bf88      	it	hi
 8000ef0:	17c8      	asrhi	r0, r1, #31
 8000ef2:	bf38      	it	cc
 8000ef4:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8000ef8:	bf18      	it	ne
 8000efa:	f040 0001 	orrne.w	r0, r0, #1
 8000efe:	4770      	bx	lr
 8000f00:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000f04:	d102      	bne.n	8000f0c <__cmpsf2+0x4c>
 8000f06:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000f0a:	d105      	bne.n	8000f18 <__cmpsf2+0x58>
 8000f0c:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8000f10:	d1e4      	bne.n	8000edc <__cmpsf2+0x1c>
 8000f12:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000f16:	d0e1      	beq.n	8000edc <__cmpsf2+0x1c>
 8000f18:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000f1c:	4770      	bx	lr
 8000f1e:	bf00      	nop

08000f20 <__aeabi_cfrcmple>:
 8000f20:	4684      	mov	ip, r0
 8000f22:	4608      	mov	r0, r1
 8000f24:	4661      	mov	r1, ip
 8000f26:	e7ff      	b.n	8000f28 <__aeabi_cfcmpeq>

08000f28 <__aeabi_cfcmpeq>:
 8000f28:	b50f      	push	{r0, r1, r2, r3, lr}
 8000f2a:	f7ff ffc9 	bl	8000ec0 <__cmpsf2>
 8000f2e:	2800      	cmp	r0, #0
 8000f30:	bf48      	it	mi
 8000f32:	f110 0f00 	cmnmi.w	r0, #0
 8000f36:	bd0f      	pop	{r0, r1, r2, r3, pc}

08000f38 <__aeabi_fcmpeq>:
 8000f38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000f3c:	f7ff fff4 	bl	8000f28 <__aeabi_cfcmpeq>
 8000f40:	bf0c      	ite	eq
 8000f42:	2001      	moveq	r0, #1
 8000f44:	2000      	movne	r0, #0
 8000f46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000f4a:	bf00      	nop

08000f4c <__aeabi_fcmplt>:
 8000f4c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000f50:	f7ff ffea 	bl	8000f28 <__aeabi_cfcmpeq>
 8000f54:	bf34      	ite	cc
 8000f56:	2001      	movcc	r0, #1
 8000f58:	2000      	movcs	r0, #0
 8000f5a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000f5e:	bf00      	nop

08000f60 <__aeabi_fcmple>:
 8000f60:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000f64:	f7ff ffe0 	bl	8000f28 <__aeabi_cfcmpeq>
 8000f68:	bf94      	ite	ls
 8000f6a:	2001      	movls	r0, #1
 8000f6c:	2000      	movhi	r0, #0
 8000f6e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000f72:	bf00      	nop

08000f74 <__aeabi_fcmpge>:
 8000f74:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000f78:	f7ff ffd2 	bl	8000f20 <__aeabi_cfrcmple>
 8000f7c:	bf94      	ite	ls
 8000f7e:	2001      	movls	r0, #1
 8000f80:	2000      	movhi	r0, #0
 8000f82:	f85d fb08 	ldr.w	pc, [sp], #8
 8000f86:	bf00      	nop

08000f88 <__aeabi_fcmpgt>:
 8000f88:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000f8c:	f7ff ffc8 	bl	8000f20 <__aeabi_cfrcmple>
 8000f90:	bf34      	ite	cc
 8000f92:	2001      	movcc	r0, #1
 8000f94:	2000      	movcs	r0, #0
 8000f96:	f85d fb08 	ldr.w	pc, [sp], #8
 8000f9a:	bf00      	nop

08000f9c <__aeabi_fcmpun>:
 8000f9c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000fa0:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000fa4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000fa8:	d102      	bne.n	8000fb0 <__aeabi_fcmpun+0x14>
 8000faa:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000fae:	d108      	bne.n	8000fc2 <__aeabi_fcmpun+0x26>
 8000fb0:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8000fb4:	d102      	bne.n	8000fbc <__aeabi_fcmpun+0x20>
 8000fb6:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000fba:	d102      	bne.n	8000fc2 <__aeabi_fcmpun+0x26>
 8000fbc:	f04f 0000 	mov.w	r0, #0
 8000fc0:	4770      	bx	lr
 8000fc2:	f04f 0001 	mov.w	r0, #1
 8000fc6:	4770      	bx	lr

08000fc8 <__aeabi_f2uiz>:
 8000fc8:	0042      	lsls	r2, r0, #1
 8000fca:	d20e      	bcs.n	8000fea <__aeabi_f2uiz+0x22>
 8000fcc:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8000fd0:	d30b      	bcc.n	8000fea <__aeabi_f2uiz+0x22>
 8000fd2:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8000fd6:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000fda:	d409      	bmi.n	8000ff0 <__aeabi_f2uiz+0x28>
 8000fdc:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000fe0:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000fe4:	fa23 f002 	lsr.w	r0, r3, r2
 8000fe8:	4770      	bx	lr
 8000fea:	f04f 0000 	mov.w	r0, #0
 8000fee:	4770      	bx	lr
 8000ff0:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8000ff4:	d101      	bne.n	8000ffa <__aeabi_f2uiz+0x32>
 8000ff6:	0242      	lsls	r2, r0, #9
 8000ff8:	d102      	bne.n	8001000 <__aeabi_f2uiz+0x38>
 8000ffa:	f04f 30ff 	mov.w	r0, #4294967295
 8000ffe:	4770      	bx	lr
 8001000:	f04f 0000 	mov.w	r0, #0
 8001004:	4770      	bx	lr
 8001006:	bf00      	nop

08001008 <__aeabi_d2lz>:
 8001008:	b538      	push	{r3, r4, r5, lr}
 800100a:	4605      	mov	r5, r0
 800100c:	460c      	mov	r4, r1
 800100e:	2200      	movs	r2, #0
 8001010:	2300      	movs	r3, #0
 8001012:	4628      	mov	r0, r5
 8001014:	4621      	mov	r1, r4
 8001016:	f7ff fd8f 	bl	8000b38 <__aeabi_dcmplt>
 800101a:	b928      	cbnz	r0, 8001028 <__aeabi_d2lz+0x20>
 800101c:	4628      	mov	r0, r5
 800101e:	4621      	mov	r1, r4
 8001020:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001024:	f000 b80a 	b.w	800103c <__aeabi_d2ulz>
 8001028:	4628      	mov	r0, r5
 800102a:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 800102e:	f000 f805 	bl	800103c <__aeabi_d2ulz>
 8001032:	4240      	negs	r0, r0
 8001034:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001038:	bd38      	pop	{r3, r4, r5, pc}
 800103a:	bf00      	nop

0800103c <__aeabi_d2ulz>:
 800103c:	b5d0      	push	{r4, r6, r7, lr}
 800103e:	2200      	movs	r2, #0
 8001040:	4b0b      	ldr	r3, [pc, #44]	; (8001070 <__aeabi_d2ulz+0x34>)
 8001042:	4606      	mov	r6, r0
 8001044:	460f      	mov	r7, r1
 8001046:	f7ff fb05 	bl	8000654 <__aeabi_dmul>
 800104a:	f7ff fdb3 	bl	8000bb4 <__aeabi_d2uiz>
 800104e:	4604      	mov	r4, r0
 8001050:	f7ff fa86 	bl	8000560 <__aeabi_ui2d>
 8001054:	2200      	movs	r2, #0
 8001056:	4b07      	ldr	r3, [pc, #28]	; (8001074 <__aeabi_d2ulz+0x38>)
 8001058:	f7ff fafc 	bl	8000654 <__aeabi_dmul>
 800105c:	4602      	mov	r2, r0
 800105e:	460b      	mov	r3, r1
 8001060:	4630      	mov	r0, r6
 8001062:	4639      	mov	r1, r7
 8001064:	f7ff f93e 	bl	80002e4 <__aeabi_dsub>
 8001068:	f7ff fda4 	bl	8000bb4 <__aeabi_d2uiz>
 800106c:	4621      	mov	r1, r4
 800106e:	bdd0      	pop	{r4, r6, r7, pc}
 8001070:	3df00000 	.word	0x3df00000
 8001074:	41f00000 	.word	0x41f00000

08001078 <ProcessMsg>:
uint8_t flag_config_wf, flag_connect_wf, flag_display;

uint8_t msg[100];


void ProcessMsg(char* msg){
 8001078:	b590      	push	{r4, r7, lr}
 800107a:	b085      	sub	sp, #20
 800107c:	af00      	add	r7, sp, #0
 800107e:	6078      	str	r0, [r7, #4]
	uint8_t i = 0, node_id;
 8001080:	2300      	movs	r3, #0
 8001082:	73fb      	strb	r3, [r7, #15]
		10    "P"
		11    30
		12    "K"
		13    40
*/
	token = strtok(msg, ":,{}");
 8001084:	4951      	ldr	r1, [pc, #324]	; (80011cc <ProcessMsg+0x154>)
 8001086:	6878      	ldr	r0, [r7, #4]
 8001088:	f005 faf8 	bl	800667c <strtok>
 800108c:	60b8      	str	r0, [r7, #8]

	for(i = 0; (i < 100) && (token != NULL); i++){
 800108e:	2300      	movs	r3, #0
 8001090:	73fb      	strb	r3, [r7, #15]
 8001092:	e090      	b.n	80011b6 <ProcessMsg+0x13e>
		if(i == 1) {
 8001094:	7bfb      	ldrb	r3, [r7, #15]
 8001096:	2b01      	cmp	r3, #1
 8001098:	d118      	bne.n	80010cc <ProcessMsg+0x54>
			node_id = atoi(token);
 800109a:	68b8      	ldr	r0, [r7, #8]
 800109c:	f004 fb3f 	bl	800571e <atoi>
 80010a0:	4603      	mov	r3, r0
 80010a2:	73bb      	strb	r3, [r7, #14]
			_Data_node[node_id].node_id = node_id;
 80010a4:	7bba      	ldrb	r2, [r7, #14]
 80010a6:	494a      	ldr	r1, [pc, #296]	; (80011d0 <ProcessMsg+0x158>)
 80010a8:	4613      	mov	r3, r2
 80010aa:	009b      	lsls	r3, r3, #2
 80010ac:	4413      	add	r3, r2
 80010ae:	009b      	lsls	r3, r3, #2
 80010b0:	440b      	add	r3, r1
 80010b2:	7bba      	ldrb	r2, [r7, #14]
 80010b4:	701a      	strb	r2, [r3, #0]
			_Data_node[node_id].is_connected = 1;
 80010b6:	7bba      	ldrb	r2, [r7, #14]
 80010b8:	4945      	ldr	r1, [pc, #276]	; (80011d0 <ProcessMsg+0x158>)
 80010ba:	4613      	mov	r3, r2
 80010bc:	009b      	lsls	r3, r3, #2
 80010be:	4413      	add	r3, r2
 80010c0:	009b      	lsls	r3, r3, #2
 80010c2:	440b      	add	r3, r1
 80010c4:	3310      	adds	r3, #16
 80010c6:	2201      	movs	r2, #1
 80010c8:	701a      	strb	r2, [r3, #0]
 80010ca:	e06c      	b.n	80011a6 <ProcessMsg+0x12e>
		}
		else if(i == 3) _Data_node[node_id].temp = atoff(token);
 80010cc:	7bfb      	ldrb	r3, [r7, #15]
 80010ce:	2b03      	cmp	r3, #3
 80010d0:	d10d      	bne.n	80010ee <ProcessMsg+0x76>
 80010d2:	7bbc      	ldrb	r4, [r7, #14]
 80010d4:	68b8      	ldr	r0, [r7, #8]
 80010d6:	f004 fb1f 	bl	8005718 <atoff>
 80010da:	4602      	mov	r2, r0
 80010dc:	493c      	ldr	r1, [pc, #240]	; (80011d0 <ProcessMsg+0x158>)
 80010de:	4623      	mov	r3, r4
 80010e0:	009b      	lsls	r3, r3, #2
 80010e2:	4423      	add	r3, r4
 80010e4:	009b      	lsls	r3, r3, #2
 80010e6:	440b      	add	r3, r1
 80010e8:	3304      	adds	r3, #4
 80010ea:	601a      	str	r2, [r3, #0]
 80010ec:	e05b      	b.n	80011a6 <ProcessMsg+0x12e>
		else if(i == 5) _Data_node[node_id].humid = atoff(token);
 80010ee:	7bfb      	ldrb	r3, [r7, #15]
 80010f0:	2b05      	cmp	r3, #5
 80010f2:	d10d      	bne.n	8001110 <ProcessMsg+0x98>
 80010f4:	7bbc      	ldrb	r4, [r7, #14]
 80010f6:	68b8      	ldr	r0, [r7, #8]
 80010f8:	f004 fb0e 	bl	8005718 <atoff>
 80010fc:	4602      	mov	r2, r0
 80010fe:	4934      	ldr	r1, [pc, #208]	; (80011d0 <ProcessMsg+0x158>)
 8001100:	4623      	mov	r3, r4
 8001102:	009b      	lsls	r3, r3, #2
 8001104:	4423      	add	r3, r4
 8001106:	009b      	lsls	r3, r3, #2
 8001108:	440b      	add	r3, r1
 800110a:	3308      	adds	r3, #8
 800110c:	601a      	str	r2, [r3, #0]
 800110e:	e04a      	b.n	80011a6 <ProcessMsg+0x12e>
		else if(i == 7) _Data_node[node_id].adc = atoi(token);
 8001110:	7bfb      	ldrb	r3, [r7, #15]
 8001112:	2b07      	cmp	r3, #7
 8001114:	d10f      	bne.n	8001136 <ProcessMsg+0xbe>
 8001116:	68b8      	ldr	r0, [r7, #8]
 8001118:	f004 fb01 	bl	800571e <atoi>
 800111c:	4603      	mov	r3, r0
 800111e:	7bba      	ldrb	r2, [r7, #14]
 8001120:	b2d8      	uxtb	r0, r3
 8001122:	492b      	ldr	r1, [pc, #172]	; (80011d0 <ProcessMsg+0x158>)
 8001124:	4613      	mov	r3, r2
 8001126:	009b      	lsls	r3, r3, #2
 8001128:	4413      	add	r3, r2
 800112a:	009b      	lsls	r3, r3, #2
 800112c:	440b      	add	r3, r1
 800112e:	330c      	adds	r3, #12
 8001130:	4602      	mov	r2, r0
 8001132:	701a      	strb	r2, [r3, #0]
 8001134:	e037      	b.n	80011a6 <ProcessMsg+0x12e>
		else if(i == 9) _Data_node[node_id].nito = atoi(token);
 8001136:	7bfb      	ldrb	r3, [r7, #15]
 8001138:	2b09      	cmp	r3, #9
 800113a:	d10f      	bne.n	800115c <ProcessMsg+0xe4>
 800113c:	68b8      	ldr	r0, [r7, #8]
 800113e:	f004 faee 	bl	800571e <atoi>
 8001142:	4603      	mov	r3, r0
 8001144:	7bba      	ldrb	r2, [r7, #14]
 8001146:	b2d8      	uxtb	r0, r3
 8001148:	4921      	ldr	r1, [pc, #132]	; (80011d0 <ProcessMsg+0x158>)
 800114a:	4613      	mov	r3, r2
 800114c:	009b      	lsls	r3, r3, #2
 800114e:	4413      	add	r3, r2
 8001150:	009b      	lsls	r3, r3, #2
 8001152:	440b      	add	r3, r1
 8001154:	330d      	adds	r3, #13
 8001156:	4602      	mov	r2, r0
 8001158:	701a      	strb	r2, [r3, #0]
 800115a:	e024      	b.n	80011a6 <ProcessMsg+0x12e>
		else if(i == 11) _Data_node[node_id].photpho = atoi(token);
 800115c:	7bfb      	ldrb	r3, [r7, #15]
 800115e:	2b0b      	cmp	r3, #11
 8001160:	d10f      	bne.n	8001182 <ProcessMsg+0x10a>
 8001162:	68b8      	ldr	r0, [r7, #8]
 8001164:	f004 fadb 	bl	800571e <atoi>
 8001168:	4603      	mov	r3, r0
 800116a:	7bba      	ldrb	r2, [r7, #14]
 800116c:	b2d8      	uxtb	r0, r3
 800116e:	4918      	ldr	r1, [pc, #96]	; (80011d0 <ProcessMsg+0x158>)
 8001170:	4613      	mov	r3, r2
 8001172:	009b      	lsls	r3, r3, #2
 8001174:	4413      	add	r3, r2
 8001176:	009b      	lsls	r3, r3, #2
 8001178:	440b      	add	r3, r1
 800117a:	330e      	adds	r3, #14
 800117c:	4602      	mov	r2, r0
 800117e:	701a      	strb	r2, [r3, #0]
 8001180:	e011      	b.n	80011a6 <ProcessMsg+0x12e>
		else if(i == 13) _Data_node[node_id].kali = atoi(token);
 8001182:	7bfb      	ldrb	r3, [r7, #15]
 8001184:	2b0d      	cmp	r3, #13
 8001186:	d10e      	bne.n	80011a6 <ProcessMsg+0x12e>
 8001188:	68b8      	ldr	r0, [r7, #8]
 800118a:	f004 fac8 	bl	800571e <atoi>
 800118e:	4603      	mov	r3, r0
 8001190:	7bba      	ldrb	r2, [r7, #14]
 8001192:	b2d8      	uxtb	r0, r3
 8001194:	490e      	ldr	r1, [pc, #56]	; (80011d0 <ProcessMsg+0x158>)
 8001196:	4613      	mov	r3, r2
 8001198:	009b      	lsls	r3, r3, #2
 800119a:	4413      	add	r3, r2
 800119c:	009b      	lsls	r3, r3, #2
 800119e:	440b      	add	r3, r1
 80011a0:	330f      	adds	r3, #15
 80011a2:	4602      	mov	r2, r0
 80011a4:	701a      	strb	r2, [r3, #0]
		token = strtok(NULL, ":,{}");
 80011a6:	4909      	ldr	r1, [pc, #36]	; (80011cc <ProcessMsg+0x154>)
 80011a8:	2000      	movs	r0, #0
 80011aa:	f005 fa67 	bl	800667c <strtok>
 80011ae:	60b8      	str	r0, [r7, #8]
	for(i = 0; (i < 100) && (token != NULL); i++){
 80011b0:	7bfb      	ldrb	r3, [r7, #15]
 80011b2:	3301      	adds	r3, #1
 80011b4:	73fb      	strb	r3, [r7, #15]
 80011b6:	7bfb      	ldrb	r3, [r7, #15]
 80011b8:	2b63      	cmp	r3, #99	; 0x63
 80011ba:	d803      	bhi.n	80011c4 <ProcessMsg+0x14c>
 80011bc:	68bb      	ldr	r3, [r7, #8]
 80011be:	2b00      	cmp	r3, #0
 80011c0:	f47f af68 	bne.w	8001094 <ProcessMsg+0x1c>
	}
}
 80011c4:	bf00      	nop
 80011c6:	3714      	adds	r7, #20
 80011c8:	46bd      	mov	sp, r7
 80011ca:	bd90      	pop	{r4, r7, pc}
 80011cc:	08008ac8 	.word	0x08008ac8
 80011d0:	20000270 	.word	0x20000270

080011d4 <FSM_Init>:

//==================HIGH LEVEL FUNCTION==================//
void FSM_Init(void){
 80011d4:	b480      	push	{r7}
 80011d6:	af00      	add	r7, sp, #0
	mode_data = INIT;
 80011d8:	4b07      	ldr	r3, [pc, #28]	; (80011f8 <FSM_Init+0x24>)
 80011da:	2200      	movs	r2, #0
 80011dc:	701a      	strb	r2, [r3, #0]
	mode_lcd = INIT;
 80011de:	4b07      	ldr	r3, [pc, #28]	; (80011fc <FSM_Init+0x28>)
 80011e0:	2200      	movs	r2, #0
 80011e2:	701a      	strb	r2, [r3, #0]

	node_turn = 0;
 80011e4:	4b06      	ldr	r3, [pc, #24]	; (8001200 <FSM_Init+0x2c>)
 80011e6:	2200      	movs	r2, #0
 80011e8:	701a      	strb	r2, [r3, #0]
	_time_screen = 50;
 80011ea:	4b06      	ldr	r3, [pc, #24]	; (8001204 <FSM_Init+0x30>)
 80011ec:	2232      	movs	r2, #50	; 0x32
 80011ee:	801a      	strh	r2, [r3, #0]

}
 80011f0:	bf00      	nop
 80011f2:	46bd      	mov	sp, r7
 80011f4:	bc80      	pop	{r7}
 80011f6:	4770      	bx	lr
 80011f8:	20000209 	.word	0x20000209
 80011fc:	20000208 	.word	0x20000208
 8001200:	2000020a 	.word	0x2000020a
 8001204:	200002a0 	.word	0x200002a0

08001208 <FSM_LcdDisplay>:

void FSM_LcdDisplay(void){
 8001208:	b580      	push	{r7, lr}
 800120a:	af00      	add	r7, sp, #0
	switch(mode_lcd){
 800120c:	4bb4      	ldr	r3, [pc, #720]	; (80014e0 <FSM_LcdDisplay+0x2d8>)
 800120e:	781b      	ldrb	r3, [r3, #0]
 8001210:	2b08      	cmp	r3, #8
 8001212:	f200 8337 	bhi.w	8001884 <FSM_LcdDisplay+0x67c>
 8001216:	a201      	add	r2, pc, #4	; (adr r2, 800121c <FSM_LcdDisplay+0x14>)
 8001218:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800121c:	08001241 	.word	0x08001241
 8001220:	08001283 	.word	0x08001283
 8001224:	080013c9 	.word	0x080013c9
 8001228:	08001529 	.word	0x08001529
 800122c:	08001643 	.word	0x08001643
 8001230:	080016b5 	.word	0x080016b5
 8001234:	080016f5 	.word	0x080016f5
 8001238:	08001713 	.word	0x08001713
 800123c:	08001759 	.word	0x08001759
	case INIT:
		CLCD_PrintStringBuffer(0, 0, SCREEN_INIT_0);
 8001240:	4aa8      	ldr	r2, [pc, #672]	; (80014e4 <FSM_LcdDisplay+0x2dc>)
 8001242:	2100      	movs	r1, #0
 8001244:	2000      	movs	r0, #0
 8001246:	f000 fda9 	bl	8001d9c <CLCD_PrintStringBuffer>
		CLCD_PrintStringBuffer(1, 0, SCREEN_INIT_1);
 800124a:	4aa7      	ldr	r2, [pc, #668]	; (80014e8 <FSM_LcdDisplay+0x2e0>)
 800124c:	2100      	movs	r1, #0
 800124e:	2001      	movs	r0, #1
 8001250:	f000 fda4 	bl	8001d9c <CLCD_PrintStringBuffer>

		if(_time_screen < 5){
 8001254:	4ba5      	ldr	r3, [pc, #660]	; (80014ec <FSM_LcdDisplay+0x2e4>)
 8001256:	881b      	ldrh	r3, [r3, #0]
 8001258:	2b04      	cmp	r3, #4
 800125a:	f200 8317 	bhi.w	800188c <FSM_LcdDisplay+0x684>
			CLCD_PrintStringBuffer(0, 0, SCREEN_WIFI_CONNECTING_0);
 800125e:	4aa4      	ldr	r2, [pc, #656]	; (80014f0 <FSM_LcdDisplay+0x2e8>)
 8001260:	2100      	movs	r1, #0
 8001262:	2000      	movs	r0, #0
 8001264:	f000 fd9a 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_WIFI_CONNECTING_1);
 8001268:	4a9f      	ldr	r2, [pc, #636]	; (80014e8 <FSM_LcdDisplay+0x2e0>)
 800126a:	2100      	movs	r1, #0
 800126c:	2001      	movs	r0, #1
 800126e:	f000 fd95 	bl	8001d9c <CLCD_PrintStringBuffer>

			UESP_SendMsg(CMD_CONNECT_WF, sizeof(CMD_CONNECT_WF));
 8001272:	2108      	movs	r1, #8
 8001274:	489f      	ldr	r0, [pc, #636]	; (80014f4 <FSM_LcdDisplay+0x2ec>)
 8001276:	f001 fc37 	bl	8002ae8 <UESP_SendMsg>

			mode_lcd = DISPLAY_CONNECT_WF;
 800127a:	4b99      	ldr	r3, [pc, #612]	; (80014e0 <FSM_LcdDisplay+0x2d8>)
 800127c:	2208      	movs	r2, #8
 800127e:	701a      	strb	r2, [r3, #0]
//			mode_lcd = READY_DISPLAY;
		}
		break;
 8001280:	e304      	b.n	800188c <FSM_LcdDisplay+0x684>
	case READY_DISPLAY:
		CLCD_PrintCharBuffer(1, 12 + (_counter_time_elapsed/10) % 4, '.');
 8001282:	4b9d      	ldr	r3, [pc, #628]	; (80014f8 <FSM_LcdDisplay+0x2f0>)
 8001284:	881b      	ldrh	r3, [r3, #0]
 8001286:	4a9d      	ldr	r2, [pc, #628]	; (80014fc <FSM_LcdDisplay+0x2f4>)
 8001288:	fba2 2303 	umull	r2, r3, r2, r3
 800128c:	08db      	lsrs	r3, r3, #3
 800128e:	b29b      	uxth	r3, r3
 8001290:	b2db      	uxtb	r3, r3
 8001292:	f003 0303 	and.w	r3, r3, #3
 8001296:	b2db      	uxtb	r3, r3
 8001298:	330c      	adds	r3, #12
 800129a:	b2db      	uxtb	r3, r3
 800129c:	222e      	movs	r2, #46	; 0x2e
 800129e:	4619      	mov	r1, r3
 80012a0:	2001      	movs	r0, #1
 80012a2:	f000 fd3f 	bl	8001d24 <CLCD_PrintCharBuffer>
		if((_counter_time_elapsed/10) % 4 == 3) CLCD_PrintStringBuffer(1, 0, SCREEN_READY_DISPLAY_1);
 80012a6:	4b94      	ldr	r3, [pc, #592]	; (80014f8 <FSM_LcdDisplay+0x2f0>)
 80012a8:	881b      	ldrh	r3, [r3, #0]
 80012aa:	4a94      	ldr	r2, [pc, #592]	; (80014fc <FSM_LcdDisplay+0x2f4>)
 80012ac:	fba2 2303 	umull	r2, r3, r2, r3
 80012b0:	08db      	lsrs	r3, r3, #3
 80012b2:	b29b      	uxth	r3, r3
 80012b4:	f003 0303 	and.w	r3, r3, #3
 80012b8:	b29b      	uxth	r3, r3
 80012ba:	2b03      	cmp	r3, #3
 80012bc:	d104      	bne.n	80012c8 <FSM_LcdDisplay+0xc0>
 80012be:	4a90      	ldr	r2, [pc, #576]	; (8001500 <FSM_LcdDisplay+0x2f8>)
 80012c0:	2100      	movs	r1, #0
 80012c2:	2001      	movs	r0, #1
 80012c4:	f000 fd6a 	bl	8001d9c <CLCD_PrintStringBuffer>

		if(strcmp(UESP_GetMsg(), DISCONNECT_WF) == 0){
 80012c8:	f001 fc24 	bl	8002b14 <UESP_GetMsg>
 80012cc:	4603      	mov	r3, r0
 80012ce:	498d      	ldr	r1, [pc, #564]	; (8001504 <FSM_LcdDisplay+0x2fc>)
 80012d0:	4618      	mov	r0, r3
 80012d2:	f7fe ff3d 	bl	8000150 <strcmp>
 80012d6:	4603      	mov	r3, r0
 80012d8:	2b00      	cmp	r3, #0
 80012da:	d111      	bne.n	8001300 <FSM_LcdDisplay+0xf8>
			CLCD_PrintStringBuffer(0, 0, SCREEN_WIFI_CONNECTING_0);
 80012dc:	4a84      	ldr	r2, [pc, #528]	; (80014f0 <FSM_LcdDisplay+0x2e8>)
 80012de:	2100      	movs	r1, #0
 80012e0:	2000      	movs	r0, #0
 80012e2:	f000 fd5b 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_WIFI_CONNECTING_1);
 80012e6:	4a80      	ldr	r2, [pc, #512]	; (80014e8 <FSM_LcdDisplay+0x2e0>)
 80012e8:	2100      	movs	r1, #0
 80012ea:	2001      	movs	r0, #1
 80012ec:	f000 fd56 	bl	8001d9c <CLCD_PrintStringBuffer>

			UESP_SendMsg(CMD_CONNECT_WF, sizeof(CMD_CONNECT_WF));
 80012f0:	2108      	movs	r1, #8
 80012f2:	4880      	ldr	r0, [pc, #512]	; (80014f4 <FSM_LcdDisplay+0x2ec>)
 80012f4:	f001 fbf8 	bl	8002ae8 <UESP_SendMsg>

			mode_lcd = DISPLAY_CONNECT_WF;
 80012f8:	4b79      	ldr	r3, [pc, #484]	; (80014e0 <FSM_LcdDisplay+0x2d8>)
 80012fa:	2208      	movs	r2, #8
 80012fc:	701a      	strb	r2, [r3, #0]
			mode_lcd = DISPLAY_DHT;
		}
		else{
			mode_lcd = TURN_NEXT_NODE;
		}
		break;
 80012fe:	e2d2      	b.n	80018a6 <FSM_LcdDisplay+0x69e>
		else if(IN_IsPressed_ms(BT_CONFIG, 2000)){
 8001300:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8001304:	2000      	movs	r0, #0
 8001306:	f000 fb79 	bl	80019fc <IN_IsPressed_ms>
 800130a:	4603      	mov	r3, r0
 800130c:	2b00      	cmp	r3, #0
 800130e:	d011      	beq.n	8001334 <FSM_LcdDisplay+0x12c>
			CLCD_PrintStringBuffer(0, 0, SCREEN_CONFIG_WIFI_0);
 8001310:	4a7d      	ldr	r2, [pc, #500]	; (8001508 <FSM_LcdDisplay+0x300>)
 8001312:	2100      	movs	r1, #0
 8001314:	2000      	movs	r0, #0
 8001316:	f000 fd41 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_CONFIG_WIFI_1);
 800131a:	4a73      	ldr	r2, [pc, #460]	; (80014e8 <FSM_LcdDisplay+0x2e0>)
 800131c:	2100      	movs	r1, #0
 800131e:	2001      	movs	r0, #1
 8001320:	f000 fd3c 	bl	8001d9c <CLCD_PrintStringBuffer>
			UESP_SendMsg(CMD_CONFIG_WF, sizeof(CMD_CONFIG_WF));
 8001324:	2107      	movs	r1, #7
 8001326:	4879      	ldr	r0, [pc, #484]	; (800150c <FSM_LcdDisplay+0x304>)
 8001328:	f001 fbde 	bl	8002ae8 <UESP_SendMsg>
			mode_lcd = DISPLAY_CONFIG_WF;
 800132c:	4b6c      	ldr	r3, [pc, #432]	; (80014e0 <FSM_LcdDisplay+0x2d8>)
 800132e:	2207      	movs	r2, #7
 8001330:	701a      	strb	r2, [r3, #0]
		break;
 8001332:	e2b8      	b.n	80018a6 <FSM_LcdDisplay+0x69e>
		else if(_Data_node[node_turn].is_connected){
 8001334:	4b76      	ldr	r3, [pc, #472]	; (8001510 <FSM_LcdDisplay+0x308>)
 8001336:	781b      	ldrb	r3, [r3, #0]
 8001338:	4619      	mov	r1, r3
 800133a:	4a76      	ldr	r2, [pc, #472]	; (8001514 <FSM_LcdDisplay+0x30c>)
 800133c:	460b      	mov	r3, r1
 800133e:	009b      	lsls	r3, r3, #2
 8001340:	440b      	add	r3, r1
 8001342:	009b      	lsls	r3, r3, #2
 8001344:	4413      	add	r3, r2
 8001346:	3310      	adds	r3, #16
 8001348:	781b      	ldrb	r3, [r3, #0]
 800134a:	2b00      	cmp	r3, #0
 800134c:	d038      	beq.n	80013c0 <FSM_LcdDisplay+0x1b8>
			_time_screen = TIME_SCREEN;
 800134e:	4b67      	ldr	r3, [pc, #412]	; (80014ec <FSM_LcdDisplay+0x2e4>)
 8001350:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8001354:	801a      	strh	r2, [r3, #0]
			CLCD_PrintStringBuffer(0, 0, SCREEN_TEMP_HUMI_0);
 8001356:	4a70      	ldr	r2, [pc, #448]	; (8001518 <FSM_LcdDisplay+0x310>)
 8001358:	2100      	movs	r1, #0
 800135a:	2000      	movs	r0, #0
 800135c:	f000 fd1e 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_TEMP_HUMI_1);
 8001360:	4a6e      	ldr	r2, [pc, #440]	; (800151c <FSM_LcdDisplay+0x314>)
 8001362:	2100      	movs	r1, #0
 8001364:	2001      	movs	r0, #1
 8001366:	f000 fd19 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintCharBuffer(0, INDEX_LCD_CEL_SYMBOL, 0xDF);
 800136a:	22df      	movs	r2, #223	; 0xdf
 800136c:	210e      	movs	r1, #14
 800136e:	2000      	movs	r0, #0
 8001370:	f000 fcd8 	bl	8001d24 <CLCD_PrintCharBuffer>
			CLCD_PrintCharBuffer(0, 0, _Data_node[node_turn].node_id + '0');
 8001374:	4b66      	ldr	r3, [pc, #408]	; (8001510 <FSM_LcdDisplay+0x308>)
 8001376:	781b      	ldrb	r3, [r3, #0]
 8001378:	4619      	mov	r1, r3
 800137a:	4a66      	ldr	r2, [pc, #408]	; (8001514 <FSM_LcdDisplay+0x30c>)
 800137c:	460b      	mov	r3, r1
 800137e:	009b      	lsls	r3, r3, #2
 8001380:	440b      	add	r3, r1
 8001382:	009b      	lsls	r3, r3, #2
 8001384:	4413      	add	r3, r2
 8001386:	781b      	ldrb	r3, [r3, #0]
 8001388:	3330      	adds	r3, #48	; 0x30
 800138a:	b2db      	uxtb	r3, r3
 800138c:	461a      	mov	r2, r3
 800138e:	2100      	movs	r1, #0
 8001390:	2000      	movs	r0, #0
 8001392:	f000 fcc7 	bl	8001d24 <CLCD_PrintCharBuffer>
			CLCD_PrintCharBuffer(1, 0, _Data_node[node_turn].node_id + '0');
 8001396:	4b5e      	ldr	r3, [pc, #376]	; (8001510 <FSM_LcdDisplay+0x308>)
 8001398:	781b      	ldrb	r3, [r3, #0]
 800139a:	4619      	mov	r1, r3
 800139c:	4a5d      	ldr	r2, [pc, #372]	; (8001514 <FSM_LcdDisplay+0x30c>)
 800139e:	460b      	mov	r3, r1
 80013a0:	009b      	lsls	r3, r3, #2
 80013a2:	440b      	add	r3, r1
 80013a4:	009b      	lsls	r3, r3, #2
 80013a6:	4413      	add	r3, r2
 80013a8:	781b      	ldrb	r3, [r3, #0]
 80013aa:	3330      	adds	r3, #48	; 0x30
 80013ac:	b2db      	uxtb	r3, r3
 80013ae:	461a      	mov	r2, r3
 80013b0:	2100      	movs	r1, #0
 80013b2:	2001      	movs	r0, #1
 80013b4:	f000 fcb6 	bl	8001d24 <CLCD_PrintCharBuffer>
			mode_lcd = DISPLAY_DHT;
 80013b8:	4b49      	ldr	r3, [pc, #292]	; (80014e0 <FSM_LcdDisplay+0x2d8>)
 80013ba:	2202      	movs	r2, #2
 80013bc:	701a      	strb	r2, [r3, #0]
		break;
 80013be:	e272      	b.n	80018a6 <FSM_LcdDisplay+0x69e>
			mode_lcd = TURN_NEXT_NODE;
 80013c0:	4b47      	ldr	r3, [pc, #284]	; (80014e0 <FSM_LcdDisplay+0x2d8>)
 80013c2:	2206      	movs	r2, #6
 80013c4:	701a      	strb	r2, [r3, #0]
		break;
 80013c6:	e26e      	b.n	80018a6 <FSM_LcdDisplay+0x69e>
	case DISPLAY_DHT:
		CLCD_PrintFloatBuffer(0, INDEX_LCD_TEMP, _Data_node[node_turn].temp);
 80013c8:	4b51      	ldr	r3, [pc, #324]	; (8001510 <FSM_LcdDisplay+0x308>)
 80013ca:	781b      	ldrb	r3, [r3, #0]
 80013cc:	4619      	mov	r1, r3
 80013ce:	4a51      	ldr	r2, [pc, #324]	; (8001514 <FSM_LcdDisplay+0x30c>)
 80013d0:	460b      	mov	r3, r1
 80013d2:	009b      	lsls	r3, r3, #2
 80013d4:	440b      	add	r3, r1
 80013d6:	009b      	lsls	r3, r3, #2
 80013d8:	4413      	add	r3, r2
 80013da:	3304      	adds	r3, #4
 80013dc:	681b      	ldr	r3, [r3, #0]
 80013de:	461a      	mov	r2, r3
 80013e0:	2109      	movs	r1, #9
 80013e2:	2000      	movs	r0, #0
 80013e4:	f000 fd84 	bl	8001ef0 <CLCD_PrintFloatBuffer>
		CLCD_PrintFloatBuffer(1, INDEX_LCD_HUMI, _Data_node[node_turn].humid);
 80013e8:	4b49      	ldr	r3, [pc, #292]	; (8001510 <FSM_LcdDisplay+0x308>)
 80013ea:	781b      	ldrb	r3, [r3, #0]
 80013ec:	4619      	mov	r1, r3
 80013ee:	4a49      	ldr	r2, [pc, #292]	; (8001514 <FSM_LcdDisplay+0x30c>)
 80013f0:	460b      	mov	r3, r1
 80013f2:	009b      	lsls	r3, r3, #2
 80013f4:	440b      	add	r3, r1
 80013f6:	009b      	lsls	r3, r3, #2
 80013f8:	4413      	add	r3, r2
 80013fa:	3308      	adds	r3, #8
 80013fc:	681b      	ldr	r3, [r3, #0]
 80013fe:	461a      	mov	r2, r3
 8001400:	2109      	movs	r1, #9
 8001402:	2001      	movs	r0, #1
 8001404:	f000 fd74 	bl	8001ef0 <CLCD_PrintFloatBuffer>

		if(strcmp(UESP_GetMsg(), DISCONNECT_WF) == 0){
 8001408:	f001 fb84 	bl	8002b14 <UESP_GetMsg>
 800140c:	4603      	mov	r3, r0
 800140e:	493d      	ldr	r1, [pc, #244]	; (8001504 <FSM_LcdDisplay+0x2fc>)
 8001410:	4618      	mov	r0, r3
 8001412:	f7fe fe9d 	bl	8000150 <strcmp>
 8001416:	4603      	mov	r3, r0
 8001418:	2b00      	cmp	r3, #0
 800141a:	d10d      	bne.n	8001438 <FSM_LcdDisplay+0x230>
			CLCD_PrintStringBuffer(0, 0, SCREEN_WIFI_CONNECTING_0);
 800141c:	4a34      	ldr	r2, [pc, #208]	; (80014f0 <FSM_LcdDisplay+0x2e8>)
 800141e:	2100      	movs	r1, #0
 8001420:	2000      	movs	r0, #0
 8001422:	f000 fcbb 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_WIFI_CONNECTING_1);
 8001426:	4a30      	ldr	r2, [pc, #192]	; (80014e8 <FSM_LcdDisplay+0x2e0>)
 8001428:	2100      	movs	r1, #0
 800142a:	2001      	movs	r0, #1
 800142c:	f000 fcb6 	bl	8001d9c <CLCD_PrintStringBuffer>
			mode_lcd = DISPLAY_CONNECT_WF;
 8001430:	4b2b      	ldr	r3, [pc, #172]	; (80014e0 <FSM_LcdDisplay+0x2d8>)
 8001432:	2208      	movs	r2, #8
 8001434:	701a      	strb	r2, [r3, #0]
			CLCD_PrintCharBuffer(0, 0, _Data_node[node_turn].node_id + '0');
			CLCD_PrintCharBuffer(1, 0, _Data_node[node_turn].node_id + '0');

			mode_lcd = DISPLAY_SOILHUMID_NITO;
		}
		break;
 8001436:	e22b      	b.n	8001890 <FSM_LcdDisplay+0x688>
		else if(IN_IsPressed_ms(BT_CONFIG, 2000)){
 8001438:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 800143c:	2000      	movs	r0, #0
 800143e:	f000 fadd 	bl	80019fc <IN_IsPressed_ms>
 8001442:	4603      	mov	r3, r0
 8001444:	2b00      	cmp	r3, #0
 8001446:	d011      	beq.n	800146c <FSM_LcdDisplay+0x264>
			CLCD_PrintStringBuffer(0, 0, SCREEN_CONFIG_WIFI_0);
 8001448:	4a2f      	ldr	r2, [pc, #188]	; (8001508 <FSM_LcdDisplay+0x300>)
 800144a:	2100      	movs	r1, #0
 800144c:	2000      	movs	r0, #0
 800144e:	f000 fca5 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_CONFIG_WIFI_1);
 8001452:	4a25      	ldr	r2, [pc, #148]	; (80014e8 <FSM_LcdDisplay+0x2e0>)
 8001454:	2100      	movs	r1, #0
 8001456:	2001      	movs	r0, #1
 8001458:	f000 fca0 	bl	8001d9c <CLCD_PrintStringBuffer>
			UESP_SendMsg(CMD_CONFIG_WF, sizeof(CMD_CONFIG_WF));
 800145c:	2107      	movs	r1, #7
 800145e:	482b      	ldr	r0, [pc, #172]	; (800150c <FSM_LcdDisplay+0x304>)
 8001460:	f001 fb42 	bl	8002ae8 <UESP_SendMsg>
			mode_lcd = DISPLAY_CONFIG_WF;
 8001464:	4b1e      	ldr	r3, [pc, #120]	; (80014e0 <FSM_LcdDisplay+0x2d8>)
 8001466:	2207      	movs	r2, #7
 8001468:	701a      	strb	r2, [r3, #0]
		break;
 800146a:	e211      	b.n	8001890 <FSM_LcdDisplay+0x688>
		else if(_time_screen < 5){
 800146c:	4b1f      	ldr	r3, [pc, #124]	; (80014ec <FSM_LcdDisplay+0x2e4>)
 800146e:	881b      	ldrh	r3, [r3, #0]
 8001470:	2b04      	cmp	r3, #4
 8001472:	f200 820d 	bhi.w	8001890 <FSM_LcdDisplay+0x688>
			_time_screen = TIME_SCREEN;
 8001476:	4b1d      	ldr	r3, [pc, #116]	; (80014ec <FSM_LcdDisplay+0x2e4>)
 8001478:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800147c:	801a      	strh	r2, [r3, #0]
			CLCD_PrintStringBuffer(0, 0, SCREEN_SOILHUMID_NITO_0);
 800147e:	4a28      	ldr	r2, [pc, #160]	; (8001520 <FSM_LcdDisplay+0x318>)
 8001480:	2100      	movs	r1, #0
 8001482:	2000      	movs	r0, #0
 8001484:	f000 fc8a 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_SOILHUMID_NITO_1);
 8001488:	4a26      	ldr	r2, [pc, #152]	; (8001524 <FSM_LcdDisplay+0x31c>)
 800148a:	2100      	movs	r1, #0
 800148c:	2001      	movs	r0, #1
 800148e:	f000 fc85 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintCharBuffer(0, 0, _Data_node[node_turn].node_id + '0');
 8001492:	4b1f      	ldr	r3, [pc, #124]	; (8001510 <FSM_LcdDisplay+0x308>)
 8001494:	781b      	ldrb	r3, [r3, #0]
 8001496:	4619      	mov	r1, r3
 8001498:	4a1e      	ldr	r2, [pc, #120]	; (8001514 <FSM_LcdDisplay+0x30c>)
 800149a:	460b      	mov	r3, r1
 800149c:	009b      	lsls	r3, r3, #2
 800149e:	440b      	add	r3, r1
 80014a0:	009b      	lsls	r3, r3, #2
 80014a2:	4413      	add	r3, r2
 80014a4:	781b      	ldrb	r3, [r3, #0]
 80014a6:	3330      	adds	r3, #48	; 0x30
 80014a8:	b2db      	uxtb	r3, r3
 80014aa:	461a      	mov	r2, r3
 80014ac:	2100      	movs	r1, #0
 80014ae:	2000      	movs	r0, #0
 80014b0:	f000 fc38 	bl	8001d24 <CLCD_PrintCharBuffer>
			CLCD_PrintCharBuffer(1, 0, _Data_node[node_turn].node_id + '0');
 80014b4:	4b16      	ldr	r3, [pc, #88]	; (8001510 <FSM_LcdDisplay+0x308>)
 80014b6:	781b      	ldrb	r3, [r3, #0]
 80014b8:	4619      	mov	r1, r3
 80014ba:	4a16      	ldr	r2, [pc, #88]	; (8001514 <FSM_LcdDisplay+0x30c>)
 80014bc:	460b      	mov	r3, r1
 80014be:	009b      	lsls	r3, r3, #2
 80014c0:	440b      	add	r3, r1
 80014c2:	009b      	lsls	r3, r3, #2
 80014c4:	4413      	add	r3, r2
 80014c6:	781b      	ldrb	r3, [r3, #0]
 80014c8:	3330      	adds	r3, #48	; 0x30
 80014ca:	b2db      	uxtb	r3, r3
 80014cc:	461a      	mov	r2, r3
 80014ce:	2100      	movs	r1, #0
 80014d0:	2001      	movs	r0, #1
 80014d2:	f000 fc27 	bl	8001d24 <CLCD_PrintCharBuffer>
			mode_lcd = DISPLAY_SOILHUMID_NITO;
 80014d6:	4b02      	ldr	r3, [pc, #8]	; (80014e0 <FSM_LcdDisplay+0x2d8>)
 80014d8:	2203      	movs	r2, #3
 80014da:	701a      	strb	r2, [r3, #0]
		break;
 80014dc:	e1d8      	b.n	8001890 <FSM_LcdDisplay+0x688>
 80014de:	bf00      	nop
 80014e0:	20000208 	.word	0x20000208
 80014e4:	08008ad0 	.word	0x08008ad0
 80014e8:	08008ae4 	.word	0x08008ae4
 80014ec:	200002a0 	.word	0x200002a0
 80014f0:	08008af8 	.word	0x08008af8
 80014f4:	08008b0c 	.word	0x08008b0c
 80014f8:	200002a4 	.word	0x200002a4
 80014fc:	cccccccd 	.word	0xcccccccd
 8001500:	08008b14 	.word	0x08008b14
 8001504:	08008b28 	.word	0x08008b28
 8001508:	08008b34 	.word	0x08008b34
 800150c:	08008b48 	.word	0x08008b48
 8001510:	2000020a 	.word	0x2000020a
 8001514:	20000270 	.word	0x20000270
 8001518:	08008b50 	.word	0x08008b50
 800151c:	08008b64 	.word	0x08008b64
 8001520:	08008b78 	.word	0x08008b78
 8001524:	08008b8c 	.word	0x08008b8c
	case DISPLAY_SOILHUMID_NITO:
		CLCD_PrintNumBuffer(0, INDEX_LCD_SHUMI, _Data_node[node_turn].adc);
 8001528:	4bbe      	ldr	r3, [pc, #760]	; (8001824 <FSM_LcdDisplay+0x61c>)
 800152a:	781b      	ldrb	r3, [r3, #0]
 800152c:	4619      	mov	r1, r3
 800152e:	4abe      	ldr	r2, [pc, #760]	; (8001828 <FSM_LcdDisplay+0x620>)
 8001530:	460b      	mov	r3, r1
 8001532:	009b      	lsls	r3, r3, #2
 8001534:	440b      	add	r3, r1
 8001536:	009b      	lsls	r3, r3, #2
 8001538:	4413      	add	r3, r2
 800153a:	330c      	adds	r3, #12
 800153c:	781b      	ldrb	r3, [r3, #0]
 800153e:	b21b      	sxth	r3, r3
 8001540:	461a      	mov	r2, r3
 8001542:	2109      	movs	r1, #9
 8001544:	2000      	movs	r0, #0
 8001546:	f000 fc5f 	bl	8001e08 <CLCD_PrintNumBuffer>
		CLCD_PrintNumBuffer(1, INDEX_LCD_N, _Data_node[node_turn].nito);
 800154a:	4bb6      	ldr	r3, [pc, #728]	; (8001824 <FSM_LcdDisplay+0x61c>)
 800154c:	781b      	ldrb	r3, [r3, #0]
 800154e:	4619      	mov	r1, r3
 8001550:	4ab5      	ldr	r2, [pc, #724]	; (8001828 <FSM_LcdDisplay+0x620>)
 8001552:	460b      	mov	r3, r1
 8001554:	009b      	lsls	r3, r3, #2
 8001556:	440b      	add	r3, r1
 8001558:	009b      	lsls	r3, r3, #2
 800155a:	4413      	add	r3, r2
 800155c:	330d      	adds	r3, #13
 800155e:	781b      	ldrb	r3, [r3, #0]
 8001560:	b21b      	sxth	r3, r3
 8001562:	461a      	mov	r2, r3
 8001564:	2105      	movs	r1, #5
 8001566:	2001      	movs	r0, #1
 8001568:	f000 fc4e 	bl	8001e08 <CLCD_PrintNumBuffer>

		if(strcmp(UESP_GetMsg(), DISCONNECT_WF) == 0){
 800156c:	f001 fad2 	bl	8002b14 <UESP_GetMsg>
 8001570:	4603      	mov	r3, r0
 8001572:	49ae      	ldr	r1, [pc, #696]	; (800182c <FSM_LcdDisplay+0x624>)
 8001574:	4618      	mov	r0, r3
 8001576:	f7fe fdeb 	bl	8000150 <strcmp>
 800157a:	4603      	mov	r3, r0
 800157c:	2b00      	cmp	r3, #0
 800157e:	d10d      	bne.n	800159c <FSM_LcdDisplay+0x394>
			CLCD_PrintStringBuffer(0, 0, SCREEN_WIFI_CONNECTING_0);
 8001580:	4aab      	ldr	r2, [pc, #684]	; (8001830 <FSM_LcdDisplay+0x628>)
 8001582:	2100      	movs	r1, #0
 8001584:	2000      	movs	r0, #0
 8001586:	f000 fc09 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_WIFI_CONNECTING_1);
 800158a:	4aaa      	ldr	r2, [pc, #680]	; (8001834 <FSM_LcdDisplay+0x62c>)
 800158c:	2100      	movs	r1, #0
 800158e:	2001      	movs	r0, #1
 8001590:	f000 fc04 	bl	8001d9c <CLCD_PrintStringBuffer>
			mode_lcd = DISPLAY_CONNECT_WF;
 8001594:	4ba8      	ldr	r3, [pc, #672]	; (8001838 <FSM_LcdDisplay+0x630>)
 8001596:	2208      	movs	r2, #8
 8001598:	701a      	strb	r2, [r3, #0]
			CLCD_PrintCharBuffer(0, 0, _Data_node[node_turn].node_id + '0');
			CLCD_PrintCharBuffer(1, 0, _Data_node[node_turn].node_id + '0');

			mode_lcd = DISPLAY_PHOTPHO_KALI;
		}
		break;
 800159a:	e17b      	b.n	8001894 <FSM_LcdDisplay+0x68c>
		else if(IN_IsPressed_ms(BT_CONFIG, 2000)){
 800159c:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80015a0:	2000      	movs	r0, #0
 80015a2:	f000 fa2b 	bl	80019fc <IN_IsPressed_ms>
 80015a6:	4603      	mov	r3, r0
 80015a8:	2b00      	cmp	r3, #0
 80015aa:	d011      	beq.n	80015d0 <FSM_LcdDisplay+0x3c8>
			CLCD_PrintStringBuffer(0, 0, SCREEN_CONFIG_WIFI_0);
 80015ac:	4aa3      	ldr	r2, [pc, #652]	; (800183c <FSM_LcdDisplay+0x634>)
 80015ae:	2100      	movs	r1, #0
 80015b0:	2000      	movs	r0, #0
 80015b2:	f000 fbf3 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_CONFIG_WIFI_1);
 80015b6:	4a9f      	ldr	r2, [pc, #636]	; (8001834 <FSM_LcdDisplay+0x62c>)
 80015b8:	2100      	movs	r1, #0
 80015ba:	2001      	movs	r0, #1
 80015bc:	f000 fbee 	bl	8001d9c <CLCD_PrintStringBuffer>
			UESP_SendMsg(CMD_CONFIG_WF, sizeof(CMD_CONFIG_WF));
 80015c0:	2107      	movs	r1, #7
 80015c2:	489f      	ldr	r0, [pc, #636]	; (8001840 <FSM_LcdDisplay+0x638>)
 80015c4:	f001 fa90 	bl	8002ae8 <UESP_SendMsg>
			mode_lcd = DISPLAY_CONFIG_WF;
 80015c8:	4b9b      	ldr	r3, [pc, #620]	; (8001838 <FSM_LcdDisplay+0x630>)
 80015ca:	2207      	movs	r2, #7
 80015cc:	701a      	strb	r2, [r3, #0]
		break;
 80015ce:	e161      	b.n	8001894 <FSM_LcdDisplay+0x68c>
		else if(_time_screen < 5){
 80015d0:	4b9c      	ldr	r3, [pc, #624]	; (8001844 <FSM_LcdDisplay+0x63c>)
 80015d2:	881b      	ldrh	r3, [r3, #0]
 80015d4:	2b04      	cmp	r3, #4
 80015d6:	f200 815d 	bhi.w	8001894 <FSM_LcdDisplay+0x68c>
			_time_screen = TIME_SCREEN;
 80015da:	4b9a      	ldr	r3, [pc, #616]	; (8001844 <FSM_LcdDisplay+0x63c>)
 80015dc:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80015e0:	801a      	strh	r2, [r3, #0]
			CLCD_PrintStringBuffer(0, 0, SCREEN_PHOTPHO_KALI_0);
 80015e2:	4a99      	ldr	r2, [pc, #612]	; (8001848 <FSM_LcdDisplay+0x640>)
 80015e4:	2100      	movs	r1, #0
 80015e6:	2000      	movs	r0, #0
 80015e8:	f000 fbd8 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_PHOTPHO_KALI_1);
 80015ec:	4a97      	ldr	r2, [pc, #604]	; (800184c <FSM_LcdDisplay+0x644>)
 80015ee:	2100      	movs	r1, #0
 80015f0:	2001      	movs	r0, #1
 80015f2:	f000 fbd3 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintCharBuffer(0, 0, _Data_node[node_turn].node_id + '0');
 80015f6:	4b8b      	ldr	r3, [pc, #556]	; (8001824 <FSM_LcdDisplay+0x61c>)
 80015f8:	781b      	ldrb	r3, [r3, #0]
 80015fa:	4619      	mov	r1, r3
 80015fc:	4a8a      	ldr	r2, [pc, #552]	; (8001828 <FSM_LcdDisplay+0x620>)
 80015fe:	460b      	mov	r3, r1
 8001600:	009b      	lsls	r3, r3, #2
 8001602:	440b      	add	r3, r1
 8001604:	009b      	lsls	r3, r3, #2
 8001606:	4413      	add	r3, r2
 8001608:	781b      	ldrb	r3, [r3, #0]
 800160a:	3330      	adds	r3, #48	; 0x30
 800160c:	b2db      	uxtb	r3, r3
 800160e:	461a      	mov	r2, r3
 8001610:	2100      	movs	r1, #0
 8001612:	2000      	movs	r0, #0
 8001614:	f000 fb86 	bl	8001d24 <CLCD_PrintCharBuffer>
			CLCD_PrintCharBuffer(1, 0, _Data_node[node_turn].node_id + '0');
 8001618:	4b82      	ldr	r3, [pc, #520]	; (8001824 <FSM_LcdDisplay+0x61c>)
 800161a:	781b      	ldrb	r3, [r3, #0]
 800161c:	4619      	mov	r1, r3
 800161e:	4a82      	ldr	r2, [pc, #520]	; (8001828 <FSM_LcdDisplay+0x620>)
 8001620:	460b      	mov	r3, r1
 8001622:	009b      	lsls	r3, r3, #2
 8001624:	440b      	add	r3, r1
 8001626:	009b      	lsls	r3, r3, #2
 8001628:	4413      	add	r3, r2
 800162a:	781b      	ldrb	r3, [r3, #0]
 800162c:	3330      	adds	r3, #48	; 0x30
 800162e:	b2db      	uxtb	r3, r3
 8001630:	461a      	mov	r2, r3
 8001632:	2100      	movs	r1, #0
 8001634:	2001      	movs	r0, #1
 8001636:	f000 fb75 	bl	8001d24 <CLCD_PrintCharBuffer>
			mode_lcd = DISPLAY_PHOTPHO_KALI;
 800163a:	4b7f      	ldr	r3, [pc, #508]	; (8001838 <FSM_LcdDisplay+0x630>)
 800163c:	2204      	movs	r2, #4
 800163e:	701a      	strb	r2, [r3, #0]
		break;
 8001640:	e128      	b.n	8001894 <FSM_LcdDisplay+0x68c>
	case DISPLAY_PHOTPHO_KALI:
		CLCD_PrintNumBuffer(0, INDEX_LCD_P, _Data_node[node_turn].photpho);
 8001642:	4b78      	ldr	r3, [pc, #480]	; (8001824 <FSM_LcdDisplay+0x61c>)
 8001644:	781b      	ldrb	r3, [r3, #0]
 8001646:	4619      	mov	r1, r3
 8001648:	4a77      	ldr	r2, [pc, #476]	; (8001828 <FSM_LcdDisplay+0x620>)
 800164a:	460b      	mov	r3, r1
 800164c:	009b      	lsls	r3, r3, #2
 800164e:	440b      	add	r3, r1
 8001650:	009b      	lsls	r3, r3, #2
 8001652:	4413      	add	r3, r2
 8001654:	330e      	adds	r3, #14
 8001656:	781b      	ldrb	r3, [r3, #0]
 8001658:	b21b      	sxth	r3, r3
 800165a:	461a      	mov	r2, r3
 800165c:	2105      	movs	r1, #5
 800165e:	2000      	movs	r0, #0
 8001660:	f000 fbd2 	bl	8001e08 <CLCD_PrintNumBuffer>
		CLCD_PrintNumBuffer(1, INDEX_LCD_K, _Data_node[node_turn].kali);
 8001664:	4b6f      	ldr	r3, [pc, #444]	; (8001824 <FSM_LcdDisplay+0x61c>)
 8001666:	781b      	ldrb	r3, [r3, #0]
 8001668:	4619      	mov	r1, r3
 800166a:	4a6f      	ldr	r2, [pc, #444]	; (8001828 <FSM_LcdDisplay+0x620>)
 800166c:	460b      	mov	r3, r1
 800166e:	009b      	lsls	r3, r3, #2
 8001670:	440b      	add	r3, r1
 8001672:	009b      	lsls	r3, r3, #2
 8001674:	4413      	add	r3, r2
 8001676:	330f      	adds	r3, #15
 8001678:	781b      	ldrb	r3, [r3, #0]
 800167a:	b21b      	sxth	r3, r3
 800167c:	461a      	mov	r2, r3
 800167e:	2105      	movs	r1, #5
 8001680:	2001      	movs	r0, #1
 8001682:	f000 fbc1 	bl	8001e08 <CLCD_PrintNumBuffer>

		if(_time_screen < 5){
 8001686:	4b6f      	ldr	r3, [pc, #444]	; (8001844 <FSM_LcdDisplay+0x63c>)
 8001688:	881b      	ldrh	r3, [r3, #0]
 800168a:	2b04      	cmp	r3, #4
 800168c:	f200 8104 	bhi.w	8001898 <FSM_LcdDisplay+0x690>
			_time_screen = TIME_SCREEN;
 8001690:	4b6c      	ldr	r3, [pc, #432]	; (8001844 <FSM_LcdDisplay+0x63c>)
 8001692:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8001696:	801a      	strh	r2, [r3, #0]
			CLCD_PrintStringBuffer(0, 0, SCREEN_RELAY_CUR_0);
 8001698:	4a6d      	ldr	r2, [pc, #436]	; (8001850 <FSM_LcdDisplay+0x648>)
 800169a:	2100      	movs	r1, #0
 800169c:	2000      	movs	r0, #0
 800169e:	f000 fb7d 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_RELAY_CUR_1);
 80016a2:	4a6c      	ldr	r2, [pc, #432]	; (8001854 <FSM_LcdDisplay+0x64c>)
 80016a4:	2100      	movs	r1, #0
 80016a6:	2001      	movs	r0, #1
 80016a8:	f000 fb78 	bl	8001d9c <CLCD_PrintStringBuffer>

			mode_lcd = DISPLAY_RELAY_CUR;
 80016ac:	4b62      	ldr	r3, [pc, #392]	; (8001838 <FSM_LcdDisplay+0x630>)
 80016ae:	2205      	movs	r2, #5
 80016b0:	701a      	strb	r2, [r3, #0]
		}
		break;
 80016b2:	e0f1      	b.n	8001898 <FSM_LcdDisplay+0x690>
	case DISPLAY_RELAY_CUR:
		CLCD_PrintStringBuffer(0, INDEX_LCD_RELAY, RELAYSTATESTR(_Data_gateway.relay));
 80016b4:	4b68      	ldr	r3, [pc, #416]	; (8001858 <FSM_LcdDisplay+0x650>)
 80016b6:	781b      	ldrb	r3, [r3, #0]
 80016b8:	2b00      	cmp	r3, #0
 80016ba:	d001      	beq.n	80016c0 <FSM_LcdDisplay+0x4b8>
 80016bc:	4b67      	ldr	r3, [pc, #412]	; (800185c <FSM_LcdDisplay+0x654>)
 80016be:	e000      	b.n	80016c2 <FSM_LcdDisplay+0x4ba>
 80016c0:	4b67      	ldr	r3, [pc, #412]	; (8001860 <FSM_LcdDisplay+0x658>)
 80016c2:	461a      	mov	r2, r3
 80016c4:	2107      	movs	r1, #7
 80016c6:	2000      	movs	r0, #0
 80016c8:	f000 fb68 	bl	8001d9c <CLCD_PrintStringBuffer>
		CLCD_PrintFloatBuffer(1, INDEX_LCD_CUR, _Data_gateway.cur);
 80016cc:	4b62      	ldr	r3, [pc, #392]	; (8001858 <FSM_LcdDisplay+0x650>)
 80016ce:	685b      	ldr	r3, [r3, #4]
 80016d0:	461a      	mov	r2, r3
 80016d2:	2105      	movs	r1, #5
 80016d4:	2001      	movs	r0, #1
 80016d6:	f000 fc0b 	bl	8001ef0 <CLCD_PrintFloatBuffer>
		if(_time_screen < 5){
 80016da:	4b5a      	ldr	r3, [pc, #360]	; (8001844 <FSM_LcdDisplay+0x63c>)
 80016dc:	881b      	ldrh	r3, [r3, #0]
 80016de:	2b04      	cmp	r3, #4
 80016e0:	f200 80dc 	bhi.w	800189c <FSM_LcdDisplay+0x694>
			_time_screen = TIME_SCREEN;
 80016e4:	4b57      	ldr	r3, [pc, #348]	; (8001844 <FSM_LcdDisplay+0x63c>)
 80016e6:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80016ea:	801a      	strh	r2, [r3, #0]
			mode_lcd = TURN_NEXT_NODE;
 80016ec:	4b52      	ldr	r3, [pc, #328]	; (8001838 <FSM_LcdDisplay+0x630>)
 80016ee:	2206      	movs	r2, #6
 80016f0:	701a      	strb	r2, [r3, #0]
		}
		break;
 80016f2:	e0d3      	b.n	800189c <FSM_LcdDisplay+0x694>
	case TURN_NEXT_NODE:

		node_turn = (node_turn + 1) % NO_OF_NODES;
 80016f4:	4b4b      	ldr	r3, [pc, #300]	; (8001824 <FSM_LcdDisplay+0x61c>)
 80016f6:	781b      	ldrb	r3, [r3, #0]
 80016f8:	3301      	adds	r3, #1
 80016fa:	2b00      	cmp	r3, #0
 80016fc:	f003 0301 	and.w	r3, r3, #1
 8001700:	bfb8      	it	lt
 8001702:	425b      	neglt	r3, r3
 8001704:	b2da      	uxtb	r2, r3
 8001706:	4b47      	ldr	r3, [pc, #284]	; (8001824 <FSM_LcdDisplay+0x61c>)
 8001708:	701a      	strb	r2, [r3, #0]

		mode_lcd = READY_DISPLAY;
 800170a:	4b4b      	ldr	r3, [pc, #300]	; (8001838 <FSM_LcdDisplay+0x630>)
 800170c:	2201      	movs	r2, #1
 800170e:	701a      	strb	r2, [r3, #0]
		break;
 8001710:	e0c9      	b.n	80018a6 <FSM_LcdDisplay+0x69e>
	case DISPLAY_CONFIG_WF:

		if((strcmp(UESP_GetMsg(), CONFIG_WF_SUCCESS) == 0) || IN_IsPressed(BT_CONFIG)) {
 8001712:	f001 f9ff 	bl	8002b14 <UESP_GetMsg>
 8001716:	4603      	mov	r3, r0
 8001718:	4952      	ldr	r1, [pc, #328]	; (8001864 <FSM_LcdDisplay+0x65c>)
 800171a:	4618      	mov	r0, r3
 800171c:	f7fe fd18 	bl	8000150 <strcmp>
 8001720:	4603      	mov	r3, r0
 8001722:	2b00      	cmp	r3, #0
 8001724:	d006      	beq.n	8001734 <FSM_LcdDisplay+0x52c>
 8001726:	2000      	movs	r0, #0
 8001728:	f000 f954 	bl	80019d4 <IN_IsPressed>
 800172c:	4603      	mov	r3, r0
 800172e:	2b00      	cmp	r3, #0
 8001730:	f000 80b6 	beq.w	80018a0 <FSM_LcdDisplay+0x698>
			CLCD_PrintStringBuffer(0, 0, SCREEN_WIFI_CONNECTING_0);
 8001734:	4a3e      	ldr	r2, [pc, #248]	; (8001830 <FSM_LcdDisplay+0x628>)
 8001736:	2100      	movs	r1, #0
 8001738:	2000      	movs	r0, #0
 800173a:	f000 fb2f 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_WIFI_CONNECTING_1);
 800173e:	4a3d      	ldr	r2, [pc, #244]	; (8001834 <FSM_LcdDisplay+0x62c>)
 8001740:	2100      	movs	r1, #0
 8001742:	2001      	movs	r0, #1
 8001744:	f000 fb2a 	bl	8001d9c <CLCD_PrintStringBuffer>

			UESP_SendMsg(CMD_CONNECT_WF, sizeof(CMD_CONNECT_WF));
 8001748:	2108      	movs	r1, #8
 800174a:	4847      	ldr	r0, [pc, #284]	; (8001868 <FSM_LcdDisplay+0x660>)
 800174c:	f001 f9cc 	bl	8002ae8 <UESP_SendMsg>

			mode_lcd = DISPLAY_CONNECT_WF;
 8001750:	4b39      	ldr	r3, [pc, #228]	; (8001838 <FSM_LcdDisplay+0x630>)
 8001752:	2208      	movs	r2, #8
 8001754:	701a      	strb	r2, [r3, #0]
		}
		break;
 8001756:	e0a3      	b.n	80018a0 <FSM_LcdDisplay+0x698>
	case DISPLAY_CONNECT_WF:
		//every 500ms print a '.'
		CLCD_PrintCharBuffer(1, 6 + (_counter_time_elapsed/10) % 5, '.');
 8001758:	4b44      	ldr	r3, [pc, #272]	; (800186c <FSM_LcdDisplay+0x664>)
 800175a:	881b      	ldrh	r3, [r3, #0]
 800175c:	4a44      	ldr	r2, [pc, #272]	; (8001870 <FSM_LcdDisplay+0x668>)
 800175e:	fba2 2303 	umull	r2, r3, r2, r3
 8001762:	08db      	lsrs	r3, r3, #3
 8001764:	b29a      	uxth	r2, r3
 8001766:	4b42      	ldr	r3, [pc, #264]	; (8001870 <FSM_LcdDisplay+0x668>)
 8001768:	fba3 1302 	umull	r1, r3, r3, r2
 800176c:	0899      	lsrs	r1, r3, #2
 800176e:	460b      	mov	r3, r1
 8001770:	009b      	lsls	r3, r3, #2
 8001772:	440b      	add	r3, r1
 8001774:	1ad3      	subs	r3, r2, r3
 8001776:	b29b      	uxth	r3, r3
 8001778:	b2db      	uxtb	r3, r3
 800177a:	3306      	adds	r3, #6
 800177c:	b2db      	uxtb	r3, r3
 800177e:	222e      	movs	r2, #46	; 0x2e
 8001780:	4619      	mov	r1, r3
 8001782:	2001      	movs	r0, #1
 8001784:	f000 face 	bl	8001d24 <CLCD_PrintCharBuffer>
		if((_counter_time_elapsed/10) % 5 == 4) CLCD_PrintStringBuffer(1, 0, SCREEN_WIFI_CONNECTING_1);
 8001788:	4b38      	ldr	r3, [pc, #224]	; (800186c <FSM_LcdDisplay+0x664>)
 800178a:	881b      	ldrh	r3, [r3, #0]
 800178c:	4a38      	ldr	r2, [pc, #224]	; (8001870 <FSM_LcdDisplay+0x668>)
 800178e:	fba2 2303 	umull	r2, r3, r2, r3
 8001792:	08db      	lsrs	r3, r3, #3
 8001794:	b29a      	uxth	r2, r3
 8001796:	4b36      	ldr	r3, [pc, #216]	; (8001870 <FSM_LcdDisplay+0x668>)
 8001798:	fba3 1302 	umull	r1, r3, r3, r2
 800179c:	0899      	lsrs	r1, r3, #2
 800179e:	460b      	mov	r3, r1
 80017a0:	009b      	lsls	r3, r3, #2
 80017a2:	440b      	add	r3, r1
 80017a4:	1ad3      	subs	r3, r2, r3
 80017a6:	b29b      	uxth	r3, r3
 80017a8:	2b04      	cmp	r3, #4
 80017aa:	d104      	bne.n	80017b6 <FSM_LcdDisplay+0x5ae>
 80017ac:	4a21      	ldr	r2, [pc, #132]	; (8001834 <FSM_LcdDisplay+0x62c>)
 80017ae:	2100      	movs	r1, #0
 80017b0:	2001      	movs	r0, #1
 80017b2:	f000 faf3 	bl	8001d9c <CLCD_PrintStringBuffer>

		if(IN_IsPressed_ms(BT_CONFIG, 2000)){
 80017b6:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80017ba:	2000      	movs	r0, #0
 80017bc:	f000 f91e 	bl	80019fc <IN_IsPressed_ms>
 80017c0:	4603      	mov	r3, r0
 80017c2:	2b00      	cmp	r3, #0
 80017c4:	d011      	beq.n	80017ea <FSM_LcdDisplay+0x5e2>
			CLCD_PrintStringBuffer(0, 0, SCREEN_CONFIG_WIFI_0);
 80017c6:	4a1d      	ldr	r2, [pc, #116]	; (800183c <FSM_LcdDisplay+0x634>)
 80017c8:	2100      	movs	r1, #0
 80017ca:	2000      	movs	r0, #0
 80017cc:	f000 fae6 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_CONFIG_WIFI_1);
 80017d0:	4a18      	ldr	r2, [pc, #96]	; (8001834 <FSM_LcdDisplay+0x62c>)
 80017d2:	2100      	movs	r1, #0
 80017d4:	2001      	movs	r0, #1
 80017d6:	f000 fae1 	bl	8001d9c <CLCD_PrintStringBuffer>

			UESP_SendMsg(CMD_CONFIG_WF, sizeof(CMD_CONFIG_WF));
 80017da:	2107      	movs	r1, #7
 80017dc:	4818      	ldr	r0, [pc, #96]	; (8001840 <FSM_LcdDisplay+0x638>)
 80017de:	f001 f983 	bl	8002ae8 <UESP_SendMsg>

			mode_lcd = DISPLAY_CONFIG_WF;
 80017e2:	4b15      	ldr	r3, [pc, #84]	; (8001838 <FSM_LcdDisplay+0x630>)
 80017e4:	2207      	movs	r2, #7
 80017e6:	701a      	strb	r2, [r3, #0]

			UESP_SendMsg(CMD_TRANSMIT_DATA, sizeof(CMD_TRANSMIT_DATA));

			mode_lcd = READY_DISPLAY;
		}
		break;
 80017e8:	e05c      	b.n	80018a4 <FSM_LcdDisplay+0x69c>
		else if(strcmp(UESP_GetMsg(), CONNECT_WF_SUCCESS) == 0) {
 80017ea:	f001 f993 	bl	8002b14 <UESP_GetMsg>
 80017ee:	4603      	mov	r3, r0
 80017f0:	4920      	ldr	r1, [pc, #128]	; (8001874 <FSM_LcdDisplay+0x66c>)
 80017f2:	4618      	mov	r0, r3
 80017f4:	f7fe fcac 	bl	8000150 <strcmp>
 80017f8:	4603      	mov	r3, r0
 80017fa:	2b00      	cmp	r3, #0
 80017fc:	d152      	bne.n	80018a4 <FSM_LcdDisplay+0x69c>
			CLCD_PrintStringBuffer(0, 0, SCREEN_READY_DISPLAY_0);
 80017fe:	4a1e      	ldr	r2, [pc, #120]	; (8001878 <FSM_LcdDisplay+0x670>)
 8001800:	2100      	movs	r1, #0
 8001802:	2000      	movs	r0, #0
 8001804:	f000 faca 	bl	8001d9c <CLCD_PrintStringBuffer>
			CLCD_PrintStringBuffer(1, 0, SCREEN_READY_DISPLAY_1);
 8001808:	4a1c      	ldr	r2, [pc, #112]	; (800187c <FSM_LcdDisplay+0x674>)
 800180a:	2100      	movs	r1, #0
 800180c:	2001      	movs	r0, #1
 800180e:	f000 fac5 	bl	8001d9c <CLCD_PrintStringBuffer>
			UESP_SendMsg(CMD_TRANSMIT_DATA, sizeof(CMD_TRANSMIT_DATA));
 8001812:	2109      	movs	r1, #9
 8001814:	481a      	ldr	r0, [pc, #104]	; (8001880 <FSM_LcdDisplay+0x678>)
 8001816:	f001 f967 	bl	8002ae8 <UESP_SendMsg>
			mode_lcd = READY_DISPLAY;
 800181a:	4b07      	ldr	r3, [pc, #28]	; (8001838 <FSM_LcdDisplay+0x630>)
 800181c:	2201      	movs	r2, #1
 800181e:	701a      	strb	r2, [r3, #0]
		break;
 8001820:	e040      	b.n	80018a4 <FSM_LcdDisplay+0x69c>
 8001822:	bf00      	nop
 8001824:	2000020a 	.word	0x2000020a
 8001828:	20000270 	.word	0x20000270
 800182c:	08008b28 	.word	0x08008b28
 8001830:	08008af8 	.word	0x08008af8
 8001834:	08008ae4 	.word	0x08008ae4
 8001838:	20000208 	.word	0x20000208
 800183c:	08008b34 	.word	0x08008b34
 8001840:	08008b48 	.word	0x08008b48
 8001844:	200002a0 	.word	0x200002a0
 8001848:	08008ba0 	.word	0x08008ba0
 800184c:	08008bb4 	.word	0x08008bb4
 8001850:	08008bc8 	.word	0x08008bc8
 8001854:	08008bdc 	.word	0x08008bdc
 8001858:	20000298 	.word	0x20000298
 800185c:	08008bf0 	.word	0x08008bf0
 8001860:	08008bf4 	.word	0x08008bf4
 8001864:	08008bf8 	.word	0x08008bf8
 8001868:	08008b0c 	.word	0x08008b0c
 800186c:	200002a4 	.word	0x200002a4
 8001870:	cccccccd 	.word	0xcccccccd
 8001874:	08008c08 	.word	0x08008c08
 8001878:	08008c18 	.word	0x08008c18
 800187c:	08008b14 	.word	0x08008b14
 8001880:	08008c2c 	.word	0x08008c2c
	default:
		mode_lcd = INIT;
 8001884:	4b09      	ldr	r3, [pc, #36]	; (80018ac <FSM_LcdDisplay+0x6a4>)
 8001886:	2200      	movs	r2, #0
 8001888:	701a      	strb	r2, [r3, #0]
	}

}
 800188a:	e00c      	b.n	80018a6 <FSM_LcdDisplay+0x69e>
		break;
 800188c:	bf00      	nop
 800188e:	e00a      	b.n	80018a6 <FSM_LcdDisplay+0x69e>
		break;
 8001890:	bf00      	nop
 8001892:	e008      	b.n	80018a6 <FSM_LcdDisplay+0x69e>
		break;
 8001894:	bf00      	nop
 8001896:	e006      	b.n	80018a6 <FSM_LcdDisplay+0x69e>
		break;
 8001898:	bf00      	nop
 800189a:	e004      	b.n	80018a6 <FSM_LcdDisplay+0x69e>
		break;
 800189c:	bf00      	nop
 800189e:	e002      	b.n	80018a6 <FSM_LcdDisplay+0x69e>
		break;
 80018a0:	bf00      	nop
 80018a2:	e000      	b.n	80018a6 <FSM_LcdDisplay+0x69e>
		break;
 80018a4:	bf00      	nop
}
 80018a6:	bf00      	nop
 80018a8:	bd80      	pop	{r7, pc}
 80018aa:	bf00      	nop
 80018ac:	20000208 	.word	0x20000208

080018b0 <FSM_DataTransfer>:

void FSM_DataTransfer(void){
 80018b0:	b580      	push	{r7, lr}
 80018b2:	af00      	add	r7, sp, #0
	switch(mode_data){
 80018b4:	4b1f      	ldr	r3, [pc, #124]	; (8001934 <FSM_DataTransfer+0x84>)
 80018b6:	781b      	ldrb	r3, [r3, #0]
 80018b8:	2b02      	cmp	r3, #2
 80018ba:	d012      	beq.n	80018e2 <FSM_DataTransfer+0x32>
 80018bc:	2b02      	cmp	r3, #2
 80018be:	dc31      	bgt.n	8001924 <FSM_DataTransfer+0x74>
 80018c0:	2b00      	cmp	r3, #0
 80018c2:	d002      	beq.n	80018ca <FSM_DataTransfer+0x1a>
 80018c4:	2b01      	cmp	r3, #1
 80018c6:	d008      	beq.n	80018da <FSM_DataTransfer+0x2a>
 80018c8:	e02c      	b.n	8001924 <FSM_DataTransfer+0x74>
	case INIT:

		_time_read_data = TIME_READ_DATA;
 80018ca:	4b1b      	ldr	r3, [pc, #108]	; (8001938 <FSM_DataTransfer+0x88>)
 80018cc:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80018d0:	801a      	strh	r2, [r3, #0]
		mode_data = TRANSMIT_DATA;
 80018d2:	4b18      	ldr	r3, [pc, #96]	; (8001934 <FSM_DataTransfer+0x84>)
 80018d4:	2202      	movs	r2, #2
 80018d6:	701a      	strb	r2, [r3, #0]
		break;
 80018d8:	e029      	b.n	800192e <FSM_DataTransfer+0x7e>
	case READ_DATA:

		mode_data = TRANSMIT_DATA;
 80018da:	4b16      	ldr	r3, [pc, #88]	; (8001934 <FSM_DataTransfer+0x84>)
 80018dc:	2202      	movs	r2, #2
 80018de:	701a      	strb	r2, [r3, #0]
		break;
 80018e0:	e025      	b.n	800192e <FSM_DataTransfer+0x7e>
	case TRANSMIT_DATA:
		if(ULORA_IsReceivedMsg()) {
 80018e2:	f001 f92d 	bl	8002b40 <ULORA_IsReceivedMsg>
 80018e6:	4603      	mov	r3, r0
 80018e8:	2b00      	cmp	r3, #0
 80018ea:	d00f      	beq.n	800190c <FSM_DataTransfer+0x5c>
//				process data received from lora
//				=> stm32 send to esp => esp send to server
//			msg = ULORA_GetMsg();
			UESP_SendMsg(msg, sprintf(msg, ULORA_GetMsg()));
 80018ec:	f001 f932 	bl	8002b54 <ULORA_GetMsg>
 80018f0:	4603      	mov	r3, r0
 80018f2:	4619      	mov	r1, r3
 80018f4:	4811      	ldr	r0, [pc, #68]	; (800193c <FSM_DataTransfer+0x8c>)
 80018f6:	f004 f845 	bl	8005984 <siprintf>
 80018fa:	4603      	mov	r3, r0
 80018fc:	b2db      	uxtb	r3, r3
 80018fe:	4619      	mov	r1, r3
 8001900:	480e      	ldr	r0, [pc, #56]	; (800193c <FSM_DataTransfer+0x8c>)
 8001902:	f001 f8f1 	bl	8002ae8 <UESP_SendMsg>

			ProcessMsg(msg);
 8001906:	480d      	ldr	r0, [pc, #52]	; (800193c <FSM_DataTransfer+0x8c>)
 8001908:	f7ff fbb6 	bl	8001078 <ProcessMsg>

		}

		if(_time_read_data < 5) {
 800190c:	4b0a      	ldr	r3, [pc, #40]	; (8001938 <FSM_DataTransfer+0x88>)
 800190e:	881b      	ldrh	r3, [r3, #0]
 8001910:	2b04      	cmp	r3, #4
 8001912:	d80b      	bhi.n	800192c <FSM_DataTransfer+0x7c>
			_time_read_data = TIME_READ_DATA;
 8001914:	4b08      	ldr	r3, [pc, #32]	; (8001938 <FSM_DataTransfer+0x88>)
 8001916:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800191a:	801a      	strh	r2, [r3, #0]
			mode_data = READ_DATA;
 800191c:	4b05      	ldr	r3, [pc, #20]	; (8001934 <FSM_DataTransfer+0x84>)
 800191e:	2201      	movs	r2, #1
 8001920:	701a      	strb	r2, [r3, #0]
		}
		break;
 8001922:	e003      	b.n	800192c <FSM_DataTransfer+0x7c>
	default:
		mode_data = INIT;
 8001924:	4b03      	ldr	r3, [pc, #12]	; (8001934 <FSM_DataTransfer+0x84>)
 8001926:	2200      	movs	r2, #0
 8001928:	701a      	strb	r2, [r3, #0]
	}

}
 800192a:	e000      	b.n	800192e <FSM_DataTransfer+0x7e>
		break;
 800192c:	bf00      	nop
}
 800192e:	bf00      	nop
 8001930:	bd80      	pop	{r7, pc}
 8001932:	bf00      	nop
 8001934:	20000209 	.word	0x20000209
 8001938:	200002a2 	.word	0x200002a2
 800193c:	2000020c 	.word	0x2000020c

08001940 <IN_ReadButton>:
void IN_Init(void){

}

//this function is called every 50ms
void IN_ReadButton(void){
 8001940:	b580      	push	{r7, lr}
 8001942:	b082      	sub	sp, #8
 8001944:	af00      	add	r7, sp, #0
	for(uint8_t i = 0; i < NO_OF_BUTTONS; i++){
 8001946:	2300      	movs	r3, #0
 8001948:	71fb      	strb	r3, [r7, #7]
 800194a:	e033      	b.n	80019b4 <IN_ReadButton+0x74>
		if(HAL_GPIO_ReadPin(PORT_BUTTON[i], PIN_BUTTON[i]) == BUTTON_IS_PRESSED){
 800194c:	79fb      	ldrb	r3, [r7, #7]
 800194e:	4a1d      	ldr	r2, [pc, #116]	; (80019c4 <IN_ReadButton+0x84>)
 8001950:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8001954:	79fb      	ldrb	r3, [r7, #7]
 8001956:	491c      	ldr	r1, [pc, #112]	; (80019c8 <IN_ReadButton+0x88>)
 8001958:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 800195c:	4619      	mov	r1, r3
 800195e:	4610      	mov	r0, r2
 8001960:	f001 fcfc 	bl	800335c <HAL_GPIO_ReadPin>
 8001964:	4603      	mov	r3, r0
 8001966:	2b00      	cmp	r3, #0
 8001968:	d109      	bne.n	800197e <IN_ReadButton+0x3e>
			Counter_button_press[i]++;
 800196a:	79fb      	ldrb	r3, [r7, #7]
 800196c:	4a17      	ldr	r2, [pc, #92]	; (80019cc <IN_ReadButton+0x8c>)
 800196e:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8001972:	3201      	adds	r2, #1
 8001974:	b291      	uxth	r1, r2
 8001976:	4a15      	ldr	r2, [pc, #84]	; (80019cc <IN_ReadButton+0x8c>)
 8001978:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800197c:	e017      	b.n	80019ae <IN_ReadButton+0x6e>
		}
		else {
			Counter_button_press[i] = 0;
 800197e:	79fb      	ldrb	r3, [r7, #7]
 8001980:	4a12      	ldr	r2, [pc, #72]	; (80019cc <IN_ReadButton+0x8c>)
 8001982:	2100      	movs	r1, #0
 8001984:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			Flag_for_button_press[i] = (Counter_button_press[i] > 0) && (Counter_button_press[i] < 10);
 8001988:	79fb      	ldrb	r3, [r7, #7]
 800198a:	4a10      	ldr	r2, [pc, #64]	; (80019cc <IN_ReadButton+0x8c>)
 800198c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001990:	2b00      	cmp	r3, #0
 8001992:	d007      	beq.n	80019a4 <IN_ReadButton+0x64>
 8001994:	79fb      	ldrb	r3, [r7, #7]
 8001996:	4a0d      	ldr	r2, [pc, #52]	; (80019cc <IN_ReadButton+0x8c>)
 8001998:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800199c:	2b09      	cmp	r3, #9
 800199e:	d801      	bhi.n	80019a4 <IN_ReadButton+0x64>
 80019a0:	2201      	movs	r2, #1
 80019a2:	e000      	b.n	80019a6 <IN_ReadButton+0x66>
 80019a4:	2200      	movs	r2, #0
 80019a6:	79fb      	ldrb	r3, [r7, #7]
 80019a8:	b2d1      	uxtb	r1, r2
 80019aa:	4a09      	ldr	r2, [pc, #36]	; (80019d0 <IN_ReadButton+0x90>)
 80019ac:	54d1      	strb	r1, [r2, r3]
	for(uint8_t i = 0; i < NO_OF_BUTTONS; i++){
 80019ae:	79fb      	ldrb	r3, [r7, #7]
 80019b0:	3301      	adds	r3, #1
 80019b2:	71fb      	strb	r3, [r7, #7]
 80019b4:	79fb      	ldrb	r3, [r7, #7]
 80019b6:	2b00      	cmp	r3, #0
 80019b8:	d0c8      	beq.n	800194c <IN_ReadButton+0xc>
		}
	}
}
 80019ba:	bf00      	nop
 80019bc:	bf00      	nop
 80019be:	3708      	adds	r7, #8
 80019c0:	46bd      	mov	sp, r7
 80019c2:	bd80      	pop	{r7, pc}
 80019c4:	20000000 	.word	0x20000000
 80019c8:	20000004 	.word	0x20000004
 80019cc:	200002ac 	.word	0x200002ac
 80019d0:	200002a8 	.word	0x200002a8

080019d4 <IN_IsPressed>:

uint8_t IN_IsPressed(uint8_t index){
 80019d4:	b480      	push	{r7}
 80019d6:	b083      	sub	sp, #12
 80019d8:	af00      	add	r7, sp, #0
 80019da:	4603      	mov	r3, r0
 80019dc:	71fb      	strb	r3, [r7, #7]
	if(index >= NO_OF_BUTTONS) return 0;
 80019de:	79fb      	ldrb	r3, [r7, #7]
 80019e0:	2b00      	cmp	r3, #0
 80019e2:	d001      	beq.n	80019e8 <IN_IsPressed+0x14>
 80019e4:	2300      	movs	r3, #0
 80019e6:	e002      	b.n	80019ee <IN_IsPressed+0x1a>

	return Flag_for_button_press[index];
 80019e8:	79fb      	ldrb	r3, [r7, #7]
 80019ea:	4a03      	ldr	r2, [pc, #12]	; (80019f8 <IN_IsPressed+0x24>)
 80019ec:	5cd3      	ldrb	r3, [r2, r3]
}
 80019ee:	4618      	mov	r0, r3
 80019f0:	370c      	adds	r7, #12
 80019f2:	46bd      	mov	sp, r7
 80019f4:	bc80      	pop	{r7}
 80019f6:	4770      	bx	lr
 80019f8:	200002a8 	.word	0x200002a8

080019fc <IN_IsPressed_ms>:

uint8_t IN_IsPressed_ms(uint8_t index, uint16_t duration){
 80019fc:	b480      	push	{r7}
 80019fe:	b083      	sub	sp, #12
 8001a00:	af00      	add	r7, sp, #0
 8001a02:	4603      	mov	r3, r0
 8001a04:	460a      	mov	r2, r1
 8001a06:	71fb      	strb	r3, [r7, #7]
 8001a08:	4613      	mov	r3, r2
 8001a0a:	80bb      	strh	r3, [r7, #4]
	if(index >= NO_OF_BUTTONS) return 0;
 8001a0c:	79fb      	ldrb	r3, [r7, #7]
 8001a0e:	2b00      	cmp	r3, #0
 8001a10:	d001      	beq.n	8001a16 <IN_IsPressed_ms+0x1a>
 8001a12:	2300      	movs	r3, #0
 8001a14:	e00e      	b.n	8001a34 <IN_IsPressed_ms+0x38>

	//button is read every 50ms -> counter += 1 every 50ms if button is held
	return Counter_button_press[index] >= (duration / 50);
 8001a16:	79fb      	ldrb	r3, [r7, #7]
 8001a18:	4a09      	ldr	r2, [pc, #36]	; (8001a40 <IN_IsPressed_ms+0x44>)
 8001a1a:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8001a1e:	88bb      	ldrh	r3, [r7, #4]
 8001a20:	4908      	ldr	r1, [pc, #32]	; (8001a44 <IN_IsPressed_ms+0x48>)
 8001a22:	fba1 1303 	umull	r1, r3, r1, r3
 8001a26:	091b      	lsrs	r3, r3, #4
 8001a28:	b29b      	uxth	r3, r3
 8001a2a:	429a      	cmp	r2, r3
 8001a2c:	bf2c      	ite	cs
 8001a2e:	2301      	movcs	r3, #1
 8001a30:	2300      	movcc	r3, #0
 8001a32:	b2db      	uxtb	r3, r3
}
 8001a34:	4618      	mov	r0, r3
 8001a36:	370c      	adds	r7, #12
 8001a38:	46bd      	mov	sp, r7
 8001a3a:	bc80      	pop	{r7}
 8001a3c:	4770      	bx	lr
 8001a3e:	bf00      	nop
 8001a40:	200002ac 	.word	0x200002ac
 8001a44:	51eb851f 	.word	0x51eb851f

08001a48 <Delay>:

CLCD_I2C_Name LCD;

uint8_t currentCol, currentRow;

static void Delay(uint16_t time){
 8001a48:	b580      	push	{r7, lr}
 8001a4a:	b082      	sub	sp, #8
 8001a4c:	af00      	add	r7, sp, #0
 8001a4e:	4603      	mov	r3, r0
 8001a50:	80fb      	strh	r3, [r7, #6]
	HAL_Delay(time);
 8001a52:	88fb      	ldrh	r3, [r7, #6]
 8001a54:	4618      	mov	r0, r3
 8001a56:	f001 f91b 	bl	8002c90 <HAL_Delay>
}
 8001a5a:	bf00      	nop
 8001a5c:	3708      	adds	r7, #8
 8001a5e:	46bd      	mov	sp, r7
 8001a60:	bd80      	pop	{r7, pc}
	...

08001a64 <WriteI2C>:


static void WriteI2C(uint8_t data, uint8_t mode){
 8001a64:	b580      	push	{r7, lr}
 8001a66:	b086      	sub	sp, #24
 8001a68:	af02      	add	r7, sp, #8
 8001a6a:	4603      	mov	r3, r0
 8001a6c:	460a      	mov	r2, r1
 8001a6e:	71fb      	strb	r3, [r7, #7]
 8001a70:	4613      	mov	r3, r2
 8001a72:	71bb      	strb	r3, [r7, #6]
	uint8_t dataH, dataL;
	uint8_t data_I2C[4];

	dataH = data & 0xF0;
 8001a74:	79fb      	ldrb	r3, [r7, #7]
 8001a76:	f023 030f 	bic.w	r3, r3, #15
 8001a7a:	73fb      	strb	r3, [r7, #15]
	dataL = (data << 4) & 0xF0;
 8001a7c:	79fb      	ldrb	r3, [r7, #7]
 8001a7e:	011b      	lsls	r3, r3, #4
 8001a80:	73bb      	strb	r3, [r7, #14]

	if(LCD.BACKLIGHT){
 8001a82:	4b1c      	ldr	r3, [pc, #112]	; (8001af4 <WriteI2C+0x90>)
 8001a84:	7adb      	ldrb	r3, [r3, #11]
 8001a86:	2b00      	cmp	r3, #0
 8001a88:	d007      	beq.n	8001a9a <WriteI2C+0x36>
		dataH |= LCD_BACKLIGHT;
 8001a8a:	7bfb      	ldrb	r3, [r7, #15]
 8001a8c:	f043 0308 	orr.w	r3, r3, #8
 8001a90:	73fb      	strb	r3, [r7, #15]
		dataL |= LCD_BACKLIGHT;
 8001a92:	7bbb      	ldrb	r3, [r7, #14]
 8001a94:	f043 0308 	orr.w	r3, r3, #8
 8001a98:	73bb      	strb	r3, [r7, #14]
	}

	if(mode == LCD_DATA){
 8001a9a:	79bb      	ldrb	r3, [r7, #6]
 8001a9c:	2b01      	cmp	r3, #1
 8001a9e:	d107      	bne.n	8001ab0 <WriteI2C+0x4c>
		dataH |= LCD_RS;
 8001aa0:	7bfb      	ldrb	r3, [r7, #15]
 8001aa2:	f043 0301 	orr.w	r3, r3, #1
 8001aa6:	73fb      	strb	r3, [r7, #15]
		dataL |= LCD_RS;
 8001aa8:	7bbb      	ldrb	r3, [r7, #14]
 8001aaa:	f043 0301 	orr.w	r3, r3, #1
 8001aae:	73bb      	strb	r3, [r7, #14]
	}

	data_I2C[0] = dataH | LCD_EN;
 8001ab0:	7bfb      	ldrb	r3, [r7, #15]
 8001ab2:	f043 0304 	orr.w	r3, r3, #4
 8001ab6:	b2db      	uxtb	r3, r3
 8001ab8:	723b      	strb	r3, [r7, #8]
	data_I2C[1] = dataH;
 8001aba:	7bfb      	ldrb	r3, [r7, #15]
 8001abc:	727b      	strb	r3, [r7, #9]
	data_I2C[2] = dataL | LCD_EN;
 8001abe:	7bbb      	ldrb	r3, [r7, #14]
 8001ac0:	f043 0304 	orr.w	r3, r3, #4
 8001ac4:	b2db      	uxtb	r3, r3
 8001ac6:	72bb      	strb	r3, [r7, #10]
	data_I2C[3] = dataL;
 8001ac8:	7bbb      	ldrb	r3, [r7, #14]
 8001aca:	72fb      	strb	r3, [r7, #11]

	HAL_I2C_Master_Transmit(LCD.I2C, LCD.ADDRESS << 1, (uint8_t*)data_I2C, 4, 1000);
 8001acc:	4b09      	ldr	r3, [pc, #36]	; (8001af4 <WriteI2C+0x90>)
 8001ace:	6818      	ldr	r0, [r3, #0]
 8001ad0:	4b08      	ldr	r3, [pc, #32]	; (8001af4 <WriteI2C+0x90>)
 8001ad2:	791b      	ldrb	r3, [r3, #4]
 8001ad4:	b29b      	uxth	r3, r3
 8001ad6:	005b      	lsls	r3, r3, #1
 8001ad8:	b299      	uxth	r1, r3
 8001ada:	f107 0208 	add.w	r2, r7, #8
 8001ade:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001ae2:	9300      	str	r3, [sp, #0]
 8001ae4:	2304      	movs	r3, #4
 8001ae6:	f001 fdc5 	bl	8003674 <HAL_I2C_Master_Transmit>
}
 8001aea:	bf00      	nop
 8001aec:	3710      	adds	r7, #16
 8001aee:	46bd      	mov	sp, r7
 8001af0:	bd80      	pop	{r7, pc}
 8001af2:	bf00      	nop
 8001af4:	200002b4 	.word	0x200002b4

08001af8 <CLCD_Init>:



//===========================HIGH LEVEL FUNCTION===========================//
void CLCD_Init(I2C_HandleTypeDef* I2C, uint8_t address, uint8_t row, uint8_t col){
 8001af8:	b580      	push	{r7, lr}
 8001afa:	b084      	sub	sp, #16
 8001afc:	af00      	add	r7, sp, #0
 8001afe:	6078      	str	r0, [r7, #4]
 8001b00:	4608      	mov	r0, r1
 8001b02:	4611      	mov	r1, r2
 8001b04:	461a      	mov	r2, r3
 8001b06:	4603      	mov	r3, r0
 8001b08:	70fb      	strb	r3, [r7, #3]
 8001b0a:	460b      	mov	r3, r1
 8001b0c:	70bb      	strb	r3, [r7, #2]
 8001b0e:	4613      	mov	r3, r2
 8001b10:	707b      	strb	r3, [r7, #1]
	uint8_t i;
	LCD.I2C = I2C;
 8001b12:	4a4a      	ldr	r2, [pc, #296]	; (8001c3c <CLCD_Init+0x144>)
 8001b14:	687b      	ldr	r3, [r7, #4]
 8001b16:	6013      	str	r3, [r2, #0]
	LCD.ADDRESS = address;
 8001b18:	4a48      	ldr	r2, [pc, #288]	; (8001c3c <CLCD_Init+0x144>)
 8001b1a:	78fb      	ldrb	r3, [r7, #3]
 8001b1c:	7113      	strb	r3, [r2, #4]
	LCD.COL = col;
 8001b1e:	4a47      	ldr	r2, [pc, #284]	; (8001c3c <CLCD_Init+0x144>)
 8001b20:	787b      	ldrb	r3, [r7, #1]
 8001b22:	7153      	strb	r3, [r2, #5]
	LCD.ROW = row;
 8001b24:	4a45      	ldr	r2, [pc, #276]	; (8001c3c <CLCD_Init+0x144>)
 8001b26:	78bb      	ldrb	r3, [r7, #2]
 8001b28:	7193      	strb	r3, [r2, #6]

	LCD.FUNCTIONSET = LCD_FUNCTIONSET | LCD_4BITMODE | LCD_2LINE | LCD_5x8DOTS;
 8001b2a:	4b44      	ldr	r3, [pc, #272]	; (8001c3c <CLCD_Init+0x144>)
 8001b2c:	2228      	movs	r2, #40	; 0x28
 8001b2e:	721a      	strb	r2, [r3, #8]
	LCD.ENTRYMODE = LCD_ENTRYMODESET | LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
 8001b30:	4b42      	ldr	r3, [pc, #264]	; (8001c3c <CLCD_Init+0x144>)
 8001b32:	2206      	movs	r2, #6
 8001b34:	71da      	strb	r2, [r3, #7]
	LCD.DISPLAYCTRL = LCD_DISPLAYCONTROL | LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;
 8001b36:	4b41      	ldr	r3, [pc, #260]	; (8001c3c <CLCD_Init+0x144>)
 8001b38:	220c      	movs	r2, #12
 8001b3a:	725a      	strb	r2, [r3, #9]
	LCD.CURSORSHIFT = LCD_CURSORSHIFT | LCD_CURSORMOVE | LCD_MOVERIGHT;
 8001b3c:	4b3f      	ldr	r3, [pc, #252]	; (8001c3c <CLCD_Init+0x144>)
 8001b3e:	2214      	movs	r2, #20
 8001b40:	729a      	strb	r2, [r3, #10]
	LCD.BACKLIGHT = LCD_BACKLIGHT;
 8001b42:	4b3e      	ldr	r3, [pc, #248]	; (8001c3c <CLCD_Init+0x144>)
 8001b44:	2208      	movs	r2, #8
 8001b46:	72da      	strb	r2, [r3, #11]

	Delay(50);
 8001b48:	2032      	movs	r0, #50	; 0x32
 8001b4a:	f7ff ff7d 	bl	8001a48 <Delay>

	if(Lcd_buffer != NULL) free(Lcd_buffer);
 8001b4e:	4b3c      	ldr	r3, [pc, #240]	; (8001c40 <CLCD_Init+0x148>)
 8001b50:	681b      	ldr	r3, [r3, #0]
 8001b52:	2b00      	cmp	r3, #0
 8001b54:	d004      	beq.n	8001b60 <CLCD_Init+0x68>
 8001b56:	4b3a      	ldr	r3, [pc, #232]	; (8001c40 <CLCD_Init+0x148>)
 8001b58:	681b      	ldr	r3, [r3, #0]
 8001b5a:	4618      	mov	r0, r3
 8001b5c:	f003 fe16 	bl	800578c <free>
	Lcd_buffer = (uint8_t*)malloc(row * col * 8);
 8001b60:	78bb      	ldrb	r3, [r7, #2]
 8001b62:	787a      	ldrb	r2, [r7, #1]
 8001b64:	fb02 f303 	mul.w	r3, r2, r3
 8001b68:	00db      	lsls	r3, r3, #3
 8001b6a:	4618      	mov	r0, r3
 8001b6c:	f003 fe06 	bl	800577c <malloc>
 8001b70:	4603      	mov	r3, r0
 8001b72:	461a      	mov	r2, r3
 8001b74:	4b32      	ldr	r3, [pc, #200]	; (8001c40 <CLCD_Init+0x148>)
 8001b76:	601a      	str	r2, [r3, #0]

	for(i = 0; i < LCD.ROW * LCD.COL; i++) Lcd_buffer[i] = ' ';
 8001b78:	2300      	movs	r3, #0
 8001b7a:	73fb      	strb	r3, [r7, #15]
 8001b7c:	e008      	b.n	8001b90 <CLCD_Init+0x98>
 8001b7e:	4b30      	ldr	r3, [pc, #192]	; (8001c40 <CLCD_Init+0x148>)
 8001b80:	681a      	ldr	r2, [r3, #0]
 8001b82:	7bfb      	ldrb	r3, [r7, #15]
 8001b84:	4413      	add	r3, r2
 8001b86:	2220      	movs	r2, #32
 8001b88:	701a      	strb	r2, [r3, #0]
 8001b8a:	7bfb      	ldrb	r3, [r7, #15]
 8001b8c:	3301      	adds	r3, #1
 8001b8e:	73fb      	strb	r3, [r7, #15]
 8001b90:	7bfa      	ldrb	r2, [r7, #15]
 8001b92:	4b2a      	ldr	r3, [pc, #168]	; (8001c3c <CLCD_Init+0x144>)
 8001b94:	799b      	ldrb	r3, [r3, #6]
 8001b96:	4619      	mov	r1, r3
 8001b98:	4b28      	ldr	r3, [pc, #160]	; (8001c3c <CLCD_Init+0x144>)
 8001b9a:	795b      	ldrb	r3, [r3, #5]
 8001b9c:	fb01 f303 	mul.w	r3, r1, r3
 8001ba0:	429a      	cmp	r2, r3
 8001ba2:	dbec      	blt.n	8001b7e <CLCD_Init+0x86>

	WriteI2C(0x33, LCD_COMMAND);
 8001ba4:	2100      	movs	r1, #0
 8001ba6:	2033      	movs	r0, #51	; 0x33
 8001ba8:	f7ff ff5c 	bl	8001a64 <WriteI2C>
//	Delay(5);
	WriteI2C(0x33, LCD_COMMAND);
 8001bac:	2100      	movs	r1, #0
 8001bae:	2033      	movs	r0, #51	; 0x33
 8001bb0:	f7ff ff58 	bl	8001a64 <WriteI2C>
	Delay(5);
 8001bb4:	2005      	movs	r0, #5
 8001bb6:	f7ff ff47 	bl	8001a48 <Delay>
	WriteI2C(0x32, LCD_COMMAND);
 8001bba:	2100      	movs	r1, #0
 8001bbc:	2032      	movs	r0, #50	; 0x32
 8001bbe:	f7ff ff51 	bl	8001a64 <WriteI2C>
	Delay(5);
 8001bc2:	2005      	movs	r0, #5
 8001bc4:	f7ff ff40 	bl	8001a48 <Delay>
	WriteI2C(0x20, LCD_COMMAND);
 8001bc8:	2100      	movs	r1, #0
 8001bca:	2020      	movs	r0, #32
 8001bcc:	f7ff ff4a 	bl	8001a64 <WriteI2C>
	Delay(5);
 8001bd0:	2005      	movs	r0, #5
 8001bd2:	f7ff ff39 	bl	8001a48 <Delay>

//	config lcd
	WriteI2C(LCD.ENTRYMODE, LCD_COMMAND);
 8001bd6:	4b19      	ldr	r3, [pc, #100]	; (8001c3c <CLCD_Init+0x144>)
 8001bd8:	79db      	ldrb	r3, [r3, #7]
 8001bda:	2100      	movs	r1, #0
 8001bdc:	4618      	mov	r0, r3
 8001bde:	f7ff ff41 	bl	8001a64 <WriteI2C>
	Delay(1);
 8001be2:	2001      	movs	r0, #1
 8001be4:	f7ff ff30 	bl	8001a48 <Delay>
	WriteI2C(LCD.DISPLAYCTRL, LCD_COMMAND);
 8001be8:	4b14      	ldr	r3, [pc, #80]	; (8001c3c <CLCD_Init+0x144>)
 8001bea:	7a5b      	ldrb	r3, [r3, #9]
 8001bec:	2100      	movs	r1, #0
 8001bee:	4618      	mov	r0, r3
 8001bf0:	f7ff ff38 	bl	8001a64 <WriteI2C>
	Delay(1);
 8001bf4:	2001      	movs	r0, #1
 8001bf6:	f7ff ff27 	bl	8001a48 <Delay>
	WriteI2C(LCD.CURSORSHIFT, LCD_COMMAND);
 8001bfa:	4b10      	ldr	r3, [pc, #64]	; (8001c3c <CLCD_Init+0x144>)
 8001bfc:	7a9b      	ldrb	r3, [r3, #10]
 8001bfe:	2100      	movs	r1, #0
 8001c00:	4618      	mov	r0, r3
 8001c02:	f7ff ff2f 	bl	8001a64 <WriteI2C>
	Delay(1);
 8001c06:	2001      	movs	r0, #1
 8001c08:	f7ff ff1e 	bl	8001a48 <Delay>
	WriteI2C(LCD.FUNCTIONSET, LCD_COMMAND);
 8001c0c:	4b0b      	ldr	r3, [pc, #44]	; (8001c3c <CLCD_Init+0x144>)
 8001c0e:	7a1b      	ldrb	r3, [r3, #8]
 8001c10:	2100      	movs	r1, #0
 8001c12:	4618      	mov	r0, r3
 8001c14:	f7ff ff26 	bl	8001a64 <WriteI2C>
	Delay(1);
 8001c18:	2001      	movs	r0, #1
 8001c1a:	f7ff ff15 	bl	8001a48 <Delay>

	WriteI2C(LCD_CLEARDISPLAY, LCD_COMMAND);
 8001c1e:	2100      	movs	r1, #0
 8001c20:	2001      	movs	r0, #1
 8001c22:	f7ff ff1f 	bl	8001a64 <WriteI2C>
	Delay(1);
 8001c26:	2001      	movs	r0, #1
 8001c28:	f7ff ff0e 	bl	8001a48 <Delay>

	WriteI2C(LCD_RETURNHOME, LCD_COMMAND);
 8001c2c:	2100      	movs	r1, #0
 8001c2e:	2002      	movs	r0, #2
 8001c30:	f7ff ff18 	bl	8001a64 <WriteI2C>
}
 8001c34:	bf00      	nop
 8001c36:	3710      	adds	r7, #16
 8001c38:	46bd      	mov	sp, r7
 8001c3a:	bd80      	pop	{r7, pc}
 8001c3c:	200002b4 	.word	0x200002b4
 8001c40:	200002b0 	.word	0x200002b0

08001c44 <SetCursor>:

void SetCursor(uint8_t row, uint8_t col){
 8001c44:	b580      	push	{r7, lr}
 8001c46:	b084      	sub	sp, #16
 8001c48:	af00      	add	r7, sp, #0
 8001c4a:	4603      	mov	r3, r0
 8001c4c:	460a      	mov	r2, r1
 8001c4e:	71fb      	strb	r3, [r7, #7]
 8001c50:	4613      	mov	r3, r2
 8001c52:	71bb      	strb	r3, [r7, #6]
	uint8_t address_dram = 0x00;
 8001c54:	2300      	movs	r3, #0
 8001c56:	73fb      	strb	r3, [r7, #15]

	row = row % LCD.ROW;
 8001c58:	4b1d      	ldr	r3, [pc, #116]	; (8001cd0 <SetCursor+0x8c>)
 8001c5a:	799a      	ldrb	r2, [r3, #6]
 8001c5c:	79fb      	ldrb	r3, [r7, #7]
 8001c5e:	fbb3 f1f2 	udiv	r1, r3, r2
 8001c62:	fb01 f202 	mul.w	r2, r1, r2
 8001c66:	1a9b      	subs	r3, r3, r2
 8001c68:	71fb      	strb	r3, [r7, #7]
	col = col % LCD.COL;
 8001c6a:	4b19      	ldr	r3, [pc, #100]	; (8001cd0 <SetCursor+0x8c>)
 8001c6c:	795a      	ldrb	r2, [r3, #5]
 8001c6e:	79bb      	ldrb	r3, [r7, #6]
 8001c70:	fbb3 f1f2 	udiv	r1, r3, r2
 8001c74:	fb01 f202 	mul.w	r2, r1, r2
 8001c78:	1a9b      	subs	r3, r3, r2
 8001c7a:	71bb      	strb	r3, [r7, #6]

	switch(row){
 8001c7c:	79fb      	ldrb	r3, [r7, #7]
 8001c7e:	2b03      	cmp	r3, #3
 8001c80:	d819      	bhi.n	8001cb6 <SetCursor+0x72>
 8001c82:	a201      	add	r2, pc, #4	; (adr r2, 8001c88 <SetCursor+0x44>)
 8001c84:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001c88:	08001c99 	.word	0x08001c99
 8001c8c:	08001c9f 	.word	0x08001c9f
 8001c90:	08001ca7 	.word	0x08001ca7
 8001c94:	08001caf 	.word	0x08001caf
	case 0:
		address_dram = 0x00 + col;
 8001c98:	79bb      	ldrb	r3, [r7, #6]
 8001c9a:	73fb      	strb	r3, [r7, #15]
		break;
 8001c9c:	e00b      	b.n	8001cb6 <SetCursor+0x72>
	case 1:
		address_dram = 0x40 + col;
 8001c9e:	79bb      	ldrb	r3, [r7, #6]
 8001ca0:	3340      	adds	r3, #64	; 0x40
 8001ca2:	73fb      	strb	r3, [r7, #15]
		break;
 8001ca4:	e007      	b.n	8001cb6 <SetCursor+0x72>
	case 2:
		address_dram = 0x14 + col;
 8001ca6:	79bb      	ldrb	r3, [r7, #6]
 8001ca8:	3314      	adds	r3, #20
 8001caa:	73fb      	strb	r3, [r7, #15]
		break;
 8001cac:	e003      	b.n	8001cb6 <SetCursor+0x72>
	case 3:
		address_dram = 0x54 + col;
 8001cae:	79bb      	ldrb	r3, [r7, #6]
 8001cb0:	3354      	adds	r3, #84	; 0x54
 8001cb2:	73fb      	strb	r3, [r7, #15]
		break;
 8001cb4:	bf00      	nop
	}

	WriteI2C(LCD_SETDDRAMADDR | address_dram, LCD_COMMAND);
 8001cb6:	7bfb      	ldrb	r3, [r7, #15]
 8001cb8:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8001cbc:	b2db      	uxtb	r3, r3
 8001cbe:	2100      	movs	r1, #0
 8001cc0:	4618      	mov	r0, r3
 8001cc2:	f7ff fecf 	bl	8001a64 <WriteI2C>
}
 8001cc6:	bf00      	nop
 8001cc8:	3710      	adds	r7, #16
 8001cca:	46bd      	mov	sp, r7
 8001ccc:	bd80      	pop	{r7, pc}
 8001cce:	bf00      	nop
 8001cd0:	200002b4 	.word	0x200002b4

08001cd4 <UpdateCharBuffer>:

void UpdateCharBuffer(uint8_t c){
 8001cd4:	b480      	push	{r7}
 8001cd6:	b083      	sub	sp, #12
 8001cd8:	af00      	add	r7, sp, #0
 8001cda:	4603      	mov	r3, r0
 8001cdc:	71fb      	strb	r3, [r7, #7]
	Lcd_buffer[currentRow * LCD.COL + currentCol] = c;
 8001cde:	4b0d      	ldr	r3, [pc, #52]	; (8001d14 <UpdateCharBuffer+0x40>)
 8001ce0:	681b      	ldr	r3, [r3, #0]
 8001ce2:	4a0d      	ldr	r2, [pc, #52]	; (8001d18 <UpdateCharBuffer+0x44>)
 8001ce4:	7812      	ldrb	r2, [r2, #0]
 8001ce6:	4611      	mov	r1, r2
 8001ce8:	4a0c      	ldr	r2, [pc, #48]	; (8001d1c <UpdateCharBuffer+0x48>)
 8001cea:	7952      	ldrb	r2, [r2, #5]
 8001cec:	fb01 f202 	mul.w	r2, r1, r2
 8001cf0:	490b      	ldr	r1, [pc, #44]	; (8001d20 <UpdateCharBuffer+0x4c>)
 8001cf2:	7809      	ldrb	r1, [r1, #0]
 8001cf4:	440a      	add	r2, r1
 8001cf6:	4413      	add	r3, r2
 8001cf8:	79fa      	ldrb	r2, [r7, #7]
 8001cfa:	701a      	strb	r2, [r3, #0]
	currentCol++;
 8001cfc:	4b08      	ldr	r3, [pc, #32]	; (8001d20 <UpdateCharBuffer+0x4c>)
 8001cfe:	781b      	ldrb	r3, [r3, #0]
 8001d00:	3301      	adds	r3, #1
 8001d02:	b2da      	uxtb	r2, r3
 8001d04:	4b06      	ldr	r3, [pc, #24]	; (8001d20 <UpdateCharBuffer+0x4c>)
 8001d06:	701a      	strb	r2, [r3, #0]
}
 8001d08:	bf00      	nop
 8001d0a:	370c      	adds	r7, #12
 8001d0c:	46bd      	mov	sp, r7
 8001d0e:	bc80      	pop	{r7}
 8001d10:	4770      	bx	lr
 8001d12:	bf00      	nop
 8001d14:	200002b0 	.word	0x200002b0
 8001d18:	200002c1 	.word	0x200002c1
 8001d1c:	200002b4 	.word	0x200002b4
 8001d20:	200002c0 	.word	0x200002c0

08001d24 <CLCD_PrintCharBuffer>:

void CLCD_PrintCharBuffer(uint8_t row, uint8_t col, char c){
 8001d24:	b480      	push	{r7}
 8001d26:	b083      	sub	sp, #12
 8001d28:	af00      	add	r7, sp, #0
 8001d2a:	4603      	mov	r3, r0
 8001d2c:	71fb      	strb	r3, [r7, #7]
 8001d2e:	460b      	mov	r3, r1
 8001d30:	71bb      	strb	r3, [r7, #6]
 8001d32:	4613      	mov	r3, r2
 8001d34:	717b      	strb	r3, [r7, #5]
	currentRow = row % LCD.ROW;
 8001d36:	4b15      	ldr	r3, [pc, #84]	; (8001d8c <CLCD_PrintCharBuffer+0x68>)
 8001d38:	799a      	ldrb	r2, [r3, #6]
 8001d3a:	79fb      	ldrb	r3, [r7, #7]
 8001d3c:	fbb3 f1f2 	udiv	r1, r3, r2
 8001d40:	fb01 f202 	mul.w	r2, r1, r2
 8001d44:	1a9b      	subs	r3, r3, r2
 8001d46:	b2da      	uxtb	r2, r3
 8001d48:	4b11      	ldr	r3, [pc, #68]	; (8001d90 <CLCD_PrintCharBuffer+0x6c>)
 8001d4a:	701a      	strb	r2, [r3, #0]
	currentCol = col % LCD.COL;
 8001d4c:	4b0f      	ldr	r3, [pc, #60]	; (8001d8c <CLCD_PrintCharBuffer+0x68>)
 8001d4e:	795a      	ldrb	r2, [r3, #5]
 8001d50:	79bb      	ldrb	r3, [r7, #6]
 8001d52:	fbb3 f1f2 	udiv	r1, r3, r2
 8001d56:	fb01 f202 	mul.w	r2, r1, r2
 8001d5a:	1a9b      	subs	r3, r3, r2
 8001d5c:	b2da      	uxtb	r2, r3
 8001d5e:	4b0d      	ldr	r3, [pc, #52]	; (8001d94 <CLCD_PrintCharBuffer+0x70>)
 8001d60:	701a      	strb	r2, [r3, #0]
	Lcd_buffer[currentRow * LCD.COL + currentCol] = c;
 8001d62:	4b0d      	ldr	r3, [pc, #52]	; (8001d98 <CLCD_PrintCharBuffer+0x74>)
 8001d64:	681b      	ldr	r3, [r3, #0]
 8001d66:	4a0a      	ldr	r2, [pc, #40]	; (8001d90 <CLCD_PrintCharBuffer+0x6c>)
 8001d68:	7812      	ldrb	r2, [r2, #0]
 8001d6a:	4611      	mov	r1, r2
 8001d6c:	4a07      	ldr	r2, [pc, #28]	; (8001d8c <CLCD_PrintCharBuffer+0x68>)
 8001d6e:	7952      	ldrb	r2, [r2, #5]
 8001d70:	fb01 f202 	mul.w	r2, r1, r2
 8001d74:	4907      	ldr	r1, [pc, #28]	; (8001d94 <CLCD_PrintCharBuffer+0x70>)
 8001d76:	7809      	ldrb	r1, [r1, #0]
 8001d78:	440a      	add	r2, r1
 8001d7a:	4413      	add	r3, r2
 8001d7c:	797a      	ldrb	r2, [r7, #5]
 8001d7e:	701a      	strb	r2, [r3, #0]
}
 8001d80:	bf00      	nop
 8001d82:	370c      	adds	r7, #12
 8001d84:	46bd      	mov	sp, r7
 8001d86:	bc80      	pop	{r7}
 8001d88:	4770      	bx	lr
 8001d8a:	bf00      	nop
 8001d8c:	200002b4 	.word	0x200002b4
 8001d90:	200002c1 	.word	0x200002c1
 8001d94:	200002c0 	.word	0x200002c0
 8001d98:	200002b0 	.word	0x200002b0

08001d9c <CLCD_PrintStringBuffer>:

void CLCD_PrintStringBuffer(uint8_t row, uint8_t col, char* str){
 8001d9c:	b580      	push	{r7, lr}
 8001d9e:	b082      	sub	sp, #8
 8001da0:	af00      	add	r7, sp, #0
 8001da2:	4603      	mov	r3, r0
 8001da4:	603a      	str	r2, [r7, #0]
 8001da6:	71fb      	strb	r3, [r7, #7]
 8001da8:	460b      	mov	r3, r1
 8001daa:	71bb      	strb	r3, [r7, #6]
	currentRow = row % LCD.ROW;
 8001dac:	4b13      	ldr	r3, [pc, #76]	; (8001dfc <CLCD_PrintStringBuffer+0x60>)
 8001dae:	799a      	ldrb	r2, [r3, #6]
 8001db0:	79fb      	ldrb	r3, [r7, #7]
 8001db2:	fbb3 f1f2 	udiv	r1, r3, r2
 8001db6:	fb01 f202 	mul.w	r2, r1, r2
 8001dba:	1a9b      	subs	r3, r3, r2
 8001dbc:	b2da      	uxtb	r2, r3
 8001dbe:	4b10      	ldr	r3, [pc, #64]	; (8001e00 <CLCD_PrintStringBuffer+0x64>)
 8001dc0:	701a      	strb	r2, [r3, #0]
	currentCol = col % LCD.COL;
 8001dc2:	4b0e      	ldr	r3, [pc, #56]	; (8001dfc <CLCD_PrintStringBuffer+0x60>)
 8001dc4:	795a      	ldrb	r2, [r3, #5]
 8001dc6:	79bb      	ldrb	r3, [r7, #6]
 8001dc8:	fbb3 f1f2 	udiv	r1, r3, r2
 8001dcc:	fb01 f202 	mul.w	r2, r1, r2
 8001dd0:	1a9b      	subs	r3, r3, r2
 8001dd2:	b2da      	uxtb	r2, r3
 8001dd4:	4b0b      	ldr	r3, [pc, #44]	; (8001e04 <CLCD_PrintStringBuffer+0x68>)
 8001dd6:	701a      	strb	r2, [r3, #0]
	while(*str){
 8001dd8:	e006      	b.n	8001de8 <CLCD_PrintStringBuffer+0x4c>
		UpdateCharBuffer(*str++);
 8001dda:	683b      	ldr	r3, [r7, #0]
 8001ddc:	1c5a      	adds	r2, r3, #1
 8001dde:	603a      	str	r2, [r7, #0]
 8001de0:	781b      	ldrb	r3, [r3, #0]
 8001de2:	4618      	mov	r0, r3
 8001de4:	f7ff ff76 	bl	8001cd4 <UpdateCharBuffer>
	while(*str){
 8001de8:	683b      	ldr	r3, [r7, #0]
 8001dea:	781b      	ldrb	r3, [r3, #0]
 8001dec:	2b00      	cmp	r3, #0
 8001dee:	d1f4      	bne.n	8001dda <CLCD_PrintStringBuffer+0x3e>
	}
}
 8001df0:	bf00      	nop
 8001df2:	bf00      	nop
 8001df4:	3708      	adds	r7, #8
 8001df6:	46bd      	mov	sp, r7
 8001df8:	bd80      	pop	{r7, pc}
 8001dfa:	bf00      	nop
 8001dfc:	200002b4 	.word	0x200002b4
 8001e00:	200002c1 	.word	0x200002c1
 8001e04:	200002c0 	.word	0x200002c0

08001e08 <CLCD_PrintNumBuffer>:

void CLCD_PrintNumBuffer(uint8_t row, uint8_t col, int16_t num){
 8001e08:	b580      	push	{r7, lr}
 8001e0a:	b084      	sub	sp, #16
 8001e0c:	af00      	add	r7, sp, #0
 8001e0e:	4603      	mov	r3, r0
 8001e10:	71fb      	strb	r3, [r7, #7]
 8001e12:	460b      	mov	r3, r1
 8001e14:	71bb      	strb	r3, [r7, #6]
 8001e16:	4613      	mov	r3, r2
 8001e18:	80bb      	strh	r3, [r7, #4]
    char flag_num = 0;
 8001e1a:	2300      	movs	r3, #0
 8001e1c:	73fb      	strb	r3, [r7, #15]
    unsigned char i;
    unsigned long power_of_10 = 1000000000;
 8001e1e:	4b30      	ldr	r3, [pc, #192]	; (8001ee0 <CLCD_PrintNumBuffer+0xd8>)
 8001e20:	60bb      	str	r3, [r7, #8]
    currentRow = row % 2;
 8001e22:	79fb      	ldrb	r3, [r7, #7]
 8001e24:	f003 0301 	and.w	r3, r3, #1
 8001e28:	b2da      	uxtb	r2, r3
 8001e2a:	4b2e      	ldr	r3, [pc, #184]	; (8001ee4 <CLCD_PrintNumBuffer+0xdc>)
 8001e2c:	701a      	strb	r2, [r3, #0]
    currentCol = col % 16;
 8001e2e:	79bb      	ldrb	r3, [r7, #6]
 8001e30:	f003 030f 	and.w	r3, r3, #15
 8001e34:	b2da      	uxtb	r2, r3
 8001e36:	4b2c      	ldr	r3, [pc, #176]	; (8001ee8 <CLCD_PrintNumBuffer+0xe0>)
 8001e38:	701a      	strb	r2, [r3, #0]

    if(num < 0) {
 8001e3a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8001e3e:	2b00      	cmp	r3, #0
 8001e40:	da07      	bge.n	8001e52 <CLCD_PrintNumBuffer+0x4a>
        num *= -1;
 8001e42:	88bb      	ldrh	r3, [r7, #4]
 8001e44:	425b      	negs	r3, r3
 8001e46:	b29b      	uxth	r3, r3
 8001e48:	80bb      	strh	r3, [r7, #4]
        UpdateCharBuffer('-');
 8001e4a:	202d      	movs	r0, #45	; 0x2d
 8001e4c:	f7ff ff42 	bl	8001cd4 <UpdateCharBuffer>
 8001e50:	e011      	b.n	8001e76 <CLCD_PrintNumBuffer+0x6e>
    }
    else if(num == 0){
 8001e52:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8001e56:	2b00      	cmp	r3, #0
 8001e58:	d106      	bne.n	8001e68 <CLCD_PrintNumBuffer+0x60>
    	UpdateCharBuffer('0');
 8001e5a:	2030      	movs	r0, #48	; 0x30
 8001e5c:	f7ff ff3a 	bl	8001cd4 <UpdateCharBuffer>
    	UpdateCharBuffer('0');
 8001e60:	2030      	movs	r0, #48	; 0x30
 8001e62:	f7ff ff37 	bl	8001cd4 <UpdateCharBuffer>
//        UpdateCharBuffer(' ');
//        UpdateCharBuffer(' ');
        return;
 8001e66:	e038      	b.n	8001eda <CLCD_PrintNumBuffer+0xd2>
    }

    else if(num < 10){
 8001e68:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8001e6c:	2b09      	cmp	r3, #9
 8001e6e:	dc02      	bgt.n	8001e76 <CLCD_PrintNumBuffer+0x6e>
        UpdateCharBuffer('0');
 8001e70:	2030      	movs	r0, #48	; 0x30
 8001e72:	f7ff ff2f 	bl	8001cd4 <UpdateCharBuffer>
//        UpdateCharBuffer(num + '0');
    }

    for(i = 10; i > 0; i--){
 8001e76:	230a      	movs	r3, #10
 8001e78:	73bb      	strb	r3, [r7, #14]
 8001e7a:	e02b      	b.n	8001ed4 <CLCD_PrintNumBuffer+0xcc>
        if( (num / power_of_10) != 0){
 8001e7c:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8001e80:	68ba      	ldr	r2, [r7, #8]
 8001e82:	429a      	cmp	r2, r3
 8001e84:	d80d      	bhi.n	8001ea2 <CLCD_PrintNumBuffer+0x9a>
            flag_num = 1;
 8001e86:	2301      	movs	r3, #1
 8001e88:	73fb      	strb	r3, [r7, #15]
            UpdateCharBuffer(num / power_of_10 + '0');
 8001e8a:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8001e8e:	68bb      	ldr	r3, [r7, #8]
 8001e90:	fbb2 f3f3 	udiv	r3, r2, r3
 8001e94:	b2db      	uxtb	r3, r3
 8001e96:	3330      	adds	r3, #48	; 0x30
 8001e98:	b2db      	uxtb	r3, r3
 8001e9a:	4618      	mov	r0, r3
 8001e9c:	f7ff ff1a 	bl	8001cd4 <UpdateCharBuffer>
 8001ea0:	e005      	b.n	8001eae <CLCD_PrintNumBuffer+0xa6>
        }
        else{
            if(flag_num != 0) UpdateCharBuffer('0');
 8001ea2:	7bfb      	ldrb	r3, [r7, #15]
 8001ea4:	2b00      	cmp	r3, #0
 8001ea6:	d002      	beq.n	8001eae <CLCD_PrintNumBuffer+0xa6>
 8001ea8:	2030      	movs	r0, #48	; 0x30
 8001eaa:	f7ff ff13 	bl	8001cd4 <UpdateCharBuffer>
        }
        num %= power_of_10;
 8001eae:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8001eb2:	68ba      	ldr	r2, [r7, #8]
 8001eb4:	fbb3 f2f2 	udiv	r2, r3, r2
 8001eb8:	68b9      	ldr	r1, [r7, #8]
 8001eba:	fb01 f202 	mul.w	r2, r1, r2
 8001ebe:	1a9b      	subs	r3, r3, r2
 8001ec0:	80bb      	strh	r3, [r7, #4]
        power_of_10 /= 10;
 8001ec2:	68bb      	ldr	r3, [r7, #8]
 8001ec4:	4a09      	ldr	r2, [pc, #36]	; (8001eec <CLCD_PrintNumBuffer+0xe4>)
 8001ec6:	fba2 2303 	umull	r2, r3, r2, r3
 8001eca:	08db      	lsrs	r3, r3, #3
 8001ecc:	60bb      	str	r3, [r7, #8]
    for(i = 10; i > 0; i--){
 8001ece:	7bbb      	ldrb	r3, [r7, #14]
 8001ed0:	3b01      	subs	r3, #1
 8001ed2:	73bb      	strb	r3, [r7, #14]
 8001ed4:	7bbb      	ldrb	r3, [r7, #14]
 8001ed6:	2b00      	cmp	r3, #0
 8001ed8:	d1d0      	bne.n	8001e7c <CLCD_PrintNumBuffer+0x74>
    }

//    UpdateCharBuffer(' ');
//    UpdateCharBuffer(' ');
}
 8001eda:	3710      	adds	r7, #16
 8001edc:	46bd      	mov	sp, r7
 8001ede:	bd80      	pop	{r7, pc}
 8001ee0:	3b9aca00 	.word	0x3b9aca00
 8001ee4:	200002c1 	.word	0x200002c1
 8001ee8:	200002c0 	.word	0x200002c0
 8001eec:	cccccccd 	.word	0xcccccccd

08001ef0 <CLCD_PrintFloatBuffer>:

void CLCD_PrintFloatBuffer(uint8_t row, uint8_t col, float f){
 8001ef0:	b580      	push	{r7, lr}
 8001ef2:	b084      	sub	sp, #16
 8001ef4:	af00      	add	r7, sp, #0
 8001ef6:	4603      	mov	r3, r0
 8001ef8:	603a      	str	r2, [r7, #0]
 8001efa:	71fb      	strb	r3, [r7, #7]
 8001efc:	460b      	mov	r3, r1
 8001efe:	71bb      	strb	r3, [r7, #6]
	uint8_t integer_part, decimal_part;

	if(f >= 100) return;
 8001f00:	492f      	ldr	r1, [pc, #188]	; (8001fc0 <CLCD_PrintFloatBuffer+0xd0>)
 8001f02:	6838      	ldr	r0, [r7, #0]
 8001f04:	f7ff f836 	bl	8000f74 <__aeabi_fcmpge>
 8001f08:	4603      	mov	r3, r0
 8001f0a:	2b00      	cmp	r3, #0
 8001f0c:	d153      	bne.n	8001fb6 <CLCD_PrintFloatBuffer+0xc6>

    currentRow = row % 2;
 8001f0e:	79fb      	ldrb	r3, [r7, #7]
 8001f10:	f003 0301 	and.w	r3, r3, #1
 8001f14:	b2da      	uxtb	r2, r3
 8001f16:	4b2b      	ldr	r3, [pc, #172]	; (8001fc4 <CLCD_PrintFloatBuffer+0xd4>)
 8001f18:	701a      	strb	r2, [r3, #0]
    currentCol = col % 16;
 8001f1a:	79bb      	ldrb	r3, [r7, #6]
 8001f1c:	f003 030f 	and.w	r3, r3, #15
 8001f20:	b2da      	uxtb	r2, r3
 8001f22:	4b29      	ldr	r3, [pc, #164]	; (8001fc8 <CLCD_PrintFloatBuffer+0xd8>)
 8001f24:	701a      	strb	r2, [r3, #0]

    integer_part = (uint8_t) f;
 8001f26:	6838      	ldr	r0, [r7, #0]
 8001f28:	f7ff f84e 	bl	8000fc8 <__aeabi_f2uiz>
 8001f2c:	4603      	mov	r3, r0
 8001f2e:	73fb      	strb	r3, [r7, #15]
    decimal_part = (uint8_t) ((f - integer_part)*10);
 8001f30:	7bfb      	ldrb	r3, [r7, #15]
 8001f32:	4618      	mov	r0, r3
 8001f34:	f7fe ff68 	bl	8000e08 <__aeabi_i2f>
 8001f38:	4603      	mov	r3, r0
 8001f3a:	4619      	mov	r1, r3
 8001f3c:	6838      	ldr	r0, [r7, #0]
 8001f3e:	f7fe fead 	bl	8000c9c <__aeabi_fsub>
 8001f42:	4603      	mov	r3, r0
 8001f44:	4921      	ldr	r1, [pc, #132]	; (8001fcc <CLCD_PrintFloatBuffer+0xdc>)
 8001f46:	4618      	mov	r0, r3
 8001f48:	f7fe f914 	bl	8000174 <__aeabi_fmul>
 8001f4c:	4603      	mov	r3, r0
 8001f4e:	4618      	mov	r0, r3
 8001f50:	f7ff f83a 	bl	8000fc8 <__aeabi_f2uiz>
 8001f54:	4603      	mov	r3, r0
 8001f56:	73bb      	strb	r3, [r7, #14]

    UpdateCharBuffer(integer_part / 10 + '0');
 8001f58:	7bfb      	ldrb	r3, [r7, #15]
 8001f5a:	4a1d      	ldr	r2, [pc, #116]	; (8001fd0 <CLCD_PrintFloatBuffer+0xe0>)
 8001f5c:	fba2 2303 	umull	r2, r3, r2, r3
 8001f60:	08db      	lsrs	r3, r3, #3
 8001f62:	b2db      	uxtb	r3, r3
 8001f64:	3330      	adds	r3, #48	; 0x30
 8001f66:	b2db      	uxtb	r3, r3
 8001f68:	4618      	mov	r0, r3
 8001f6a:	f7ff feb3 	bl	8001cd4 <UpdateCharBuffer>
    UpdateCharBuffer(integer_part % 10 + '0');
 8001f6e:	7bfa      	ldrb	r2, [r7, #15]
 8001f70:	4b17      	ldr	r3, [pc, #92]	; (8001fd0 <CLCD_PrintFloatBuffer+0xe0>)
 8001f72:	fba3 1302 	umull	r1, r3, r3, r2
 8001f76:	08d9      	lsrs	r1, r3, #3
 8001f78:	460b      	mov	r3, r1
 8001f7a:	009b      	lsls	r3, r3, #2
 8001f7c:	440b      	add	r3, r1
 8001f7e:	005b      	lsls	r3, r3, #1
 8001f80:	1ad3      	subs	r3, r2, r3
 8001f82:	b2db      	uxtb	r3, r3
 8001f84:	3330      	adds	r3, #48	; 0x30
 8001f86:	b2db      	uxtb	r3, r3
 8001f88:	4618      	mov	r0, r3
 8001f8a:	f7ff fea3 	bl	8001cd4 <UpdateCharBuffer>
    UpdateCharBuffer('.');
 8001f8e:	202e      	movs	r0, #46	; 0x2e
 8001f90:	f7ff fea0 	bl	8001cd4 <UpdateCharBuffer>
    UpdateCharBuffer(decimal_part % 10 + '0');
 8001f94:	7bba      	ldrb	r2, [r7, #14]
 8001f96:	4b0e      	ldr	r3, [pc, #56]	; (8001fd0 <CLCD_PrintFloatBuffer+0xe0>)
 8001f98:	fba3 1302 	umull	r1, r3, r3, r2
 8001f9c:	08d9      	lsrs	r1, r3, #3
 8001f9e:	460b      	mov	r3, r1
 8001fa0:	009b      	lsls	r3, r3, #2
 8001fa2:	440b      	add	r3, r1
 8001fa4:	005b      	lsls	r3, r3, #1
 8001fa6:	1ad3      	subs	r3, r2, r3
 8001fa8:	b2db      	uxtb	r3, r3
 8001faa:	3330      	adds	r3, #48	; 0x30
 8001fac:	b2db      	uxtb	r3, r3
 8001fae:	4618      	mov	r0, r3
 8001fb0:	f7ff fe90 	bl	8001cd4 <UpdateCharBuffer>
 8001fb4:	e000      	b.n	8001fb8 <CLCD_PrintFloatBuffer+0xc8>
	if(f >= 100) return;
 8001fb6:	bf00      	nop
}
 8001fb8:	3710      	adds	r7, #16
 8001fba:	46bd      	mov	sp, r7
 8001fbc:	bd80      	pop	{r7, pc}
 8001fbe:	bf00      	nop
 8001fc0:	42c80000 	.word	0x42c80000
 8001fc4:	200002c1 	.word	0x200002c1
 8001fc8:	200002c0 	.word	0x200002c0
 8001fcc:	41200000 	.word	0x41200000
 8001fd0:	cccccccd 	.word	0xcccccccd

08001fd4 <CLCD_DisplayScreen>:
	uint8_t i;

	for(i = 0; i < LCD.ROW * LCD.COL; i++) Lcd_buffer[i] = ' ';
}

void CLCD_DisplayScreen(void){
 8001fd4:	b580      	push	{r7, lr}
 8001fd6:	b082      	sub	sp, #8
 8001fd8:	af00      	add	r7, sp, #0
	uint8_t i, j;

	for(i = 0; i < LCD.ROW; i++){
 8001fda:	2300      	movs	r3, #0
 8001fdc:	71fb      	strb	r3, [r7, #7]
 8001fde:	e021      	b.n	8002024 <CLCD_DisplayScreen+0x50>
		SetCursor(i, 0);
 8001fe0:	79fb      	ldrb	r3, [r7, #7]
 8001fe2:	2100      	movs	r1, #0
 8001fe4:	4618      	mov	r0, r3
 8001fe6:	f7ff fe2d 	bl	8001c44 <SetCursor>
		for(j = 0; j < LCD.COL; j++){
 8001fea:	2300      	movs	r3, #0
 8001fec:	71bb      	strb	r3, [r7, #6]
 8001fee:	e011      	b.n	8002014 <CLCD_DisplayScreen+0x40>
			WriteI2C(Lcd_buffer[i * LCD.COL + j], LCD_DATA);
 8001ff0:	4b11      	ldr	r3, [pc, #68]	; (8002038 <CLCD_DisplayScreen+0x64>)
 8001ff2:	681b      	ldr	r3, [r3, #0]
 8001ff4:	79fa      	ldrb	r2, [r7, #7]
 8001ff6:	4911      	ldr	r1, [pc, #68]	; (800203c <CLCD_DisplayScreen+0x68>)
 8001ff8:	7949      	ldrb	r1, [r1, #5]
 8001ffa:	fb02 f101 	mul.w	r1, r2, r1
 8001ffe:	79ba      	ldrb	r2, [r7, #6]
 8002000:	440a      	add	r2, r1
 8002002:	4413      	add	r3, r2
 8002004:	781b      	ldrb	r3, [r3, #0]
 8002006:	2101      	movs	r1, #1
 8002008:	4618      	mov	r0, r3
 800200a:	f7ff fd2b 	bl	8001a64 <WriteI2C>
		for(j = 0; j < LCD.COL; j++){
 800200e:	79bb      	ldrb	r3, [r7, #6]
 8002010:	3301      	adds	r3, #1
 8002012:	71bb      	strb	r3, [r7, #6]
 8002014:	4b09      	ldr	r3, [pc, #36]	; (800203c <CLCD_DisplayScreen+0x68>)
 8002016:	795b      	ldrb	r3, [r3, #5]
 8002018:	79ba      	ldrb	r2, [r7, #6]
 800201a:	429a      	cmp	r2, r3
 800201c:	d3e8      	bcc.n	8001ff0 <CLCD_DisplayScreen+0x1c>
	for(i = 0; i < LCD.ROW; i++){
 800201e:	79fb      	ldrb	r3, [r7, #7]
 8002020:	3301      	adds	r3, #1
 8002022:	71fb      	strb	r3, [r7, #7]
 8002024:	4b05      	ldr	r3, [pc, #20]	; (800203c <CLCD_DisplayScreen+0x68>)
 8002026:	799b      	ldrb	r3, [r3, #6]
 8002028:	79fa      	ldrb	r2, [r7, #7]
 800202a:	429a      	cmp	r2, r3
 800202c:	d3d8      	bcc.n	8001fe0 <CLCD_DisplayScreen+0xc>
		}
	}
}
 800202e:	bf00      	nop
 8002030:	bf00      	nop
 8002032:	3708      	adds	r7, #8
 8002034:	46bd      	mov	sp, r7
 8002036:	bd80      	pop	{r7, pc}
 8002038:	200002b0 	.word	0x200002b0
 800203c:	200002b4 	.word	0x200002b4

08002040 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002040:	b580      	push	{r7, lr}
 8002042:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002044:	f000 fdc2 	bl	8002bcc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002048:	f000 f86a 	bl	8002120 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800204c:	f000 f972 	bl	8002334 <MX_GPIO_Init>
  MX_I2C1_Init();
 8002050:	f000 f8a2 	bl	8002198 <MX_I2C1_Init>
  MX_USART1_UART_Init();
 8002054:	f000 f91a 	bl	800228c <MX_USART1_UART_Init>
  MX_TIM2_Init();
 8002058:	f000 f8cc 	bl	80021f4 <MX_TIM2_Init>
  MX_USART2_UART_Init();
 800205c:	f000 f940 	bl	80022e0 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
//  IN_Init();
  CLCD_Init(&hi2c1, 0x3F, 2, 16);
 8002060:	2310      	movs	r3, #16
 8002062:	2202      	movs	r2, #2
 8002064:	213f      	movs	r1, #63	; 0x3f
 8002066:	4825      	ldr	r0, [pc, #148]	; (80020fc <main+0xbc>)
 8002068:	f7ff fd46 	bl	8001af8 <CLCD_Init>

  UART_Init(&huart1, &huart2);
 800206c:	4924      	ldr	r1, [pc, #144]	; (8002100 <main+0xc0>)
 800206e:	4825      	ldr	r0, [pc, #148]	; (8002104 <main+0xc4>)
 8002070:	f000 fcfe 	bl	8002a70 <UART_Init>
  FSM_Init();
 8002074:	f7ff f8ae 	bl	80011d4 <FSM_Init>

  TM_Init(&htim2);
 8002078:	4823      	ldr	r0, [pc, #140]	; (8002108 <main+0xc8>)
 800207a:	f000 fc25 	bl	80028c8 <TM_Init>
  TM_SetTime(50);
 800207e:	2032      	movs	r0, #50	; 0x32
 8002080:	f000 fc42 	bl	8002908 <TM_SetTime>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  if(TM_IsFlag()){
 8002084:	f000 fc62 	bl	800294c <TM_IsFlag>
 8002088:	4603      	mov	r3, r0
 800208a:	2b00      	cmp	r3, #0
 800208c:	d0fa      	beq.n	8002084 <main+0x44>
		  _counter_time_elapsed += 1;
 800208e:	4b1f      	ldr	r3, [pc, #124]	; (800210c <main+0xcc>)
 8002090:	881b      	ldrh	r3, [r3, #0]
 8002092:	3301      	adds	r3, #1
 8002094:	b29a      	uxth	r2, r3
 8002096:	4b1d      	ldr	r3, [pc, #116]	; (800210c <main+0xcc>)
 8002098:	801a      	strh	r2, [r3, #0]

		  IN_ReadButton();
 800209a:	f7ff fc51 	bl	8001940 <IN_ReadButton>

		  if(_time_screen >= 5) _time_screen -= 5;
 800209e:	4b1c      	ldr	r3, [pc, #112]	; (8002110 <main+0xd0>)
 80020a0:	881b      	ldrh	r3, [r3, #0]
 80020a2:	2b04      	cmp	r3, #4
 80020a4:	d905      	bls.n	80020b2 <main+0x72>
 80020a6:	4b1a      	ldr	r3, [pc, #104]	; (8002110 <main+0xd0>)
 80020a8:	881b      	ldrh	r3, [r3, #0]
 80020aa:	3b05      	subs	r3, #5
 80020ac:	b29a      	uxth	r2, r3
 80020ae:	4b18      	ldr	r3, [pc, #96]	; (8002110 <main+0xd0>)
 80020b0:	801a      	strh	r2, [r3, #0]
		  if(_time_read_data >= 5) _time_read_data -= 5;
 80020b2:	4b18      	ldr	r3, [pc, #96]	; (8002114 <main+0xd4>)
 80020b4:	881b      	ldrh	r3, [r3, #0]
 80020b6:	2b04      	cmp	r3, #4
 80020b8:	d905      	bls.n	80020c6 <main+0x86>
 80020ba:	4b16      	ldr	r3, [pc, #88]	; (8002114 <main+0xd4>)
 80020bc:	881b      	ldrh	r3, [r3, #0]
 80020be:	3b05      	subs	r3, #5
 80020c0:	b29a      	uxth	r2, r3
 80020c2:	4b14      	ldr	r3, [pc, #80]	; (8002114 <main+0xd4>)
 80020c4:	801a      	strh	r2, [r3, #0]

		  FSM_DataTransfer();
 80020c6:	f7ff fbf3 	bl	80018b0 <FSM_DataTransfer>
		  FSM_LcdDisplay();
 80020ca:	f7ff f89d 	bl	8001208 <FSM_LcdDisplay>

		  if(_counter_time_elapsed % 10 == 0) HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 80020ce:	4b0f      	ldr	r3, [pc, #60]	; (800210c <main+0xcc>)
 80020d0:	881a      	ldrh	r2, [r3, #0]
 80020d2:	4b11      	ldr	r3, [pc, #68]	; (8002118 <main+0xd8>)
 80020d4:	fba3 1302 	umull	r1, r3, r3, r2
 80020d8:	08d9      	lsrs	r1, r3, #3
 80020da:	460b      	mov	r3, r1
 80020dc:	009b      	lsls	r3, r3, #2
 80020de:	440b      	add	r3, r1
 80020e0:	005b      	lsls	r3, r3, #1
 80020e2:	1ad3      	subs	r3, r2, r3
 80020e4:	b29b      	uxth	r3, r3
 80020e6:	2b00      	cmp	r3, #0
 80020e8:	d104      	bne.n	80020f4 <main+0xb4>
 80020ea:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80020ee:	480b      	ldr	r0, [pc, #44]	; (800211c <main+0xdc>)
 80020f0:	f001 f963 	bl	80033ba <HAL_GPIO_TogglePin>

		  CLCD_DisplayScreen();
 80020f4:	f7ff ff6e 	bl	8001fd4 <CLCD_DisplayScreen>
	  if(TM_IsFlag()){
 80020f8:	e7c4      	b.n	8002084 <main+0x44>
 80020fa:	bf00      	nop
 80020fc:	200002c4 	.word	0x200002c4
 8002100:	200003a4 	.word	0x200003a4
 8002104:	20000360 	.word	0x20000360
 8002108:	20000318 	.word	0x20000318
 800210c:	200002a4 	.word	0x200002a4
 8002110:	200002a0 	.word	0x200002a0
 8002114:	200002a2 	.word	0x200002a2
 8002118:	cccccccd 	.word	0xcccccccd
 800211c:	40011000 	.word	0x40011000

08002120 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002120:	b580      	push	{r7, lr}
 8002122:	b090      	sub	sp, #64	; 0x40
 8002124:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002126:	f107 0318 	add.w	r3, r7, #24
 800212a:	2228      	movs	r2, #40	; 0x28
 800212c:	2100      	movs	r1, #0
 800212e:	4618      	mov	r0, r3
 8002130:	f003 fb34 	bl	800579c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002134:	1d3b      	adds	r3, r7, #4
 8002136:	2200      	movs	r2, #0
 8002138:	601a      	str	r2, [r3, #0]
 800213a:	605a      	str	r2, [r3, #4]
 800213c:	609a      	str	r2, [r3, #8]
 800213e:	60da      	str	r2, [r3, #12]
 8002140:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002142:	2302      	movs	r3, #2
 8002144:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002146:	2301      	movs	r3, #1
 8002148:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800214a:	2310      	movs	r3, #16
 800214c:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 800214e:	2300      	movs	r3, #0
 8002150:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002152:	f107 0318 	add.w	r3, r7, #24
 8002156:	4618      	mov	r0, r3
 8002158:	f001 fd92 	bl	8003c80 <HAL_RCC_OscConfig>
 800215c:	4603      	mov	r3, r0
 800215e:	2b00      	cmp	r3, #0
 8002160:	d001      	beq.n	8002166 <SystemClock_Config+0x46>
  {
    Error_Handler();
 8002162:	f000 f941 	bl	80023e8 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002166:	230f      	movs	r3, #15
 8002168:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 800216a:	2300      	movs	r3, #0
 800216c:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800216e:	2300      	movs	r3, #0
 8002170:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8002172:	2300      	movs	r3, #0
 8002174:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8002176:	2300      	movs	r3, #0
 8002178:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 800217a:	1d3b      	adds	r3, r7, #4
 800217c:	2100      	movs	r1, #0
 800217e:	4618      	mov	r0, r3
 8002180:	f002 f800 	bl	8004184 <HAL_RCC_ClockConfig>
 8002184:	4603      	mov	r3, r0
 8002186:	2b00      	cmp	r3, #0
 8002188:	d001      	beq.n	800218e <SystemClock_Config+0x6e>
  {
    Error_Handler();
 800218a:	f000 f92d 	bl	80023e8 <Error_Handler>
  }
}
 800218e:	bf00      	nop
 8002190:	3740      	adds	r7, #64	; 0x40
 8002192:	46bd      	mov	sp, r7
 8002194:	bd80      	pop	{r7, pc}
	...

08002198 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8002198:	b580      	push	{r7, lr}
 800219a:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 800219c:	4b12      	ldr	r3, [pc, #72]	; (80021e8 <MX_I2C1_Init+0x50>)
 800219e:	4a13      	ldr	r2, [pc, #76]	; (80021ec <MX_I2C1_Init+0x54>)
 80021a0:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 80021a2:	4b11      	ldr	r3, [pc, #68]	; (80021e8 <MX_I2C1_Init+0x50>)
 80021a4:	4a12      	ldr	r2, [pc, #72]	; (80021f0 <MX_I2C1_Init+0x58>)
 80021a6:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80021a8:	4b0f      	ldr	r3, [pc, #60]	; (80021e8 <MX_I2C1_Init+0x50>)
 80021aa:	2200      	movs	r2, #0
 80021ac:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 80021ae:	4b0e      	ldr	r3, [pc, #56]	; (80021e8 <MX_I2C1_Init+0x50>)
 80021b0:	2200      	movs	r2, #0
 80021b2:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80021b4:	4b0c      	ldr	r3, [pc, #48]	; (80021e8 <MX_I2C1_Init+0x50>)
 80021b6:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80021ba:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80021bc:	4b0a      	ldr	r3, [pc, #40]	; (80021e8 <MX_I2C1_Init+0x50>)
 80021be:	2200      	movs	r2, #0
 80021c0:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 80021c2:	4b09      	ldr	r3, [pc, #36]	; (80021e8 <MX_I2C1_Init+0x50>)
 80021c4:	2200      	movs	r2, #0
 80021c6:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80021c8:	4b07      	ldr	r3, [pc, #28]	; (80021e8 <MX_I2C1_Init+0x50>)
 80021ca:	2200      	movs	r2, #0
 80021cc:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80021ce:	4b06      	ldr	r3, [pc, #24]	; (80021e8 <MX_I2C1_Init+0x50>)
 80021d0:	2200      	movs	r2, #0
 80021d2:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80021d4:	4804      	ldr	r0, [pc, #16]	; (80021e8 <MX_I2C1_Init+0x50>)
 80021d6:	f001 f909 	bl	80033ec <HAL_I2C_Init>
 80021da:	4603      	mov	r3, r0
 80021dc:	2b00      	cmp	r3, #0
 80021de:	d001      	beq.n	80021e4 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 80021e0:	f000 f902 	bl	80023e8 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80021e4:	bf00      	nop
 80021e6:	bd80      	pop	{r7, pc}
 80021e8:	200002c4 	.word	0x200002c4
 80021ec:	40005400 	.word	0x40005400
 80021f0:	000186a0 	.word	0x000186a0

080021f4 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80021f4:	b580      	push	{r7, lr}
 80021f6:	b086      	sub	sp, #24
 80021f8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80021fa:	f107 0308 	add.w	r3, r7, #8
 80021fe:	2200      	movs	r2, #0
 8002200:	601a      	str	r2, [r3, #0]
 8002202:	605a      	str	r2, [r3, #4]
 8002204:	609a      	str	r2, [r3, #8]
 8002206:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002208:	463b      	mov	r3, r7
 800220a:	2200      	movs	r2, #0
 800220c:	601a      	str	r2, [r3, #0]
 800220e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8002210:	4b1d      	ldr	r3, [pc, #116]	; (8002288 <MX_TIM2_Init+0x94>)
 8002212:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002216:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7999;
 8002218:	4b1b      	ldr	r3, [pc, #108]	; (8002288 <MX_TIM2_Init+0x94>)
 800221a:	f641 723f 	movw	r2, #7999	; 0x1f3f
 800221e:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002220:	4b19      	ldr	r3, [pc, #100]	; (8002288 <MX_TIM2_Init+0x94>)
 8002222:	2200      	movs	r2, #0
 8002224:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 49;
 8002226:	4b18      	ldr	r3, [pc, #96]	; (8002288 <MX_TIM2_Init+0x94>)
 8002228:	2231      	movs	r2, #49	; 0x31
 800222a:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800222c:	4b16      	ldr	r3, [pc, #88]	; (8002288 <MX_TIM2_Init+0x94>)
 800222e:	2200      	movs	r2, #0
 8002230:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8002232:	4b15      	ldr	r3, [pc, #84]	; (8002288 <MX_TIM2_Init+0x94>)
 8002234:	2280      	movs	r2, #128	; 0x80
 8002236:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8002238:	4813      	ldr	r0, [pc, #76]	; (8002288 <MX_TIM2_Init+0x94>)
 800223a:	f002 f93b 	bl	80044b4 <HAL_TIM_Base_Init>
 800223e:	4603      	mov	r3, r0
 8002240:	2b00      	cmp	r3, #0
 8002242:	d001      	beq.n	8002248 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8002244:	f000 f8d0 	bl	80023e8 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002248:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800224c:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800224e:	f107 0308 	add.w	r3, r7, #8
 8002252:	4619      	mov	r1, r3
 8002254:	480c      	ldr	r0, [pc, #48]	; (8002288 <MX_TIM2_Init+0x94>)
 8002256:	f002 fad7 	bl	8004808 <HAL_TIM_ConfigClockSource>
 800225a:	4603      	mov	r3, r0
 800225c:	2b00      	cmp	r3, #0
 800225e:	d001      	beq.n	8002264 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8002260:	f000 f8c2 	bl	80023e8 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002264:	2300      	movs	r3, #0
 8002266:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002268:	2300      	movs	r3, #0
 800226a:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800226c:	463b      	mov	r3, r7
 800226e:	4619      	mov	r1, r3
 8002270:	4805      	ldr	r0, [pc, #20]	; (8002288 <MX_TIM2_Init+0x94>)
 8002272:	f002 fca9 	bl	8004bc8 <HAL_TIMEx_MasterConfigSynchronization>
 8002276:	4603      	mov	r3, r0
 8002278:	2b00      	cmp	r3, #0
 800227a:	d001      	beq.n	8002280 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 800227c:	f000 f8b4 	bl	80023e8 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8002280:	bf00      	nop
 8002282:	3718      	adds	r7, #24
 8002284:	46bd      	mov	sp, r7
 8002286:	bd80      	pop	{r7, pc}
 8002288:	20000318 	.word	0x20000318

0800228c <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 800228c:	b580      	push	{r7, lr}
 800228e:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8002290:	4b11      	ldr	r3, [pc, #68]	; (80022d8 <MX_USART1_UART_Init+0x4c>)
 8002292:	4a12      	ldr	r2, [pc, #72]	; (80022dc <MX_USART1_UART_Init+0x50>)
 8002294:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 8002296:	4b10      	ldr	r3, [pc, #64]	; (80022d8 <MX_USART1_UART_Init+0x4c>)
 8002298:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 800229c:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800229e:	4b0e      	ldr	r3, [pc, #56]	; (80022d8 <MX_USART1_UART_Init+0x4c>)
 80022a0:	2200      	movs	r2, #0
 80022a2:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80022a4:	4b0c      	ldr	r3, [pc, #48]	; (80022d8 <MX_USART1_UART_Init+0x4c>)
 80022a6:	2200      	movs	r2, #0
 80022a8:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80022aa:	4b0b      	ldr	r3, [pc, #44]	; (80022d8 <MX_USART1_UART_Init+0x4c>)
 80022ac:	2200      	movs	r2, #0
 80022ae:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80022b0:	4b09      	ldr	r3, [pc, #36]	; (80022d8 <MX_USART1_UART_Init+0x4c>)
 80022b2:	220c      	movs	r2, #12
 80022b4:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80022b6:	4b08      	ldr	r3, [pc, #32]	; (80022d8 <MX_USART1_UART_Init+0x4c>)
 80022b8:	2200      	movs	r2, #0
 80022ba:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80022bc:	4b06      	ldr	r3, [pc, #24]	; (80022d8 <MX_USART1_UART_Init+0x4c>)
 80022be:	2200      	movs	r2, #0
 80022c0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80022c2:	4805      	ldr	r0, [pc, #20]	; (80022d8 <MX_USART1_UART_Init+0x4c>)
 80022c4:	f002 fcf0 	bl	8004ca8 <HAL_UART_Init>
 80022c8:	4603      	mov	r3, r0
 80022ca:	2b00      	cmp	r3, #0
 80022cc:	d001      	beq.n	80022d2 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 80022ce:	f000 f88b 	bl	80023e8 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80022d2:	bf00      	nop
 80022d4:	bd80      	pop	{r7, pc}
 80022d6:	bf00      	nop
 80022d8:	20000360 	.word	0x20000360
 80022dc:	40013800 	.word	0x40013800

080022e0 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80022e0:	b580      	push	{r7, lr}
 80022e2:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80022e4:	4b11      	ldr	r3, [pc, #68]	; (800232c <MX_USART2_UART_Init+0x4c>)
 80022e6:	4a12      	ldr	r2, [pc, #72]	; (8002330 <MX_USART2_UART_Init+0x50>)
 80022e8:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 80022ea:	4b10      	ldr	r3, [pc, #64]	; (800232c <MX_USART2_UART_Init+0x4c>)
 80022ec:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80022f0:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80022f2:	4b0e      	ldr	r3, [pc, #56]	; (800232c <MX_USART2_UART_Init+0x4c>)
 80022f4:	2200      	movs	r2, #0
 80022f6:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80022f8:	4b0c      	ldr	r3, [pc, #48]	; (800232c <MX_USART2_UART_Init+0x4c>)
 80022fa:	2200      	movs	r2, #0
 80022fc:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80022fe:	4b0b      	ldr	r3, [pc, #44]	; (800232c <MX_USART2_UART_Init+0x4c>)
 8002300:	2200      	movs	r2, #0
 8002302:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002304:	4b09      	ldr	r3, [pc, #36]	; (800232c <MX_USART2_UART_Init+0x4c>)
 8002306:	220c      	movs	r2, #12
 8002308:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800230a:	4b08      	ldr	r3, [pc, #32]	; (800232c <MX_USART2_UART_Init+0x4c>)
 800230c:	2200      	movs	r2, #0
 800230e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002310:	4b06      	ldr	r3, [pc, #24]	; (800232c <MX_USART2_UART_Init+0x4c>)
 8002312:	2200      	movs	r2, #0
 8002314:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002316:	4805      	ldr	r0, [pc, #20]	; (800232c <MX_USART2_UART_Init+0x4c>)
 8002318:	f002 fcc6 	bl	8004ca8 <HAL_UART_Init>
 800231c:	4603      	mov	r3, r0
 800231e:	2b00      	cmp	r3, #0
 8002320:	d001      	beq.n	8002326 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8002322:	f000 f861 	bl	80023e8 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8002326:	bf00      	nop
 8002328:	bd80      	pop	{r7, pc}
 800232a:	bf00      	nop
 800232c:	200003a4 	.word	0x200003a4
 8002330:	40004400 	.word	0x40004400

08002334 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002334:	b580      	push	{r7, lr}
 8002336:	b088      	sub	sp, #32
 8002338:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800233a:	f107 0310 	add.w	r3, r7, #16
 800233e:	2200      	movs	r2, #0
 8002340:	601a      	str	r2, [r3, #0]
 8002342:	605a      	str	r2, [r3, #4]
 8002344:	609a      	str	r2, [r3, #8]
 8002346:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002348:	4b24      	ldr	r3, [pc, #144]	; (80023dc <MX_GPIO_Init+0xa8>)
 800234a:	699b      	ldr	r3, [r3, #24]
 800234c:	4a23      	ldr	r2, [pc, #140]	; (80023dc <MX_GPIO_Init+0xa8>)
 800234e:	f043 0310 	orr.w	r3, r3, #16
 8002352:	6193      	str	r3, [r2, #24]
 8002354:	4b21      	ldr	r3, [pc, #132]	; (80023dc <MX_GPIO_Init+0xa8>)
 8002356:	699b      	ldr	r3, [r3, #24]
 8002358:	f003 0310 	and.w	r3, r3, #16
 800235c:	60fb      	str	r3, [r7, #12]
 800235e:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002360:	4b1e      	ldr	r3, [pc, #120]	; (80023dc <MX_GPIO_Init+0xa8>)
 8002362:	699b      	ldr	r3, [r3, #24]
 8002364:	4a1d      	ldr	r2, [pc, #116]	; (80023dc <MX_GPIO_Init+0xa8>)
 8002366:	f043 0304 	orr.w	r3, r3, #4
 800236a:	6193      	str	r3, [r2, #24]
 800236c:	4b1b      	ldr	r3, [pc, #108]	; (80023dc <MX_GPIO_Init+0xa8>)
 800236e:	699b      	ldr	r3, [r3, #24]
 8002370:	f003 0304 	and.w	r3, r3, #4
 8002374:	60bb      	str	r3, [r7, #8]
 8002376:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002378:	4b18      	ldr	r3, [pc, #96]	; (80023dc <MX_GPIO_Init+0xa8>)
 800237a:	699b      	ldr	r3, [r3, #24]
 800237c:	4a17      	ldr	r2, [pc, #92]	; (80023dc <MX_GPIO_Init+0xa8>)
 800237e:	f043 0308 	orr.w	r3, r3, #8
 8002382:	6193      	str	r3, [r2, #24]
 8002384:	4b15      	ldr	r3, [pc, #84]	; (80023dc <MX_GPIO_Init+0xa8>)
 8002386:	699b      	ldr	r3, [r3, #24]
 8002388:	f003 0308 	and.w	r3, r3, #8
 800238c:	607b      	str	r3, [r7, #4]
 800238e:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 8002390:	2200      	movs	r2, #0
 8002392:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002396:	4812      	ldr	r0, [pc, #72]	; (80023e0 <MX_GPIO_Init+0xac>)
 8002398:	f000 fff7 	bl	800338a <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_Pin */
  GPIO_InitStruct.Pin = LED_Pin;
 800239c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80023a0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80023a2:	2301      	movs	r3, #1
 80023a4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80023a6:	2301      	movs	r3, #1
 80023a8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80023aa:	2302      	movs	r3, #2
 80023ac:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 80023ae:	f107 0310 	add.w	r3, r7, #16
 80023b2:	4619      	mov	r1, r3
 80023b4:	480a      	ldr	r0, [pc, #40]	; (80023e0 <MX_GPIO_Init+0xac>)
 80023b6:	f000 fe4d 	bl	8003054 <HAL_GPIO_Init>

  /*Configure GPIO pin : BT0_Pin */
  GPIO_InitStruct.Pin = BT0_Pin;
 80023ba:	2320      	movs	r3, #32
 80023bc:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80023be:	2300      	movs	r3, #0
 80023c0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80023c2:	2301      	movs	r3, #1
 80023c4:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(BT0_GPIO_Port, &GPIO_InitStruct);
 80023c6:	f107 0310 	add.w	r3, r7, #16
 80023ca:	4619      	mov	r1, r3
 80023cc:	4805      	ldr	r0, [pc, #20]	; (80023e4 <MX_GPIO_Init+0xb0>)
 80023ce:	f000 fe41 	bl	8003054 <HAL_GPIO_Init>

}
 80023d2:	bf00      	nop
 80023d4:	3720      	adds	r7, #32
 80023d6:	46bd      	mov	sp, r7
 80023d8:	bd80      	pop	{r7, pc}
 80023da:	bf00      	nop
 80023dc:	40021000 	.word	0x40021000
 80023e0:	40011000 	.word	0x40011000
 80023e4:	40010800 	.word	0x40010800

080023e8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80023e8:	b480      	push	{r7}
 80023ea:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80023ec:	b672      	cpsid	i
}
 80023ee:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80023f0:	e7fe      	b.n	80023f0 <Error_Handler+0x8>
	...

080023f4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80023f4:	b480      	push	{r7}
 80023f6:	b085      	sub	sp, #20
 80023f8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 80023fa:	4b15      	ldr	r3, [pc, #84]	; (8002450 <HAL_MspInit+0x5c>)
 80023fc:	699b      	ldr	r3, [r3, #24]
 80023fe:	4a14      	ldr	r2, [pc, #80]	; (8002450 <HAL_MspInit+0x5c>)
 8002400:	f043 0301 	orr.w	r3, r3, #1
 8002404:	6193      	str	r3, [r2, #24]
 8002406:	4b12      	ldr	r3, [pc, #72]	; (8002450 <HAL_MspInit+0x5c>)
 8002408:	699b      	ldr	r3, [r3, #24]
 800240a:	f003 0301 	and.w	r3, r3, #1
 800240e:	60bb      	str	r3, [r7, #8]
 8002410:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002412:	4b0f      	ldr	r3, [pc, #60]	; (8002450 <HAL_MspInit+0x5c>)
 8002414:	69db      	ldr	r3, [r3, #28]
 8002416:	4a0e      	ldr	r2, [pc, #56]	; (8002450 <HAL_MspInit+0x5c>)
 8002418:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800241c:	61d3      	str	r3, [r2, #28]
 800241e:	4b0c      	ldr	r3, [pc, #48]	; (8002450 <HAL_MspInit+0x5c>)
 8002420:	69db      	ldr	r3, [r3, #28]
 8002422:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002426:	607b      	str	r3, [r7, #4]
 8002428:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 800242a:	4b0a      	ldr	r3, [pc, #40]	; (8002454 <HAL_MspInit+0x60>)
 800242c:	685b      	ldr	r3, [r3, #4]
 800242e:	60fb      	str	r3, [r7, #12]
 8002430:	68fb      	ldr	r3, [r7, #12]
 8002432:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8002436:	60fb      	str	r3, [r7, #12]
 8002438:	68fb      	ldr	r3, [r7, #12]
 800243a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800243e:	60fb      	str	r3, [r7, #12]
 8002440:	4a04      	ldr	r2, [pc, #16]	; (8002454 <HAL_MspInit+0x60>)
 8002442:	68fb      	ldr	r3, [r7, #12]
 8002444:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002446:	bf00      	nop
 8002448:	3714      	adds	r7, #20
 800244a:	46bd      	mov	sp, r7
 800244c:	bc80      	pop	{r7}
 800244e:	4770      	bx	lr
 8002450:	40021000 	.word	0x40021000
 8002454:	40010000 	.word	0x40010000

08002458 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002458:	b580      	push	{r7, lr}
 800245a:	b088      	sub	sp, #32
 800245c:	af00      	add	r7, sp, #0
 800245e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002460:	f107 0310 	add.w	r3, r7, #16
 8002464:	2200      	movs	r2, #0
 8002466:	601a      	str	r2, [r3, #0]
 8002468:	605a      	str	r2, [r3, #4]
 800246a:	609a      	str	r2, [r3, #8]
 800246c:	60da      	str	r2, [r3, #12]
  if(hi2c->Instance==I2C1)
 800246e:	687b      	ldr	r3, [r7, #4]
 8002470:	681b      	ldr	r3, [r3, #0]
 8002472:	4a15      	ldr	r2, [pc, #84]	; (80024c8 <HAL_I2C_MspInit+0x70>)
 8002474:	4293      	cmp	r3, r2
 8002476:	d123      	bne.n	80024c0 <HAL_I2C_MspInit+0x68>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002478:	4b14      	ldr	r3, [pc, #80]	; (80024cc <HAL_I2C_MspInit+0x74>)
 800247a:	699b      	ldr	r3, [r3, #24]
 800247c:	4a13      	ldr	r2, [pc, #76]	; (80024cc <HAL_I2C_MspInit+0x74>)
 800247e:	f043 0308 	orr.w	r3, r3, #8
 8002482:	6193      	str	r3, [r2, #24]
 8002484:	4b11      	ldr	r3, [pc, #68]	; (80024cc <HAL_I2C_MspInit+0x74>)
 8002486:	699b      	ldr	r3, [r3, #24]
 8002488:	f003 0308 	and.w	r3, r3, #8
 800248c:	60fb      	str	r3, [r7, #12]
 800248e:	68fb      	ldr	r3, [r7, #12]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002490:	23c0      	movs	r3, #192	; 0xc0
 8002492:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002494:	2312      	movs	r3, #18
 8002496:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002498:	2303      	movs	r3, #3
 800249a:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800249c:	f107 0310 	add.w	r3, r7, #16
 80024a0:	4619      	mov	r1, r3
 80024a2:	480b      	ldr	r0, [pc, #44]	; (80024d0 <HAL_I2C_MspInit+0x78>)
 80024a4:	f000 fdd6 	bl	8003054 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 80024a8:	4b08      	ldr	r3, [pc, #32]	; (80024cc <HAL_I2C_MspInit+0x74>)
 80024aa:	69db      	ldr	r3, [r3, #28]
 80024ac:	4a07      	ldr	r2, [pc, #28]	; (80024cc <HAL_I2C_MspInit+0x74>)
 80024ae:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80024b2:	61d3      	str	r3, [r2, #28]
 80024b4:	4b05      	ldr	r3, [pc, #20]	; (80024cc <HAL_I2C_MspInit+0x74>)
 80024b6:	69db      	ldr	r3, [r3, #28]
 80024b8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80024bc:	60bb      	str	r3, [r7, #8]
 80024be:	68bb      	ldr	r3, [r7, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 80024c0:	bf00      	nop
 80024c2:	3720      	adds	r7, #32
 80024c4:	46bd      	mov	sp, r7
 80024c6:	bd80      	pop	{r7, pc}
 80024c8:	40005400 	.word	0x40005400
 80024cc:	40021000 	.word	0x40021000
 80024d0:	40010c00 	.word	0x40010c00

080024d4 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80024d4:	b580      	push	{r7, lr}
 80024d6:	b084      	sub	sp, #16
 80024d8:	af00      	add	r7, sp, #0
 80024da:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	681b      	ldr	r3, [r3, #0]
 80024e0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80024e4:	d113      	bne.n	800250e <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 80024e6:	4b0c      	ldr	r3, [pc, #48]	; (8002518 <HAL_TIM_Base_MspInit+0x44>)
 80024e8:	69db      	ldr	r3, [r3, #28]
 80024ea:	4a0b      	ldr	r2, [pc, #44]	; (8002518 <HAL_TIM_Base_MspInit+0x44>)
 80024ec:	f043 0301 	orr.w	r3, r3, #1
 80024f0:	61d3      	str	r3, [r2, #28]
 80024f2:	4b09      	ldr	r3, [pc, #36]	; (8002518 <HAL_TIM_Base_MspInit+0x44>)
 80024f4:	69db      	ldr	r3, [r3, #28]
 80024f6:	f003 0301 	and.w	r3, r3, #1
 80024fa:	60fb      	str	r3, [r7, #12]
 80024fc:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 80024fe:	2200      	movs	r2, #0
 8002500:	2100      	movs	r1, #0
 8002502:	201c      	movs	r0, #28
 8002504:	f000 fcbf 	bl	8002e86 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002508:	201c      	movs	r0, #28
 800250a:	f000 fcd8 	bl	8002ebe <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 800250e:	bf00      	nop
 8002510:	3710      	adds	r7, #16
 8002512:	46bd      	mov	sp, r7
 8002514:	bd80      	pop	{r7, pc}
 8002516:	bf00      	nop
 8002518:	40021000 	.word	0x40021000

0800251c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800251c:	b580      	push	{r7, lr}
 800251e:	b08a      	sub	sp, #40	; 0x28
 8002520:	af00      	add	r7, sp, #0
 8002522:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002524:	f107 0318 	add.w	r3, r7, #24
 8002528:	2200      	movs	r2, #0
 800252a:	601a      	str	r2, [r3, #0]
 800252c:	605a      	str	r2, [r3, #4]
 800252e:	609a      	str	r2, [r3, #8]
 8002530:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART1)
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	681b      	ldr	r3, [r3, #0]
 8002536:	4a3f      	ldr	r2, [pc, #252]	; (8002634 <HAL_UART_MspInit+0x118>)
 8002538:	4293      	cmp	r3, r2
 800253a:	d13a      	bne.n	80025b2 <HAL_UART_MspInit+0x96>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 800253c:	4b3e      	ldr	r3, [pc, #248]	; (8002638 <HAL_UART_MspInit+0x11c>)
 800253e:	699b      	ldr	r3, [r3, #24]
 8002540:	4a3d      	ldr	r2, [pc, #244]	; (8002638 <HAL_UART_MspInit+0x11c>)
 8002542:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002546:	6193      	str	r3, [r2, #24]
 8002548:	4b3b      	ldr	r3, [pc, #236]	; (8002638 <HAL_UART_MspInit+0x11c>)
 800254a:	699b      	ldr	r3, [r3, #24]
 800254c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002550:	617b      	str	r3, [r7, #20]
 8002552:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002554:	4b38      	ldr	r3, [pc, #224]	; (8002638 <HAL_UART_MspInit+0x11c>)
 8002556:	699b      	ldr	r3, [r3, #24]
 8002558:	4a37      	ldr	r2, [pc, #220]	; (8002638 <HAL_UART_MspInit+0x11c>)
 800255a:	f043 0304 	orr.w	r3, r3, #4
 800255e:	6193      	str	r3, [r2, #24]
 8002560:	4b35      	ldr	r3, [pc, #212]	; (8002638 <HAL_UART_MspInit+0x11c>)
 8002562:	699b      	ldr	r3, [r3, #24]
 8002564:	f003 0304 	and.w	r3, r3, #4
 8002568:	613b      	str	r3, [r7, #16]
 800256a:	693b      	ldr	r3, [r7, #16]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800256c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002570:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002572:	2302      	movs	r3, #2
 8002574:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002576:	2303      	movs	r3, #3
 8002578:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800257a:	f107 0318 	add.w	r3, r7, #24
 800257e:	4619      	mov	r1, r3
 8002580:	482e      	ldr	r0, [pc, #184]	; (800263c <HAL_UART_MspInit+0x120>)
 8002582:	f000 fd67 	bl	8003054 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002586:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800258a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800258c:	2300      	movs	r3, #0
 800258e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002590:	2300      	movs	r3, #0
 8002592:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002594:	f107 0318 	add.w	r3, r7, #24
 8002598:	4619      	mov	r1, r3
 800259a:	4828      	ldr	r0, [pc, #160]	; (800263c <HAL_UART_MspInit+0x120>)
 800259c:	f000 fd5a 	bl	8003054 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 80025a0:	2200      	movs	r2, #0
 80025a2:	2100      	movs	r1, #0
 80025a4:	2025      	movs	r0, #37	; 0x25
 80025a6:	f000 fc6e 	bl	8002e86 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 80025aa:	2025      	movs	r0, #37	; 0x25
 80025ac:	f000 fc87 	bl	8002ebe <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 80025b0:	e03c      	b.n	800262c <HAL_UART_MspInit+0x110>
  else if(huart->Instance==USART2)
 80025b2:	687b      	ldr	r3, [r7, #4]
 80025b4:	681b      	ldr	r3, [r3, #0]
 80025b6:	4a22      	ldr	r2, [pc, #136]	; (8002640 <HAL_UART_MspInit+0x124>)
 80025b8:	4293      	cmp	r3, r2
 80025ba:	d137      	bne.n	800262c <HAL_UART_MspInit+0x110>
    __HAL_RCC_USART2_CLK_ENABLE();
 80025bc:	4b1e      	ldr	r3, [pc, #120]	; (8002638 <HAL_UART_MspInit+0x11c>)
 80025be:	69db      	ldr	r3, [r3, #28]
 80025c0:	4a1d      	ldr	r2, [pc, #116]	; (8002638 <HAL_UART_MspInit+0x11c>)
 80025c2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80025c6:	61d3      	str	r3, [r2, #28]
 80025c8:	4b1b      	ldr	r3, [pc, #108]	; (8002638 <HAL_UART_MspInit+0x11c>)
 80025ca:	69db      	ldr	r3, [r3, #28]
 80025cc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80025d0:	60fb      	str	r3, [r7, #12]
 80025d2:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80025d4:	4b18      	ldr	r3, [pc, #96]	; (8002638 <HAL_UART_MspInit+0x11c>)
 80025d6:	699b      	ldr	r3, [r3, #24]
 80025d8:	4a17      	ldr	r2, [pc, #92]	; (8002638 <HAL_UART_MspInit+0x11c>)
 80025da:	f043 0304 	orr.w	r3, r3, #4
 80025de:	6193      	str	r3, [r2, #24]
 80025e0:	4b15      	ldr	r3, [pc, #84]	; (8002638 <HAL_UART_MspInit+0x11c>)
 80025e2:	699b      	ldr	r3, [r3, #24]
 80025e4:	f003 0304 	and.w	r3, r3, #4
 80025e8:	60bb      	str	r3, [r7, #8]
 80025ea:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80025ec:	2304      	movs	r3, #4
 80025ee:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025f0:	2302      	movs	r3, #2
 80025f2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80025f4:	2303      	movs	r3, #3
 80025f6:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80025f8:	f107 0318 	add.w	r3, r7, #24
 80025fc:	4619      	mov	r1, r3
 80025fe:	480f      	ldr	r0, [pc, #60]	; (800263c <HAL_UART_MspInit+0x120>)
 8002600:	f000 fd28 	bl	8003054 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002604:	2308      	movs	r3, #8
 8002606:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002608:	2300      	movs	r3, #0
 800260a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800260c:	2300      	movs	r3, #0
 800260e:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002610:	f107 0318 	add.w	r3, r7, #24
 8002614:	4619      	mov	r1, r3
 8002616:	4809      	ldr	r0, [pc, #36]	; (800263c <HAL_UART_MspInit+0x120>)
 8002618:	f000 fd1c 	bl	8003054 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 800261c:	2200      	movs	r2, #0
 800261e:	2100      	movs	r1, #0
 8002620:	2026      	movs	r0, #38	; 0x26
 8002622:	f000 fc30 	bl	8002e86 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002626:	2026      	movs	r0, #38	; 0x26
 8002628:	f000 fc49 	bl	8002ebe <HAL_NVIC_EnableIRQ>
}
 800262c:	bf00      	nop
 800262e:	3728      	adds	r7, #40	; 0x28
 8002630:	46bd      	mov	sp, r7
 8002632:	bd80      	pop	{r7, pc}
 8002634:	40013800 	.word	0x40013800
 8002638:	40021000 	.word	0x40021000
 800263c:	40010800 	.word	0x40010800
 8002640:	40004400 	.word	0x40004400

08002644 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002644:	b480      	push	{r7}
 8002646:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002648:	e7fe      	b.n	8002648 <NMI_Handler+0x4>

0800264a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800264a:	b480      	push	{r7}
 800264c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800264e:	e7fe      	b.n	800264e <HardFault_Handler+0x4>

08002650 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002650:	b480      	push	{r7}
 8002652:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002654:	e7fe      	b.n	8002654 <MemManage_Handler+0x4>

08002656 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002656:	b480      	push	{r7}
 8002658:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800265a:	e7fe      	b.n	800265a <BusFault_Handler+0x4>

0800265c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800265c:	b480      	push	{r7}
 800265e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002660:	e7fe      	b.n	8002660 <UsageFault_Handler+0x4>

08002662 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002662:	b480      	push	{r7}
 8002664:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002666:	bf00      	nop
 8002668:	46bd      	mov	sp, r7
 800266a:	bc80      	pop	{r7}
 800266c:	4770      	bx	lr

0800266e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800266e:	b480      	push	{r7}
 8002670:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002672:	bf00      	nop
 8002674:	46bd      	mov	sp, r7
 8002676:	bc80      	pop	{r7}
 8002678:	4770      	bx	lr

0800267a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800267a:	b480      	push	{r7}
 800267c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800267e:	bf00      	nop
 8002680:	46bd      	mov	sp, r7
 8002682:	bc80      	pop	{r7}
 8002684:	4770      	bx	lr

08002686 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002686:	b580      	push	{r7, lr}
 8002688:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800268a:	f000 fae5 	bl	8002c58 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800268e:	bf00      	nop
 8002690:	bd80      	pop	{r7, pc}
	...

08002694 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8002694:	b580      	push	{r7, lr}
 8002696:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8002698:	4802      	ldr	r0, [pc, #8]	; (80026a4 <TIM2_IRQHandler+0x10>)
 800269a:	f001 ffad 	bl	80045f8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 800269e:	bf00      	nop
 80026a0:	bd80      	pop	{r7, pc}
 80026a2:	bf00      	nop
 80026a4:	20000318 	.word	0x20000318

080026a8 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 80026a8:	b580      	push	{r7, lr}
 80026aa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 80026ac:	4802      	ldr	r0, [pc, #8]	; (80026b8 <USART1_IRQHandler+0x10>)
 80026ae:	f002 fc0b 	bl	8004ec8 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 80026b2:	bf00      	nop
 80026b4:	bd80      	pop	{r7, pc}
 80026b6:	bf00      	nop
 80026b8:	20000360 	.word	0x20000360

080026bc <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 80026bc:	b580      	push	{r7, lr}
 80026be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 80026c0:	4802      	ldr	r0, [pc, #8]	; (80026cc <USART2_IRQHandler+0x10>)
 80026c2:	f002 fc01 	bl	8004ec8 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 80026c6:	bf00      	nop
 80026c8:	bd80      	pop	{r7, pc}
 80026ca:	bf00      	nop
 80026cc:	200003a4 	.word	0x200003a4

080026d0 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80026d0:	b480      	push	{r7}
 80026d2:	af00      	add	r7, sp, #0
  return 1;
 80026d4:	2301      	movs	r3, #1
}
 80026d6:	4618      	mov	r0, r3
 80026d8:	46bd      	mov	sp, r7
 80026da:	bc80      	pop	{r7}
 80026dc:	4770      	bx	lr

080026de <_kill>:

int _kill(int pid, int sig)
{
 80026de:	b580      	push	{r7, lr}
 80026e0:	b082      	sub	sp, #8
 80026e2:	af00      	add	r7, sp, #0
 80026e4:	6078      	str	r0, [r7, #4]
 80026e6:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80026e8:	f003 f81e 	bl	8005728 <__errno>
 80026ec:	4603      	mov	r3, r0
 80026ee:	2216      	movs	r2, #22
 80026f0:	601a      	str	r2, [r3, #0]
  return -1;
 80026f2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80026f6:	4618      	mov	r0, r3
 80026f8:	3708      	adds	r7, #8
 80026fa:	46bd      	mov	sp, r7
 80026fc:	bd80      	pop	{r7, pc}

080026fe <_exit>:

void _exit (int status)
{
 80026fe:	b580      	push	{r7, lr}
 8002700:	b082      	sub	sp, #8
 8002702:	af00      	add	r7, sp, #0
 8002704:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002706:	f04f 31ff 	mov.w	r1, #4294967295
 800270a:	6878      	ldr	r0, [r7, #4]
 800270c:	f7ff ffe7 	bl	80026de <_kill>
  while (1) {}    /* Make sure we hang here */
 8002710:	e7fe      	b.n	8002710 <_exit+0x12>

08002712 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002712:	b580      	push	{r7, lr}
 8002714:	b086      	sub	sp, #24
 8002716:	af00      	add	r7, sp, #0
 8002718:	60f8      	str	r0, [r7, #12]
 800271a:	60b9      	str	r1, [r7, #8]
 800271c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800271e:	2300      	movs	r3, #0
 8002720:	617b      	str	r3, [r7, #20]
 8002722:	e00a      	b.n	800273a <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002724:	f3af 8000 	nop.w
 8002728:	4601      	mov	r1, r0
 800272a:	68bb      	ldr	r3, [r7, #8]
 800272c:	1c5a      	adds	r2, r3, #1
 800272e:	60ba      	str	r2, [r7, #8]
 8002730:	b2ca      	uxtb	r2, r1
 8002732:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002734:	697b      	ldr	r3, [r7, #20]
 8002736:	3301      	adds	r3, #1
 8002738:	617b      	str	r3, [r7, #20]
 800273a:	697a      	ldr	r2, [r7, #20]
 800273c:	687b      	ldr	r3, [r7, #4]
 800273e:	429a      	cmp	r2, r3
 8002740:	dbf0      	blt.n	8002724 <_read+0x12>
  }

  return len;
 8002742:	687b      	ldr	r3, [r7, #4]
}
 8002744:	4618      	mov	r0, r3
 8002746:	3718      	adds	r7, #24
 8002748:	46bd      	mov	sp, r7
 800274a:	bd80      	pop	{r7, pc}

0800274c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800274c:	b580      	push	{r7, lr}
 800274e:	b086      	sub	sp, #24
 8002750:	af00      	add	r7, sp, #0
 8002752:	60f8      	str	r0, [r7, #12]
 8002754:	60b9      	str	r1, [r7, #8]
 8002756:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002758:	2300      	movs	r3, #0
 800275a:	617b      	str	r3, [r7, #20]
 800275c:	e009      	b.n	8002772 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800275e:	68bb      	ldr	r3, [r7, #8]
 8002760:	1c5a      	adds	r2, r3, #1
 8002762:	60ba      	str	r2, [r7, #8]
 8002764:	781b      	ldrb	r3, [r3, #0]
 8002766:	4618      	mov	r0, r3
 8002768:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800276c:	697b      	ldr	r3, [r7, #20]
 800276e:	3301      	adds	r3, #1
 8002770:	617b      	str	r3, [r7, #20]
 8002772:	697a      	ldr	r2, [r7, #20]
 8002774:	687b      	ldr	r3, [r7, #4]
 8002776:	429a      	cmp	r2, r3
 8002778:	dbf1      	blt.n	800275e <_write+0x12>
  }
  return len;
 800277a:	687b      	ldr	r3, [r7, #4]
}
 800277c:	4618      	mov	r0, r3
 800277e:	3718      	adds	r7, #24
 8002780:	46bd      	mov	sp, r7
 8002782:	bd80      	pop	{r7, pc}

08002784 <_close>:

int _close(int file)
{
 8002784:	b480      	push	{r7}
 8002786:	b083      	sub	sp, #12
 8002788:	af00      	add	r7, sp, #0
 800278a:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800278c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002790:	4618      	mov	r0, r3
 8002792:	370c      	adds	r7, #12
 8002794:	46bd      	mov	sp, r7
 8002796:	bc80      	pop	{r7}
 8002798:	4770      	bx	lr

0800279a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800279a:	b480      	push	{r7}
 800279c:	b083      	sub	sp, #12
 800279e:	af00      	add	r7, sp, #0
 80027a0:	6078      	str	r0, [r7, #4]
 80027a2:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80027a4:	683b      	ldr	r3, [r7, #0]
 80027a6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80027aa:	605a      	str	r2, [r3, #4]
  return 0;
 80027ac:	2300      	movs	r3, #0
}
 80027ae:	4618      	mov	r0, r3
 80027b0:	370c      	adds	r7, #12
 80027b2:	46bd      	mov	sp, r7
 80027b4:	bc80      	pop	{r7}
 80027b6:	4770      	bx	lr

080027b8 <_isatty>:

int _isatty(int file)
{
 80027b8:	b480      	push	{r7}
 80027ba:	b083      	sub	sp, #12
 80027bc:	af00      	add	r7, sp, #0
 80027be:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80027c0:	2301      	movs	r3, #1
}
 80027c2:	4618      	mov	r0, r3
 80027c4:	370c      	adds	r7, #12
 80027c6:	46bd      	mov	sp, r7
 80027c8:	bc80      	pop	{r7}
 80027ca:	4770      	bx	lr

080027cc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80027cc:	b480      	push	{r7}
 80027ce:	b085      	sub	sp, #20
 80027d0:	af00      	add	r7, sp, #0
 80027d2:	60f8      	str	r0, [r7, #12]
 80027d4:	60b9      	str	r1, [r7, #8]
 80027d6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80027d8:	2300      	movs	r3, #0
}
 80027da:	4618      	mov	r0, r3
 80027dc:	3714      	adds	r7, #20
 80027de:	46bd      	mov	sp, r7
 80027e0:	bc80      	pop	{r7}
 80027e2:	4770      	bx	lr

080027e4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80027e4:	b580      	push	{r7, lr}
 80027e6:	b086      	sub	sp, #24
 80027e8:	af00      	add	r7, sp, #0
 80027ea:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80027ec:	4a14      	ldr	r2, [pc, #80]	; (8002840 <_sbrk+0x5c>)
 80027ee:	4b15      	ldr	r3, [pc, #84]	; (8002844 <_sbrk+0x60>)
 80027f0:	1ad3      	subs	r3, r2, r3
 80027f2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80027f4:	697b      	ldr	r3, [r7, #20]
 80027f6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80027f8:	4b13      	ldr	r3, [pc, #76]	; (8002848 <_sbrk+0x64>)
 80027fa:	681b      	ldr	r3, [r3, #0]
 80027fc:	2b00      	cmp	r3, #0
 80027fe:	d102      	bne.n	8002806 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002800:	4b11      	ldr	r3, [pc, #68]	; (8002848 <_sbrk+0x64>)
 8002802:	4a12      	ldr	r2, [pc, #72]	; (800284c <_sbrk+0x68>)
 8002804:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002806:	4b10      	ldr	r3, [pc, #64]	; (8002848 <_sbrk+0x64>)
 8002808:	681a      	ldr	r2, [r3, #0]
 800280a:	687b      	ldr	r3, [r7, #4]
 800280c:	4413      	add	r3, r2
 800280e:	693a      	ldr	r2, [r7, #16]
 8002810:	429a      	cmp	r2, r3
 8002812:	d207      	bcs.n	8002824 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002814:	f002 ff88 	bl	8005728 <__errno>
 8002818:	4603      	mov	r3, r0
 800281a:	220c      	movs	r2, #12
 800281c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800281e:	f04f 33ff 	mov.w	r3, #4294967295
 8002822:	e009      	b.n	8002838 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002824:	4b08      	ldr	r3, [pc, #32]	; (8002848 <_sbrk+0x64>)
 8002826:	681b      	ldr	r3, [r3, #0]
 8002828:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800282a:	4b07      	ldr	r3, [pc, #28]	; (8002848 <_sbrk+0x64>)
 800282c:	681a      	ldr	r2, [r3, #0]
 800282e:	687b      	ldr	r3, [r7, #4]
 8002830:	4413      	add	r3, r2
 8002832:	4a05      	ldr	r2, [pc, #20]	; (8002848 <_sbrk+0x64>)
 8002834:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002836:	68fb      	ldr	r3, [r7, #12]
}
 8002838:	4618      	mov	r0, r3
 800283a:	3718      	adds	r7, #24
 800283c:	46bd      	mov	sp, r7
 800283e:	bd80      	pop	{r7, pc}
 8002840:	20005000 	.word	0x20005000
 8002844:	00000400 	.word	0x00000400
 8002848:	200003e8 	.word	0x200003e8
 800284c:	200004e0 	.word	0x200004e0

08002850 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8002850:	b480      	push	{r7}
 8002852:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002854:	bf00      	nop
 8002856:	46bd      	mov	sp, r7
 8002858:	bc80      	pop	{r7}
 800285a:	4770      	bx	lr

0800285c <RunSoftwareTimer>:

static uint8_t MUL_timer		= 1;
static uint8_t flag_timer		= 0;
static uint8_t counter_timer 	= 0;

void RunSoftwareTimer(void){
 800285c:	b480      	push	{r7}
 800285e:	af00      	add	r7, sp, #0
	if(counter_timer > 0){
 8002860:	4b0c      	ldr	r3, [pc, #48]	; (8002894 <RunSoftwareTimer+0x38>)
 8002862:	781b      	ldrb	r3, [r3, #0]
 8002864:	2b00      	cmp	r3, #0
 8002866:	d010      	beq.n	800288a <RunSoftwareTimer+0x2e>
		counter_timer--;
 8002868:	4b0a      	ldr	r3, [pc, #40]	; (8002894 <RunSoftwareTimer+0x38>)
 800286a:	781b      	ldrb	r3, [r3, #0]
 800286c:	3b01      	subs	r3, #1
 800286e:	b2da      	uxtb	r2, r3
 8002870:	4b08      	ldr	r3, [pc, #32]	; (8002894 <RunSoftwareTimer+0x38>)
 8002872:	701a      	strb	r2, [r3, #0]
		if(counter_timer == 0){
 8002874:	4b07      	ldr	r3, [pc, #28]	; (8002894 <RunSoftwareTimer+0x38>)
 8002876:	781b      	ldrb	r3, [r3, #0]
 8002878:	2b00      	cmp	r3, #0
 800287a:	d106      	bne.n	800288a <RunSoftwareTimer+0x2e>
			counter_timer = MUL_timer;
 800287c:	4b06      	ldr	r3, [pc, #24]	; (8002898 <RunSoftwareTimer+0x3c>)
 800287e:	781a      	ldrb	r2, [r3, #0]
 8002880:	4b04      	ldr	r3, [pc, #16]	; (8002894 <RunSoftwareTimer+0x38>)
 8002882:	701a      	strb	r2, [r3, #0]
			flag_timer = 1;
 8002884:	4b05      	ldr	r3, [pc, #20]	; (800289c <RunSoftwareTimer+0x40>)
 8002886:	2201      	movs	r2, #1
 8002888:	701a      	strb	r2, [r3, #0]
		}
	}
}
 800288a:	bf00      	nop
 800288c:	46bd      	mov	sp, r7
 800288e:	bc80      	pop	{r7}
 8002890:	4770      	bx	lr
 8002892:	bf00      	nop
 8002894:	200003f1 	.word	0x200003f1
 8002898:	2000000d 	.word	0x2000000d
 800289c:	200003f0 	.word	0x200003f0

080028a0 <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 80028a0:	b580      	push	{r7, lr}
 80028a2:	b082      	sub	sp, #8
 80028a4:	af00      	add	r7, sp, #0
 80028a6:	6078      	str	r0, [r7, #4]
	if(htim->Instance == stimer->Instance) {
 80028a8:	687b      	ldr	r3, [r7, #4]
 80028aa:	681a      	ldr	r2, [r3, #0]
 80028ac:	4b05      	ldr	r3, [pc, #20]	; (80028c4 <HAL_TIM_PeriodElapsedCallback+0x24>)
 80028ae:	681b      	ldr	r3, [r3, #0]
 80028b0:	681b      	ldr	r3, [r3, #0]
 80028b2:	429a      	cmp	r2, r3
 80028b4:	d101      	bne.n	80028ba <HAL_TIM_PeriodElapsedCallback+0x1a>
		RunSoftwareTimer();
 80028b6:	f7ff ffd1 	bl	800285c <RunSoftwareTimer>
	}
}
 80028ba:	bf00      	nop
 80028bc:	3708      	adds	r7, #8
 80028be:	46bd      	mov	sp, r7
 80028c0:	bd80      	pop	{r7, pc}
 80028c2:	bf00      	nop
 80028c4:	200003ec 	.word	0x200003ec

080028c8 <TM_Init>:


//==================HIGH LEVEL FUNCTION==================//
void TM_Init(TIM_HandleTypeDef* htim){
 80028c8:	b580      	push	{r7, lr}
 80028ca:	b082      	sub	sp, #8
 80028cc:	af00      	add	r7, sp, #0
 80028ce:	6078      	str	r0, [r7, #4]
	stimer = htim;
 80028d0:	4a09      	ldr	r2, [pc, #36]	; (80028f8 <TM_Init+0x30>)
 80028d2:	687b      	ldr	r3, [r7, #4]
 80028d4:	6013      	str	r3, [r2, #0]
	counter_timer = MUL_timer;
 80028d6:	4b09      	ldr	r3, [pc, #36]	; (80028fc <TM_Init+0x34>)
 80028d8:	781a      	ldrb	r2, [r3, #0]
 80028da:	4b09      	ldr	r3, [pc, #36]	; (8002900 <TM_Init+0x38>)
 80028dc:	701a      	strb	r2, [r3, #0]
	flag_timer = 0;
 80028de:	4b09      	ldr	r3, [pc, #36]	; (8002904 <TM_Init+0x3c>)
 80028e0:	2200      	movs	r2, #0
 80028e2:	701a      	strb	r2, [r3, #0]

	HAL_TIM_Base_Start_IT(stimer);
 80028e4:	4b04      	ldr	r3, [pc, #16]	; (80028f8 <TM_Init+0x30>)
 80028e6:	681b      	ldr	r3, [r3, #0]
 80028e8:	4618      	mov	r0, r3
 80028ea:	f001 fe33 	bl	8004554 <HAL_TIM_Base_Start_IT>
}
 80028ee:	bf00      	nop
 80028f0:	3708      	adds	r7, #8
 80028f2:	46bd      	mov	sp, r7
 80028f4:	bd80      	pop	{r7, pc}
 80028f6:	bf00      	nop
 80028f8:	200003ec 	.word	0x200003ec
 80028fc:	2000000d 	.word	0x2000000d
 8002900:	200003f1 	.word	0x200003f1
 8002904:	200003f0 	.word	0x200003f0

08002908 <TM_SetTime>:

void TM_SetTime(uint16_t duration){
 8002908:	b480      	push	{r7}
 800290a:	b083      	sub	sp, #12
 800290c:	af00      	add	r7, sp, #0
 800290e:	4603      	mov	r3, r0
 8002910:	80fb      	strh	r3, [r7, #6]
	MUL_timer = duration / TIME_CYCLE;
 8002912:	88fb      	ldrh	r3, [r7, #6]
 8002914:	4a09      	ldr	r2, [pc, #36]	; (800293c <TM_SetTime+0x34>)
 8002916:	7812      	ldrb	r2, [r2, #0]
 8002918:	fb93 f3f2 	sdiv	r3, r3, r2
 800291c:	b2da      	uxtb	r2, r3
 800291e:	4b08      	ldr	r3, [pc, #32]	; (8002940 <TM_SetTime+0x38>)
 8002920:	701a      	strb	r2, [r3, #0]
	counter_timer = MUL_timer;
 8002922:	4b07      	ldr	r3, [pc, #28]	; (8002940 <TM_SetTime+0x38>)
 8002924:	781a      	ldrb	r2, [r3, #0]
 8002926:	4b07      	ldr	r3, [pc, #28]	; (8002944 <TM_SetTime+0x3c>)
 8002928:	701a      	strb	r2, [r3, #0]
	flag_timer = 0;
 800292a:	4b07      	ldr	r3, [pc, #28]	; (8002948 <TM_SetTime+0x40>)
 800292c:	2200      	movs	r2, #0
 800292e:	701a      	strb	r2, [r3, #0]
}
 8002930:	bf00      	nop
 8002932:	370c      	adds	r7, #12
 8002934:	46bd      	mov	sp, r7
 8002936:	bc80      	pop	{r7}
 8002938:	4770      	bx	lr
 800293a:	bf00      	nop
 800293c:	2000000c 	.word	0x2000000c
 8002940:	2000000d 	.word	0x2000000d
 8002944:	200003f1 	.word	0x200003f1
 8002948:	200003f0 	.word	0x200003f0

0800294c <TM_IsFlag>:

uint8_t TM_IsFlag(void){
 800294c:	b480      	push	{r7}
 800294e:	af00      	add	r7, sp, #0
	if(flag_timer) {
 8002950:	4b06      	ldr	r3, [pc, #24]	; (800296c <TM_IsFlag+0x20>)
 8002952:	781b      	ldrb	r3, [r3, #0]
 8002954:	2b00      	cmp	r3, #0
 8002956:	d004      	beq.n	8002962 <TM_IsFlag+0x16>
		flag_timer = 0;
 8002958:	4b04      	ldr	r3, [pc, #16]	; (800296c <TM_IsFlag+0x20>)
 800295a:	2200      	movs	r2, #0
 800295c:	701a      	strb	r2, [r3, #0]
		return 1;
 800295e:	2301      	movs	r3, #1
 8002960:	e000      	b.n	8002964 <TM_IsFlag+0x18>
	}
	return 0;
 8002962:	2300      	movs	r3, #0
}
 8002964:	4618      	mov	r0, r3
 8002966:	46bd      	mov	sp, r7
 8002968:	bc80      	pop	{r7}
 800296a:	4770      	bx	lr
 800296c:	200003f0 	.word	0x200003f0

08002970 <HAL_UART_RxCpltCallback>:
uint8_t byte_esp_received, byte_lora_received;
uint8_t flag_esp_received_str, flag_lora_received_str;



void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 8002970:	b580      	push	{r7, lr}
 8002972:	b082      	sub	sp, #8
 8002974:	af00      	add	r7, sp, #0
 8002976:	6078      	str	r0, [r7, #4]
	if(huart->Instance == u_esp->Instance){
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	681a      	ldr	r2, [r3, #0]
 800297c:	4b32      	ldr	r3, [pc, #200]	; (8002a48 <HAL_UART_RxCpltCallback+0xd8>)
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	681b      	ldr	r3, [r3, #0]
 8002982:	429a      	cmp	r2, r3
 8002984:	d12a      	bne.n	80029dc <HAL_UART_RxCpltCallback+0x6c>
		if(byte_esp_received == '!'){
 8002986:	4b31      	ldr	r3, [pc, #196]	; (8002a4c <HAL_UART_RxCpltCallback+0xdc>)
 8002988:	781b      	ldrb	r3, [r3, #0]
 800298a:	2b21      	cmp	r3, #33	; 0x21
 800298c:	d106      	bne.n	800299c <HAL_UART_RxCpltCallback+0x2c>
			index_msg_esp = 0;
 800298e:	4b30      	ldr	r3, [pc, #192]	; (8002a50 <HAL_UART_RxCpltCallback+0xe0>)
 8002990:	2200      	movs	r2, #0
 8002992:	701a      	strb	r2, [r3, #0]
			flag_esp_received_str = 0;
 8002994:	4b2f      	ldr	r3, [pc, #188]	; (8002a54 <HAL_UART_RxCpltCallback+0xe4>)
 8002996:	2200      	movs	r2, #0
 8002998:	701a      	strb	r2, [r3, #0]
 800299a:	e018      	b.n	80029ce <HAL_UART_RxCpltCallback+0x5e>
		}
		else if(byte_esp_received == '#'){
 800299c:	4b2b      	ldr	r3, [pc, #172]	; (8002a4c <HAL_UART_RxCpltCallback+0xdc>)
 800299e:	781b      	ldrb	r3, [r3, #0]
 80029a0:	2b23      	cmp	r3, #35	; 0x23
 80029a2:	d109      	bne.n	80029b8 <HAL_UART_RxCpltCallback+0x48>
			msg_esp[index_msg_esp] = '\0';
 80029a4:	4b2a      	ldr	r3, [pc, #168]	; (8002a50 <HAL_UART_RxCpltCallback+0xe0>)
 80029a6:	781b      	ldrb	r3, [r3, #0]
 80029a8:	461a      	mov	r2, r3
 80029aa:	4b2b      	ldr	r3, [pc, #172]	; (8002a58 <HAL_UART_RxCpltCallback+0xe8>)
 80029ac:	2100      	movs	r1, #0
 80029ae:	5499      	strb	r1, [r3, r2]
			flag_esp_received_str = 1;
 80029b0:	4b28      	ldr	r3, [pc, #160]	; (8002a54 <HAL_UART_RxCpltCallback+0xe4>)
 80029b2:	2201      	movs	r2, #1
 80029b4:	701a      	strb	r2, [r3, #0]
 80029b6:	e00a      	b.n	80029ce <HAL_UART_RxCpltCallback+0x5e>
		}
		else {
			msg_esp[index_msg_esp++] = byte_esp_received;
 80029b8:	4b25      	ldr	r3, [pc, #148]	; (8002a50 <HAL_UART_RxCpltCallback+0xe0>)
 80029ba:	781b      	ldrb	r3, [r3, #0]
 80029bc:	1c5a      	adds	r2, r3, #1
 80029be:	b2d1      	uxtb	r1, r2
 80029c0:	4a23      	ldr	r2, [pc, #140]	; (8002a50 <HAL_UART_RxCpltCallback+0xe0>)
 80029c2:	7011      	strb	r1, [r2, #0]
 80029c4:	461a      	mov	r2, r3
 80029c6:	4b21      	ldr	r3, [pc, #132]	; (8002a4c <HAL_UART_RxCpltCallback+0xdc>)
 80029c8:	7819      	ldrb	r1, [r3, #0]
 80029ca:	4b23      	ldr	r3, [pc, #140]	; (8002a58 <HAL_UART_RxCpltCallback+0xe8>)
 80029cc:	5499      	strb	r1, [r3, r2]
		}

		HAL_UART_Receive_IT(u_esp, &byte_esp_received, 1);
 80029ce:	4b1e      	ldr	r3, [pc, #120]	; (8002a48 <HAL_UART_RxCpltCallback+0xd8>)
 80029d0:	681b      	ldr	r3, [r3, #0]
 80029d2:	2201      	movs	r2, #1
 80029d4:	491d      	ldr	r1, [pc, #116]	; (8002a4c <HAL_UART_RxCpltCallback+0xdc>)
 80029d6:	4618      	mov	r0, r3
 80029d8:	f002 fa45 	bl	8004e66 <HAL_UART_Receive_IT>
	}

	if(huart->Instance == u_lora->Instance){
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	681a      	ldr	r2, [r3, #0]
 80029e0:	4b1e      	ldr	r3, [pc, #120]	; (8002a5c <HAL_UART_RxCpltCallback+0xec>)
 80029e2:	681b      	ldr	r3, [r3, #0]
 80029e4:	681b      	ldr	r3, [r3, #0]
 80029e6:	429a      	cmp	r2, r3
 80029e8:	d12a      	bne.n	8002a40 <HAL_UART_RxCpltCallback+0xd0>
		if(byte_lora_received == '!'){
 80029ea:	4b1d      	ldr	r3, [pc, #116]	; (8002a60 <HAL_UART_RxCpltCallback+0xf0>)
 80029ec:	781b      	ldrb	r3, [r3, #0]
 80029ee:	2b21      	cmp	r3, #33	; 0x21
 80029f0:	d106      	bne.n	8002a00 <HAL_UART_RxCpltCallback+0x90>
			index_msg_lora = 0;
 80029f2:	4b1c      	ldr	r3, [pc, #112]	; (8002a64 <HAL_UART_RxCpltCallback+0xf4>)
 80029f4:	2200      	movs	r2, #0
 80029f6:	701a      	strb	r2, [r3, #0]
			flag_lora_received_str = 0;
 80029f8:	4b1b      	ldr	r3, [pc, #108]	; (8002a68 <HAL_UART_RxCpltCallback+0xf8>)
 80029fa:	2200      	movs	r2, #0
 80029fc:	701a      	strb	r2, [r3, #0]
 80029fe:	e018      	b.n	8002a32 <HAL_UART_RxCpltCallback+0xc2>
		}
		else if(byte_lora_received == '#'){
 8002a00:	4b17      	ldr	r3, [pc, #92]	; (8002a60 <HAL_UART_RxCpltCallback+0xf0>)
 8002a02:	781b      	ldrb	r3, [r3, #0]
 8002a04:	2b23      	cmp	r3, #35	; 0x23
 8002a06:	d109      	bne.n	8002a1c <HAL_UART_RxCpltCallback+0xac>
			msg_lora[index_msg_lora] = '\0';
 8002a08:	4b16      	ldr	r3, [pc, #88]	; (8002a64 <HAL_UART_RxCpltCallback+0xf4>)
 8002a0a:	781b      	ldrb	r3, [r3, #0]
 8002a0c:	461a      	mov	r2, r3
 8002a0e:	4b17      	ldr	r3, [pc, #92]	; (8002a6c <HAL_UART_RxCpltCallback+0xfc>)
 8002a10:	2100      	movs	r1, #0
 8002a12:	5499      	strb	r1, [r3, r2]
			flag_lora_received_str = 1;
 8002a14:	4b14      	ldr	r3, [pc, #80]	; (8002a68 <HAL_UART_RxCpltCallback+0xf8>)
 8002a16:	2201      	movs	r2, #1
 8002a18:	701a      	strb	r2, [r3, #0]
 8002a1a:	e00a      	b.n	8002a32 <HAL_UART_RxCpltCallback+0xc2>
		}
		else {
			msg_lora[index_msg_lora++] = byte_lora_received;
 8002a1c:	4b11      	ldr	r3, [pc, #68]	; (8002a64 <HAL_UART_RxCpltCallback+0xf4>)
 8002a1e:	781b      	ldrb	r3, [r3, #0]
 8002a20:	1c5a      	adds	r2, r3, #1
 8002a22:	b2d1      	uxtb	r1, r2
 8002a24:	4a0f      	ldr	r2, [pc, #60]	; (8002a64 <HAL_UART_RxCpltCallback+0xf4>)
 8002a26:	7011      	strb	r1, [r2, #0]
 8002a28:	461a      	mov	r2, r3
 8002a2a:	4b0d      	ldr	r3, [pc, #52]	; (8002a60 <HAL_UART_RxCpltCallback+0xf0>)
 8002a2c:	7819      	ldrb	r1, [r3, #0]
 8002a2e:	4b0f      	ldr	r3, [pc, #60]	; (8002a6c <HAL_UART_RxCpltCallback+0xfc>)
 8002a30:	5499      	strb	r1, [r3, r2]
		}

		HAL_UART_Receive_IT(u_lora, &byte_lora_received, 1);
 8002a32:	4b0a      	ldr	r3, [pc, #40]	; (8002a5c <HAL_UART_RxCpltCallback+0xec>)
 8002a34:	681b      	ldr	r3, [r3, #0]
 8002a36:	2201      	movs	r2, #1
 8002a38:	4909      	ldr	r1, [pc, #36]	; (8002a60 <HAL_UART_RxCpltCallback+0xf0>)
 8002a3a:	4618      	mov	r0, r3
 8002a3c:	f002 fa13 	bl	8004e66 <HAL_UART_Receive_IT>
	}
}
 8002a40:	bf00      	nop
 8002a42:	3708      	adds	r7, #8
 8002a44:	46bd      	mov	sp, r7
 8002a46:	bd80      	pop	{r7, pc}
 8002a48:	200003f4 	.word	0x200003f4
 8002a4c:	200004c6 	.word	0x200004c6
 8002a50:	200004c4 	.word	0x200004c4
 8002a54:	200004c8 	.word	0x200004c8
 8002a58:	200003fc 	.word	0x200003fc
 8002a5c:	200003f8 	.word	0x200003f8
 8002a60:	200004c7 	.word	0x200004c7
 8002a64:	200004c5 	.word	0x200004c5
 8002a68:	200004c9 	.word	0x200004c9
 8002a6c:	20000460 	.word	0x20000460

08002a70 <UART_Init>:




//==================HIGH LEVEL FUNCTION==================//
void UART_Init(UART_HandleTypeDef* uart_esp, UART_HandleTypeDef* uart_lora){
 8002a70:	b580      	push	{r7, lr}
 8002a72:	b082      	sub	sp, #8
 8002a74:	af00      	add	r7, sp, #0
 8002a76:	6078      	str	r0, [r7, #4]
 8002a78:	6039      	str	r1, [r7, #0]
	u_esp = uart_esp;
 8002a7a:	4a13      	ldr	r2, [pc, #76]	; (8002ac8 <UART_Init+0x58>)
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	6013      	str	r3, [r2, #0]
	u_lora = uart_lora;
 8002a80:	4a12      	ldr	r2, [pc, #72]	; (8002acc <UART_Init+0x5c>)
 8002a82:	683b      	ldr	r3, [r7, #0]
 8002a84:	6013      	str	r3, [r2, #0]
	index_msg_esp = index_msg_lora = 0;
 8002a86:	4b12      	ldr	r3, [pc, #72]	; (8002ad0 <UART_Init+0x60>)
 8002a88:	2200      	movs	r2, #0
 8002a8a:	701a      	strb	r2, [r3, #0]
 8002a8c:	4b10      	ldr	r3, [pc, #64]	; (8002ad0 <UART_Init+0x60>)
 8002a8e:	781a      	ldrb	r2, [r3, #0]
 8002a90:	4b10      	ldr	r3, [pc, #64]	; (8002ad4 <UART_Init+0x64>)
 8002a92:	701a      	strb	r2, [r3, #0]
	flag_esp_received_str = flag_lora_received_str = 0;
 8002a94:	4b10      	ldr	r3, [pc, #64]	; (8002ad8 <UART_Init+0x68>)
 8002a96:	2200      	movs	r2, #0
 8002a98:	701a      	strb	r2, [r3, #0]
 8002a9a:	4b0f      	ldr	r3, [pc, #60]	; (8002ad8 <UART_Init+0x68>)
 8002a9c:	781a      	ldrb	r2, [r3, #0]
 8002a9e:	4b0f      	ldr	r3, [pc, #60]	; (8002adc <UART_Init+0x6c>)
 8002aa0:	701a      	strb	r2, [r3, #0]

	HAL_UART_Receive_IT(u_esp, &byte_esp_received, 1);
 8002aa2:	4b09      	ldr	r3, [pc, #36]	; (8002ac8 <UART_Init+0x58>)
 8002aa4:	681b      	ldr	r3, [r3, #0]
 8002aa6:	2201      	movs	r2, #1
 8002aa8:	490d      	ldr	r1, [pc, #52]	; (8002ae0 <UART_Init+0x70>)
 8002aaa:	4618      	mov	r0, r3
 8002aac:	f002 f9db 	bl	8004e66 <HAL_UART_Receive_IT>
	HAL_UART_Receive_IT(u_lora, &byte_lora_received, 1);
 8002ab0:	4b06      	ldr	r3, [pc, #24]	; (8002acc <UART_Init+0x5c>)
 8002ab2:	681b      	ldr	r3, [r3, #0]
 8002ab4:	2201      	movs	r2, #1
 8002ab6:	490b      	ldr	r1, [pc, #44]	; (8002ae4 <UART_Init+0x74>)
 8002ab8:	4618      	mov	r0, r3
 8002aba:	f002 f9d4 	bl	8004e66 <HAL_UART_Receive_IT>
}
 8002abe:	bf00      	nop
 8002ac0:	3708      	adds	r7, #8
 8002ac2:	46bd      	mov	sp, r7
 8002ac4:	bd80      	pop	{r7, pc}
 8002ac6:	bf00      	nop
 8002ac8:	200003f4 	.word	0x200003f4
 8002acc:	200003f8 	.word	0x200003f8
 8002ad0:	200004c5 	.word	0x200004c5
 8002ad4:	200004c4 	.word	0x200004c4
 8002ad8:	200004c9 	.word	0x200004c9
 8002adc:	200004c8 	.word	0x200004c8
 8002ae0:	200004c6 	.word	0x200004c6
 8002ae4:	200004c7 	.word	0x200004c7

08002ae8 <UESP_SendMsg>:

void UESP_SendMsg(char* msg, uint8_t size){
 8002ae8:	b580      	push	{r7, lr}
 8002aea:	b082      	sub	sp, #8
 8002aec:	af00      	add	r7, sp, #0
 8002aee:	6078      	str	r0, [r7, #4]
 8002af0:	460b      	mov	r3, r1
 8002af2:	70fb      	strb	r3, [r7, #3]
//	HAL_UART_Transmit(u_esp, msg, sizeof(msg), 1000);
	HAL_UART_Transmit(u_esp, msg, size, 1000);
 8002af4:	4b06      	ldr	r3, [pc, #24]	; (8002b10 <UESP_SendMsg+0x28>)
 8002af6:	6818      	ldr	r0, [r3, #0]
 8002af8:	78fb      	ldrb	r3, [r7, #3]
 8002afa:	b29a      	uxth	r2, r3
 8002afc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002b00:	6879      	ldr	r1, [r7, #4]
 8002b02:	f002 f91e 	bl	8004d42 <HAL_UART_Transmit>

}
 8002b06:	bf00      	nop
 8002b08:	3708      	adds	r7, #8
 8002b0a:	46bd      	mov	sp, r7
 8002b0c:	bd80      	pop	{r7, pc}
 8002b0e:	bf00      	nop
 8002b10:	200003f4 	.word	0x200003f4

08002b14 <UESP_GetMsg>:

uint8_t UESP_IsReceivedMsg(void){
	return flag_esp_received_str;
}

uint8_t* UESP_GetMsg(void){
 8002b14:	b480      	push	{r7}
 8002b16:	af00      	add	r7, sp, #0
	if(!flag_esp_received_str) return "";
 8002b18:	4b06      	ldr	r3, [pc, #24]	; (8002b34 <UESP_GetMsg+0x20>)
 8002b1a:	781b      	ldrb	r3, [r3, #0]
 8002b1c:	2b00      	cmp	r3, #0
 8002b1e:	d101      	bne.n	8002b24 <UESP_GetMsg+0x10>
 8002b20:	4b05      	ldr	r3, [pc, #20]	; (8002b38 <UESP_GetMsg+0x24>)
 8002b22:	e003      	b.n	8002b2c <UESP_GetMsg+0x18>

	flag_esp_received_str = 0;
 8002b24:	4b03      	ldr	r3, [pc, #12]	; (8002b34 <UESP_GetMsg+0x20>)
 8002b26:	2200      	movs	r2, #0
 8002b28:	701a      	strb	r2, [r3, #0]
	return msg_esp;
 8002b2a:	4b04      	ldr	r3, [pc, #16]	; (8002b3c <UESP_GetMsg+0x28>)
}
 8002b2c:	4618      	mov	r0, r3
 8002b2e:	46bd      	mov	sp, r7
 8002b30:	bc80      	pop	{r7}
 8002b32:	4770      	bx	lr
 8002b34:	200004c8 	.word	0x200004c8
 8002b38:	08008c38 	.word	0x08008c38
 8002b3c:	200003fc 	.word	0x200003fc

08002b40 <ULORA_IsReceivedMsg>:

void ULORA_SendMsg(char* msg, uint8_t size){
	HAL_UART_Transmit(u_lora, msg, size, 1000);
}

uint8_t ULORA_IsReceivedMsg(void){
 8002b40:	b480      	push	{r7}
 8002b42:	af00      	add	r7, sp, #0
	return flag_lora_received_str;
 8002b44:	4b02      	ldr	r3, [pc, #8]	; (8002b50 <ULORA_IsReceivedMsg+0x10>)
 8002b46:	781b      	ldrb	r3, [r3, #0]
}
 8002b48:	4618      	mov	r0, r3
 8002b4a:	46bd      	mov	sp, r7
 8002b4c:	bc80      	pop	{r7}
 8002b4e:	4770      	bx	lr
 8002b50:	200004c9 	.word	0x200004c9

08002b54 <ULORA_GetMsg>:

uint8_t* ULORA_GetMsg(void){
 8002b54:	b480      	push	{r7}
 8002b56:	af00      	add	r7, sp, #0
	if(!flag_lora_received_str) return "";
 8002b58:	4b06      	ldr	r3, [pc, #24]	; (8002b74 <ULORA_GetMsg+0x20>)
 8002b5a:	781b      	ldrb	r3, [r3, #0]
 8002b5c:	2b00      	cmp	r3, #0
 8002b5e:	d101      	bne.n	8002b64 <ULORA_GetMsg+0x10>
 8002b60:	4b05      	ldr	r3, [pc, #20]	; (8002b78 <ULORA_GetMsg+0x24>)
 8002b62:	e003      	b.n	8002b6c <ULORA_GetMsg+0x18>

	flag_lora_received_str = 0;
 8002b64:	4b03      	ldr	r3, [pc, #12]	; (8002b74 <ULORA_GetMsg+0x20>)
 8002b66:	2200      	movs	r2, #0
 8002b68:	701a      	strb	r2, [r3, #0]

	return msg_lora;
 8002b6a:	4b04      	ldr	r3, [pc, #16]	; (8002b7c <ULORA_GetMsg+0x28>)
}
 8002b6c:	4618      	mov	r0, r3
 8002b6e:	46bd      	mov	sp, r7
 8002b70:	bc80      	pop	{r7}
 8002b72:	4770      	bx	lr
 8002b74:	200004c9 	.word	0x200004c9
 8002b78:	08008c38 	.word	0x08008c38
 8002b7c:	20000460 	.word	0x20000460

08002b80 <Reset_Handler>:
 8002b80:	480c      	ldr	r0, [pc, #48]	; (8002bb4 <LoopFillZerobss+0x12>)
 8002b82:	490d      	ldr	r1, [pc, #52]	; (8002bb8 <LoopFillZerobss+0x16>)
 8002b84:	4a0d      	ldr	r2, [pc, #52]	; (8002bbc <LoopFillZerobss+0x1a>)
 8002b86:	2300      	movs	r3, #0
 8002b88:	e002      	b.n	8002b90 <LoopCopyDataInit>

08002b8a <CopyDataInit>:
 8002b8a:	58d4      	ldr	r4, [r2, r3]
 8002b8c:	50c4      	str	r4, [r0, r3]
 8002b8e:	3304      	adds	r3, #4

08002b90 <LoopCopyDataInit>:
 8002b90:	18c4      	adds	r4, r0, r3
 8002b92:	428c      	cmp	r4, r1
 8002b94:	d3f9      	bcc.n	8002b8a <CopyDataInit>
 8002b96:	4a0a      	ldr	r2, [pc, #40]	; (8002bc0 <LoopFillZerobss+0x1e>)
 8002b98:	4c0a      	ldr	r4, [pc, #40]	; (8002bc4 <LoopFillZerobss+0x22>)
 8002b9a:	2300      	movs	r3, #0
 8002b9c:	e001      	b.n	8002ba2 <LoopFillZerobss>

08002b9e <FillZerobss>:
 8002b9e:	6013      	str	r3, [r2, #0]
 8002ba0:	3204      	adds	r2, #4

08002ba2 <LoopFillZerobss>:
 8002ba2:	42a2      	cmp	r2, r4
 8002ba4:	d3fb      	bcc.n	8002b9e <FillZerobss>
 8002ba6:	f7ff fe53 	bl	8002850 <SystemInit>
 8002baa:	f002 fdc3 	bl	8005734 <__libc_init_array>
 8002bae:	f7ff fa47 	bl	8002040 <main>
 8002bb2:	4770      	bx	lr
 8002bb4:	20000000 	.word	0x20000000
 8002bb8:	200001ec 	.word	0x200001ec
 8002bbc:	080090f8 	.word	0x080090f8
 8002bc0:	200001ec 	.word	0x200001ec
 8002bc4:	200004e0 	.word	0x200004e0

08002bc8 <ADC1_2_IRQHandler>:
 8002bc8:	e7fe      	b.n	8002bc8 <ADC1_2_IRQHandler>
	...

08002bcc <HAL_Init>:
 8002bcc:	b580      	push	{r7, lr}
 8002bce:	af00      	add	r7, sp, #0
 8002bd0:	4b08      	ldr	r3, [pc, #32]	; (8002bf4 <HAL_Init+0x28>)
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	4a07      	ldr	r2, [pc, #28]	; (8002bf4 <HAL_Init+0x28>)
 8002bd6:	f043 0310 	orr.w	r3, r3, #16
 8002bda:	6013      	str	r3, [r2, #0]
 8002bdc:	2003      	movs	r0, #3
 8002bde:	f000 f947 	bl	8002e70 <HAL_NVIC_SetPriorityGrouping>
 8002be2:	200f      	movs	r0, #15
 8002be4:	f000 f808 	bl	8002bf8 <HAL_InitTick>
 8002be8:	f7ff fc04 	bl	80023f4 <HAL_MspInit>
 8002bec:	2300      	movs	r3, #0
 8002bee:	4618      	mov	r0, r3
 8002bf0:	bd80      	pop	{r7, pc}
 8002bf2:	bf00      	nop
 8002bf4:	40022000 	.word	0x40022000

08002bf8 <HAL_InitTick>:
 8002bf8:	b580      	push	{r7, lr}
 8002bfa:	b082      	sub	sp, #8
 8002bfc:	af00      	add	r7, sp, #0
 8002bfe:	6078      	str	r0, [r7, #4]
 8002c00:	4b12      	ldr	r3, [pc, #72]	; (8002c4c <HAL_InitTick+0x54>)
 8002c02:	681a      	ldr	r2, [r3, #0]
 8002c04:	4b12      	ldr	r3, [pc, #72]	; (8002c50 <HAL_InitTick+0x58>)
 8002c06:	781b      	ldrb	r3, [r3, #0]
 8002c08:	4619      	mov	r1, r3
 8002c0a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002c0e:	fbb3 f3f1 	udiv	r3, r3, r1
 8002c12:	fbb2 f3f3 	udiv	r3, r2, r3
 8002c16:	4618      	mov	r0, r3
 8002c18:	f000 f95f 	bl	8002eda <HAL_SYSTICK_Config>
 8002c1c:	4603      	mov	r3, r0
 8002c1e:	2b00      	cmp	r3, #0
 8002c20:	d001      	beq.n	8002c26 <HAL_InitTick+0x2e>
 8002c22:	2301      	movs	r3, #1
 8002c24:	e00e      	b.n	8002c44 <HAL_InitTick+0x4c>
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	2b0f      	cmp	r3, #15
 8002c2a:	d80a      	bhi.n	8002c42 <HAL_InitTick+0x4a>
 8002c2c:	2200      	movs	r2, #0
 8002c2e:	6879      	ldr	r1, [r7, #4]
 8002c30:	f04f 30ff 	mov.w	r0, #4294967295
 8002c34:	f000 f927 	bl	8002e86 <HAL_NVIC_SetPriority>
 8002c38:	4a06      	ldr	r2, [pc, #24]	; (8002c54 <HAL_InitTick+0x5c>)
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	6013      	str	r3, [r2, #0]
 8002c3e:	2300      	movs	r3, #0
 8002c40:	e000      	b.n	8002c44 <HAL_InitTick+0x4c>
 8002c42:	2301      	movs	r3, #1
 8002c44:	4618      	mov	r0, r3
 8002c46:	3708      	adds	r7, #8
 8002c48:	46bd      	mov	sp, r7
 8002c4a:	bd80      	pop	{r7, pc}
 8002c4c:	20000008 	.word	0x20000008
 8002c50:	20000014 	.word	0x20000014
 8002c54:	20000010 	.word	0x20000010

08002c58 <HAL_IncTick>:
 8002c58:	b480      	push	{r7}
 8002c5a:	af00      	add	r7, sp, #0
 8002c5c:	4b05      	ldr	r3, [pc, #20]	; (8002c74 <HAL_IncTick+0x1c>)
 8002c5e:	781b      	ldrb	r3, [r3, #0]
 8002c60:	461a      	mov	r2, r3
 8002c62:	4b05      	ldr	r3, [pc, #20]	; (8002c78 <HAL_IncTick+0x20>)
 8002c64:	681b      	ldr	r3, [r3, #0]
 8002c66:	4413      	add	r3, r2
 8002c68:	4a03      	ldr	r2, [pc, #12]	; (8002c78 <HAL_IncTick+0x20>)
 8002c6a:	6013      	str	r3, [r2, #0]
 8002c6c:	bf00      	nop
 8002c6e:	46bd      	mov	sp, r7
 8002c70:	bc80      	pop	{r7}
 8002c72:	4770      	bx	lr
 8002c74:	20000014 	.word	0x20000014
 8002c78:	200004cc 	.word	0x200004cc

08002c7c <HAL_GetTick>:
 8002c7c:	b480      	push	{r7}
 8002c7e:	af00      	add	r7, sp, #0
 8002c80:	4b02      	ldr	r3, [pc, #8]	; (8002c8c <HAL_GetTick+0x10>)
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	4618      	mov	r0, r3
 8002c86:	46bd      	mov	sp, r7
 8002c88:	bc80      	pop	{r7}
 8002c8a:	4770      	bx	lr
 8002c8c:	200004cc 	.word	0x200004cc

08002c90 <HAL_Delay>:
 8002c90:	b580      	push	{r7, lr}
 8002c92:	b084      	sub	sp, #16
 8002c94:	af00      	add	r7, sp, #0
 8002c96:	6078      	str	r0, [r7, #4]
 8002c98:	f7ff fff0 	bl	8002c7c <HAL_GetTick>
 8002c9c:	60b8      	str	r0, [r7, #8]
 8002c9e:	687b      	ldr	r3, [r7, #4]
 8002ca0:	60fb      	str	r3, [r7, #12]
 8002ca2:	68fb      	ldr	r3, [r7, #12]
 8002ca4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002ca8:	d005      	beq.n	8002cb6 <HAL_Delay+0x26>
 8002caa:	4b0a      	ldr	r3, [pc, #40]	; (8002cd4 <HAL_Delay+0x44>)
 8002cac:	781b      	ldrb	r3, [r3, #0]
 8002cae:	461a      	mov	r2, r3
 8002cb0:	68fb      	ldr	r3, [r7, #12]
 8002cb2:	4413      	add	r3, r2
 8002cb4:	60fb      	str	r3, [r7, #12]
 8002cb6:	bf00      	nop
 8002cb8:	f7ff ffe0 	bl	8002c7c <HAL_GetTick>
 8002cbc:	4602      	mov	r2, r0
 8002cbe:	68bb      	ldr	r3, [r7, #8]
 8002cc0:	1ad3      	subs	r3, r2, r3
 8002cc2:	68fa      	ldr	r2, [r7, #12]
 8002cc4:	429a      	cmp	r2, r3
 8002cc6:	d8f7      	bhi.n	8002cb8 <HAL_Delay+0x28>
 8002cc8:	bf00      	nop
 8002cca:	bf00      	nop
 8002ccc:	3710      	adds	r7, #16
 8002cce:	46bd      	mov	sp, r7
 8002cd0:	bd80      	pop	{r7, pc}
 8002cd2:	bf00      	nop
 8002cd4:	20000014 	.word	0x20000014

08002cd8 <__NVIC_SetPriorityGrouping>:
 8002cd8:	b480      	push	{r7}
 8002cda:	b085      	sub	sp, #20
 8002cdc:	af00      	add	r7, sp, #0
 8002cde:	6078      	str	r0, [r7, #4]
 8002ce0:	687b      	ldr	r3, [r7, #4]
 8002ce2:	f003 0307 	and.w	r3, r3, #7
 8002ce6:	60fb      	str	r3, [r7, #12]
 8002ce8:	4b0c      	ldr	r3, [pc, #48]	; (8002d1c <__NVIC_SetPriorityGrouping+0x44>)
 8002cea:	68db      	ldr	r3, [r3, #12]
 8002cec:	60bb      	str	r3, [r7, #8]
 8002cee:	68ba      	ldr	r2, [r7, #8]
 8002cf0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002cf4:	4013      	ands	r3, r2
 8002cf6:	60bb      	str	r3, [r7, #8]
 8002cf8:	68fb      	ldr	r3, [r7, #12]
 8002cfa:	021a      	lsls	r2, r3, #8
 8002cfc:	68bb      	ldr	r3, [r7, #8]
 8002cfe:	4313      	orrs	r3, r2
 8002d00:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002d04:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002d08:	60bb      	str	r3, [r7, #8]
 8002d0a:	4a04      	ldr	r2, [pc, #16]	; (8002d1c <__NVIC_SetPriorityGrouping+0x44>)
 8002d0c:	68bb      	ldr	r3, [r7, #8]
 8002d0e:	60d3      	str	r3, [r2, #12]
 8002d10:	bf00      	nop
 8002d12:	3714      	adds	r7, #20
 8002d14:	46bd      	mov	sp, r7
 8002d16:	bc80      	pop	{r7}
 8002d18:	4770      	bx	lr
 8002d1a:	bf00      	nop
 8002d1c:	e000ed00 	.word	0xe000ed00

08002d20 <__NVIC_GetPriorityGrouping>:
 8002d20:	b480      	push	{r7}
 8002d22:	af00      	add	r7, sp, #0
 8002d24:	4b04      	ldr	r3, [pc, #16]	; (8002d38 <__NVIC_GetPriorityGrouping+0x18>)
 8002d26:	68db      	ldr	r3, [r3, #12]
 8002d28:	0a1b      	lsrs	r3, r3, #8
 8002d2a:	f003 0307 	and.w	r3, r3, #7
 8002d2e:	4618      	mov	r0, r3
 8002d30:	46bd      	mov	sp, r7
 8002d32:	bc80      	pop	{r7}
 8002d34:	4770      	bx	lr
 8002d36:	bf00      	nop
 8002d38:	e000ed00 	.word	0xe000ed00

08002d3c <__NVIC_EnableIRQ>:
 8002d3c:	b480      	push	{r7}
 8002d3e:	b083      	sub	sp, #12
 8002d40:	af00      	add	r7, sp, #0
 8002d42:	4603      	mov	r3, r0
 8002d44:	71fb      	strb	r3, [r7, #7]
 8002d46:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d4a:	2b00      	cmp	r3, #0
 8002d4c:	db0b      	blt.n	8002d66 <__NVIC_EnableIRQ+0x2a>
 8002d4e:	79fb      	ldrb	r3, [r7, #7]
 8002d50:	f003 021f 	and.w	r2, r3, #31
 8002d54:	4906      	ldr	r1, [pc, #24]	; (8002d70 <__NVIC_EnableIRQ+0x34>)
 8002d56:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d5a:	095b      	lsrs	r3, r3, #5
 8002d5c:	2001      	movs	r0, #1
 8002d5e:	fa00 f202 	lsl.w	r2, r0, r2
 8002d62:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002d66:	bf00      	nop
 8002d68:	370c      	adds	r7, #12
 8002d6a:	46bd      	mov	sp, r7
 8002d6c:	bc80      	pop	{r7}
 8002d6e:	4770      	bx	lr
 8002d70:	e000e100 	.word	0xe000e100

08002d74 <__NVIC_SetPriority>:
 8002d74:	b480      	push	{r7}
 8002d76:	b083      	sub	sp, #12
 8002d78:	af00      	add	r7, sp, #0
 8002d7a:	4603      	mov	r3, r0
 8002d7c:	6039      	str	r1, [r7, #0]
 8002d7e:	71fb      	strb	r3, [r7, #7]
 8002d80:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d84:	2b00      	cmp	r3, #0
 8002d86:	db0a      	blt.n	8002d9e <__NVIC_SetPriority+0x2a>
 8002d88:	683b      	ldr	r3, [r7, #0]
 8002d8a:	b2da      	uxtb	r2, r3
 8002d8c:	490c      	ldr	r1, [pc, #48]	; (8002dc0 <__NVIC_SetPriority+0x4c>)
 8002d8e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d92:	0112      	lsls	r2, r2, #4
 8002d94:	b2d2      	uxtb	r2, r2
 8002d96:	440b      	add	r3, r1
 8002d98:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002d9c:	e00a      	b.n	8002db4 <__NVIC_SetPriority+0x40>
 8002d9e:	683b      	ldr	r3, [r7, #0]
 8002da0:	b2da      	uxtb	r2, r3
 8002da2:	4908      	ldr	r1, [pc, #32]	; (8002dc4 <__NVIC_SetPriority+0x50>)
 8002da4:	79fb      	ldrb	r3, [r7, #7]
 8002da6:	f003 030f 	and.w	r3, r3, #15
 8002daa:	3b04      	subs	r3, #4
 8002dac:	0112      	lsls	r2, r2, #4
 8002dae:	b2d2      	uxtb	r2, r2
 8002db0:	440b      	add	r3, r1
 8002db2:	761a      	strb	r2, [r3, #24]
 8002db4:	bf00      	nop
 8002db6:	370c      	adds	r7, #12
 8002db8:	46bd      	mov	sp, r7
 8002dba:	bc80      	pop	{r7}
 8002dbc:	4770      	bx	lr
 8002dbe:	bf00      	nop
 8002dc0:	e000e100 	.word	0xe000e100
 8002dc4:	e000ed00 	.word	0xe000ed00

08002dc8 <NVIC_EncodePriority>:
 8002dc8:	b480      	push	{r7}
 8002dca:	b089      	sub	sp, #36	; 0x24
 8002dcc:	af00      	add	r7, sp, #0
 8002dce:	60f8      	str	r0, [r7, #12]
 8002dd0:	60b9      	str	r1, [r7, #8]
 8002dd2:	607a      	str	r2, [r7, #4]
 8002dd4:	68fb      	ldr	r3, [r7, #12]
 8002dd6:	f003 0307 	and.w	r3, r3, #7
 8002dda:	61fb      	str	r3, [r7, #28]
 8002ddc:	69fb      	ldr	r3, [r7, #28]
 8002dde:	f1c3 0307 	rsb	r3, r3, #7
 8002de2:	2b04      	cmp	r3, #4
 8002de4:	bf28      	it	cs
 8002de6:	2304      	movcs	r3, #4
 8002de8:	61bb      	str	r3, [r7, #24]
 8002dea:	69fb      	ldr	r3, [r7, #28]
 8002dec:	3304      	adds	r3, #4
 8002dee:	2b06      	cmp	r3, #6
 8002df0:	d902      	bls.n	8002df8 <NVIC_EncodePriority+0x30>
 8002df2:	69fb      	ldr	r3, [r7, #28]
 8002df4:	3b03      	subs	r3, #3
 8002df6:	e000      	b.n	8002dfa <NVIC_EncodePriority+0x32>
 8002df8:	2300      	movs	r3, #0
 8002dfa:	617b      	str	r3, [r7, #20]
 8002dfc:	f04f 32ff 	mov.w	r2, #4294967295
 8002e00:	69bb      	ldr	r3, [r7, #24]
 8002e02:	fa02 f303 	lsl.w	r3, r2, r3
 8002e06:	43da      	mvns	r2, r3
 8002e08:	68bb      	ldr	r3, [r7, #8]
 8002e0a:	401a      	ands	r2, r3
 8002e0c:	697b      	ldr	r3, [r7, #20]
 8002e0e:	409a      	lsls	r2, r3
 8002e10:	f04f 31ff 	mov.w	r1, #4294967295
 8002e14:	697b      	ldr	r3, [r7, #20]
 8002e16:	fa01 f303 	lsl.w	r3, r1, r3
 8002e1a:	43d9      	mvns	r1, r3
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	400b      	ands	r3, r1
 8002e20:	4313      	orrs	r3, r2
 8002e22:	4618      	mov	r0, r3
 8002e24:	3724      	adds	r7, #36	; 0x24
 8002e26:	46bd      	mov	sp, r7
 8002e28:	bc80      	pop	{r7}
 8002e2a:	4770      	bx	lr

08002e2c <SysTick_Config>:
 8002e2c:	b580      	push	{r7, lr}
 8002e2e:	b082      	sub	sp, #8
 8002e30:	af00      	add	r7, sp, #0
 8002e32:	6078      	str	r0, [r7, #4]
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	3b01      	subs	r3, #1
 8002e38:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8002e3c:	d301      	bcc.n	8002e42 <SysTick_Config+0x16>
 8002e3e:	2301      	movs	r3, #1
 8002e40:	e00f      	b.n	8002e62 <SysTick_Config+0x36>
 8002e42:	4a0a      	ldr	r2, [pc, #40]	; (8002e6c <SysTick_Config+0x40>)
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	3b01      	subs	r3, #1
 8002e48:	6053      	str	r3, [r2, #4]
 8002e4a:	210f      	movs	r1, #15
 8002e4c:	f04f 30ff 	mov.w	r0, #4294967295
 8002e50:	f7ff ff90 	bl	8002d74 <__NVIC_SetPriority>
 8002e54:	4b05      	ldr	r3, [pc, #20]	; (8002e6c <SysTick_Config+0x40>)
 8002e56:	2200      	movs	r2, #0
 8002e58:	609a      	str	r2, [r3, #8]
 8002e5a:	4b04      	ldr	r3, [pc, #16]	; (8002e6c <SysTick_Config+0x40>)
 8002e5c:	2207      	movs	r2, #7
 8002e5e:	601a      	str	r2, [r3, #0]
 8002e60:	2300      	movs	r3, #0
 8002e62:	4618      	mov	r0, r3
 8002e64:	3708      	adds	r7, #8
 8002e66:	46bd      	mov	sp, r7
 8002e68:	bd80      	pop	{r7, pc}
 8002e6a:	bf00      	nop
 8002e6c:	e000e010 	.word	0xe000e010

08002e70 <HAL_NVIC_SetPriorityGrouping>:
 8002e70:	b580      	push	{r7, lr}
 8002e72:	b082      	sub	sp, #8
 8002e74:	af00      	add	r7, sp, #0
 8002e76:	6078      	str	r0, [r7, #4]
 8002e78:	6878      	ldr	r0, [r7, #4]
 8002e7a:	f7ff ff2d 	bl	8002cd8 <__NVIC_SetPriorityGrouping>
 8002e7e:	bf00      	nop
 8002e80:	3708      	adds	r7, #8
 8002e82:	46bd      	mov	sp, r7
 8002e84:	bd80      	pop	{r7, pc}

08002e86 <HAL_NVIC_SetPriority>:
 8002e86:	b580      	push	{r7, lr}
 8002e88:	b086      	sub	sp, #24
 8002e8a:	af00      	add	r7, sp, #0
 8002e8c:	4603      	mov	r3, r0
 8002e8e:	60b9      	str	r1, [r7, #8]
 8002e90:	607a      	str	r2, [r7, #4]
 8002e92:	73fb      	strb	r3, [r7, #15]
 8002e94:	2300      	movs	r3, #0
 8002e96:	617b      	str	r3, [r7, #20]
 8002e98:	f7ff ff42 	bl	8002d20 <__NVIC_GetPriorityGrouping>
 8002e9c:	6178      	str	r0, [r7, #20]
 8002e9e:	687a      	ldr	r2, [r7, #4]
 8002ea0:	68b9      	ldr	r1, [r7, #8]
 8002ea2:	6978      	ldr	r0, [r7, #20]
 8002ea4:	f7ff ff90 	bl	8002dc8 <NVIC_EncodePriority>
 8002ea8:	4602      	mov	r2, r0
 8002eaa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002eae:	4611      	mov	r1, r2
 8002eb0:	4618      	mov	r0, r3
 8002eb2:	f7ff ff5f 	bl	8002d74 <__NVIC_SetPriority>
 8002eb6:	bf00      	nop
 8002eb8:	3718      	adds	r7, #24
 8002eba:	46bd      	mov	sp, r7
 8002ebc:	bd80      	pop	{r7, pc}

08002ebe <HAL_NVIC_EnableIRQ>:
 8002ebe:	b580      	push	{r7, lr}
 8002ec0:	b082      	sub	sp, #8
 8002ec2:	af00      	add	r7, sp, #0
 8002ec4:	4603      	mov	r3, r0
 8002ec6:	71fb      	strb	r3, [r7, #7]
 8002ec8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ecc:	4618      	mov	r0, r3
 8002ece:	f7ff ff35 	bl	8002d3c <__NVIC_EnableIRQ>
 8002ed2:	bf00      	nop
 8002ed4:	3708      	adds	r7, #8
 8002ed6:	46bd      	mov	sp, r7
 8002ed8:	bd80      	pop	{r7, pc}

08002eda <HAL_SYSTICK_Config>:
 8002eda:	b580      	push	{r7, lr}
 8002edc:	b082      	sub	sp, #8
 8002ede:	af00      	add	r7, sp, #0
 8002ee0:	6078      	str	r0, [r7, #4]
 8002ee2:	6878      	ldr	r0, [r7, #4]
 8002ee4:	f7ff ffa2 	bl	8002e2c <SysTick_Config>
 8002ee8:	4603      	mov	r3, r0
 8002eea:	4618      	mov	r0, r3
 8002eec:	3708      	adds	r7, #8
 8002eee:	46bd      	mov	sp, r7
 8002ef0:	bd80      	pop	{r7, pc}

08002ef2 <HAL_DMA_Abort>:
 8002ef2:	b480      	push	{r7}
 8002ef4:	b085      	sub	sp, #20
 8002ef6:	af00      	add	r7, sp, #0
 8002ef8:	6078      	str	r0, [r7, #4]
 8002efa:	2300      	movs	r3, #0
 8002efc:	73fb      	strb	r3, [r7, #15]
 8002efe:	687b      	ldr	r3, [r7, #4]
 8002f00:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8002f04:	2b02      	cmp	r3, #2
 8002f06:	d008      	beq.n	8002f1a <HAL_DMA_Abort+0x28>
 8002f08:	687b      	ldr	r3, [r7, #4]
 8002f0a:	2204      	movs	r2, #4
 8002f0c:	639a      	str	r2, [r3, #56]	; 0x38
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	2200      	movs	r2, #0
 8002f12:	f883 2020 	strb.w	r2, [r3, #32]
 8002f16:	2301      	movs	r3, #1
 8002f18:	e020      	b.n	8002f5c <HAL_DMA_Abort+0x6a>
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	681b      	ldr	r3, [r3, #0]
 8002f1e:	681a      	ldr	r2, [r3, #0]
 8002f20:	687b      	ldr	r3, [r7, #4]
 8002f22:	681b      	ldr	r3, [r3, #0]
 8002f24:	f022 020e 	bic.w	r2, r2, #14
 8002f28:	601a      	str	r2, [r3, #0]
 8002f2a:	687b      	ldr	r3, [r7, #4]
 8002f2c:	681b      	ldr	r3, [r3, #0]
 8002f2e:	681a      	ldr	r2, [r3, #0]
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	681b      	ldr	r3, [r3, #0]
 8002f34:	f022 0201 	bic.w	r2, r2, #1
 8002f38:	601a      	str	r2, [r3, #0]
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002f42:	2101      	movs	r1, #1
 8002f44:	fa01 f202 	lsl.w	r2, r1, r2
 8002f48:	605a      	str	r2, [r3, #4]
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	2201      	movs	r2, #1
 8002f4e:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	2200      	movs	r2, #0
 8002f56:	f883 2020 	strb.w	r2, [r3, #32]
 8002f5a:	7bfb      	ldrb	r3, [r7, #15]
 8002f5c:	4618      	mov	r0, r3
 8002f5e:	3714      	adds	r7, #20
 8002f60:	46bd      	mov	sp, r7
 8002f62:	bc80      	pop	{r7}
 8002f64:	4770      	bx	lr
	...

08002f68 <HAL_DMA_Abort_IT>:
 8002f68:	b580      	push	{r7, lr}
 8002f6a:	b084      	sub	sp, #16
 8002f6c:	af00      	add	r7, sp, #0
 8002f6e:	6078      	str	r0, [r7, #4]
 8002f70:	2300      	movs	r3, #0
 8002f72:	73fb      	strb	r3, [r7, #15]
 8002f74:	687b      	ldr	r3, [r7, #4]
 8002f76:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8002f7a:	2b02      	cmp	r3, #2
 8002f7c:	d005      	beq.n	8002f8a <HAL_DMA_Abort_IT+0x22>
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	2204      	movs	r2, #4
 8002f82:	639a      	str	r2, [r3, #56]	; 0x38
 8002f84:	2301      	movs	r3, #1
 8002f86:	73fb      	strb	r3, [r7, #15]
 8002f88:	e051      	b.n	800302e <HAL_DMA_Abort_IT+0xc6>
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	681b      	ldr	r3, [r3, #0]
 8002f8e:	681a      	ldr	r2, [r3, #0]
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	681b      	ldr	r3, [r3, #0]
 8002f94:	f022 020e 	bic.w	r2, r2, #14
 8002f98:	601a      	str	r2, [r3, #0]
 8002f9a:	687b      	ldr	r3, [r7, #4]
 8002f9c:	681b      	ldr	r3, [r3, #0]
 8002f9e:	681a      	ldr	r2, [r3, #0]
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	681b      	ldr	r3, [r3, #0]
 8002fa4:	f022 0201 	bic.w	r2, r2, #1
 8002fa8:	601a      	str	r2, [r3, #0]
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	681b      	ldr	r3, [r3, #0]
 8002fae:	4a22      	ldr	r2, [pc, #136]	; (8003038 <HAL_DMA_Abort_IT+0xd0>)
 8002fb0:	4293      	cmp	r3, r2
 8002fb2:	d029      	beq.n	8003008 <HAL_DMA_Abort_IT+0xa0>
 8002fb4:	687b      	ldr	r3, [r7, #4]
 8002fb6:	681b      	ldr	r3, [r3, #0]
 8002fb8:	4a20      	ldr	r2, [pc, #128]	; (800303c <HAL_DMA_Abort_IT+0xd4>)
 8002fba:	4293      	cmp	r3, r2
 8002fbc:	d022      	beq.n	8003004 <HAL_DMA_Abort_IT+0x9c>
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	681b      	ldr	r3, [r3, #0]
 8002fc2:	4a1f      	ldr	r2, [pc, #124]	; (8003040 <HAL_DMA_Abort_IT+0xd8>)
 8002fc4:	4293      	cmp	r3, r2
 8002fc6:	d01a      	beq.n	8002ffe <HAL_DMA_Abort_IT+0x96>
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	681b      	ldr	r3, [r3, #0]
 8002fcc:	4a1d      	ldr	r2, [pc, #116]	; (8003044 <HAL_DMA_Abort_IT+0xdc>)
 8002fce:	4293      	cmp	r3, r2
 8002fd0:	d012      	beq.n	8002ff8 <HAL_DMA_Abort_IT+0x90>
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	681b      	ldr	r3, [r3, #0]
 8002fd6:	4a1c      	ldr	r2, [pc, #112]	; (8003048 <HAL_DMA_Abort_IT+0xe0>)
 8002fd8:	4293      	cmp	r3, r2
 8002fda:	d00a      	beq.n	8002ff2 <HAL_DMA_Abort_IT+0x8a>
 8002fdc:	687b      	ldr	r3, [r7, #4]
 8002fde:	681b      	ldr	r3, [r3, #0]
 8002fe0:	4a1a      	ldr	r2, [pc, #104]	; (800304c <HAL_DMA_Abort_IT+0xe4>)
 8002fe2:	4293      	cmp	r3, r2
 8002fe4:	d102      	bne.n	8002fec <HAL_DMA_Abort_IT+0x84>
 8002fe6:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8002fea:	e00e      	b.n	800300a <HAL_DMA_Abort_IT+0xa2>
 8002fec:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002ff0:	e00b      	b.n	800300a <HAL_DMA_Abort_IT+0xa2>
 8002ff2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8002ff6:	e008      	b.n	800300a <HAL_DMA_Abort_IT+0xa2>
 8002ff8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002ffc:	e005      	b.n	800300a <HAL_DMA_Abort_IT+0xa2>
 8002ffe:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003002:	e002      	b.n	800300a <HAL_DMA_Abort_IT+0xa2>
 8003004:	2310      	movs	r3, #16
 8003006:	e000      	b.n	800300a <HAL_DMA_Abort_IT+0xa2>
 8003008:	2301      	movs	r3, #1
 800300a:	4a11      	ldr	r2, [pc, #68]	; (8003050 <HAL_DMA_Abort_IT+0xe8>)
 800300c:	6053      	str	r3, [r2, #4]
 800300e:	687b      	ldr	r3, [r7, #4]
 8003010:	2201      	movs	r2, #1
 8003012:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8003016:	687b      	ldr	r3, [r7, #4]
 8003018:	2200      	movs	r2, #0
 800301a:	f883 2020 	strb.w	r2, [r3, #32]
 800301e:	687b      	ldr	r3, [r7, #4]
 8003020:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003022:	2b00      	cmp	r3, #0
 8003024:	d003      	beq.n	800302e <HAL_DMA_Abort_IT+0xc6>
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800302a:	6878      	ldr	r0, [r7, #4]
 800302c:	4798      	blx	r3
 800302e:	7bfb      	ldrb	r3, [r7, #15]
 8003030:	4618      	mov	r0, r3
 8003032:	3710      	adds	r7, #16
 8003034:	46bd      	mov	sp, r7
 8003036:	bd80      	pop	{r7, pc}
 8003038:	40020008 	.word	0x40020008
 800303c:	4002001c 	.word	0x4002001c
 8003040:	40020030 	.word	0x40020030
 8003044:	40020044 	.word	0x40020044
 8003048:	40020058 	.word	0x40020058
 800304c:	4002006c 	.word	0x4002006c
 8003050:	40020000 	.word	0x40020000

08003054 <HAL_GPIO_Init>:
 8003054:	b480      	push	{r7}
 8003056:	b08b      	sub	sp, #44	; 0x2c
 8003058:	af00      	add	r7, sp, #0
 800305a:	6078      	str	r0, [r7, #4]
 800305c:	6039      	str	r1, [r7, #0]
 800305e:	2300      	movs	r3, #0
 8003060:	627b      	str	r3, [r7, #36]	; 0x24
 8003062:	2300      	movs	r3, #0
 8003064:	623b      	str	r3, [r7, #32]
 8003066:	e169      	b.n	800333c <HAL_GPIO_Init+0x2e8>
 8003068:	2201      	movs	r2, #1
 800306a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800306c:	fa02 f303 	lsl.w	r3, r2, r3
 8003070:	61fb      	str	r3, [r7, #28]
 8003072:	683b      	ldr	r3, [r7, #0]
 8003074:	681b      	ldr	r3, [r3, #0]
 8003076:	69fa      	ldr	r2, [r7, #28]
 8003078:	4013      	ands	r3, r2
 800307a:	61bb      	str	r3, [r7, #24]
 800307c:	69ba      	ldr	r2, [r7, #24]
 800307e:	69fb      	ldr	r3, [r7, #28]
 8003080:	429a      	cmp	r2, r3
 8003082:	f040 8158 	bne.w	8003336 <HAL_GPIO_Init+0x2e2>
 8003086:	683b      	ldr	r3, [r7, #0]
 8003088:	685b      	ldr	r3, [r3, #4]
 800308a:	4a9a      	ldr	r2, [pc, #616]	; (80032f4 <HAL_GPIO_Init+0x2a0>)
 800308c:	4293      	cmp	r3, r2
 800308e:	d05e      	beq.n	800314e <HAL_GPIO_Init+0xfa>
 8003090:	4a98      	ldr	r2, [pc, #608]	; (80032f4 <HAL_GPIO_Init+0x2a0>)
 8003092:	4293      	cmp	r3, r2
 8003094:	d875      	bhi.n	8003182 <HAL_GPIO_Init+0x12e>
 8003096:	4a98      	ldr	r2, [pc, #608]	; (80032f8 <HAL_GPIO_Init+0x2a4>)
 8003098:	4293      	cmp	r3, r2
 800309a:	d058      	beq.n	800314e <HAL_GPIO_Init+0xfa>
 800309c:	4a96      	ldr	r2, [pc, #600]	; (80032f8 <HAL_GPIO_Init+0x2a4>)
 800309e:	4293      	cmp	r3, r2
 80030a0:	d86f      	bhi.n	8003182 <HAL_GPIO_Init+0x12e>
 80030a2:	4a96      	ldr	r2, [pc, #600]	; (80032fc <HAL_GPIO_Init+0x2a8>)
 80030a4:	4293      	cmp	r3, r2
 80030a6:	d052      	beq.n	800314e <HAL_GPIO_Init+0xfa>
 80030a8:	4a94      	ldr	r2, [pc, #592]	; (80032fc <HAL_GPIO_Init+0x2a8>)
 80030aa:	4293      	cmp	r3, r2
 80030ac:	d869      	bhi.n	8003182 <HAL_GPIO_Init+0x12e>
 80030ae:	4a94      	ldr	r2, [pc, #592]	; (8003300 <HAL_GPIO_Init+0x2ac>)
 80030b0:	4293      	cmp	r3, r2
 80030b2:	d04c      	beq.n	800314e <HAL_GPIO_Init+0xfa>
 80030b4:	4a92      	ldr	r2, [pc, #584]	; (8003300 <HAL_GPIO_Init+0x2ac>)
 80030b6:	4293      	cmp	r3, r2
 80030b8:	d863      	bhi.n	8003182 <HAL_GPIO_Init+0x12e>
 80030ba:	4a92      	ldr	r2, [pc, #584]	; (8003304 <HAL_GPIO_Init+0x2b0>)
 80030bc:	4293      	cmp	r3, r2
 80030be:	d046      	beq.n	800314e <HAL_GPIO_Init+0xfa>
 80030c0:	4a90      	ldr	r2, [pc, #576]	; (8003304 <HAL_GPIO_Init+0x2b0>)
 80030c2:	4293      	cmp	r3, r2
 80030c4:	d85d      	bhi.n	8003182 <HAL_GPIO_Init+0x12e>
 80030c6:	2b12      	cmp	r3, #18
 80030c8:	d82a      	bhi.n	8003120 <HAL_GPIO_Init+0xcc>
 80030ca:	2b12      	cmp	r3, #18
 80030cc:	d859      	bhi.n	8003182 <HAL_GPIO_Init+0x12e>
 80030ce:	a201      	add	r2, pc, #4	; (adr r2, 80030d4 <HAL_GPIO_Init+0x80>)
 80030d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80030d4:	0800314f 	.word	0x0800314f
 80030d8:	08003129 	.word	0x08003129
 80030dc:	0800313b 	.word	0x0800313b
 80030e0:	0800317d 	.word	0x0800317d
 80030e4:	08003183 	.word	0x08003183
 80030e8:	08003183 	.word	0x08003183
 80030ec:	08003183 	.word	0x08003183
 80030f0:	08003183 	.word	0x08003183
 80030f4:	08003183 	.word	0x08003183
 80030f8:	08003183 	.word	0x08003183
 80030fc:	08003183 	.word	0x08003183
 8003100:	08003183 	.word	0x08003183
 8003104:	08003183 	.word	0x08003183
 8003108:	08003183 	.word	0x08003183
 800310c:	08003183 	.word	0x08003183
 8003110:	08003183 	.word	0x08003183
 8003114:	08003183 	.word	0x08003183
 8003118:	08003131 	.word	0x08003131
 800311c:	08003145 	.word	0x08003145
 8003120:	4a79      	ldr	r2, [pc, #484]	; (8003308 <HAL_GPIO_Init+0x2b4>)
 8003122:	4293      	cmp	r3, r2
 8003124:	d013      	beq.n	800314e <HAL_GPIO_Init+0xfa>
 8003126:	e02c      	b.n	8003182 <HAL_GPIO_Init+0x12e>
 8003128:	683b      	ldr	r3, [r7, #0]
 800312a:	68db      	ldr	r3, [r3, #12]
 800312c:	623b      	str	r3, [r7, #32]
 800312e:	e029      	b.n	8003184 <HAL_GPIO_Init+0x130>
 8003130:	683b      	ldr	r3, [r7, #0]
 8003132:	68db      	ldr	r3, [r3, #12]
 8003134:	3304      	adds	r3, #4
 8003136:	623b      	str	r3, [r7, #32]
 8003138:	e024      	b.n	8003184 <HAL_GPIO_Init+0x130>
 800313a:	683b      	ldr	r3, [r7, #0]
 800313c:	68db      	ldr	r3, [r3, #12]
 800313e:	3308      	adds	r3, #8
 8003140:	623b      	str	r3, [r7, #32]
 8003142:	e01f      	b.n	8003184 <HAL_GPIO_Init+0x130>
 8003144:	683b      	ldr	r3, [r7, #0]
 8003146:	68db      	ldr	r3, [r3, #12]
 8003148:	330c      	adds	r3, #12
 800314a:	623b      	str	r3, [r7, #32]
 800314c:	e01a      	b.n	8003184 <HAL_GPIO_Init+0x130>
 800314e:	683b      	ldr	r3, [r7, #0]
 8003150:	689b      	ldr	r3, [r3, #8]
 8003152:	2b00      	cmp	r3, #0
 8003154:	d102      	bne.n	800315c <HAL_GPIO_Init+0x108>
 8003156:	2304      	movs	r3, #4
 8003158:	623b      	str	r3, [r7, #32]
 800315a:	e013      	b.n	8003184 <HAL_GPIO_Init+0x130>
 800315c:	683b      	ldr	r3, [r7, #0]
 800315e:	689b      	ldr	r3, [r3, #8]
 8003160:	2b01      	cmp	r3, #1
 8003162:	d105      	bne.n	8003170 <HAL_GPIO_Init+0x11c>
 8003164:	2308      	movs	r3, #8
 8003166:	623b      	str	r3, [r7, #32]
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	69fa      	ldr	r2, [r7, #28]
 800316c:	611a      	str	r2, [r3, #16]
 800316e:	e009      	b.n	8003184 <HAL_GPIO_Init+0x130>
 8003170:	2308      	movs	r3, #8
 8003172:	623b      	str	r3, [r7, #32]
 8003174:	687b      	ldr	r3, [r7, #4]
 8003176:	69fa      	ldr	r2, [r7, #28]
 8003178:	615a      	str	r2, [r3, #20]
 800317a:	e003      	b.n	8003184 <HAL_GPIO_Init+0x130>
 800317c:	2300      	movs	r3, #0
 800317e:	623b      	str	r3, [r7, #32]
 8003180:	e000      	b.n	8003184 <HAL_GPIO_Init+0x130>
 8003182:	bf00      	nop
 8003184:	69bb      	ldr	r3, [r7, #24]
 8003186:	2bff      	cmp	r3, #255	; 0xff
 8003188:	d801      	bhi.n	800318e <HAL_GPIO_Init+0x13a>
 800318a:	687b      	ldr	r3, [r7, #4]
 800318c:	e001      	b.n	8003192 <HAL_GPIO_Init+0x13e>
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	3304      	adds	r3, #4
 8003192:	617b      	str	r3, [r7, #20]
 8003194:	69bb      	ldr	r3, [r7, #24]
 8003196:	2bff      	cmp	r3, #255	; 0xff
 8003198:	d802      	bhi.n	80031a0 <HAL_GPIO_Init+0x14c>
 800319a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800319c:	009b      	lsls	r3, r3, #2
 800319e:	e002      	b.n	80031a6 <HAL_GPIO_Init+0x152>
 80031a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80031a2:	3b08      	subs	r3, #8
 80031a4:	009b      	lsls	r3, r3, #2
 80031a6:	613b      	str	r3, [r7, #16]
 80031a8:	697b      	ldr	r3, [r7, #20]
 80031aa:	681a      	ldr	r2, [r3, #0]
 80031ac:	210f      	movs	r1, #15
 80031ae:	693b      	ldr	r3, [r7, #16]
 80031b0:	fa01 f303 	lsl.w	r3, r1, r3
 80031b4:	43db      	mvns	r3, r3
 80031b6:	401a      	ands	r2, r3
 80031b8:	6a39      	ldr	r1, [r7, #32]
 80031ba:	693b      	ldr	r3, [r7, #16]
 80031bc:	fa01 f303 	lsl.w	r3, r1, r3
 80031c0:	431a      	orrs	r2, r3
 80031c2:	697b      	ldr	r3, [r7, #20]
 80031c4:	601a      	str	r2, [r3, #0]
 80031c6:	683b      	ldr	r3, [r7, #0]
 80031c8:	685b      	ldr	r3, [r3, #4]
 80031ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80031ce:	2b00      	cmp	r3, #0
 80031d0:	f000 80b1 	beq.w	8003336 <HAL_GPIO_Init+0x2e2>
 80031d4:	4b4d      	ldr	r3, [pc, #308]	; (800330c <HAL_GPIO_Init+0x2b8>)
 80031d6:	699b      	ldr	r3, [r3, #24]
 80031d8:	4a4c      	ldr	r2, [pc, #304]	; (800330c <HAL_GPIO_Init+0x2b8>)
 80031da:	f043 0301 	orr.w	r3, r3, #1
 80031de:	6193      	str	r3, [r2, #24]
 80031e0:	4b4a      	ldr	r3, [pc, #296]	; (800330c <HAL_GPIO_Init+0x2b8>)
 80031e2:	699b      	ldr	r3, [r3, #24]
 80031e4:	f003 0301 	and.w	r3, r3, #1
 80031e8:	60bb      	str	r3, [r7, #8]
 80031ea:	68bb      	ldr	r3, [r7, #8]
 80031ec:	4a48      	ldr	r2, [pc, #288]	; (8003310 <HAL_GPIO_Init+0x2bc>)
 80031ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80031f0:	089b      	lsrs	r3, r3, #2
 80031f2:	3302      	adds	r3, #2
 80031f4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80031f8:	60fb      	str	r3, [r7, #12]
 80031fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80031fc:	f003 0303 	and.w	r3, r3, #3
 8003200:	009b      	lsls	r3, r3, #2
 8003202:	220f      	movs	r2, #15
 8003204:	fa02 f303 	lsl.w	r3, r2, r3
 8003208:	43db      	mvns	r3, r3
 800320a:	68fa      	ldr	r2, [r7, #12]
 800320c:	4013      	ands	r3, r2
 800320e:	60fb      	str	r3, [r7, #12]
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	4a40      	ldr	r2, [pc, #256]	; (8003314 <HAL_GPIO_Init+0x2c0>)
 8003214:	4293      	cmp	r3, r2
 8003216:	d013      	beq.n	8003240 <HAL_GPIO_Init+0x1ec>
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	4a3f      	ldr	r2, [pc, #252]	; (8003318 <HAL_GPIO_Init+0x2c4>)
 800321c:	4293      	cmp	r3, r2
 800321e:	d00d      	beq.n	800323c <HAL_GPIO_Init+0x1e8>
 8003220:	687b      	ldr	r3, [r7, #4]
 8003222:	4a3e      	ldr	r2, [pc, #248]	; (800331c <HAL_GPIO_Init+0x2c8>)
 8003224:	4293      	cmp	r3, r2
 8003226:	d007      	beq.n	8003238 <HAL_GPIO_Init+0x1e4>
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	4a3d      	ldr	r2, [pc, #244]	; (8003320 <HAL_GPIO_Init+0x2cc>)
 800322c:	4293      	cmp	r3, r2
 800322e:	d101      	bne.n	8003234 <HAL_GPIO_Init+0x1e0>
 8003230:	2303      	movs	r3, #3
 8003232:	e006      	b.n	8003242 <HAL_GPIO_Init+0x1ee>
 8003234:	2304      	movs	r3, #4
 8003236:	e004      	b.n	8003242 <HAL_GPIO_Init+0x1ee>
 8003238:	2302      	movs	r3, #2
 800323a:	e002      	b.n	8003242 <HAL_GPIO_Init+0x1ee>
 800323c:	2301      	movs	r3, #1
 800323e:	e000      	b.n	8003242 <HAL_GPIO_Init+0x1ee>
 8003240:	2300      	movs	r3, #0
 8003242:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003244:	f002 0203 	and.w	r2, r2, #3
 8003248:	0092      	lsls	r2, r2, #2
 800324a:	4093      	lsls	r3, r2
 800324c:	68fa      	ldr	r2, [r7, #12]
 800324e:	4313      	orrs	r3, r2
 8003250:	60fb      	str	r3, [r7, #12]
 8003252:	492f      	ldr	r1, [pc, #188]	; (8003310 <HAL_GPIO_Init+0x2bc>)
 8003254:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003256:	089b      	lsrs	r3, r3, #2
 8003258:	3302      	adds	r3, #2
 800325a:	68fa      	ldr	r2, [r7, #12]
 800325c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003260:	683b      	ldr	r3, [r7, #0]
 8003262:	685b      	ldr	r3, [r3, #4]
 8003264:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003268:	2b00      	cmp	r3, #0
 800326a:	d006      	beq.n	800327a <HAL_GPIO_Init+0x226>
 800326c:	4b2d      	ldr	r3, [pc, #180]	; (8003324 <HAL_GPIO_Init+0x2d0>)
 800326e:	681a      	ldr	r2, [r3, #0]
 8003270:	492c      	ldr	r1, [pc, #176]	; (8003324 <HAL_GPIO_Init+0x2d0>)
 8003272:	69bb      	ldr	r3, [r7, #24]
 8003274:	4313      	orrs	r3, r2
 8003276:	600b      	str	r3, [r1, #0]
 8003278:	e006      	b.n	8003288 <HAL_GPIO_Init+0x234>
 800327a:	4b2a      	ldr	r3, [pc, #168]	; (8003324 <HAL_GPIO_Init+0x2d0>)
 800327c:	681a      	ldr	r2, [r3, #0]
 800327e:	69bb      	ldr	r3, [r7, #24]
 8003280:	43db      	mvns	r3, r3
 8003282:	4928      	ldr	r1, [pc, #160]	; (8003324 <HAL_GPIO_Init+0x2d0>)
 8003284:	4013      	ands	r3, r2
 8003286:	600b      	str	r3, [r1, #0]
 8003288:	683b      	ldr	r3, [r7, #0]
 800328a:	685b      	ldr	r3, [r3, #4]
 800328c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003290:	2b00      	cmp	r3, #0
 8003292:	d006      	beq.n	80032a2 <HAL_GPIO_Init+0x24e>
 8003294:	4b23      	ldr	r3, [pc, #140]	; (8003324 <HAL_GPIO_Init+0x2d0>)
 8003296:	685a      	ldr	r2, [r3, #4]
 8003298:	4922      	ldr	r1, [pc, #136]	; (8003324 <HAL_GPIO_Init+0x2d0>)
 800329a:	69bb      	ldr	r3, [r7, #24]
 800329c:	4313      	orrs	r3, r2
 800329e:	604b      	str	r3, [r1, #4]
 80032a0:	e006      	b.n	80032b0 <HAL_GPIO_Init+0x25c>
 80032a2:	4b20      	ldr	r3, [pc, #128]	; (8003324 <HAL_GPIO_Init+0x2d0>)
 80032a4:	685a      	ldr	r2, [r3, #4]
 80032a6:	69bb      	ldr	r3, [r7, #24]
 80032a8:	43db      	mvns	r3, r3
 80032aa:	491e      	ldr	r1, [pc, #120]	; (8003324 <HAL_GPIO_Init+0x2d0>)
 80032ac:	4013      	ands	r3, r2
 80032ae:	604b      	str	r3, [r1, #4]
 80032b0:	683b      	ldr	r3, [r7, #0]
 80032b2:	685b      	ldr	r3, [r3, #4]
 80032b4:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80032b8:	2b00      	cmp	r3, #0
 80032ba:	d006      	beq.n	80032ca <HAL_GPIO_Init+0x276>
 80032bc:	4b19      	ldr	r3, [pc, #100]	; (8003324 <HAL_GPIO_Init+0x2d0>)
 80032be:	689a      	ldr	r2, [r3, #8]
 80032c0:	4918      	ldr	r1, [pc, #96]	; (8003324 <HAL_GPIO_Init+0x2d0>)
 80032c2:	69bb      	ldr	r3, [r7, #24]
 80032c4:	4313      	orrs	r3, r2
 80032c6:	608b      	str	r3, [r1, #8]
 80032c8:	e006      	b.n	80032d8 <HAL_GPIO_Init+0x284>
 80032ca:	4b16      	ldr	r3, [pc, #88]	; (8003324 <HAL_GPIO_Init+0x2d0>)
 80032cc:	689a      	ldr	r2, [r3, #8]
 80032ce:	69bb      	ldr	r3, [r7, #24]
 80032d0:	43db      	mvns	r3, r3
 80032d2:	4914      	ldr	r1, [pc, #80]	; (8003324 <HAL_GPIO_Init+0x2d0>)
 80032d4:	4013      	ands	r3, r2
 80032d6:	608b      	str	r3, [r1, #8]
 80032d8:	683b      	ldr	r3, [r7, #0]
 80032da:	685b      	ldr	r3, [r3, #4]
 80032dc:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80032e0:	2b00      	cmp	r3, #0
 80032e2:	d021      	beq.n	8003328 <HAL_GPIO_Init+0x2d4>
 80032e4:	4b0f      	ldr	r3, [pc, #60]	; (8003324 <HAL_GPIO_Init+0x2d0>)
 80032e6:	68da      	ldr	r2, [r3, #12]
 80032e8:	490e      	ldr	r1, [pc, #56]	; (8003324 <HAL_GPIO_Init+0x2d0>)
 80032ea:	69bb      	ldr	r3, [r7, #24]
 80032ec:	4313      	orrs	r3, r2
 80032ee:	60cb      	str	r3, [r1, #12]
 80032f0:	e021      	b.n	8003336 <HAL_GPIO_Init+0x2e2>
 80032f2:	bf00      	nop
 80032f4:	10320000 	.word	0x10320000
 80032f8:	10310000 	.word	0x10310000
 80032fc:	10220000 	.word	0x10220000
 8003300:	10210000 	.word	0x10210000
 8003304:	10120000 	.word	0x10120000
 8003308:	10110000 	.word	0x10110000
 800330c:	40021000 	.word	0x40021000
 8003310:	40010000 	.word	0x40010000
 8003314:	40010800 	.word	0x40010800
 8003318:	40010c00 	.word	0x40010c00
 800331c:	40011000 	.word	0x40011000
 8003320:	40011400 	.word	0x40011400
 8003324:	40010400 	.word	0x40010400
 8003328:	4b0b      	ldr	r3, [pc, #44]	; (8003358 <HAL_GPIO_Init+0x304>)
 800332a:	68da      	ldr	r2, [r3, #12]
 800332c:	69bb      	ldr	r3, [r7, #24]
 800332e:	43db      	mvns	r3, r3
 8003330:	4909      	ldr	r1, [pc, #36]	; (8003358 <HAL_GPIO_Init+0x304>)
 8003332:	4013      	ands	r3, r2
 8003334:	60cb      	str	r3, [r1, #12]
 8003336:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003338:	3301      	adds	r3, #1
 800333a:	627b      	str	r3, [r7, #36]	; 0x24
 800333c:	683b      	ldr	r3, [r7, #0]
 800333e:	681a      	ldr	r2, [r3, #0]
 8003340:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003342:	fa22 f303 	lsr.w	r3, r2, r3
 8003346:	2b00      	cmp	r3, #0
 8003348:	f47f ae8e 	bne.w	8003068 <HAL_GPIO_Init+0x14>
 800334c:	bf00      	nop
 800334e:	bf00      	nop
 8003350:	372c      	adds	r7, #44	; 0x2c
 8003352:	46bd      	mov	sp, r7
 8003354:	bc80      	pop	{r7}
 8003356:	4770      	bx	lr
 8003358:	40010400 	.word	0x40010400

0800335c <HAL_GPIO_ReadPin>:
 800335c:	b480      	push	{r7}
 800335e:	b085      	sub	sp, #20
 8003360:	af00      	add	r7, sp, #0
 8003362:	6078      	str	r0, [r7, #4]
 8003364:	460b      	mov	r3, r1
 8003366:	807b      	strh	r3, [r7, #2]
 8003368:	687b      	ldr	r3, [r7, #4]
 800336a:	689a      	ldr	r2, [r3, #8]
 800336c:	887b      	ldrh	r3, [r7, #2]
 800336e:	4013      	ands	r3, r2
 8003370:	2b00      	cmp	r3, #0
 8003372:	d002      	beq.n	800337a <HAL_GPIO_ReadPin+0x1e>
 8003374:	2301      	movs	r3, #1
 8003376:	73fb      	strb	r3, [r7, #15]
 8003378:	e001      	b.n	800337e <HAL_GPIO_ReadPin+0x22>
 800337a:	2300      	movs	r3, #0
 800337c:	73fb      	strb	r3, [r7, #15]
 800337e:	7bfb      	ldrb	r3, [r7, #15]
 8003380:	4618      	mov	r0, r3
 8003382:	3714      	adds	r7, #20
 8003384:	46bd      	mov	sp, r7
 8003386:	bc80      	pop	{r7}
 8003388:	4770      	bx	lr

0800338a <HAL_GPIO_WritePin>:
 800338a:	b480      	push	{r7}
 800338c:	b083      	sub	sp, #12
 800338e:	af00      	add	r7, sp, #0
 8003390:	6078      	str	r0, [r7, #4]
 8003392:	460b      	mov	r3, r1
 8003394:	807b      	strh	r3, [r7, #2]
 8003396:	4613      	mov	r3, r2
 8003398:	707b      	strb	r3, [r7, #1]
 800339a:	787b      	ldrb	r3, [r7, #1]
 800339c:	2b00      	cmp	r3, #0
 800339e:	d003      	beq.n	80033a8 <HAL_GPIO_WritePin+0x1e>
 80033a0:	887a      	ldrh	r2, [r7, #2]
 80033a2:	687b      	ldr	r3, [r7, #4]
 80033a4:	611a      	str	r2, [r3, #16]
 80033a6:	e003      	b.n	80033b0 <HAL_GPIO_WritePin+0x26>
 80033a8:	887b      	ldrh	r3, [r7, #2]
 80033aa:	041a      	lsls	r2, r3, #16
 80033ac:	687b      	ldr	r3, [r7, #4]
 80033ae:	611a      	str	r2, [r3, #16]
 80033b0:	bf00      	nop
 80033b2:	370c      	adds	r7, #12
 80033b4:	46bd      	mov	sp, r7
 80033b6:	bc80      	pop	{r7}
 80033b8:	4770      	bx	lr

080033ba <HAL_GPIO_TogglePin>:
 80033ba:	b480      	push	{r7}
 80033bc:	b085      	sub	sp, #20
 80033be:	af00      	add	r7, sp, #0
 80033c0:	6078      	str	r0, [r7, #4]
 80033c2:	460b      	mov	r3, r1
 80033c4:	807b      	strh	r3, [r7, #2]
 80033c6:	687b      	ldr	r3, [r7, #4]
 80033c8:	68db      	ldr	r3, [r3, #12]
 80033ca:	60fb      	str	r3, [r7, #12]
 80033cc:	887a      	ldrh	r2, [r7, #2]
 80033ce:	68fb      	ldr	r3, [r7, #12]
 80033d0:	4013      	ands	r3, r2
 80033d2:	041a      	lsls	r2, r3, #16
 80033d4:	68fb      	ldr	r3, [r7, #12]
 80033d6:	43d9      	mvns	r1, r3
 80033d8:	887b      	ldrh	r3, [r7, #2]
 80033da:	400b      	ands	r3, r1
 80033dc:	431a      	orrs	r2, r3
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	611a      	str	r2, [r3, #16]
 80033e2:	bf00      	nop
 80033e4:	3714      	adds	r7, #20
 80033e6:	46bd      	mov	sp, r7
 80033e8:	bc80      	pop	{r7}
 80033ea:	4770      	bx	lr

080033ec <HAL_I2C_Init>:
 80033ec:	b580      	push	{r7, lr}
 80033ee:	b084      	sub	sp, #16
 80033f0:	af00      	add	r7, sp, #0
 80033f2:	6078      	str	r0, [r7, #4]
 80033f4:	687b      	ldr	r3, [r7, #4]
 80033f6:	2b00      	cmp	r3, #0
 80033f8:	d101      	bne.n	80033fe <HAL_I2C_Init+0x12>
 80033fa:	2301      	movs	r3, #1
 80033fc:	e12b      	b.n	8003656 <HAL_I2C_Init+0x26a>
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003404:	b2db      	uxtb	r3, r3
 8003406:	2b00      	cmp	r3, #0
 8003408:	d106      	bne.n	8003418 <HAL_I2C_Init+0x2c>
 800340a:	687b      	ldr	r3, [r7, #4]
 800340c:	2200      	movs	r2, #0
 800340e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003412:	6878      	ldr	r0, [r7, #4]
 8003414:	f7ff f820 	bl	8002458 <HAL_I2C_MspInit>
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	2224      	movs	r2, #36	; 0x24
 800341c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	681b      	ldr	r3, [r3, #0]
 8003424:	681a      	ldr	r2, [r3, #0]
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	681b      	ldr	r3, [r3, #0]
 800342a:	f022 0201 	bic.w	r2, r2, #1
 800342e:	601a      	str	r2, [r3, #0]
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	681b      	ldr	r3, [r3, #0]
 8003434:	681a      	ldr	r2, [r3, #0]
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	681b      	ldr	r3, [r3, #0]
 800343a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800343e:	601a      	str	r2, [r3, #0]
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	681b      	ldr	r3, [r3, #0]
 8003444:	681a      	ldr	r2, [r3, #0]
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	681b      	ldr	r3, [r3, #0]
 800344a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800344e:	601a      	str	r2, [r3, #0]
 8003450:	f000 ffea 	bl	8004428 <HAL_RCC_GetPCLK1Freq>
 8003454:	60f8      	str	r0, [r7, #12]
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	685b      	ldr	r3, [r3, #4]
 800345a:	4a81      	ldr	r2, [pc, #516]	; (8003660 <HAL_I2C_Init+0x274>)
 800345c:	4293      	cmp	r3, r2
 800345e:	d807      	bhi.n	8003470 <HAL_I2C_Init+0x84>
 8003460:	68fb      	ldr	r3, [r7, #12]
 8003462:	4a80      	ldr	r2, [pc, #512]	; (8003664 <HAL_I2C_Init+0x278>)
 8003464:	4293      	cmp	r3, r2
 8003466:	bf94      	ite	ls
 8003468:	2301      	movls	r3, #1
 800346a:	2300      	movhi	r3, #0
 800346c:	b2db      	uxtb	r3, r3
 800346e:	e006      	b.n	800347e <HAL_I2C_Init+0x92>
 8003470:	68fb      	ldr	r3, [r7, #12]
 8003472:	4a7d      	ldr	r2, [pc, #500]	; (8003668 <HAL_I2C_Init+0x27c>)
 8003474:	4293      	cmp	r3, r2
 8003476:	bf94      	ite	ls
 8003478:	2301      	movls	r3, #1
 800347a:	2300      	movhi	r3, #0
 800347c:	b2db      	uxtb	r3, r3
 800347e:	2b00      	cmp	r3, #0
 8003480:	d001      	beq.n	8003486 <HAL_I2C_Init+0x9a>
 8003482:	2301      	movs	r3, #1
 8003484:	e0e7      	b.n	8003656 <HAL_I2C_Init+0x26a>
 8003486:	68fb      	ldr	r3, [r7, #12]
 8003488:	4a78      	ldr	r2, [pc, #480]	; (800366c <HAL_I2C_Init+0x280>)
 800348a:	fba2 2303 	umull	r2, r3, r2, r3
 800348e:	0c9b      	lsrs	r3, r3, #18
 8003490:	60bb      	str	r3, [r7, #8]
 8003492:	687b      	ldr	r3, [r7, #4]
 8003494:	681b      	ldr	r3, [r3, #0]
 8003496:	685b      	ldr	r3, [r3, #4]
 8003498:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 800349c:	687b      	ldr	r3, [r7, #4]
 800349e:	681b      	ldr	r3, [r3, #0]
 80034a0:	68ba      	ldr	r2, [r7, #8]
 80034a2:	430a      	orrs	r2, r1
 80034a4:	605a      	str	r2, [r3, #4]
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	681b      	ldr	r3, [r3, #0]
 80034aa:	6a1b      	ldr	r3, [r3, #32]
 80034ac:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 80034b0:	687b      	ldr	r3, [r7, #4]
 80034b2:	685b      	ldr	r3, [r3, #4]
 80034b4:	4a6a      	ldr	r2, [pc, #424]	; (8003660 <HAL_I2C_Init+0x274>)
 80034b6:	4293      	cmp	r3, r2
 80034b8:	d802      	bhi.n	80034c0 <HAL_I2C_Init+0xd4>
 80034ba:	68bb      	ldr	r3, [r7, #8]
 80034bc:	3301      	adds	r3, #1
 80034be:	e009      	b.n	80034d4 <HAL_I2C_Init+0xe8>
 80034c0:	68bb      	ldr	r3, [r7, #8]
 80034c2:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80034c6:	fb02 f303 	mul.w	r3, r2, r3
 80034ca:	4a69      	ldr	r2, [pc, #420]	; (8003670 <HAL_I2C_Init+0x284>)
 80034cc:	fba2 2303 	umull	r2, r3, r2, r3
 80034d0:	099b      	lsrs	r3, r3, #6
 80034d2:	3301      	adds	r3, #1
 80034d4:	687a      	ldr	r2, [r7, #4]
 80034d6:	6812      	ldr	r2, [r2, #0]
 80034d8:	430b      	orrs	r3, r1
 80034da:	6213      	str	r3, [r2, #32]
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	681b      	ldr	r3, [r3, #0]
 80034e0:	69db      	ldr	r3, [r3, #28]
 80034e2:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 80034e6:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80034ea:	687b      	ldr	r3, [r7, #4]
 80034ec:	685b      	ldr	r3, [r3, #4]
 80034ee:	495c      	ldr	r1, [pc, #368]	; (8003660 <HAL_I2C_Init+0x274>)
 80034f0:	428b      	cmp	r3, r1
 80034f2:	d819      	bhi.n	8003528 <HAL_I2C_Init+0x13c>
 80034f4:	68fb      	ldr	r3, [r7, #12]
 80034f6:	1e59      	subs	r1, r3, #1
 80034f8:	687b      	ldr	r3, [r7, #4]
 80034fa:	685b      	ldr	r3, [r3, #4]
 80034fc:	005b      	lsls	r3, r3, #1
 80034fe:	fbb1 f3f3 	udiv	r3, r1, r3
 8003502:	1c59      	adds	r1, r3, #1
 8003504:	f640 73fc 	movw	r3, #4092	; 0xffc
 8003508:	400b      	ands	r3, r1
 800350a:	2b00      	cmp	r3, #0
 800350c:	d00a      	beq.n	8003524 <HAL_I2C_Init+0x138>
 800350e:	68fb      	ldr	r3, [r7, #12]
 8003510:	1e59      	subs	r1, r3, #1
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	685b      	ldr	r3, [r3, #4]
 8003516:	005b      	lsls	r3, r3, #1
 8003518:	fbb1 f3f3 	udiv	r3, r1, r3
 800351c:	3301      	adds	r3, #1
 800351e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003522:	e051      	b.n	80035c8 <HAL_I2C_Init+0x1dc>
 8003524:	2304      	movs	r3, #4
 8003526:	e04f      	b.n	80035c8 <HAL_I2C_Init+0x1dc>
 8003528:	687b      	ldr	r3, [r7, #4]
 800352a:	689b      	ldr	r3, [r3, #8]
 800352c:	2b00      	cmp	r3, #0
 800352e:	d111      	bne.n	8003554 <HAL_I2C_Init+0x168>
 8003530:	68fb      	ldr	r3, [r7, #12]
 8003532:	1e58      	subs	r0, r3, #1
 8003534:	687b      	ldr	r3, [r7, #4]
 8003536:	6859      	ldr	r1, [r3, #4]
 8003538:	460b      	mov	r3, r1
 800353a:	005b      	lsls	r3, r3, #1
 800353c:	440b      	add	r3, r1
 800353e:	fbb0 f3f3 	udiv	r3, r0, r3
 8003542:	3301      	adds	r3, #1
 8003544:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003548:	2b00      	cmp	r3, #0
 800354a:	bf0c      	ite	eq
 800354c:	2301      	moveq	r3, #1
 800354e:	2300      	movne	r3, #0
 8003550:	b2db      	uxtb	r3, r3
 8003552:	e012      	b.n	800357a <HAL_I2C_Init+0x18e>
 8003554:	68fb      	ldr	r3, [r7, #12]
 8003556:	1e58      	subs	r0, r3, #1
 8003558:	687b      	ldr	r3, [r7, #4]
 800355a:	6859      	ldr	r1, [r3, #4]
 800355c:	460b      	mov	r3, r1
 800355e:	009b      	lsls	r3, r3, #2
 8003560:	440b      	add	r3, r1
 8003562:	0099      	lsls	r1, r3, #2
 8003564:	440b      	add	r3, r1
 8003566:	fbb0 f3f3 	udiv	r3, r0, r3
 800356a:	3301      	adds	r3, #1
 800356c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003570:	2b00      	cmp	r3, #0
 8003572:	bf0c      	ite	eq
 8003574:	2301      	moveq	r3, #1
 8003576:	2300      	movne	r3, #0
 8003578:	b2db      	uxtb	r3, r3
 800357a:	2b00      	cmp	r3, #0
 800357c:	d001      	beq.n	8003582 <HAL_I2C_Init+0x196>
 800357e:	2301      	movs	r3, #1
 8003580:	e022      	b.n	80035c8 <HAL_I2C_Init+0x1dc>
 8003582:	687b      	ldr	r3, [r7, #4]
 8003584:	689b      	ldr	r3, [r3, #8]
 8003586:	2b00      	cmp	r3, #0
 8003588:	d10e      	bne.n	80035a8 <HAL_I2C_Init+0x1bc>
 800358a:	68fb      	ldr	r3, [r7, #12]
 800358c:	1e58      	subs	r0, r3, #1
 800358e:	687b      	ldr	r3, [r7, #4]
 8003590:	6859      	ldr	r1, [r3, #4]
 8003592:	460b      	mov	r3, r1
 8003594:	005b      	lsls	r3, r3, #1
 8003596:	440b      	add	r3, r1
 8003598:	fbb0 f3f3 	udiv	r3, r0, r3
 800359c:	3301      	adds	r3, #1
 800359e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80035a2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80035a6:	e00f      	b.n	80035c8 <HAL_I2C_Init+0x1dc>
 80035a8:	68fb      	ldr	r3, [r7, #12]
 80035aa:	1e58      	subs	r0, r3, #1
 80035ac:	687b      	ldr	r3, [r7, #4]
 80035ae:	6859      	ldr	r1, [r3, #4]
 80035b0:	460b      	mov	r3, r1
 80035b2:	009b      	lsls	r3, r3, #2
 80035b4:	440b      	add	r3, r1
 80035b6:	0099      	lsls	r1, r3, #2
 80035b8:	440b      	add	r3, r1
 80035ba:	fbb0 f3f3 	udiv	r3, r0, r3
 80035be:	3301      	adds	r3, #1
 80035c0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80035c4:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80035c8:	6879      	ldr	r1, [r7, #4]
 80035ca:	6809      	ldr	r1, [r1, #0]
 80035cc:	4313      	orrs	r3, r2
 80035ce:	61cb      	str	r3, [r1, #28]
 80035d0:	687b      	ldr	r3, [r7, #4]
 80035d2:	681b      	ldr	r3, [r3, #0]
 80035d4:	681b      	ldr	r3, [r3, #0]
 80035d6:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 80035da:	687b      	ldr	r3, [r7, #4]
 80035dc:	69da      	ldr	r2, [r3, #28]
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	6a1b      	ldr	r3, [r3, #32]
 80035e2:	431a      	orrs	r2, r3
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	430a      	orrs	r2, r1
 80035ea:	601a      	str	r2, [r3, #0]
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	681b      	ldr	r3, [r3, #0]
 80035f0:	689b      	ldr	r3, [r3, #8]
 80035f2:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 80035f6:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80035fa:	687a      	ldr	r2, [r7, #4]
 80035fc:	6911      	ldr	r1, [r2, #16]
 80035fe:	687a      	ldr	r2, [r7, #4]
 8003600:	68d2      	ldr	r2, [r2, #12]
 8003602:	4311      	orrs	r1, r2
 8003604:	687a      	ldr	r2, [r7, #4]
 8003606:	6812      	ldr	r2, [r2, #0]
 8003608:	430b      	orrs	r3, r1
 800360a:	6093      	str	r3, [r2, #8]
 800360c:	687b      	ldr	r3, [r7, #4]
 800360e:	681b      	ldr	r3, [r3, #0]
 8003610:	68db      	ldr	r3, [r3, #12]
 8003612:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	695a      	ldr	r2, [r3, #20]
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	699b      	ldr	r3, [r3, #24]
 800361e:	431a      	orrs	r2, r3
 8003620:	687b      	ldr	r3, [r7, #4]
 8003622:	681b      	ldr	r3, [r3, #0]
 8003624:	430a      	orrs	r2, r1
 8003626:	60da      	str	r2, [r3, #12]
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	681b      	ldr	r3, [r3, #0]
 800362c:	681a      	ldr	r2, [r3, #0]
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	681b      	ldr	r3, [r3, #0]
 8003632:	f042 0201 	orr.w	r2, r2, #1
 8003636:	601a      	str	r2, [r3, #0]
 8003638:	687b      	ldr	r3, [r7, #4]
 800363a:	2200      	movs	r2, #0
 800363c:	641a      	str	r2, [r3, #64]	; 0x40
 800363e:	687b      	ldr	r3, [r7, #4]
 8003640:	2220      	movs	r2, #32
 8003642:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	2200      	movs	r2, #0
 800364a:	631a      	str	r2, [r3, #48]	; 0x30
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	2200      	movs	r2, #0
 8003650:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003654:	2300      	movs	r3, #0
 8003656:	4618      	mov	r0, r3
 8003658:	3710      	adds	r7, #16
 800365a:	46bd      	mov	sp, r7
 800365c:	bd80      	pop	{r7, pc}
 800365e:	bf00      	nop
 8003660:	000186a0 	.word	0x000186a0
 8003664:	001e847f 	.word	0x001e847f
 8003668:	003d08ff 	.word	0x003d08ff
 800366c:	431bde83 	.word	0x431bde83
 8003670:	10624dd3 	.word	0x10624dd3

08003674 <HAL_I2C_Master_Transmit>:
 8003674:	b580      	push	{r7, lr}
 8003676:	b088      	sub	sp, #32
 8003678:	af02      	add	r7, sp, #8
 800367a:	60f8      	str	r0, [r7, #12]
 800367c:	607a      	str	r2, [r7, #4]
 800367e:	461a      	mov	r2, r3
 8003680:	460b      	mov	r3, r1
 8003682:	817b      	strh	r3, [r7, #10]
 8003684:	4613      	mov	r3, r2
 8003686:	813b      	strh	r3, [r7, #8]
 8003688:	f7ff faf8 	bl	8002c7c <HAL_GetTick>
 800368c:	6178      	str	r0, [r7, #20]
 800368e:	68fb      	ldr	r3, [r7, #12]
 8003690:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003694:	b2db      	uxtb	r3, r3
 8003696:	2b20      	cmp	r3, #32
 8003698:	f040 80e0 	bne.w	800385c <HAL_I2C_Master_Transmit+0x1e8>
 800369c:	697b      	ldr	r3, [r7, #20]
 800369e:	9300      	str	r3, [sp, #0]
 80036a0:	2319      	movs	r3, #25
 80036a2:	2201      	movs	r2, #1
 80036a4:	4970      	ldr	r1, [pc, #448]	; (8003868 <HAL_I2C_Master_Transmit+0x1f4>)
 80036a6:	68f8      	ldr	r0, [r7, #12]
 80036a8:	f000 f964 	bl	8003974 <I2C_WaitOnFlagUntilTimeout>
 80036ac:	4603      	mov	r3, r0
 80036ae:	2b00      	cmp	r3, #0
 80036b0:	d001      	beq.n	80036b6 <HAL_I2C_Master_Transmit+0x42>
 80036b2:	2302      	movs	r3, #2
 80036b4:	e0d3      	b.n	800385e <HAL_I2C_Master_Transmit+0x1ea>
 80036b6:	68fb      	ldr	r3, [r7, #12]
 80036b8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80036bc:	2b01      	cmp	r3, #1
 80036be:	d101      	bne.n	80036c4 <HAL_I2C_Master_Transmit+0x50>
 80036c0:	2302      	movs	r3, #2
 80036c2:	e0cc      	b.n	800385e <HAL_I2C_Master_Transmit+0x1ea>
 80036c4:	68fb      	ldr	r3, [r7, #12]
 80036c6:	2201      	movs	r2, #1
 80036c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80036cc:	68fb      	ldr	r3, [r7, #12]
 80036ce:	681b      	ldr	r3, [r3, #0]
 80036d0:	681b      	ldr	r3, [r3, #0]
 80036d2:	f003 0301 	and.w	r3, r3, #1
 80036d6:	2b01      	cmp	r3, #1
 80036d8:	d007      	beq.n	80036ea <HAL_I2C_Master_Transmit+0x76>
 80036da:	68fb      	ldr	r3, [r7, #12]
 80036dc:	681b      	ldr	r3, [r3, #0]
 80036de:	681a      	ldr	r2, [r3, #0]
 80036e0:	68fb      	ldr	r3, [r7, #12]
 80036e2:	681b      	ldr	r3, [r3, #0]
 80036e4:	f042 0201 	orr.w	r2, r2, #1
 80036e8:	601a      	str	r2, [r3, #0]
 80036ea:	68fb      	ldr	r3, [r7, #12]
 80036ec:	681b      	ldr	r3, [r3, #0]
 80036ee:	681a      	ldr	r2, [r3, #0]
 80036f0:	68fb      	ldr	r3, [r7, #12]
 80036f2:	681b      	ldr	r3, [r3, #0]
 80036f4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80036f8:	601a      	str	r2, [r3, #0]
 80036fa:	68fb      	ldr	r3, [r7, #12]
 80036fc:	2221      	movs	r2, #33	; 0x21
 80036fe:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003702:	68fb      	ldr	r3, [r7, #12]
 8003704:	2210      	movs	r2, #16
 8003706:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800370a:	68fb      	ldr	r3, [r7, #12]
 800370c:	2200      	movs	r2, #0
 800370e:	641a      	str	r2, [r3, #64]	; 0x40
 8003710:	68fb      	ldr	r3, [r7, #12]
 8003712:	687a      	ldr	r2, [r7, #4]
 8003714:	625a      	str	r2, [r3, #36]	; 0x24
 8003716:	68fb      	ldr	r3, [r7, #12]
 8003718:	893a      	ldrh	r2, [r7, #8]
 800371a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800371c:	68fb      	ldr	r3, [r7, #12]
 800371e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003720:	b29a      	uxth	r2, r3
 8003722:	68fb      	ldr	r3, [r7, #12]
 8003724:	851a      	strh	r2, [r3, #40]	; 0x28
 8003726:	68fb      	ldr	r3, [r7, #12]
 8003728:	4a50      	ldr	r2, [pc, #320]	; (800386c <HAL_I2C_Master_Transmit+0x1f8>)
 800372a:	62da      	str	r2, [r3, #44]	; 0x2c
 800372c:	8979      	ldrh	r1, [r7, #10]
 800372e:	697b      	ldr	r3, [r7, #20]
 8003730:	6a3a      	ldr	r2, [r7, #32]
 8003732:	68f8      	ldr	r0, [r7, #12]
 8003734:	f000 f89c 	bl	8003870 <I2C_MasterRequestWrite>
 8003738:	4603      	mov	r3, r0
 800373a:	2b00      	cmp	r3, #0
 800373c:	d001      	beq.n	8003742 <HAL_I2C_Master_Transmit+0xce>
 800373e:	2301      	movs	r3, #1
 8003740:	e08d      	b.n	800385e <HAL_I2C_Master_Transmit+0x1ea>
 8003742:	2300      	movs	r3, #0
 8003744:	613b      	str	r3, [r7, #16]
 8003746:	68fb      	ldr	r3, [r7, #12]
 8003748:	681b      	ldr	r3, [r3, #0]
 800374a:	695b      	ldr	r3, [r3, #20]
 800374c:	613b      	str	r3, [r7, #16]
 800374e:	68fb      	ldr	r3, [r7, #12]
 8003750:	681b      	ldr	r3, [r3, #0]
 8003752:	699b      	ldr	r3, [r3, #24]
 8003754:	613b      	str	r3, [r7, #16]
 8003756:	693b      	ldr	r3, [r7, #16]
 8003758:	e066      	b.n	8003828 <HAL_I2C_Master_Transmit+0x1b4>
 800375a:	697a      	ldr	r2, [r7, #20]
 800375c:	6a39      	ldr	r1, [r7, #32]
 800375e:	68f8      	ldr	r0, [r7, #12]
 8003760:	f000 f9de 	bl	8003b20 <I2C_WaitOnTXEFlagUntilTimeout>
 8003764:	4603      	mov	r3, r0
 8003766:	2b00      	cmp	r3, #0
 8003768:	d00d      	beq.n	8003786 <HAL_I2C_Master_Transmit+0x112>
 800376a:	68fb      	ldr	r3, [r7, #12]
 800376c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800376e:	2b04      	cmp	r3, #4
 8003770:	d107      	bne.n	8003782 <HAL_I2C_Master_Transmit+0x10e>
 8003772:	68fb      	ldr	r3, [r7, #12]
 8003774:	681b      	ldr	r3, [r3, #0]
 8003776:	681a      	ldr	r2, [r3, #0]
 8003778:	68fb      	ldr	r3, [r7, #12]
 800377a:	681b      	ldr	r3, [r3, #0]
 800377c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003780:	601a      	str	r2, [r3, #0]
 8003782:	2301      	movs	r3, #1
 8003784:	e06b      	b.n	800385e <HAL_I2C_Master_Transmit+0x1ea>
 8003786:	68fb      	ldr	r3, [r7, #12]
 8003788:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800378a:	781a      	ldrb	r2, [r3, #0]
 800378c:	68fb      	ldr	r3, [r7, #12]
 800378e:	681b      	ldr	r3, [r3, #0]
 8003790:	611a      	str	r2, [r3, #16]
 8003792:	68fb      	ldr	r3, [r7, #12]
 8003794:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003796:	1c5a      	adds	r2, r3, #1
 8003798:	68fb      	ldr	r3, [r7, #12]
 800379a:	625a      	str	r2, [r3, #36]	; 0x24
 800379c:	68fb      	ldr	r3, [r7, #12]
 800379e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80037a0:	b29b      	uxth	r3, r3
 80037a2:	3b01      	subs	r3, #1
 80037a4:	b29a      	uxth	r2, r3
 80037a6:	68fb      	ldr	r3, [r7, #12]
 80037a8:	855a      	strh	r2, [r3, #42]	; 0x2a
 80037aa:	68fb      	ldr	r3, [r7, #12]
 80037ac:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80037ae:	3b01      	subs	r3, #1
 80037b0:	b29a      	uxth	r2, r3
 80037b2:	68fb      	ldr	r3, [r7, #12]
 80037b4:	851a      	strh	r2, [r3, #40]	; 0x28
 80037b6:	68fb      	ldr	r3, [r7, #12]
 80037b8:	681b      	ldr	r3, [r3, #0]
 80037ba:	695b      	ldr	r3, [r3, #20]
 80037bc:	f003 0304 	and.w	r3, r3, #4
 80037c0:	2b04      	cmp	r3, #4
 80037c2:	d11b      	bne.n	80037fc <HAL_I2C_Master_Transmit+0x188>
 80037c4:	68fb      	ldr	r3, [r7, #12]
 80037c6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80037c8:	2b00      	cmp	r3, #0
 80037ca:	d017      	beq.n	80037fc <HAL_I2C_Master_Transmit+0x188>
 80037cc:	68fb      	ldr	r3, [r7, #12]
 80037ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80037d0:	781a      	ldrb	r2, [r3, #0]
 80037d2:	68fb      	ldr	r3, [r7, #12]
 80037d4:	681b      	ldr	r3, [r3, #0]
 80037d6:	611a      	str	r2, [r3, #16]
 80037d8:	68fb      	ldr	r3, [r7, #12]
 80037da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80037dc:	1c5a      	adds	r2, r3, #1
 80037de:	68fb      	ldr	r3, [r7, #12]
 80037e0:	625a      	str	r2, [r3, #36]	; 0x24
 80037e2:	68fb      	ldr	r3, [r7, #12]
 80037e4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80037e6:	b29b      	uxth	r3, r3
 80037e8:	3b01      	subs	r3, #1
 80037ea:	b29a      	uxth	r2, r3
 80037ec:	68fb      	ldr	r3, [r7, #12]
 80037ee:	855a      	strh	r2, [r3, #42]	; 0x2a
 80037f0:	68fb      	ldr	r3, [r7, #12]
 80037f2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80037f4:	3b01      	subs	r3, #1
 80037f6:	b29a      	uxth	r2, r3
 80037f8:	68fb      	ldr	r3, [r7, #12]
 80037fa:	851a      	strh	r2, [r3, #40]	; 0x28
 80037fc:	697a      	ldr	r2, [r7, #20]
 80037fe:	6a39      	ldr	r1, [r7, #32]
 8003800:	68f8      	ldr	r0, [r7, #12]
 8003802:	f000 f9ce 	bl	8003ba2 <I2C_WaitOnBTFFlagUntilTimeout>
 8003806:	4603      	mov	r3, r0
 8003808:	2b00      	cmp	r3, #0
 800380a:	d00d      	beq.n	8003828 <HAL_I2C_Master_Transmit+0x1b4>
 800380c:	68fb      	ldr	r3, [r7, #12]
 800380e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003810:	2b04      	cmp	r3, #4
 8003812:	d107      	bne.n	8003824 <HAL_I2C_Master_Transmit+0x1b0>
 8003814:	68fb      	ldr	r3, [r7, #12]
 8003816:	681b      	ldr	r3, [r3, #0]
 8003818:	681a      	ldr	r2, [r3, #0]
 800381a:	68fb      	ldr	r3, [r7, #12]
 800381c:	681b      	ldr	r3, [r3, #0]
 800381e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003822:	601a      	str	r2, [r3, #0]
 8003824:	2301      	movs	r3, #1
 8003826:	e01a      	b.n	800385e <HAL_I2C_Master_Transmit+0x1ea>
 8003828:	68fb      	ldr	r3, [r7, #12]
 800382a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800382c:	2b00      	cmp	r3, #0
 800382e:	d194      	bne.n	800375a <HAL_I2C_Master_Transmit+0xe6>
 8003830:	68fb      	ldr	r3, [r7, #12]
 8003832:	681b      	ldr	r3, [r3, #0]
 8003834:	681a      	ldr	r2, [r3, #0]
 8003836:	68fb      	ldr	r3, [r7, #12]
 8003838:	681b      	ldr	r3, [r3, #0]
 800383a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800383e:	601a      	str	r2, [r3, #0]
 8003840:	68fb      	ldr	r3, [r7, #12]
 8003842:	2220      	movs	r2, #32
 8003844:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003848:	68fb      	ldr	r3, [r7, #12]
 800384a:	2200      	movs	r2, #0
 800384c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003850:	68fb      	ldr	r3, [r7, #12]
 8003852:	2200      	movs	r2, #0
 8003854:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003858:	2300      	movs	r3, #0
 800385a:	e000      	b.n	800385e <HAL_I2C_Master_Transmit+0x1ea>
 800385c:	2302      	movs	r3, #2
 800385e:	4618      	mov	r0, r3
 8003860:	3718      	adds	r7, #24
 8003862:	46bd      	mov	sp, r7
 8003864:	bd80      	pop	{r7, pc}
 8003866:	bf00      	nop
 8003868:	00100002 	.word	0x00100002
 800386c:	ffff0000 	.word	0xffff0000

08003870 <I2C_MasterRequestWrite>:
 8003870:	b580      	push	{r7, lr}
 8003872:	b088      	sub	sp, #32
 8003874:	af02      	add	r7, sp, #8
 8003876:	60f8      	str	r0, [r7, #12]
 8003878:	607a      	str	r2, [r7, #4]
 800387a:	603b      	str	r3, [r7, #0]
 800387c:	460b      	mov	r3, r1
 800387e:	817b      	strh	r3, [r7, #10]
 8003880:	68fb      	ldr	r3, [r7, #12]
 8003882:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003884:	617b      	str	r3, [r7, #20]
 8003886:	697b      	ldr	r3, [r7, #20]
 8003888:	2b08      	cmp	r3, #8
 800388a:	d006      	beq.n	800389a <I2C_MasterRequestWrite+0x2a>
 800388c:	697b      	ldr	r3, [r7, #20]
 800388e:	2b01      	cmp	r3, #1
 8003890:	d003      	beq.n	800389a <I2C_MasterRequestWrite+0x2a>
 8003892:	697b      	ldr	r3, [r7, #20]
 8003894:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8003898:	d108      	bne.n	80038ac <I2C_MasterRequestWrite+0x3c>
 800389a:	68fb      	ldr	r3, [r7, #12]
 800389c:	681b      	ldr	r3, [r3, #0]
 800389e:	681a      	ldr	r2, [r3, #0]
 80038a0:	68fb      	ldr	r3, [r7, #12]
 80038a2:	681b      	ldr	r3, [r3, #0]
 80038a4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80038a8:	601a      	str	r2, [r3, #0]
 80038aa:	e00b      	b.n	80038c4 <I2C_MasterRequestWrite+0x54>
 80038ac:	68fb      	ldr	r3, [r7, #12]
 80038ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038b0:	2b12      	cmp	r3, #18
 80038b2:	d107      	bne.n	80038c4 <I2C_MasterRequestWrite+0x54>
 80038b4:	68fb      	ldr	r3, [r7, #12]
 80038b6:	681b      	ldr	r3, [r3, #0]
 80038b8:	681a      	ldr	r2, [r3, #0]
 80038ba:	68fb      	ldr	r3, [r7, #12]
 80038bc:	681b      	ldr	r3, [r3, #0]
 80038be:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80038c2:	601a      	str	r2, [r3, #0]
 80038c4:	683b      	ldr	r3, [r7, #0]
 80038c6:	9300      	str	r3, [sp, #0]
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	2200      	movs	r2, #0
 80038cc:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80038d0:	68f8      	ldr	r0, [r7, #12]
 80038d2:	f000 f84f 	bl	8003974 <I2C_WaitOnFlagUntilTimeout>
 80038d6:	4603      	mov	r3, r0
 80038d8:	2b00      	cmp	r3, #0
 80038da:	d00d      	beq.n	80038f8 <I2C_MasterRequestWrite+0x88>
 80038dc:	68fb      	ldr	r3, [r7, #12]
 80038de:	681b      	ldr	r3, [r3, #0]
 80038e0:	681b      	ldr	r3, [r3, #0]
 80038e2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80038e6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80038ea:	d103      	bne.n	80038f4 <I2C_MasterRequestWrite+0x84>
 80038ec:	68fb      	ldr	r3, [r7, #12]
 80038ee:	f44f 7200 	mov.w	r2, #512	; 0x200
 80038f2:	641a      	str	r2, [r3, #64]	; 0x40
 80038f4:	2303      	movs	r3, #3
 80038f6:	e035      	b.n	8003964 <I2C_MasterRequestWrite+0xf4>
 80038f8:	68fb      	ldr	r3, [r7, #12]
 80038fa:	691b      	ldr	r3, [r3, #16]
 80038fc:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8003900:	d108      	bne.n	8003914 <I2C_MasterRequestWrite+0xa4>
 8003902:	897b      	ldrh	r3, [r7, #10]
 8003904:	b2db      	uxtb	r3, r3
 8003906:	461a      	mov	r2, r3
 8003908:	68fb      	ldr	r3, [r7, #12]
 800390a:	681b      	ldr	r3, [r3, #0]
 800390c:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8003910:	611a      	str	r2, [r3, #16]
 8003912:	e01b      	b.n	800394c <I2C_MasterRequestWrite+0xdc>
 8003914:	897b      	ldrh	r3, [r7, #10]
 8003916:	11db      	asrs	r3, r3, #7
 8003918:	b2db      	uxtb	r3, r3
 800391a:	f003 0306 	and.w	r3, r3, #6
 800391e:	b2db      	uxtb	r3, r3
 8003920:	f063 030f 	orn	r3, r3, #15
 8003924:	b2da      	uxtb	r2, r3
 8003926:	68fb      	ldr	r3, [r7, #12]
 8003928:	681b      	ldr	r3, [r3, #0]
 800392a:	611a      	str	r2, [r3, #16]
 800392c:	683b      	ldr	r3, [r7, #0]
 800392e:	687a      	ldr	r2, [r7, #4]
 8003930:	490e      	ldr	r1, [pc, #56]	; (800396c <I2C_MasterRequestWrite+0xfc>)
 8003932:	68f8      	ldr	r0, [r7, #12]
 8003934:	f000 f875 	bl	8003a22 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003938:	4603      	mov	r3, r0
 800393a:	2b00      	cmp	r3, #0
 800393c:	d001      	beq.n	8003942 <I2C_MasterRequestWrite+0xd2>
 800393e:	2301      	movs	r3, #1
 8003940:	e010      	b.n	8003964 <I2C_MasterRequestWrite+0xf4>
 8003942:	897b      	ldrh	r3, [r7, #10]
 8003944:	b2da      	uxtb	r2, r3
 8003946:	68fb      	ldr	r3, [r7, #12]
 8003948:	681b      	ldr	r3, [r3, #0]
 800394a:	611a      	str	r2, [r3, #16]
 800394c:	683b      	ldr	r3, [r7, #0]
 800394e:	687a      	ldr	r2, [r7, #4]
 8003950:	4907      	ldr	r1, [pc, #28]	; (8003970 <I2C_MasterRequestWrite+0x100>)
 8003952:	68f8      	ldr	r0, [r7, #12]
 8003954:	f000 f865 	bl	8003a22 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003958:	4603      	mov	r3, r0
 800395a:	2b00      	cmp	r3, #0
 800395c:	d001      	beq.n	8003962 <I2C_MasterRequestWrite+0xf2>
 800395e:	2301      	movs	r3, #1
 8003960:	e000      	b.n	8003964 <I2C_MasterRequestWrite+0xf4>
 8003962:	2300      	movs	r3, #0
 8003964:	4618      	mov	r0, r3
 8003966:	3718      	adds	r7, #24
 8003968:	46bd      	mov	sp, r7
 800396a:	bd80      	pop	{r7, pc}
 800396c:	00010008 	.word	0x00010008
 8003970:	00010002 	.word	0x00010002

08003974 <I2C_WaitOnFlagUntilTimeout>:
 8003974:	b580      	push	{r7, lr}
 8003976:	b084      	sub	sp, #16
 8003978:	af00      	add	r7, sp, #0
 800397a:	60f8      	str	r0, [r7, #12]
 800397c:	60b9      	str	r1, [r7, #8]
 800397e:	603b      	str	r3, [r7, #0]
 8003980:	4613      	mov	r3, r2
 8003982:	71fb      	strb	r3, [r7, #7]
 8003984:	e025      	b.n	80039d2 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8003986:	683b      	ldr	r3, [r7, #0]
 8003988:	f1b3 3fff 	cmp.w	r3, #4294967295
 800398c:	d021      	beq.n	80039d2 <I2C_WaitOnFlagUntilTimeout+0x5e>
 800398e:	f7ff f975 	bl	8002c7c <HAL_GetTick>
 8003992:	4602      	mov	r2, r0
 8003994:	69bb      	ldr	r3, [r7, #24]
 8003996:	1ad3      	subs	r3, r2, r3
 8003998:	683a      	ldr	r2, [r7, #0]
 800399a:	429a      	cmp	r2, r3
 800399c:	d302      	bcc.n	80039a4 <I2C_WaitOnFlagUntilTimeout+0x30>
 800399e:	683b      	ldr	r3, [r7, #0]
 80039a0:	2b00      	cmp	r3, #0
 80039a2:	d116      	bne.n	80039d2 <I2C_WaitOnFlagUntilTimeout+0x5e>
 80039a4:	68fb      	ldr	r3, [r7, #12]
 80039a6:	2200      	movs	r2, #0
 80039a8:	631a      	str	r2, [r3, #48]	; 0x30
 80039aa:	68fb      	ldr	r3, [r7, #12]
 80039ac:	2220      	movs	r2, #32
 80039ae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80039b2:	68fb      	ldr	r3, [r7, #12]
 80039b4:	2200      	movs	r2, #0
 80039b6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80039ba:	68fb      	ldr	r3, [r7, #12]
 80039bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80039be:	f043 0220 	orr.w	r2, r3, #32
 80039c2:	68fb      	ldr	r3, [r7, #12]
 80039c4:	641a      	str	r2, [r3, #64]	; 0x40
 80039c6:	68fb      	ldr	r3, [r7, #12]
 80039c8:	2200      	movs	r2, #0
 80039ca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80039ce:	2301      	movs	r3, #1
 80039d0:	e023      	b.n	8003a1a <I2C_WaitOnFlagUntilTimeout+0xa6>
 80039d2:	68bb      	ldr	r3, [r7, #8]
 80039d4:	0c1b      	lsrs	r3, r3, #16
 80039d6:	b2db      	uxtb	r3, r3
 80039d8:	2b01      	cmp	r3, #1
 80039da:	d10d      	bne.n	80039f8 <I2C_WaitOnFlagUntilTimeout+0x84>
 80039dc:	68fb      	ldr	r3, [r7, #12]
 80039de:	681b      	ldr	r3, [r3, #0]
 80039e0:	695b      	ldr	r3, [r3, #20]
 80039e2:	43da      	mvns	r2, r3
 80039e4:	68bb      	ldr	r3, [r7, #8]
 80039e6:	4013      	ands	r3, r2
 80039e8:	b29b      	uxth	r3, r3
 80039ea:	2b00      	cmp	r3, #0
 80039ec:	bf0c      	ite	eq
 80039ee:	2301      	moveq	r3, #1
 80039f0:	2300      	movne	r3, #0
 80039f2:	b2db      	uxtb	r3, r3
 80039f4:	461a      	mov	r2, r3
 80039f6:	e00c      	b.n	8003a12 <I2C_WaitOnFlagUntilTimeout+0x9e>
 80039f8:	68fb      	ldr	r3, [r7, #12]
 80039fa:	681b      	ldr	r3, [r3, #0]
 80039fc:	699b      	ldr	r3, [r3, #24]
 80039fe:	43da      	mvns	r2, r3
 8003a00:	68bb      	ldr	r3, [r7, #8]
 8003a02:	4013      	ands	r3, r2
 8003a04:	b29b      	uxth	r3, r3
 8003a06:	2b00      	cmp	r3, #0
 8003a08:	bf0c      	ite	eq
 8003a0a:	2301      	moveq	r3, #1
 8003a0c:	2300      	movne	r3, #0
 8003a0e:	b2db      	uxtb	r3, r3
 8003a10:	461a      	mov	r2, r3
 8003a12:	79fb      	ldrb	r3, [r7, #7]
 8003a14:	429a      	cmp	r2, r3
 8003a16:	d0b6      	beq.n	8003986 <I2C_WaitOnFlagUntilTimeout+0x12>
 8003a18:	2300      	movs	r3, #0
 8003a1a:	4618      	mov	r0, r3
 8003a1c:	3710      	adds	r7, #16
 8003a1e:	46bd      	mov	sp, r7
 8003a20:	bd80      	pop	{r7, pc}

08003a22 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8003a22:	b580      	push	{r7, lr}
 8003a24:	b084      	sub	sp, #16
 8003a26:	af00      	add	r7, sp, #0
 8003a28:	60f8      	str	r0, [r7, #12]
 8003a2a:	60b9      	str	r1, [r7, #8]
 8003a2c:	607a      	str	r2, [r7, #4]
 8003a2e:	603b      	str	r3, [r7, #0]
 8003a30:	e051      	b.n	8003ad6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8003a32:	68fb      	ldr	r3, [r7, #12]
 8003a34:	681b      	ldr	r3, [r3, #0]
 8003a36:	695b      	ldr	r3, [r3, #20]
 8003a38:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003a3c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003a40:	d123      	bne.n	8003a8a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8003a42:	68fb      	ldr	r3, [r7, #12]
 8003a44:	681b      	ldr	r3, [r3, #0]
 8003a46:	681a      	ldr	r2, [r3, #0]
 8003a48:	68fb      	ldr	r3, [r7, #12]
 8003a4a:	681b      	ldr	r3, [r3, #0]
 8003a4c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003a50:	601a      	str	r2, [r3, #0]
 8003a52:	68fb      	ldr	r3, [r7, #12]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8003a5a:	615a      	str	r2, [r3, #20]
 8003a5c:	68fb      	ldr	r3, [r7, #12]
 8003a5e:	2200      	movs	r2, #0
 8003a60:	631a      	str	r2, [r3, #48]	; 0x30
 8003a62:	68fb      	ldr	r3, [r7, #12]
 8003a64:	2220      	movs	r2, #32
 8003a66:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003a6a:	68fb      	ldr	r3, [r7, #12]
 8003a6c:	2200      	movs	r2, #0
 8003a6e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003a72:	68fb      	ldr	r3, [r7, #12]
 8003a74:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a76:	f043 0204 	orr.w	r2, r3, #4
 8003a7a:	68fb      	ldr	r3, [r7, #12]
 8003a7c:	641a      	str	r2, [r3, #64]	; 0x40
 8003a7e:	68fb      	ldr	r3, [r7, #12]
 8003a80:	2200      	movs	r2, #0
 8003a82:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003a86:	2301      	movs	r3, #1
 8003a88:	e046      	b.n	8003b18 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8003a8a:	687b      	ldr	r3, [r7, #4]
 8003a8c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003a90:	d021      	beq.n	8003ad6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8003a92:	f7ff f8f3 	bl	8002c7c <HAL_GetTick>
 8003a96:	4602      	mov	r2, r0
 8003a98:	683b      	ldr	r3, [r7, #0]
 8003a9a:	1ad3      	subs	r3, r2, r3
 8003a9c:	687a      	ldr	r2, [r7, #4]
 8003a9e:	429a      	cmp	r2, r3
 8003aa0:	d302      	bcc.n	8003aa8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8003aa2:	687b      	ldr	r3, [r7, #4]
 8003aa4:	2b00      	cmp	r3, #0
 8003aa6:	d116      	bne.n	8003ad6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8003aa8:	68fb      	ldr	r3, [r7, #12]
 8003aaa:	2200      	movs	r2, #0
 8003aac:	631a      	str	r2, [r3, #48]	; 0x30
 8003aae:	68fb      	ldr	r3, [r7, #12]
 8003ab0:	2220      	movs	r2, #32
 8003ab2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003ab6:	68fb      	ldr	r3, [r7, #12]
 8003ab8:	2200      	movs	r2, #0
 8003aba:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003abe:	68fb      	ldr	r3, [r7, #12]
 8003ac0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ac2:	f043 0220 	orr.w	r2, r3, #32
 8003ac6:	68fb      	ldr	r3, [r7, #12]
 8003ac8:	641a      	str	r2, [r3, #64]	; 0x40
 8003aca:	68fb      	ldr	r3, [r7, #12]
 8003acc:	2200      	movs	r2, #0
 8003ace:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003ad2:	2301      	movs	r3, #1
 8003ad4:	e020      	b.n	8003b18 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8003ad6:	68bb      	ldr	r3, [r7, #8]
 8003ad8:	0c1b      	lsrs	r3, r3, #16
 8003ada:	b2db      	uxtb	r3, r3
 8003adc:	2b01      	cmp	r3, #1
 8003ade:	d10c      	bne.n	8003afa <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8003ae0:	68fb      	ldr	r3, [r7, #12]
 8003ae2:	681b      	ldr	r3, [r3, #0]
 8003ae4:	695b      	ldr	r3, [r3, #20]
 8003ae6:	43da      	mvns	r2, r3
 8003ae8:	68bb      	ldr	r3, [r7, #8]
 8003aea:	4013      	ands	r3, r2
 8003aec:	b29b      	uxth	r3, r3
 8003aee:	2b00      	cmp	r3, #0
 8003af0:	bf14      	ite	ne
 8003af2:	2301      	movne	r3, #1
 8003af4:	2300      	moveq	r3, #0
 8003af6:	b2db      	uxtb	r3, r3
 8003af8:	e00b      	b.n	8003b12 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8003afa:	68fb      	ldr	r3, [r7, #12]
 8003afc:	681b      	ldr	r3, [r3, #0]
 8003afe:	699b      	ldr	r3, [r3, #24]
 8003b00:	43da      	mvns	r2, r3
 8003b02:	68bb      	ldr	r3, [r7, #8]
 8003b04:	4013      	ands	r3, r2
 8003b06:	b29b      	uxth	r3, r3
 8003b08:	2b00      	cmp	r3, #0
 8003b0a:	bf14      	ite	ne
 8003b0c:	2301      	movne	r3, #1
 8003b0e:	2300      	moveq	r3, #0
 8003b10:	b2db      	uxtb	r3, r3
 8003b12:	2b00      	cmp	r3, #0
 8003b14:	d18d      	bne.n	8003a32 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8003b16:	2300      	movs	r3, #0
 8003b18:	4618      	mov	r0, r3
 8003b1a:	3710      	adds	r7, #16
 8003b1c:	46bd      	mov	sp, r7
 8003b1e:	bd80      	pop	{r7, pc}

08003b20 <I2C_WaitOnTXEFlagUntilTimeout>:
 8003b20:	b580      	push	{r7, lr}
 8003b22:	b084      	sub	sp, #16
 8003b24:	af00      	add	r7, sp, #0
 8003b26:	60f8      	str	r0, [r7, #12]
 8003b28:	60b9      	str	r1, [r7, #8]
 8003b2a:	607a      	str	r2, [r7, #4]
 8003b2c:	e02d      	b.n	8003b8a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8003b2e:	68f8      	ldr	r0, [r7, #12]
 8003b30:	f000 f878 	bl	8003c24 <I2C_IsAcknowledgeFailed>
 8003b34:	4603      	mov	r3, r0
 8003b36:	2b00      	cmp	r3, #0
 8003b38:	d001      	beq.n	8003b3e <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8003b3a:	2301      	movs	r3, #1
 8003b3c:	e02d      	b.n	8003b9a <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8003b3e:	68bb      	ldr	r3, [r7, #8]
 8003b40:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003b44:	d021      	beq.n	8003b8a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8003b46:	f7ff f899 	bl	8002c7c <HAL_GetTick>
 8003b4a:	4602      	mov	r2, r0
 8003b4c:	687b      	ldr	r3, [r7, #4]
 8003b4e:	1ad3      	subs	r3, r2, r3
 8003b50:	68ba      	ldr	r2, [r7, #8]
 8003b52:	429a      	cmp	r2, r3
 8003b54:	d302      	bcc.n	8003b5c <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8003b56:	68bb      	ldr	r3, [r7, #8]
 8003b58:	2b00      	cmp	r3, #0
 8003b5a:	d116      	bne.n	8003b8a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8003b5c:	68fb      	ldr	r3, [r7, #12]
 8003b5e:	2200      	movs	r2, #0
 8003b60:	631a      	str	r2, [r3, #48]	; 0x30
 8003b62:	68fb      	ldr	r3, [r7, #12]
 8003b64:	2220      	movs	r2, #32
 8003b66:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003b6a:	68fb      	ldr	r3, [r7, #12]
 8003b6c:	2200      	movs	r2, #0
 8003b6e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003b72:	68fb      	ldr	r3, [r7, #12]
 8003b74:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b76:	f043 0220 	orr.w	r2, r3, #32
 8003b7a:	68fb      	ldr	r3, [r7, #12]
 8003b7c:	641a      	str	r2, [r3, #64]	; 0x40
 8003b7e:	68fb      	ldr	r3, [r7, #12]
 8003b80:	2200      	movs	r2, #0
 8003b82:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003b86:	2301      	movs	r3, #1
 8003b88:	e007      	b.n	8003b9a <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8003b8a:	68fb      	ldr	r3, [r7, #12]
 8003b8c:	681b      	ldr	r3, [r3, #0]
 8003b8e:	695b      	ldr	r3, [r3, #20]
 8003b90:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003b94:	2b80      	cmp	r3, #128	; 0x80
 8003b96:	d1ca      	bne.n	8003b2e <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8003b98:	2300      	movs	r3, #0
 8003b9a:	4618      	mov	r0, r3
 8003b9c:	3710      	adds	r7, #16
 8003b9e:	46bd      	mov	sp, r7
 8003ba0:	bd80      	pop	{r7, pc}

08003ba2 <I2C_WaitOnBTFFlagUntilTimeout>:
 8003ba2:	b580      	push	{r7, lr}
 8003ba4:	b084      	sub	sp, #16
 8003ba6:	af00      	add	r7, sp, #0
 8003ba8:	60f8      	str	r0, [r7, #12]
 8003baa:	60b9      	str	r1, [r7, #8]
 8003bac:	607a      	str	r2, [r7, #4]
 8003bae:	e02d      	b.n	8003c0c <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8003bb0:	68f8      	ldr	r0, [r7, #12]
 8003bb2:	f000 f837 	bl	8003c24 <I2C_IsAcknowledgeFailed>
 8003bb6:	4603      	mov	r3, r0
 8003bb8:	2b00      	cmp	r3, #0
 8003bba:	d001      	beq.n	8003bc0 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8003bbc:	2301      	movs	r3, #1
 8003bbe:	e02d      	b.n	8003c1c <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8003bc0:	68bb      	ldr	r3, [r7, #8]
 8003bc2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003bc6:	d021      	beq.n	8003c0c <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8003bc8:	f7ff f858 	bl	8002c7c <HAL_GetTick>
 8003bcc:	4602      	mov	r2, r0
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	1ad3      	subs	r3, r2, r3
 8003bd2:	68ba      	ldr	r2, [r7, #8]
 8003bd4:	429a      	cmp	r2, r3
 8003bd6:	d302      	bcc.n	8003bde <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8003bd8:	68bb      	ldr	r3, [r7, #8]
 8003bda:	2b00      	cmp	r3, #0
 8003bdc:	d116      	bne.n	8003c0c <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8003bde:	68fb      	ldr	r3, [r7, #12]
 8003be0:	2200      	movs	r2, #0
 8003be2:	631a      	str	r2, [r3, #48]	; 0x30
 8003be4:	68fb      	ldr	r3, [r7, #12]
 8003be6:	2220      	movs	r2, #32
 8003be8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003bec:	68fb      	ldr	r3, [r7, #12]
 8003bee:	2200      	movs	r2, #0
 8003bf0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003bf4:	68fb      	ldr	r3, [r7, #12]
 8003bf6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003bf8:	f043 0220 	orr.w	r2, r3, #32
 8003bfc:	68fb      	ldr	r3, [r7, #12]
 8003bfe:	641a      	str	r2, [r3, #64]	; 0x40
 8003c00:	68fb      	ldr	r3, [r7, #12]
 8003c02:	2200      	movs	r2, #0
 8003c04:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003c08:	2301      	movs	r3, #1
 8003c0a:	e007      	b.n	8003c1c <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8003c0c:	68fb      	ldr	r3, [r7, #12]
 8003c0e:	681b      	ldr	r3, [r3, #0]
 8003c10:	695b      	ldr	r3, [r3, #20]
 8003c12:	f003 0304 	and.w	r3, r3, #4
 8003c16:	2b04      	cmp	r3, #4
 8003c18:	d1ca      	bne.n	8003bb0 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8003c1a:	2300      	movs	r3, #0
 8003c1c:	4618      	mov	r0, r3
 8003c1e:	3710      	adds	r7, #16
 8003c20:	46bd      	mov	sp, r7
 8003c22:	bd80      	pop	{r7, pc}

08003c24 <I2C_IsAcknowledgeFailed>:
 8003c24:	b480      	push	{r7}
 8003c26:	b083      	sub	sp, #12
 8003c28:	af00      	add	r7, sp, #0
 8003c2a:	6078      	str	r0, [r7, #4]
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	681b      	ldr	r3, [r3, #0]
 8003c30:	695b      	ldr	r3, [r3, #20]
 8003c32:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003c36:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003c3a:	d11b      	bne.n	8003c74 <I2C_IsAcknowledgeFailed+0x50>
 8003c3c:	687b      	ldr	r3, [r7, #4]
 8003c3e:	681b      	ldr	r3, [r3, #0]
 8003c40:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8003c44:	615a      	str	r2, [r3, #20]
 8003c46:	687b      	ldr	r3, [r7, #4]
 8003c48:	2200      	movs	r2, #0
 8003c4a:	631a      	str	r2, [r3, #48]	; 0x30
 8003c4c:	687b      	ldr	r3, [r7, #4]
 8003c4e:	2220      	movs	r2, #32
 8003c50:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	2200      	movs	r2, #0
 8003c58:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c60:	f043 0204 	orr.w	r2, r3, #4
 8003c64:	687b      	ldr	r3, [r7, #4]
 8003c66:	641a      	str	r2, [r3, #64]	; 0x40
 8003c68:	687b      	ldr	r3, [r7, #4]
 8003c6a:	2200      	movs	r2, #0
 8003c6c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003c70:	2301      	movs	r3, #1
 8003c72:	e000      	b.n	8003c76 <I2C_IsAcknowledgeFailed+0x52>
 8003c74:	2300      	movs	r3, #0
 8003c76:	4618      	mov	r0, r3
 8003c78:	370c      	adds	r7, #12
 8003c7a:	46bd      	mov	sp, r7
 8003c7c:	bc80      	pop	{r7}
 8003c7e:	4770      	bx	lr

08003c80 <HAL_RCC_OscConfig>:
 8003c80:	b580      	push	{r7, lr}
 8003c82:	b086      	sub	sp, #24
 8003c84:	af00      	add	r7, sp, #0
 8003c86:	6078      	str	r0, [r7, #4]
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	2b00      	cmp	r3, #0
 8003c8c:	d101      	bne.n	8003c92 <HAL_RCC_OscConfig+0x12>
 8003c8e:	2301      	movs	r3, #1
 8003c90:	e272      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 8003c92:	687b      	ldr	r3, [r7, #4]
 8003c94:	681b      	ldr	r3, [r3, #0]
 8003c96:	f003 0301 	and.w	r3, r3, #1
 8003c9a:	2b00      	cmp	r3, #0
 8003c9c:	f000 8087 	beq.w	8003dae <HAL_RCC_OscConfig+0x12e>
 8003ca0:	4b92      	ldr	r3, [pc, #584]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003ca2:	685b      	ldr	r3, [r3, #4]
 8003ca4:	f003 030c 	and.w	r3, r3, #12
 8003ca8:	2b04      	cmp	r3, #4
 8003caa:	d00c      	beq.n	8003cc6 <HAL_RCC_OscConfig+0x46>
 8003cac:	4b8f      	ldr	r3, [pc, #572]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003cae:	685b      	ldr	r3, [r3, #4]
 8003cb0:	f003 030c 	and.w	r3, r3, #12
 8003cb4:	2b08      	cmp	r3, #8
 8003cb6:	d112      	bne.n	8003cde <HAL_RCC_OscConfig+0x5e>
 8003cb8:	4b8c      	ldr	r3, [pc, #560]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003cba:	685b      	ldr	r3, [r3, #4]
 8003cbc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003cc0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003cc4:	d10b      	bne.n	8003cde <HAL_RCC_OscConfig+0x5e>
 8003cc6:	4b89      	ldr	r3, [pc, #548]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003cc8:	681b      	ldr	r3, [r3, #0]
 8003cca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003cce:	2b00      	cmp	r3, #0
 8003cd0:	d06c      	beq.n	8003dac <HAL_RCC_OscConfig+0x12c>
 8003cd2:	687b      	ldr	r3, [r7, #4]
 8003cd4:	685b      	ldr	r3, [r3, #4]
 8003cd6:	2b00      	cmp	r3, #0
 8003cd8:	d168      	bne.n	8003dac <HAL_RCC_OscConfig+0x12c>
 8003cda:	2301      	movs	r3, #1
 8003cdc:	e24c      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	685b      	ldr	r3, [r3, #4]
 8003ce2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003ce6:	d106      	bne.n	8003cf6 <HAL_RCC_OscConfig+0x76>
 8003ce8:	4b80      	ldr	r3, [pc, #512]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003cea:	681b      	ldr	r3, [r3, #0]
 8003cec:	4a7f      	ldr	r2, [pc, #508]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003cee:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003cf2:	6013      	str	r3, [r2, #0]
 8003cf4:	e02e      	b.n	8003d54 <HAL_RCC_OscConfig+0xd4>
 8003cf6:	687b      	ldr	r3, [r7, #4]
 8003cf8:	685b      	ldr	r3, [r3, #4]
 8003cfa:	2b00      	cmp	r3, #0
 8003cfc:	d10c      	bne.n	8003d18 <HAL_RCC_OscConfig+0x98>
 8003cfe:	4b7b      	ldr	r3, [pc, #492]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003d00:	681b      	ldr	r3, [r3, #0]
 8003d02:	4a7a      	ldr	r2, [pc, #488]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003d04:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003d08:	6013      	str	r3, [r2, #0]
 8003d0a:	4b78      	ldr	r3, [pc, #480]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003d0c:	681b      	ldr	r3, [r3, #0]
 8003d0e:	4a77      	ldr	r2, [pc, #476]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003d10:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003d14:	6013      	str	r3, [r2, #0]
 8003d16:	e01d      	b.n	8003d54 <HAL_RCC_OscConfig+0xd4>
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	685b      	ldr	r3, [r3, #4]
 8003d1c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8003d20:	d10c      	bne.n	8003d3c <HAL_RCC_OscConfig+0xbc>
 8003d22:	4b72      	ldr	r3, [pc, #456]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003d24:	681b      	ldr	r3, [r3, #0]
 8003d26:	4a71      	ldr	r2, [pc, #452]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003d28:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8003d2c:	6013      	str	r3, [r2, #0]
 8003d2e:	4b6f      	ldr	r3, [pc, #444]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003d30:	681b      	ldr	r3, [r3, #0]
 8003d32:	4a6e      	ldr	r2, [pc, #440]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003d34:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003d38:	6013      	str	r3, [r2, #0]
 8003d3a:	e00b      	b.n	8003d54 <HAL_RCC_OscConfig+0xd4>
 8003d3c:	4b6b      	ldr	r3, [pc, #428]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003d3e:	681b      	ldr	r3, [r3, #0]
 8003d40:	4a6a      	ldr	r2, [pc, #424]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003d42:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003d46:	6013      	str	r3, [r2, #0]
 8003d48:	4b68      	ldr	r3, [pc, #416]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003d4a:	681b      	ldr	r3, [r3, #0]
 8003d4c:	4a67      	ldr	r2, [pc, #412]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003d4e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003d52:	6013      	str	r3, [r2, #0]
 8003d54:	687b      	ldr	r3, [r7, #4]
 8003d56:	685b      	ldr	r3, [r3, #4]
 8003d58:	2b00      	cmp	r3, #0
 8003d5a:	d013      	beq.n	8003d84 <HAL_RCC_OscConfig+0x104>
 8003d5c:	f7fe ff8e 	bl	8002c7c <HAL_GetTick>
 8003d60:	6138      	str	r0, [r7, #16]
 8003d62:	e008      	b.n	8003d76 <HAL_RCC_OscConfig+0xf6>
 8003d64:	f7fe ff8a 	bl	8002c7c <HAL_GetTick>
 8003d68:	4602      	mov	r2, r0
 8003d6a:	693b      	ldr	r3, [r7, #16]
 8003d6c:	1ad3      	subs	r3, r2, r3
 8003d6e:	2b64      	cmp	r3, #100	; 0x64
 8003d70:	d901      	bls.n	8003d76 <HAL_RCC_OscConfig+0xf6>
 8003d72:	2303      	movs	r3, #3
 8003d74:	e200      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 8003d76:	4b5d      	ldr	r3, [pc, #372]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003d78:	681b      	ldr	r3, [r3, #0]
 8003d7a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003d7e:	2b00      	cmp	r3, #0
 8003d80:	d0f0      	beq.n	8003d64 <HAL_RCC_OscConfig+0xe4>
 8003d82:	e014      	b.n	8003dae <HAL_RCC_OscConfig+0x12e>
 8003d84:	f7fe ff7a 	bl	8002c7c <HAL_GetTick>
 8003d88:	6138      	str	r0, [r7, #16]
 8003d8a:	e008      	b.n	8003d9e <HAL_RCC_OscConfig+0x11e>
 8003d8c:	f7fe ff76 	bl	8002c7c <HAL_GetTick>
 8003d90:	4602      	mov	r2, r0
 8003d92:	693b      	ldr	r3, [r7, #16]
 8003d94:	1ad3      	subs	r3, r2, r3
 8003d96:	2b64      	cmp	r3, #100	; 0x64
 8003d98:	d901      	bls.n	8003d9e <HAL_RCC_OscConfig+0x11e>
 8003d9a:	2303      	movs	r3, #3
 8003d9c:	e1ec      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 8003d9e:	4b53      	ldr	r3, [pc, #332]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003da0:	681b      	ldr	r3, [r3, #0]
 8003da2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003da6:	2b00      	cmp	r3, #0
 8003da8:	d1f0      	bne.n	8003d8c <HAL_RCC_OscConfig+0x10c>
 8003daa:	e000      	b.n	8003dae <HAL_RCC_OscConfig+0x12e>
 8003dac:	bf00      	nop
 8003dae:	687b      	ldr	r3, [r7, #4]
 8003db0:	681b      	ldr	r3, [r3, #0]
 8003db2:	f003 0302 	and.w	r3, r3, #2
 8003db6:	2b00      	cmp	r3, #0
 8003db8:	d063      	beq.n	8003e82 <HAL_RCC_OscConfig+0x202>
 8003dba:	4b4c      	ldr	r3, [pc, #304]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003dbc:	685b      	ldr	r3, [r3, #4]
 8003dbe:	f003 030c 	and.w	r3, r3, #12
 8003dc2:	2b00      	cmp	r3, #0
 8003dc4:	d00b      	beq.n	8003dde <HAL_RCC_OscConfig+0x15e>
 8003dc6:	4b49      	ldr	r3, [pc, #292]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003dc8:	685b      	ldr	r3, [r3, #4]
 8003dca:	f003 030c 	and.w	r3, r3, #12
 8003dce:	2b08      	cmp	r3, #8
 8003dd0:	d11c      	bne.n	8003e0c <HAL_RCC_OscConfig+0x18c>
 8003dd2:	4b46      	ldr	r3, [pc, #280]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003dd4:	685b      	ldr	r3, [r3, #4]
 8003dd6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003dda:	2b00      	cmp	r3, #0
 8003ddc:	d116      	bne.n	8003e0c <HAL_RCC_OscConfig+0x18c>
 8003dde:	4b43      	ldr	r3, [pc, #268]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003de0:	681b      	ldr	r3, [r3, #0]
 8003de2:	f003 0302 	and.w	r3, r3, #2
 8003de6:	2b00      	cmp	r3, #0
 8003de8:	d005      	beq.n	8003df6 <HAL_RCC_OscConfig+0x176>
 8003dea:	687b      	ldr	r3, [r7, #4]
 8003dec:	691b      	ldr	r3, [r3, #16]
 8003dee:	2b01      	cmp	r3, #1
 8003df0:	d001      	beq.n	8003df6 <HAL_RCC_OscConfig+0x176>
 8003df2:	2301      	movs	r3, #1
 8003df4:	e1c0      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 8003df6:	4b3d      	ldr	r3, [pc, #244]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003df8:	681b      	ldr	r3, [r3, #0]
 8003dfa:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8003dfe:	687b      	ldr	r3, [r7, #4]
 8003e00:	695b      	ldr	r3, [r3, #20]
 8003e02:	00db      	lsls	r3, r3, #3
 8003e04:	4939      	ldr	r1, [pc, #228]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003e06:	4313      	orrs	r3, r2
 8003e08:	600b      	str	r3, [r1, #0]
 8003e0a:	e03a      	b.n	8003e82 <HAL_RCC_OscConfig+0x202>
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	691b      	ldr	r3, [r3, #16]
 8003e10:	2b00      	cmp	r3, #0
 8003e12:	d020      	beq.n	8003e56 <HAL_RCC_OscConfig+0x1d6>
 8003e14:	4b36      	ldr	r3, [pc, #216]	; (8003ef0 <HAL_RCC_OscConfig+0x270>)
 8003e16:	2201      	movs	r2, #1
 8003e18:	601a      	str	r2, [r3, #0]
 8003e1a:	f7fe ff2f 	bl	8002c7c <HAL_GetTick>
 8003e1e:	6138      	str	r0, [r7, #16]
 8003e20:	e008      	b.n	8003e34 <HAL_RCC_OscConfig+0x1b4>
 8003e22:	f7fe ff2b 	bl	8002c7c <HAL_GetTick>
 8003e26:	4602      	mov	r2, r0
 8003e28:	693b      	ldr	r3, [r7, #16]
 8003e2a:	1ad3      	subs	r3, r2, r3
 8003e2c:	2b02      	cmp	r3, #2
 8003e2e:	d901      	bls.n	8003e34 <HAL_RCC_OscConfig+0x1b4>
 8003e30:	2303      	movs	r3, #3
 8003e32:	e1a1      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 8003e34:	4b2d      	ldr	r3, [pc, #180]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003e36:	681b      	ldr	r3, [r3, #0]
 8003e38:	f003 0302 	and.w	r3, r3, #2
 8003e3c:	2b00      	cmp	r3, #0
 8003e3e:	d0f0      	beq.n	8003e22 <HAL_RCC_OscConfig+0x1a2>
 8003e40:	4b2a      	ldr	r3, [pc, #168]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003e42:	681b      	ldr	r3, [r3, #0]
 8003e44:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	695b      	ldr	r3, [r3, #20]
 8003e4c:	00db      	lsls	r3, r3, #3
 8003e4e:	4927      	ldr	r1, [pc, #156]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003e50:	4313      	orrs	r3, r2
 8003e52:	600b      	str	r3, [r1, #0]
 8003e54:	e015      	b.n	8003e82 <HAL_RCC_OscConfig+0x202>
 8003e56:	4b26      	ldr	r3, [pc, #152]	; (8003ef0 <HAL_RCC_OscConfig+0x270>)
 8003e58:	2200      	movs	r2, #0
 8003e5a:	601a      	str	r2, [r3, #0]
 8003e5c:	f7fe ff0e 	bl	8002c7c <HAL_GetTick>
 8003e60:	6138      	str	r0, [r7, #16]
 8003e62:	e008      	b.n	8003e76 <HAL_RCC_OscConfig+0x1f6>
 8003e64:	f7fe ff0a 	bl	8002c7c <HAL_GetTick>
 8003e68:	4602      	mov	r2, r0
 8003e6a:	693b      	ldr	r3, [r7, #16]
 8003e6c:	1ad3      	subs	r3, r2, r3
 8003e6e:	2b02      	cmp	r3, #2
 8003e70:	d901      	bls.n	8003e76 <HAL_RCC_OscConfig+0x1f6>
 8003e72:	2303      	movs	r3, #3
 8003e74:	e180      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 8003e76:	4b1d      	ldr	r3, [pc, #116]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	f003 0302 	and.w	r3, r3, #2
 8003e7e:	2b00      	cmp	r3, #0
 8003e80:	d1f0      	bne.n	8003e64 <HAL_RCC_OscConfig+0x1e4>
 8003e82:	687b      	ldr	r3, [r7, #4]
 8003e84:	681b      	ldr	r3, [r3, #0]
 8003e86:	f003 0308 	and.w	r3, r3, #8
 8003e8a:	2b00      	cmp	r3, #0
 8003e8c:	d03a      	beq.n	8003f04 <HAL_RCC_OscConfig+0x284>
 8003e8e:	687b      	ldr	r3, [r7, #4]
 8003e90:	699b      	ldr	r3, [r3, #24]
 8003e92:	2b00      	cmp	r3, #0
 8003e94:	d019      	beq.n	8003eca <HAL_RCC_OscConfig+0x24a>
 8003e96:	4b17      	ldr	r3, [pc, #92]	; (8003ef4 <HAL_RCC_OscConfig+0x274>)
 8003e98:	2201      	movs	r2, #1
 8003e9a:	601a      	str	r2, [r3, #0]
 8003e9c:	f7fe feee 	bl	8002c7c <HAL_GetTick>
 8003ea0:	6138      	str	r0, [r7, #16]
 8003ea2:	e008      	b.n	8003eb6 <HAL_RCC_OscConfig+0x236>
 8003ea4:	f7fe feea 	bl	8002c7c <HAL_GetTick>
 8003ea8:	4602      	mov	r2, r0
 8003eaa:	693b      	ldr	r3, [r7, #16]
 8003eac:	1ad3      	subs	r3, r2, r3
 8003eae:	2b02      	cmp	r3, #2
 8003eb0:	d901      	bls.n	8003eb6 <HAL_RCC_OscConfig+0x236>
 8003eb2:	2303      	movs	r3, #3
 8003eb4:	e160      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 8003eb6:	4b0d      	ldr	r3, [pc, #52]	; (8003eec <HAL_RCC_OscConfig+0x26c>)
 8003eb8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003eba:	f003 0302 	and.w	r3, r3, #2
 8003ebe:	2b00      	cmp	r3, #0
 8003ec0:	d0f0      	beq.n	8003ea4 <HAL_RCC_OscConfig+0x224>
 8003ec2:	2001      	movs	r0, #1
 8003ec4:	f000 fad8 	bl	8004478 <RCC_Delay>
 8003ec8:	e01c      	b.n	8003f04 <HAL_RCC_OscConfig+0x284>
 8003eca:	4b0a      	ldr	r3, [pc, #40]	; (8003ef4 <HAL_RCC_OscConfig+0x274>)
 8003ecc:	2200      	movs	r2, #0
 8003ece:	601a      	str	r2, [r3, #0]
 8003ed0:	f7fe fed4 	bl	8002c7c <HAL_GetTick>
 8003ed4:	6138      	str	r0, [r7, #16]
 8003ed6:	e00f      	b.n	8003ef8 <HAL_RCC_OscConfig+0x278>
 8003ed8:	f7fe fed0 	bl	8002c7c <HAL_GetTick>
 8003edc:	4602      	mov	r2, r0
 8003ede:	693b      	ldr	r3, [r7, #16]
 8003ee0:	1ad3      	subs	r3, r2, r3
 8003ee2:	2b02      	cmp	r3, #2
 8003ee4:	d908      	bls.n	8003ef8 <HAL_RCC_OscConfig+0x278>
 8003ee6:	2303      	movs	r3, #3
 8003ee8:	e146      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 8003eea:	bf00      	nop
 8003eec:	40021000 	.word	0x40021000
 8003ef0:	42420000 	.word	0x42420000
 8003ef4:	42420480 	.word	0x42420480
 8003ef8:	4b92      	ldr	r3, [pc, #584]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003efa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003efc:	f003 0302 	and.w	r3, r3, #2
 8003f00:	2b00      	cmp	r3, #0
 8003f02:	d1e9      	bne.n	8003ed8 <HAL_RCC_OscConfig+0x258>
 8003f04:	687b      	ldr	r3, [r7, #4]
 8003f06:	681b      	ldr	r3, [r3, #0]
 8003f08:	f003 0304 	and.w	r3, r3, #4
 8003f0c:	2b00      	cmp	r3, #0
 8003f0e:	f000 80a6 	beq.w	800405e <HAL_RCC_OscConfig+0x3de>
 8003f12:	2300      	movs	r3, #0
 8003f14:	75fb      	strb	r3, [r7, #23]
 8003f16:	4b8b      	ldr	r3, [pc, #556]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003f18:	69db      	ldr	r3, [r3, #28]
 8003f1a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003f1e:	2b00      	cmp	r3, #0
 8003f20:	d10d      	bne.n	8003f3e <HAL_RCC_OscConfig+0x2be>
 8003f22:	4b88      	ldr	r3, [pc, #544]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003f24:	69db      	ldr	r3, [r3, #28]
 8003f26:	4a87      	ldr	r2, [pc, #540]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003f28:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003f2c:	61d3      	str	r3, [r2, #28]
 8003f2e:	4b85      	ldr	r3, [pc, #532]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003f30:	69db      	ldr	r3, [r3, #28]
 8003f32:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003f36:	60bb      	str	r3, [r7, #8]
 8003f38:	68bb      	ldr	r3, [r7, #8]
 8003f3a:	2301      	movs	r3, #1
 8003f3c:	75fb      	strb	r3, [r7, #23]
 8003f3e:	4b82      	ldr	r3, [pc, #520]	; (8004148 <HAL_RCC_OscConfig+0x4c8>)
 8003f40:	681b      	ldr	r3, [r3, #0]
 8003f42:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003f46:	2b00      	cmp	r3, #0
 8003f48:	d118      	bne.n	8003f7c <HAL_RCC_OscConfig+0x2fc>
 8003f4a:	4b7f      	ldr	r3, [pc, #508]	; (8004148 <HAL_RCC_OscConfig+0x4c8>)
 8003f4c:	681b      	ldr	r3, [r3, #0]
 8003f4e:	4a7e      	ldr	r2, [pc, #504]	; (8004148 <HAL_RCC_OscConfig+0x4c8>)
 8003f50:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003f54:	6013      	str	r3, [r2, #0]
 8003f56:	f7fe fe91 	bl	8002c7c <HAL_GetTick>
 8003f5a:	6138      	str	r0, [r7, #16]
 8003f5c:	e008      	b.n	8003f70 <HAL_RCC_OscConfig+0x2f0>
 8003f5e:	f7fe fe8d 	bl	8002c7c <HAL_GetTick>
 8003f62:	4602      	mov	r2, r0
 8003f64:	693b      	ldr	r3, [r7, #16]
 8003f66:	1ad3      	subs	r3, r2, r3
 8003f68:	2b64      	cmp	r3, #100	; 0x64
 8003f6a:	d901      	bls.n	8003f70 <HAL_RCC_OscConfig+0x2f0>
 8003f6c:	2303      	movs	r3, #3
 8003f6e:	e103      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 8003f70:	4b75      	ldr	r3, [pc, #468]	; (8004148 <HAL_RCC_OscConfig+0x4c8>)
 8003f72:	681b      	ldr	r3, [r3, #0]
 8003f74:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003f78:	2b00      	cmp	r3, #0
 8003f7a:	d0f0      	beq.n	8003f5e <HAL_RCC_OscConfig+0x2de>
 8003f7c:	687b      	ldr	r3, [r7, #4]
 8003f7e:	68db      	ldr	r3, [r3, #12]
 8003f80:	2b01      	cmp	r3, #1
 8003f82:	d106      	bne.n	8003f92 <HAL_RCC_OscConfig+0x312>
 8003f84:	4b6f      	ldr	r3, [pc, #444]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003f86:	6a1b      	ldr	r3, [r3, #32]
 8003f88:	4a6e      	ldr	r2, [pc, #440]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003f8a:	f043 0301 	orr.w	r3, r3, #1
 8003f8e:	6213      	str	r3, [r2, #32]
 8003f90:	e02d      	b.n	8003fee <HAL_RCC_OscConfig+0x36e>
 8003f92:	687b      	ldr	r3, [r7, #4]
 8003f94:	68db      	ldr	r3, [r3, #12]
 8003f96:	2b00      	cmp	r3, #0
 8003f98:	d10c      	bne.n	8003fb4 <HAL_RCC_OscConfig+0x334>
 8003f9a:	4b6a      	ldr	r3, [pc, #424]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003f9c:	6a1b      	ldr	r3, [r3, #32]
 8003f9e:	4a69      	ldr	r2, [pc, #420]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003fa0:	f023 0301 	bic.w	r3, r3, #1
 8003fa4:	6213      	str	r3, [r2, #32]
 8003fa6:	4b67      	ldr	r3, [pc, #412]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003fa8:	6a1b      	ldr	r3, [r3, #32]
 8003faa:	4a66      	ldr	r2, [pc, #408]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003fac:	f023 0304 	bic.w	r3, r3, #4
 8003fb0:	6213      	str	r3, [r2, #32]
 8003fb2:	e01c      	b.n	8003fee <HAL_RCC_OscConfig+0x36e>
 8003fb4:	687b      	ldr	r3, [r7, #4]
 8003fb6:	68db      	ldr	r3, [r3, #12]
 8003fb8:	2b05      	cmp	r3, #5
 8003fba:	d10c      	bne.n	8003fd6 <HAL_RCC_OscConfig+0x356>
 8003fbc:	4b61      	ldr	r3, [pc, #388]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003fbe:	6a1b      	ldr	r3, [r3, #32]
 8003fc0:	4a60      	ldr	r2, [pc, #384]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003fc2:	f043 0304 	orr.w	r3, r3, #4
 8003fc6:	6213      	str	r3, [r2, #32]
 8003fc8:	4b5e      	ldr	r3, [pc, #376]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003fca:	6a1b      	ldr	r3, [r3, #32]
 8003fcc:	4a5d      	ldr	r2, [pc, #372]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003fce:	f043 0301 	orr.w	r3, r3, #1
 8003fd2:	6213      	str	r3, [r2, #32]
 8003fd4:	e00b      	b.n	8003fee <HAL_RCC_OscConfig+0x36e>
 8003fd6:	4b5b      	ldr	r3, [pc, #364]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003fd8:	6a1b      	ldr	r3, [r3, #32]
 8003fda:	4a5a      	ldr	r2, [pc, #360]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003fdc:	f023 0301 	bic.w	r3, r3, #1
 8003fe0:	6213      	str	r3, [r2, #32]
 8003fe2:	4b58      	ldr	r3, [pc, #352]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003fe4:	6a1b      	ldr	r3, [r3, #32]
 8003fe6:	4a57      	ldr	r2, [pc, #348]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8003fe8:	f023 0304 	bic.w	r3, r3, #4
 8003fec:	6213      	str	r3, [r2, #32]
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	68db      	ldr	r3, [r3, #12]
 8003ff2:	2b00      	cmp	r3, #0
 8003ff4:	d015      	beq.n	8004022 <HAL_RCC_OscConfig+0x3a2>
 8003ff6:	f7fe fe41 	bl	8002c7c <HAL_GetTick>
 8003ffa:	6138      	str	r0, [r7, #16]
 8003ffc:	e00a      	b.n	8004014 <HAL_RCC_OscConfig+0x394>
 8003ffe:	f7fe fe3d 	bl	8002c7c <HAL_GetTick>
 8004002:	4602      	mov	r2, r0
 8004004:	693b      	ldr	r3, [r7, #16]
 8004006:	1ad3      	subs	r3, r2, r3
 8004008:	f241 3288 	movw	r2, #5000	; 0x1388
 800400c:	4293      	cmp	r3, r2
 800400e:	d901      	bls.n	8004014 <HAL_RCC_OscConfig+0x394>
 8004010:	2303      	movs	r3, #3
 8004012:	e0b1      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 8004014:	4b4b      	ldr	r3, [pc, #300]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8004016:	6a1b      	ldr	r3, [r3, #32]
 8004018:	f003 0302 	and.w	r3, r3, #2
 800401c:	2b00      	cmp	r3, #0
 800401e:	d0ee      	beq.n	8003ffe <HAL_RCC_OscConfig+0x37e>
 8004020:	e014      	b.n	800404c <HAL_RCC_OscConfig+0x3cc>
 8004022:	f7fe fe2b 	bl	8002c7c <HAL_GetTick>
 8004026:	6138      	str	r0, [r7, #16]
 8004028:	e00a      	b.n	8004040 <HAL_RCC_OscConfig+0x3c0>
 800402a:	f7fe fe27 	bl	8002c7c <HAL_GetTick>
 800402e:	4602      	mov	r2, r0
 8004030:	693b      	ldr	r3, [r7, #16]
 8004032:	1ad3      	subs	r3, r2, r3
 8004034:	f241 3288 	movw	r2, #5000	; 0x1388
 8004038:	4293      	cmp	r3, r2
 800403a:	d901      	bls.n	8004040 <HAL_RCC_OscConfig+0x3c0>
 800403c:	2303      	movs	r3, #3
 800403e:	e09b      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 8004040:	4b40      	ldr	r3, [pc, #256]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8004042:	6a1b      	ldr	r3, [r3, #32]
 8004044:	f003 0302 	and.w	r3, r3, #2
 8004048:	2b00      	cmp	r3, #0
 800404a:	d1ee      	bne.n	800402a <HAL_RCC_OscConfig+0x3aa>
 800404c:	7dfb      	ldrb	r3, [r7, #23]
 800404e:	2b01      	cmp	r3, #1
 8004050:	d105      	bne.n	800405e <HAL_RCC_OscConfig+0x3de>
 8004052:	4b3c      	ldr	r3, [pc, #240]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8004054:	69db      	ldr	r3, [r3, #28]
 8004056:	4a3b      	ldr	r2, [pc, #236]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 8004058:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800405c:	61d3      	str	r3, [r2, #28]
 800405e:	687b      	ldr	r3, [r7, #4]
 8004060:	69db      	ldr	r3, [r3, #28]
 8004062:	2b00      	cmp	r3, #0
 8004064:	f000 8087 	beq.w	8004176 <HAL_RCC_OscConfig+0x4f6>
 8004068:	4b36      	ldr	r3, [pc, #216]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 800406a:	685b      	ldr	r3, [r3, #4]
 800406c:	f003 030c 	and.w	r3, r3, #12
 8004070:	2b08      	cmp	r3, #8
 8004072:	d061      	beq.n	8004138 <HAL_RCC_OscConfig+0x4b8>
 8004074:	687b      	ldr	r3, [r7, #4]
 8004076:	69db      	ldr	r3, [r3, #28]
 8004078:	2b02      	cmp	r3, #2
 800407a:	d146      	bne.n	800410a <HAL_RCC_OscConfig+0x48a>
 800407c:	4b33      	ldr	r3, [pc, #204]	; (800414c <HAL_RCC_OscConfig+0x4cc>)
 800407e:	2200      	movs	r2, #0
 8004080:	601a      	str	r2, [r3, #0]
 8004082:	f7fe fdfb 	bl	8002c7c <HAL_GetTick>
 8004086:	6138      	str	r0, [r7, #16]
 8004088:	e008      	b.n	800409c <HAL_RCC_OscConfig+0x41c>
 800408a:	f7fe fdf7 	bl	8002c7c <HAL_GetTick>
 800408e:	4602      	mov	r2, r0
 8004090:	693b      	ldr	r3, [r7, #16]
 8004092:	1ad3      	subs	r3, r2, r3
 8004094:	2b02      	cmp	r3, #2
 8004096:	d901      	bls.n	800409c <HAL_RCC_OscConfig+0x41c>
 8004098:	2303      	movs	r3, #3
 800409a:	e06d      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 800409c:	4b29      	ldr	r3, [pc, #164]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 800409e:	681b      	ldr	r3, [r3, #0]
 80040a0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80040a4:	2b00      	cmp	r3, #0
 80040a6:	d1f0      	bne.n	800408a <HAL_RCC_OscConfig+0x40a>
 80040a8:	687b      	ldr	r3, [r7, #4]
 80040aa:	6a1b      	ldr	r3, [r3, #32]
 80040ac:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80040b0:	d108      	bne.n	80040c4 <HAL_RCC_OscConfig+0x444>
 80040b2:	4b24      	ldr	r3, [pc, #144]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 80040b4:	685b      	ldr	r3, [r3, #4]
 80040b6:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	689b      	ldr	r3, [r3, #8]
 80040be:	4921      	ldr	r1, [pc, #132]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 80040c0:	4313      	orrs	r3, r2
 80040c2:	604b      	str	r3, [r1, #4]
 80040c4:	4b1f      	ldr	r3, [pc, #124]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 80040c6:	685b      	ldr	r3, [r3, #4]
 80040c8:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	6a19      	ldr	r1, [r3, #32]
 80040d0:	687b      	ldr	r3, [r7, #4]
 80040d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040d4:	430b      	orrs	r3, r1
 80040d6:	491b      	ldr	r1, [pc, #108]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 80040d8:	4313      	orrs	r3, r2
 80040da:	604b      	str	r3, [r1, #4]
 80040dc:	4b1b      	ldr	r3, [pc, #108]	; (800414c <HAL_RCC_OscConfig+0x4cc>)
 80040de:	2201      	movs	r2, #1
 80040e0:	601a      	str	r2, [r3, #0]
 80040e2:	f7fe fdcb 	bl	8002c7c <HAL_GetTick>
 80040e6:	6138      	str	r0, [r7, #16]
 80040e8:	e008      	b.n	80040fc <HAL_RCC_OscConfig+0x47c>
 80040ea:	f7fe fdc7 	bl	8002c7c <HAL_GetTick>
 80040ee:	4602      	mov	r2, r0
 80040f0:	693b      	ldr	r3, [r7, #16]
 80040f2:	1ad3      	subs	r3, r2, r3
 80040f4:	2b02      	cmp	r3, #2
 80040f6:	d901      	bls.n	80040fc <HAL_RCC_OscConfig+0x47c>
 80040f8:	2303      	movs	r3, #3
 80040fa:	e03d      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 80040fc:	4b11      	ldr	r3, [pc, #68]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004104:	2b00      	cmp	r3, #0
 8004106:	d0f0      	beq.n	80040ea <HAL_RCC_OscConfig+0x46a>
 8004108:	e035      	b.n	8004176 <HAL_RCC_OscConfig+0x4f6>
 800410a:	4b10      	ldr	r3, [pc, #64]	; (800414c <HAL_RCC_OscConfig+0x4cc>)
 800410c:	2200      	movs	r2, #0
 800410e:	601a      	str	r2, [r3, #0]
 8004110:	f7fe fdb4 	bl	8002c7c <HAL_GetTick>
 8004114:	6138      	str	r0, [r7, #16]
 8004116:	e008      	b.n	800412a <HAL_RCC_OscConfig+0x4aa>
 8004118:	f7fe fdb0 	bl	8002c7c <HAL_GetTick>
 800411c:	4602      	mov	r2, r0
 800411e:	693b      	ldr	r3, [r7, #16]
 8004120:	1ad3      	subs	r3, r2, r3
 8004122:	2b02      	cmp	r3, #2
 8004124:	d901      	bls.n	800412a <HAL_RCC_OscConfig+0x4aa>
 8004126:	2303      	movs	r3, #3
 8004128:	e026      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 800412a:	4b06      	ldr	r3, [pc, #24]	; (8004144 <HAL_RCC_OscConfig+0x4c4>)
 800412c:	681b      	ldr	r3, [r3, #0]
 800412e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004132:	2b00      	cmp	r3, #0
 8004134:	d1f0      	bne.n	8004118 <HAL_RCC_OscConfig+0x498>
 8004136:	e01e      	b.n	8004176 <HAL_RCC_OscConfig+0x4f6>
 8004138:	687b      	ldr	r3, [r7, #4]
 800413a:	69db      	ldr	r3, [r3, #28]
 800413c:	2b01      	cmp	r3, #1
 800413e:	d107      	bne.n	8004150 <HAL_RCC_OscConfig+0x4d0>
 8004140:	2301      	movs	r3, #1
 8004142:	e019      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 8004144:	40021000 	.word	0x40021000
 8004148:	40007000 	.word	0x40007000
 800414c:	42420060 	.word	0x42420060
 8004150:	4b0b      	ldr	r3, [pc, #44]	; (8004180 <HAL_RCC_OscConfig+0x500>)
 8004152:	685b      	ldr	r3, [r3, #4]
 8004154:	60fb      	str	r3, [r7, #12]
 8004156:	68fb      	ldr	r3, [r7, #12]
 8004158:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	6a1b      	ldr	r3, [r3, #32]
 8004160:	429a      	cmp	r2, r3
 8004162:	d106      	bne.n	8004172 <HAL_RCC_OscConfig+0x4f2>
 8004164:	68fb      	ldr	r3, [r7, #12]
 8004166:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800416a:	687b      	ldr	r3, [r7, #4]
 800416c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800416e:	429a      	cmp	r2, r3
 8004170:	d001      	beq.n	8004176 <HAL_RCC_OscConfig+0x4f6>
 8004172:	2301      	movs	r3, #1
 8004174:	e000      	b.n	8004178 <HAL_RCC_OscConfig+0x4f8>
 8004176:	2300      	movs	r3, #0
 8004178:	4618      	mov	r0, r3
 800417a:	3718      	adds	r7, #24
 800417c:	46bd      	mov	sp, r7
 800417e:	bd80      	pop	{r7, pc}
 8004180:	40021000 	.word	0x40021000

08004184 <HAL_RCC_ClockConfig>:
 8004184:	b580      	push	{r7, lr}
 8004186:	b084      	sub	sp, #16
 8004188:	af00      	add	r7, sp, #0
 800418a:	6078      	str	r0, [r7, #4]
 800418c:	6039      	str	r1, [r7, #0]
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	2b00      	cmp	r3, #0
 8004192:	d101      	bne.n	8004198 <HAL_RCC_ClockConfig+0x14>
 8004194:	2301      	movs	r3, #1
 8004196:	e0d0      	b.n	800433a <HAL_RCC_ClockConfig+0x1b6>
 8004198:	4b6a      	ldr	r3, [pc, #424]	; (8004344 <HAL_RCC_ClockConfig+0x1c0>)
 800419a:	681b      	ldr	r3, [r3, #0]
 800419c:	f003 0307 	and.w	r3, r3, #7
 80041a0:	683a      	ldr	r2, [r7, #0]
 80041a2:	429a      	cmp	r2, r3
 80041a4:	d910      	bls.n	80041c8 <HAL_RCC_ClockConfig+0x44>
 80041a6:	4b67      	ldr	r3, [pc, #412]	; (8004344 <HAL_RCC_ClockConfig+0x1c0>)
 80041a8:	681b      	ldr	r3, [r3, #0]
 80041aa:	f023 0207 	bic.w	r2, r3, #7
 80041ae:	4965      	ldr	r1, [pc, #404]	; (8004344 <HAL_RCC_ClockConfig+0x1c0>)
 80041b0:	683b      	ldr	r3, [r7, #0]
 80041b2:	4313      	orrs	r3, r2
 80041b4:	600b      	str	r3, [r1, #0]
 80041b6:	4b63      	ldr	r3, [pc, #396]	; (8004344 <HAL_RCC_ClockConfig+0x1c0>)
 80041b8:	681b      	ldr	r3, [r3, #0]
 80041ba:	f003 0307 	and.w	r3, r3, #7
 80041be:	683a      	ldr	r2, [r7, #0]
 80041c0:	429a      	cmp	r2, r3
 80041c2:	d001      	beq.n	80041c8 <HAL_RCC_ClockConfig+0x44>
 80041c4:	2301      	movs	r3, #1
 80041c6:	e0b8      	b.n	800433a <HAL_RCC_ClockConfig+0x1b6>
 80041c8:	687b      	ldr	r3, [r7, #4]
 80041ca:	681b      	ldr	r3, [r3, #0]
 80041cc:	f003 0302 	and.w	r3, r3, #2
 80041d0:	2b00      	cmp	r3, #0
 80041d2:	d020      	beq.n	8004216 <HAL_RCC_ClockConfig+0x92>
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	681b      	ldr	r3, [r3, #0]
 80041d8:	f003 0304 	and.w	r3, r3, #4
 80041dc:	2b00      	cmp	r3, #0
 80041de:	d005      	beq.n	80041ec <HAL_RCC_ClockConfig+0x68>
 80041e0:	4b59      	ldr	r3, [pc, #356]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 80041e2:	685b      	ldr	r3, [r3, #4]
 80041e4:	4a58      	ldr	r2, [pc, #352]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 80041e6:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80041ea:	6053      	str	r3, [r2, #4]
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	681b      	ldr	r3, [r3, #0]
 80041f0:	f003 0308 	and.w	r3, r3, #8
 80041f4:	2b00      	cmp	r3, #0
 80041f6:	d005      	beq.n	8004204 <HAL_RCC_ClockConfig+0x80>
 80041f8:	4b53      	ldr	r3, [pc, #332]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 80041fa:	685b      	ldr	r3, [r3, #4]
 80041fc:	4a52      	ldr	r2, [pc, #328]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 80041fe:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8004202:	6053      	str	r3, [r2, #4]
 8004204:	4b50      	ldr	r3, [pc, #320]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 8004206:	685b      	ldr	r3, [r3, #4]
 8004208:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800420c:	687b      	ldr	r3, [r7, #4]
 800420e:	689b      	ldr	r3, [r3, #8]
 8004210:	494d      	ldr	r1, [pc, #308]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 8004212:	4313      	orrs	r3, r2
 8004214:	604b      	str	r3, [r1, #4]
 8004216:	687b      	ldr	r3, [r7, #4]
 8004218:	681b      	ldr	r3, [r3, #0]
 800421a:	f003 0301 	and.w	r3, r3, #1
 800421e:	2b00      	cmp	r3, #0
 8004220:	d040      	beq.n	80042a4 <HAL_RCC_ClockConfig+0x120>
 8004222:	687b      	ldr	r3, [r7, #4]
 8004224:	685b      	ldr	r3, [r3, #4]
 8004226:	2b01      	cmp	r3, #1
 8004228:	d107      	bne.n	800423a <HAL_RCC_ClockConfig+0xb6>
 800422a:	4b47      	ldr	r3, [pc, #284]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 800422c:	681b      	ldr	r3, [r3, #0]
 800422e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004232:	2b00      	cmp	r3, #0
 8004234:	d115      	bne.n	8004262 <HAL_RCC_ClockConfig+0xde>
 8004236:	2301      	movs	r3, #1
 8004238:	e07f      	b.n	800433a <HAL_RCC_ClockConfig+0x1b6>
 800423a:	687b      	ldr	r3, [r7, #4]
 800423c:	685b      	ldr	r3, [r3, #4]
 800423e:	2b02      	cmp	r3, #2
 8004240:	d107      	bne.n	8004252 <HAL_RCC_ClockConfig+0xce>
 8004242:	4b41      	ldr	r3, [pc, #260]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 8004244:	681b      	ldr	r3, [r3, #0]
 8004246:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800424a:	2b00      	cmp	r3, #0
 800424c:	d109      	bne.n	8004262 <HAL_RCC_ClockConfig+0xde>
 800424e:	2301      	movs	r3, #1
 8004250:	e073      	b.n	800433a <HAL_RCC_ClockConfig+0x1b6>
 8004252:	4b3d      	ldr	r3, [pc, #244]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 8004254:	681b      	ldr	r3, [r3, #0]
 8004256:	f003 0302 	and.w	r3, r3, #2
 800425a:	2b00      	cmp	r3, #0
 800425c:	d101      	bne.n	8004262 <HAL_RCC_ClockConfig+0xde>
 800425e:	2301      	movs	r3, #1
 8004260:	e06b      	b.n	800433a <HAL_RCC_ClockConfig+0x1b6>
 8004262:	4b39      	ldr	r3, [pc, #228]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 8004264:	685b      	ldr	r3, [r3, #4]
 8004266:	f023 0203 	bic.w	r2, r3, #3
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	685b      	ldr	r3, [r3, #4]
 800426e:	4936      	ldr	r1, [pc, #216]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 8004270:	4313      	orrs	r3, r2
 8004272:	604b      	str	r3, [r1, #4]
 8004274:	f7fe fd02 	bl	8002c7c <HAL_GetTick>
 8004278:	60f8      	str	r0, [r7, #12]
 800427a:	e00a      	b.n	8004292 <HAL_RCC_ClockConfig+0x10e>
 800427c:	f7fe fcfe 	bl	8002c7c <HAL_GetTick>
 8004280:	4602      	mov	r2, r0
 8004282:	68fb      	ldr	r3, [r7, #12]
 8004284:	1ad3      	subs	r3, r2, r3
 8004286:	f241 3288 	movw	r2, #5000	; 0x1388
 800428a:	4293      	cmp	r3, r2
 800428c:	d901      	bls.n	8004292 <HAL_RCC_ClockConfig+0x10e>
 800428e:	2303      	movs	r3, #3
 8004290:	e053      	b.n	800433a <HAL_RCC_ClockConfig+0x1b6>
 8004292:	4b2d      	ldr	r3, [pc, #180]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 8004294:	685b      	ldr	r3, [r3, #4]
 8004296:	f003 020c 	and.w	r2, r3, #12
 800429a:	687b      	ldr	r3, [r7, #4]
 800429c:	685b      	ldr	r3, [r3, #4]
 800429e:	009b      	lsls	r3, r3, #2
 80042a0:	429a      	cmp	r2, r3
 80042a2:	d1eb      	bne.n	800427c <HAL_RCC_ClockConfig+0xf8>
 80042a4:	4b27      	ldr	r3, [pc, #156]	; (8004344 <HAL_RCC_ClockConfig+0x1c0>)
 80042a6:	681b      	ldr	r3, [r3, #0]
 80042a8:	f003 0307 	and.w	r3, r3, #7
 80042ac:	683a      	ldr	r2, [r7, #0]
 80042ae:	429a      	cmp	r2, r3
 80042b0:	d210      	bcs.n	80042d4 <HAL_RCC_ClockConfig+0x150>
 80042b2:	4b24      	ldr	r3, [pc, #144]	; (8004344 <HAL_RCC_ClockConfig+0x1c0>)
 80042b4:	681b      	ldr	r3, [r3, #0]
 80042b6:	f023 0207 	bic.w	r2, r3, #7
 80042ba:	4922      	ldr	r1, [pc, #136]	; (8004344 <HAL_RCC_ClockConfig+0x1c0>)
 80042bc:	683b      	ldr	r3, [r7, #0]
 80042be:	4313      	orrs	r3, r2
 80042c0:	600b      	str	r3, [r1, #0]
 80042c2:	4b20      	ldr	r3, [pc, #128]	; (8004344 <HAL_RCC_ClockConfig+0x1c0>)
 80042c4:	681b      	ldr	r3, [r3, #0]
 80042c6:	f003 0307 	and.w	r3, r3, #7
 80042ca:	683a      	ldr	r2, [r7, #0]
 80042cc:	429a      	cmp	r2, r3
 80042ce:	d001      	beq.n	80042d4 <HAL_RCC_ClockConfig+0x150>
 80042d0:	2301      	movs	r3, #1
 80042d2:	e032      	b.n	800433a <HAL_RCC_ClockConfig+0x1b6>
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	681b      	ldr	r3, [r3, #0]
 80042d8:	f003 0304 	and.w	r3, r3, #4
 80042dc:	2b00      	cmp	r3, #0
 80042de:	d008      	beq.n	80042f2 <HAL_RCC_ClockConfig+0x16e>
 80042e0:	4b19      	ldr	r3, [pc, #100]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 80042e2:	685b      	ldr	r3, [r3, #4]
 80042e4:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	68db      	ldr	r3, [r3, #12]
 80042ec:	4916      	ldr	r1, [pc, #88]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 80042ee:	4313      	orrs	r3, r2
 80042f0:	604b      	str	r3, [r1, #4]
 80042f2:	687b      	ldr	r3, [r7, #4]
 80042f4:	681b      	ldr	r3, [r3, #0]
 80042f6:	f003 0308 	and.w	r3, r3, #8
 80042fa:	2b00      	cmp	r3, #0
 80042fc:	d009      	beq.n	8004312 <HAL_RCC_ClockConfig+0x18e>
 80042fe:	4b12      	ldr	r3, [pc, #72]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 8004300:	685b      	ldr	r3, [r3, #4]
 8004302:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8004306:	687b      	ldr	r3, [r7, #4]
 8004308:	691b      	ldr	r3, [r3, #16]
 800430a:	00db      	lsls	r3, r3, #3
 800430c:	490e      	ldr	r1, [pc, #56]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 800430e:	4313      	orrs	r3, r2
 8004310:	604b      	str	r3, [r1, #4]
 8004312:	f000 f821 	bl	8004358 <HAL_RCC_GetSysClockFreq>
 8004316:	4602      	mov	r2, r0
 8004318:	4b0b      	ldr	r3, [pc, #44]	; (8004348 <HAL_RCC_ClockConfig+0x1c4>)
 800431a:	685b      	ldr	r3, [r3, #4]
 800431c:	091b      	lsrs	r3, r3, #4
 800431e:	f003 030f 	and.w	r3, r3, #15
 8004322:	490a      	ldr	r1, [pc, #40]	; (800434c <HAL_RCC_ClockConfig+0x1c8>)
 8004324:	5ccb      	ldrb	r3, [r1, r3]
 8004326:	fa22 f303 	lsr.w	r3, r2, r3
 800432a:	4a09      	ldr	r2, [pc, #36]	; (8004350 <HAL_RCC_ClockConfig+0x1cc>)
 800432c:	6013      	str	r3, [r2, #0]
 800432e:	4b09      	ldr	r3, [pc, #36]	; (8004354 <HAL_RCC_ClockConfig+0x1d0>)
 8004330:	681b      	ldr	r3, [r3, #0]
 8004332:	4618      	mov	r0, r3
 8004334:	f7fe fc60 	bl	8002bf8 <HAL_InitTick>
 8004338:	2300      	movs	r3, #0
 800433a:	4618      	mov	r0, r3
 800433c:	3710      	adds	r7, #16
 800433e:	46bd      	mov	sp, r7
 8004340:	bd80      	pop	{r7, pc}
 8004342:	bf00      	nop
 8004344:	40022000 	.word	0x40022000
 8004348:	40021000 	.word	0x40021000
 800434c:	08008c4c 	.word	0x08008c4c
 8004350:	20000008 	.word	0x20000008
 8004354:	20000010 	.word	0x20000010

08004358 <HAL_RCC_GetSysClockFreq>:
 8004358:	b490      	push	{r4, r7}
 800435a:	b08a      	sub	sp, #40	; 0x28
 800435c:	af00      	add	r7, sp, #0
 800435e:	4b29      	ldr	r3, [pc, #164]	; (8004404 <HAL_RCC_GetSysClockFreq+0xac>)
 8004360:	1d3c      	adds	r4, r7, #4
 8004362:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8004364:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8004368:	f240 2301 	movw	r3, #513	; 0x201
 800436c:	803b      	strh	r3, [r7, #0]
 800436e:	2300      	movs	r3, #0
 8004370:	61fb      	str	r3, [r7, #28]
 8004372:	2300      	movs	r3, #0
 8004374:	61bb      	str	r3, [r7, #24]
 8004376:	2300      	movs	r3, #0
 8004378:	627b      	str	r3, [r7, #36]	; 0x24
 800437a:	2300      	movs	r3, #0
 800437c:	617b      	str	r3, [r7, #20]
 800437e:	2300      	movs	r3, #0
 8004380:	623b      	str	r3, [r7, #32]
 8004382:	4b21      	ldr	r3, [pc, #132]	; (8004408 <HAL_RCC_GetSysClockFreq+0xb0>)
 8004384:	685b      	ldr	r3, [r3, #4]
 8004386:	61fb      	str	r3, [r7, #28]
 8004388:	69fb      	ldr	r3, [r7, #28]
 800438a:	f003 030c 	and.w	r3, r3, #12
 800438e:	2b04      	cmp	r3, #4
 8004390:	d002      	beq.n	8004398 <HAL_RCC_GetSysClockFreq+0x40>
 8004392:	2b08      	cmp	r3, #8
 8004394:	d003      	beq.n	800439e <HAL_RCC_GetSysClockFreq+0x46>
 8004396:	e02b      	b.n	80043f0 <HAL_RCC_GetSysClockFreq+0x98>
 8004398:	4b1c      	ldr	r3, [pc, #112]	; (800440c <HAL_RCC_GetSysClockFreq+0xb4>)
 800439a:	623b      	str	r3, [r7, #32]
 800439c:	e02b      	b.n	80043f6 <HAL_RCC_GetSysClockFreq+0x9e>
 800439e:	69fb      	ldr	r3, [r7, #28]
 80043a0:	0c9b      	lsrs	r3, r3, #18
 80043a2:	f003 030f 	and.w	r3, r3, #15
 80043a6:	3328      	adds	r3, #40	; 0x28
 80043a8:	443b      	add	r3, r7
 80043aa:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 80043ae:	617b      	str	r3, [r7, #20]
 80043b0:	69fb      	ldr	r3, [r7, #28]
 80043b2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80043b6:	2b00      	cmp	r3, #0
 80043b8:	d012      	beq.n	80043e0 <HAL_RCC_GetSysClockFreq+0x88>
 80043ba:	4b13      	ldr	r3, [pc, #76]	; (8004408 <HAL_RCC_GetSysClockFreq+0xb0>)
 80043bc:	685b      	ldr	r3, [r3, #4]
 80043be:	0c5b      	lsrs	r3, r3, #17
 80043c0:	f003 0301 	and.w	r3, r3, #1
 80043c4:	3328      	adds	r3, #40	; 0x28
 80043c6:	443b      	add	r3, r7
 80043c8:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 80043cc:	61bb      	str	r3, [r7, #24]
 80043ce:	697b      	ldr	r3, [r7, #20]
 80043d0:	4a0e      	ldr	r2, [pc, #56]	; (800440c <HAL_RCC_GetSysClockFreq+0xb4>)
 80043d2:	fb03 f202 	mul.w	r2, r3, r2
 80043d6:	69bb      	ldr	r3, [r7, #24]
 80043d8:	fbb2 f3f3 	udiv	r3, r2, r3
 80043dc:	627b      	str	r3, [r7, #36]	; 0x24
 80043de:	e004      	b.n	80043ea <HAL_RCC_GetSysClockFreq+0x92>
 80043e0:	697b      	ldr	r3, [r7, #20]
 80043e2:	4a0b      	ldr	r2, [pc, #44]	; (8004410 <HAL_RCC_GetSysClockFreq+0xb8>)
 80043e4:	fb02 f303 	mul.w	r3, r2, r3
 80043e8:	627b      	str	r3, [r7, #36]	; 0x24
 80043ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80043ec:	623b      	str	r3, [r7, #32]
 80043ee:	e002      	b.n	80043f6 <HAL_RCC_GetSysClockFreq+0x9e>
 80043f0:	4b06      	ldr	r3, [pc, #24]	; (800440c <HAL_RCC_GetSysClockFreq+0xb4>)
 80043f2:	623b      	str	r3, [r7, #32]
 80043f4:	bf00      	nop
 80043f6:	6a3b      	ldr	r3, [r7, #32]
 80043f8:	4618      	mov	r0, r3
 80043fa:	3728      	adds	r7, #40	; 0x28
 80043fc:	46bd      	mov	sp, r7
 80043fe:	bc90      	pop	{r4, r7}
 8004400:	4770      	bx	lr
 8004402:	bf00      	nop
 8004404:	08008c3c 	.word	0x08008c3c
 8004408:	40021000 	.word	0x40021000
 800440c:	007a1200 	.word	0x007a1200
 8004410:	003d0900 	.word	0x003d0900

08004414 <HAL_RCC_GetHCLKFreq>:
 8004414:	b480      	push	{r7}
 8004416:	af00      	add	r7, sp, #0
 8004418:	4b02      	ldr	r3, [pc, #8]	; (8004424 <HAL_RCC_GetHCLKFreq+0x10>)
 800441a:	681b      	ldr	r3, [r3, #0]
 800441c:	4618      	mov	r0, r3
 800441e:	46bd      	mov	sp, r7
 8004420:	bc80      	pop	{r7}
 8004422:	4770      	bx	lr
 8004424:	20000008 	.word	0x20000008

08004428 <HAL_RCC_GetPCLK1Freq>:
 8004428:	b580      	push	{r7, lr}
 800442a:	af00      	add	r7, sp, #0
 800442c:	f7ff fff2 	bl	8004414 <HAL_RCC_GetHCLKFreq>
 8004430:	4602      	mov	r2, r0
 8004432:	4b05      	ldr	r3, [pc, #20]	; (8004448 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004434:	685b      	ldr	r3, [r3, #4]
 8004436:	0a1b      	lsrs	r3, r3, #8
 8004438:	f003 0307 	and.w	r3, r3, #7
 800443c:	4903      	ldr	r1, [pc, #12]	; (800444c <HAL_RCC_GetPCLK1Freq+0x24>)
 800443e:	5ccb      	ldrb	r3, [r1, r3]
 8004440:	fa22 f303 	lsr.w	r3, r2, r3
 8004444:	4618      	mov	r0, r3
 8004446:	bd80      	pop	{r7, pc}
 8004448:	40021000 	.word	0x40021000
 800444c:	08008c5c 	.word	0x08008c5c

08004450 <HAL_RCC_GetPCLK2Freq>:
 8004450:	b580      	push	{r7, lr}
 8004452:	af00      	add	r7, sp, #0
 8004454:	f7ff ffde 	bl	8004414 <HAL_RCC_GetHCLKFreq>
 8004458:	4602      	mov	r2, r0
 800445a:	4b05      	ldr	r3, [pc, #20]	; (8004470 <HAL_RCC_GetPCLK2Freq+0x20>)
 800445c:	685b      	ldr	r3, [r3, #4]
 800445e:	0adb      	lsrs	r3, r3, #11
 8004460:	f003 0307 	and.w	r3, r3, #7
 8004464:	4903      	ldr	r1, [pc, #12]	; (8004474 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004466:	5ccb      	ldrb	r3, [r1, r3]
 8004468:	fa22 f303 	lsr.w	r3, r2, r3
 800446c:	4618      	mov	r0, r3
 800446e:	bd80      	pop	{r7, pc}
 8004470:	40021000 	.word	0x40021000
 8004474:	08008c5c 	.word	0x08008c5c

08004478 <RCC_Delay>:
 8004478:	b480      	push	{r7}
 800447a:	b085      	sub	sp, #20
 800447c:	af00      	add	r7, sp, #0
 800447e:	6078      	str	r0, [r7, #4]
 8004480:	4b0a      	ldr	r3, [pc, #40]	; (80044ac <RCC_Delay+0x34>)
 8004482:	681b      	ldr	r3, [r3, #0]
 8004484:	4a0a      	ldr	r2, [pc, #40]	; (80044b0 <RCC_Delay+0x38>)
 8004486:	fba2 2303 	umull	r2, r3, r2, r3
 800448a:	0a5b      	lsrs	r3, r3, #9
 800448c:	687a      	ldr	r2, [r7, #4]
 800448e:	fb02 f303 	mul.w	r3, r2, r3
 8004492:	60fb      	str	r3, [r7, #12]
 8004494:	bf00      	nop
 8004496:	68fb      	ldr	r3, [r7, #12]
 8004498:	1e5a      	subs	r2, r3, #1
 800449a:	60fa      	str	r2, [r7, #12]
 800449c:	2b00      	cmp	r3, #0
 800449e:	d1f9      	bne.n	8004494 <RCC_Delay+0x1c>
 80044a0:	bf00      	nop
 80044a2:	bf00      	nop
 80044a4:	3714      	adds	r7, #20
 80044a6:	46bd      	mov	sp, r7
 80044a8:	bc80      	pop	{r7}
 80044aa:	4770      	bx	lr
 80044ac:	20000008 	.word	0x20000008
 80044b0:	10624dd3 	.word	0x10624dd3

080044b4 <HAL_TIM_Base_Init>:
 80044b4:	b580      	push	{r7, lr}
 80044b6:	b082      	sub	sp, #8
 80044b8:	af00      	add	r7, sp, #0
 80044ba:	6078      	str	r0, [r7, #4]
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	2b00      	cmp	r3, #0
 80044c0:	d101      	bne.n	80044c6 <HAL_TIM_Base_Init+0x12>
 80044c2:	2301      	movs	r3, #1
 80044c4:	e041      	b.n	800454a <HAL_TIM_Base_Init+0x96>
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80044cc:	b2db      	uxtb	r3, r3
 80044ce:	2b00      	cmp	r3, #0
 80044d0:	d106      	bne.n	80044e0 <HAL_TIM_Base_Init+0x2c>
 80044d2:	687b      	ldr	r3, [r7, #4]
 80044d4:	2200      	movs	r2, #0
 80044d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80044da:	6878      	ldr	r0, [r7, #4]
 80044dc:	f7fd fffa 	bl	80024d4 <HAL_TIM_Base_MspInit>
 80044e0:	687b      	ldr	r3, [r7, #4]
 80044e2:	2202      	movs	r2, #2
 80044e4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80044e8:	687b      	ldr	r3, [r7, #4]
 80044ea:	681a      	ldr	r2, [r3, #0]
 80044ec:	687b      	ldr	r3, [r7, #4]
 80044ee:	3304      	adds	r3, #4
 80044f0:	4619      	mov	r1, r3
 80044f2:	4610      	mov	r0, r2
 80044f4:	f000 fa70 	bl	80049d8 <TIM_Base_SetConfig>
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	2201      	movs	r2, #1
 80044fc:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8004500:	687b      	ldr	r3, [r7, #4]
 8004502:	2201      	movs	r2, #1
 8004504:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004508:	687b      	ldr	r3, [r7, #4]
 800450a:	2201      	movs	r2, #1
 800450c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004510:	687b      	ldr	r3, [r7, #4]
 8004512:	2201      	movs	r2, #1
 8004514:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004518:	687b      	ldr	r3, [r7, #4]
 800451a:	2201      	movs	r2, #1
 800451c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004520:	687b      	ldr	r3, [r7, #4]
 8004522:	2201      	movs	r2, #1
 8004524:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	2201      	movs	r2, #1
 800452c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	2201      	movs	r2, #1
 8004534:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	2201      	movs	r2, #1
 800453c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004540:	687b      	ldr	r3, [r7, #4]
 8004542:	2201      	movs	r2, #1
 8004544:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004548:	2300      	movs	r3, #0
 800454a:	4618      	mov	r0, r3
 800454c:	3708      	adds	r7, #8
 800454e:	46bd      	mov	sp, r7
 8004550:	bd80      	pop	{r7, pc}
	...

08004554 <HAL_TIM_Base_Start_IT>:
 8004554:	b480      	push	{r7}
 8004556:	b085      	sub	sp, #20
 8004558:	af00      	add	r7, sp, #0
 800455a:	6078      	str	r0, [r7, #4]
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004562:	b2db      	uxtb	r3, r3
 8004564:	2b01      	cmp	r3, #1
 8004566:	d001      	beq.n	800456c <HAL_TIM_Base_Start_IT+0x18>
 8004568:	2301      	movs	r3, #1
 800456a:	e03a      	b.n	80045e2 <HAL_TIM_Base_Start_IT+0x8e>
 800456c:	687b      	ldr	r3, [r7, #4]
 800456e:	2202      	movs	r2, #2
 8004570:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	681b      	ldr	r3, [r3, #0]
 8004578:	68da      	ldr	r2, [r3, #12]
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	681b      	ldr	r3, [r3, #0]
 800457e:	f042 0201 	orr.w	r2, r2, #1
 8004582:	60da      	str	r2, [r3, #12]
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	681b      	ldr	r3, [r3, #0]
 8004588:	4a18      	ldr	r2, [pc, #96]	; (80045ec <HAL_TIM_Base_Start_IT+0x98>)
 800458a:	4293      	cmp	r3, r2
 800458c:	d00e      	beq.n	80045ac <HAL_TIM_Base_Start_IT+0x58>
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	681b      	ldr	r3, [r3, #0]
 8004592:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004596:	d009      	beq.n	80045ac <HAL_TIM_Base_Start_IT+0x58>
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	681b      	ldr	r3, [r3, #0]
 800459c:	4a14      	ldr	r2, [pc, #80]	; (80045f0 <HAL_TIM_Base_Start_IT+0x9c>)
 800459e:	4293      	cmp	r3, r2
 80045a0:	d004      	beq.n	80045ac <HAL_TIM_Base_Start_IT+0x58>
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	4a13      	ldr	r2, [pc, #76]	; (80045f4 <HAL_TIM_Base_Start_IT+0xa0>)
 80045a8:	4293      	cmp	r3, r2
 80045aa:	d111      	bne.n	80045d0 <HAL_TIM_Base_Start_IT+0x7c>
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	681b      	ldr	r3, [r3, #0]
 80045b0:	689b      	ldr	r3, [r3, #8]
 80045b2:	f003 0307 	and.w	r3, r3, #7
 80045b6:	60fb      	str	r3, [r7, #12]
 80045b8:	68fb      	ldr	r3, [r7, #12]
 80045ba:	2b06      	cmp	r3, #6
 80045bc:	d010      	beq.n	80045e0 <HAL_TIM_Base_Start_IT+0x8c>
 80045be:	687b      	ldr	r3, [r7, #4]
 80045c0:	681b      	ldr	r3, [r3, #0]
 80045c2:	681a      	ldr	r2, [r3, #0]
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	681b      	ldr	r3, [r3, #0]
 80045c8:	f042 0201 	orr.w	r2, r2, #1
 80045cc:	601a      	str	r2, [r3, #0]
 80045ce:	e007      	b.n	80045e0 <HAL_TIM_Base_Start_IT+0x8c>
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	681b      	ldr	r3, [r3, #0]
 80045d4:	681a      	ldr	r2, [r3, #0]
 80045d6:	687b      	ldr	r3, [r7, #4]
 80045d8:	681b      	ldr	r3, [r3, #0]
 80045da:	f042 0201 	orr.w	r2, r2, #1
 80045de:	601a      	str	r2, [r3, #0]
 80045e0:	2300      	movs	r3, #0
 80045e2:	4618      	mov	r0, r3
 80045e4:	3714      	adds	r7, #20
 80045e6:	46bd      	mov	sp, r7
 80045e8:	bc80      	pop	{r7}
 80045ea:	4770      	bx	lr
 80045ec:	40012c00 	.word	0x40012c00
 80045f0:	40000400 	.word	0x40000400
 80045f4:	40000800 	.word	0x40000800

080045f8 <HAL_TIM_IRQHandler>:
 80045f8:	b580      	push	{r7, lr}
 80045fa:	b082      	sub	sp, #8
 80045fc:	af00      	add	r7, sp, #0
 80045fe:	6078      	str	r0, [r7, #4]
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	681b      	ldr	r3, [r3, #0]
 8004604:	691b      	ldr	r3, [r3, #16]
 8004606:	f003 0302 	and.w	r3, r3, #2
 800460a:	2b02      	cmp	r3, #2
 800460c:	d122      	bne.n	8004654 <HAL_TIM_IRQHandler+0x5c>
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	681b      	ldr	r3, [r3, #0]
 8004612:	68db      	ldr	r3, [r3, #12]
 8004614:	f003 0302 	and.w	r3, r3, #2
 8004618:	2b02      	cmp	r3, #2
 800461a:	d11b      	bne.n	8004654 <HAL_TIM_IRQHandler+0x5c>
 800461c:	687b      	ldr	r3, [r7, #4]
 800461e:	681b      	ldr	r3, [r3, #0]
 8004620:	f06f 0202 	mvn.w	r2, #2
 8004624:	611a      	str	r2, [r3, #16]
 8004626:	687b      	ldr	r3, [r7, #4]
 8004628:	2201      	movs	r2, #1
 800462a:	771a      	strb	r2, [r3, #28]
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	681b      	ldr	r3, [r3, #0]
 8004630:	699b      	ldr	r3, [r3, #24]
 8004632:	f003 0303 	and.w	r3, r3, #3
 8004636:	2b00      	cmp	r3, #0
 8004638:	d003      	beq.n	8004642 <HAL_TIM_IRQHandler+0x4a>
 800463a:	6878      	ldr	r0, [r7, #4]
 800463c:	f000 f9b1 	bl	80049a2 <HAL_TIM_IC_CaptureCallback>
 8004640:	e005      	b.n	800464e <HAL_TIM_IRQHandler+0x56>
 8004642:	6878      	ldr	r0, [r7, #4]
 8004644:	f000 f9a4 	bl	8004990 <HAL_TIM_OC_DelayElapsedCallback>
 8004648:	6878      	ldr	r0, [r7, #4]
 800464a:	f000 f9b3 	bl	80049b4 <HAL_TIM_PWM_PulseFinishedCallback>
 800464e:	687b      	ldr	r3, [r7, #4]
 8004650:	2200      	movs	r2, #0
 8004652:	771a      	strb	r2, [r3, #28]
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	681b      	ldr	r3, [r3, #0]
 8004658:	691b      	ldr	r3, [r3, #16]
 800465a:	f003 0304 	and.w	r3, r3, #4
 800465e:	2b04      	cmp	r3, #4
 8004660:	d122      	bne.n	80046a8 <HAL_TIM_IRQHandler+0xb0>
 8004662:	687b      	ldr	r3, [r7, #4]
 8004664:	681b      	ldr	r3, [r3, #0]
 8004666:	68db      	ldr	r3, [r3, #12]
 8004668:	f003 0304 	and.w	r3, r3, #4
 800466c:	2b04      	cmp	r3, #4
 800466e:	d11b      	bne.n	80046a8 <HAL_TIM_IRQHandler+0xb0>
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	681b      	ldr	r3, [r3, #0]
 8004674:	f06f 0204 	mvn.w	r2, #4
 8004678:	611a      	str	r2, [r3, #16]
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	2202      	movs	r2, #2
 800467e:	771a      	strb	r2, [r3, #28]
 8004680:	687b      	ldr	r3, [r7, #4]
 8004682:	681b      	ldr	r3, [r3, #0]
 8004684:	699b      	ldr	r3, [r3, #24]
 8004686:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800468a:	2b00      	cmp	r3, #0
 800468c:	d003      	beq.n	8004696 <HAL_TIM_IRQHandler+0x9e>
 800468e:	6878      	ldr	r0, [r7, #4]
 8004690:	f000 f987 	bl	80049a2 <HAL_TIM_IC_CaptureCallback>
 8004694:	e005      	b.n	80046a2 <HAL_TIM_IRQHandler+0xaa>
 8004696:	6878      	ldr	r0, [r7, #4]
 8004698:	f000 f97a 	bl	8004990 <HAL_TIM_OC_DelayElapsedCallback>
 800469c:	6878      	ldr	r0, [r7, #4]
 800469e:	f000 f989 	bl	80049b4 <HAL_TIM_PWM_PulseFinishedCallback>
 80046a2:	687b      	ldr	r3, [r7, #4]
 80046a4:	2200      	movs	r2, #0
 80046a6:	771a      	strb	r2, [r3, #28]
 80046a8:	687b      	ldr	r3, [r7, #4]
 80046aa:	681b      	ldr	r3, [r3, #0]
 80046ac:	691b      	ldr	r3, [r3, #16]
 80046ae:	f003 0308 	and.w	r3, r3, #8
 80046b2:	2b08      	cmp	r3, #8
 80046b4:	d122      	bne.n	80046fc <HAL_TIM_IRQHandler+0x104>
 80046b6:	687b      	ldr	r3, [r7, #4]
 80046b8:	681b      	ldr	r3, [r3, #0]
 80046ba:	68db      	ldr	r3, [r3, #12]
 80046bc:	f003 0308 	and.w	r3, r3, #8
 80046c0:	2b08      	cmp	r3, #8
 80046c2:	d11b      	bne.n	80046fc <HAL_TIM_IRQHandler+0x104>
 80046c4:	687b      	ldr	r3, [r7, #4]
 80046c6:	681b      	ldr	r3, [r3, #0]
 80046c8:	f06f 0208 	mvn.w	r2, #8
 80046cc:	611a      	str	r2, [r3, #16]
 80046ce:	687b      	ldr	r3, [r7, #4]
 80046d0:	2204      	movs	r2, #4
 80046d2:	771a      	strb	r2, [r3, #28]
 80046d4:	687b      	ldr	r3, [r7, #4]
 80046d6:	681b      	ldr	r3, [r3, #0]
 80046d8:	69db      	ldr	r3, [r3, #28]
 80046da:	f003 0303 	and.w	r3, r3, #3
 80046de:	2b00      	cmp	r3, #0
 80046e0:	d003      	beq.n	80046ea <HAL_TIM_IRQHandler+0xf2>
 80046e2:	6878      	ldr	r0, [r7, #4]
 80046e4:	f000 f95d 	bl	80049a2 <HAL_TIM_IC_CaptureCallback>
 80046e8:	e005      	b.n	80046f6 <HAL_TIM_IRQHandler+0xfe>
 80046ea:	6878      	ldr	r0, [r7, #4]
 80046ec:	f000 f950 	bl	8004990 <HAL_TIM_OC_DelayElapsedCallback>
 80046f0:	6878      	ldr	r0, [r7, #4]
 80046f2:	f000 f95f 	bl	80049b4 <HAL_TIM_PWM_PulseFinishedCallback>
 80046f6:	687b      	ldr	r3, [r7, #4]
 80046f8:	2200      	movs	r2, #0
 80046fa:	771a      	strb	r2, [r3, #28]
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	681b      	ldr	r3, [r3, #0]
 8004700:	691b      	ldr	r3, [r3, #16]
 8004702:	f003 0310 	and.w	r3, r3, #16
 8004706:	2b10      	cmp	r3, #16
 8004708:	d122      	bne.n	8004750 <HAL_TIM_IRQHandler+0x158>
 800470a:	687b      	ldr	r3, [r7, #4]
 800470c:	681b      	ldr	r3, [r3, #0]
 800470e:	68db      	ldr	r3, [r3, #12]
 8004710:	f003 0310 	and.w	r3, r3, #16
 8004714:	2b10      	cmp	r3, #16
 8004716:	d11b      	bne.n	8004750 <HAL_TIM_IRQHandler+0x158>
 8004718:	687b      	ldr	r3, [r7, #4]
 800471a:	681b      	ldr	r3, [r3, #0]
 800471c:	f06f 0210 	mvn.w	r2, #16
 8004720:	611a      	str	r2, [r3, #16]
 8004722:	687b      	ldr	r3, [r7, #4]
 8004724:	2208      	movs	r2, #8
 8004726:	771a      	strb	r2, [r3, #28]
 8004728:	687b      	ldr	r3, [r7, #4]
 800472a:	681b      	ldr	r3, [r3, #0]
 800472c:	69db      	ldr	r3, [r3, #28]
 800472e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004732:	2b00      	cmp	r3, #0
 8004734:	d003      	beq.n	800473e <HAL_TIM_IRQHandler+0x146>
 8004736:	6878      	ldr	r0, [r7, #4]
 8004738:	f000 f933 	bl	80049a2 <HAL_TIM_IC_CaptureCallback>
 800473c:	e005      	b.n	800474a <HAL_TIM_IRQHandler+0x152>
 800473e:	6878      	ldr	r0, [r7, #4]
 8004740:	f000 f926 	bl	8004990 <HAL_TIM_OC_DelayElapsedCallback>
 8004744:	6878      	ldr	r0, [r7, #4]
 8004746:	f000 f935 	bl	80049b4 <HAL_TIM_PWM_PulseFinishedCallback>
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	2200      	movs	r2, #0
 800474e:	771a      	strb	r2, [r3, #28]
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	681b      	ldr	r3, [r3, #0]
 8004754:	691b      	ldr	r3, [r3, #16]
 8004756:	f003 0301 	and.w	r3, r3, #1
 800475a:	2b01      	cmp	r3, #1
 800475c:	d10e      	bne.n	800477c <HAL_TIM_IRQHandler+0x184>
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	68db      	ldr	r3, [r3, #12]
 8004764:	f003 0301 	and.w	r3, r3, #1
 8004768:	2b01      	cmp	r3, #1
 800476a:	d107      	bne.n	800477c <HAL_TIM_IRQHandler+0x184>
 800476c:	687b      	ldr	r3, [r7, #4]
 800476e:	681b      	ldr	r3, [r3, #0]
 8004770:	f06f 0201 	mvn.w	r2, #1
 8004774:	611a      	str	r2, [r3, #16]
 8004776:	6878      	ldr	r0, [r7, #4]
 8004778:	f7fe f892 	bl	80028a0 <HAL_TIM_PeriodElapsedCallback>
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	681b      	ldr	r3, [r3, #0]
 8004780:	691b      	ldr	r3, [r3, #16]
 8004782:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004786:	2b80      	cmp	r3, #128	; 0x80
 8004788:	d10e      	bne.n	80047a8 <HAL_TIM_IRQHandler+0x1b0>
 800478a:	687b      	ldr	r3, [r7, #4]
 800478c:	681b      	ldr	r3, [r3, #0]
 800478e:	68db      	ldr	r3, [r3, #12]
 8004790:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004794:	2b80      	cmp	r3, #128	; 0x80
 8004796:	d107      	bne.n	80047a8 <HAL_TIM_IRQHandler+0x1b0>
 8004798:	687b      	ldr	r3, [r7, #4]
 800479a:	681b      	ldr	r3, [r3, #0]
 800479c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80047a0:	611a      	str	r2, [r3, #16]
 80047a2:	6878      	ldr	r0, [r7, #4]
 80047a4:	f000 fa77 	bl	8004c96 <HAL_TIMEx_BreakCallback>
 80047a8:	687b      	ldr	r3, [r7, #4]
 80047aa:	681b      	ldr	r3, [r3, #0]
 80047ac:	691b      	ldr	r3, [r3, #16]
 80047ae:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80047b2:	2b40      	cmp	r3, #64	; 0x40
 80047b4:	d10e      	bne.n	80047d4 <HAL_TIM_IRQHandler+0x1dc>
 80047b6:	687b      	ldr	r3, [r7, #4]
 80047b8:	681b      	ldr	r3, [r3, #0]
 80047ba:	68db      	ldr	r3, [r3, #12]
 80047bc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80047c0:	2b40      	cmp	r3, #64	; 0x40
 80047c2:	d107      	bne.n	80047d4 <HAL_TIM_IRQHandler+0x1dc>
 80047c4:	687b      	ldr	r3, [r7, #4]
 80047c6:	681b      	ldr	r3, [r3, #0]
 80047c8:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80047cc:	611a      	str	r2, [r3, #16]
 80047ce:	6878      	ldr	r0, [r7, #4]
 80047d0:	f000 f8f9 	bl	80049c6 <HAL_TIM_TriggerCallback>
 80047d4:	687b      	ldr	r3, [r7, #4]
 80047d6:	681b      	ldr	r3, [r3, #0]
 80047d8:	691b      	ldr	r3, [r3, #16]
 80047da:	f003 0320 	and.w	r3, r3, #32
 80047de:	2b20      	cmp	r3, #32
 80047e0:	d10e      	bne.n	8004800 <HAL_TIM_IRQHandler+0x208>
 80047e2:	687b      	ldr	r3, [r7, #4]
 80047e4:	681b      	ldr	r3, [r3, #0]
 80047e6:	68db      	ldr	r3, [r3, #12]
 80047e8:	f003 0320 	and.w	r3, r3, #32
 80047ec:	2b20      	cmp	r3, #32
 80047ee:	d107      	bne.n	8004800 <HAL_TIM_IRQHandler+0x208>
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	681b      	ldr	r3, [r3, #0]
 80047f4:	f06f 0220 	mvn.w	r2, #32
 80047f8:	611a      	str	r2, [r3, #16]
 80047fa:	6878      	ldr	r0, [r7, #4]
 80047fc:	f000 fa42 	bl	8004c84 <HAL_TIMEx_CommutCallback>
 8004800:	bf00      	nop
 8004802:	3708      	adds	r7, #8
 8004804:	46bd      	mov	sp, r7
 8004806:	bd80      	pop	{r7, pc}

08004808 <HAL_TIM_ConfigClockSource>:
 8004808:	b580      	push	{r7, lr}
 800480a:	b084      	sub	sp, #16
 800480c:	af00      	add	r7, sp, #0
 800480e:	6078      	str	r0, [r7, #4]
 8004810:	6039      	str	r1, [r7, #0]
 8004812:	687b      	ldr	r3, [r7, #4]
 8004814:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004818:	2b01      	cmp	r3, #1
 800481a:	d101      	bne.n	8004820 <HAL_TIM_ConfigClockSource+0x18>
 800481c:	2302      	movs	r3, #2
 800481e:	e0b3      	b.n	8004988 <HAL_TIM_ConfigClockSource+0x180>
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	2201      	movs	r2, #1
 8004824:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	2202      	movs	r2, #2
 800482c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004830:	687b      	ldr	r3, [r7, #4]
 8004832:	681b      	ldr	r3, [r3, #0]
 8004834:	689b      	ldr	r3, [r3, #8]
 8004836:	60fb      	str	r3, [r7, #12]
 8004838:	68fb      	ldr	r3, [r7, #12]
 800483a:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800483e:	60fb      	str	r3, [r7, #12]
 8004840:	68fb      	ldr	r3, [r7, #12]
 8004842:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8004846:	60fb      	str	r3, [r7, #12]
 8004848:	687b      	ldr	r3, [r7, #4]
 800484a:	681b      	ldr	r3, [r3, #0]
 800484c:	68fa      	ldr	r2, [r7, #12]
 800484e:	609a      	str	r2, [r3, #8]
 8004850:	683b      	ldr	r3, [r7, #0]
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004858:	d03e      	beq.n	80048d8 <HAL_TIM_ConfigClockSource+0xd0>
 800485a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800485e:	f200 8087 	bhi.w	8004970 <HAL_TIM_ConfigClockSource+0x168>
 8004862:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004866:	f000 8085 	beq.w	8004974 <HAL_TIM_ConfigClockSource+0x16c>
 800486a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800486e:	d87f      	bhi.n	8004970 <HAL_TIM_ConfigClockSource+0x168>
 8004870:	2b70      	cmp	r3, #112	; 0x70
 8004872:	d01a      	beq.n	80048aa <HAL_TIM_ConfigClockSource+0xa2>
 8004874:	2b70      	cmp	r3, #112	; 0x70
 8004876:	d87b      	bhi.n	8004970 <HAL_TIM_ConfigClockSource+0x168>
 8004878:	2b60      	cmp	r3, #96	; 0x60
 800487a:	d050      	beq.n	800491e <HAL_TIM_ConfigClockSource+0x116>
 800487c:	2b60      	cmp	r3, #96	; 0x60
 800487e:	d877      	bhi.n	8004970 <HAL_TIM_ConfigClockSource+0x168>
 8004880:	2b50      	cmp	r3, #80	; 0x50
 8004882:	d03c      	beq.n	80048fe <HAL_TIM_ConfigClockSource+0xf6>
 8004884:	2b50      	cmp	r3, #80	; 0x50
 8004886:	d873      	bhi.n	8004970 <HAL_TIM_ConfigClockSource+0x168>
 8004888:	2b40      	cmp	r3, #64	; 0x40
 800488a:	d058      	beq.n	800493e <HAL_TIM_ConfigClockSource+0x136>
 800488c:	2b40      	cmp	r3, #64	; 0x40
 800488e:	d86f      	bhi.n	8004970 <HAL_TIM_ConfigClockSource+0x168>
 8004890:	2b30      	cmp	r3, #48	; 0x30
 8004892:	d064      	beq.n	800495e <HAL_TIM_ConfigClockSource+0x156>
 8004894:	2b30      	cmp	r3, #48	; 0x30
 8004896:	d86b      	bhi.n	8004970 <HAL_TIM_ConfigClockSource+0x168>
 8004898:	2b20      	cmp	r3, #32
 800489a:	d060      	beq.n	800495e <HAL_TIM_ConfigClockSource+0x156>
 800489c:	2b20      	cmp	r3, #32
 800489e:	d867      	bhi.n	8004970 <HAL_TIM_ConfigClockSource+0x168>
 80048a0:	2b00      	cmp	r3, #0
 80048a2:	d05c      	beq.n	800495e <HAL_TIM_ConfigClockSource+0x156>
 80048a4:	2b10      	cmp	r3, #16
 80048a6:	d05a      	beq.n	800495e <HAL_TIM_ConfigClockSource+0x156>
 80048a8:	e062      	b.n	8004970 <HAL_TIM_ConfigClockSource+0x168>
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	6818      	ldr	r0, [r3, #0]
 80048ae:	683b      	ldr	r3, [r7, #0]
 80048b0:	6899      	ldr	r1, [r3, #8]
 80048b2:	683b      	ldr	r3, [r7, #0]
 80048b4:	685a      	ldr	r2, [r3, #4]
 80048b6:	683b      	ldr	r3, [r7, #0]
 80048b8:	68db      	ldr	r3, [r3, #12]
 80048ba:	f000 f966 	bl	8004b8a <TIM_ETR_SetConfig>
 80048be:	687b      	ldr	r3, [r7, #4]
 80048c0:	681b      	ldr	r3, [r3, #0]
 80048c2:	689b      	ldr	r3, [r3, #8]
 80048c4:	60fb      	str	r3, [r7, #12]
 80048c6:	68fb      	ldr	r3, [r7, #12]
 80048c8:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80048cc:	60fb      	str	r3, [r7, #12]
 80048ce:	687b      	ldr	r3, [r7, #4]
 80048d0:	681b      	ldr	r3, [r3, #0]
 80048d2:	68fa      	ldr	r2, [r7, #12]
 80048d4:	609a      	str	r2, [r3, #8]
 80048d6:	e04e      	b.n	8004976 <HAL_TIM_ConfigClockSource+0x16e>
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	6818      	ldr	r0, [r3, #0]
 80048dc:	683b      	ldr	r3, [r7, #0]
 80048de:	6899      	ldr	r1, [r3, #8]
 80048e0:	683b      	ldr	r3, [r7, #0]
 80048e2:	685a      	ldr	r2, [r3, #4]
 80048e4:	683b      	ldr	r3, [r7, #0]
 80048e6:	68db      	ldr	r3, [r3, #12]
 80048e8:	f000 f94f 	bl	8004b8a <TIM_ETR_SetConfig>
 80048ec:	687b      	ldr	r3, [r7, #4]
 80048ee:	681b      	ldr	r3, [r3, #0]
 80048f0:	689a      	ldr	r2, [r3, #8]
 80048f2:	687b      	ldr	r3, [r7, #4]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80048fa:	609a      	str	r2, [r3, #8]
 80048fc:	e03b      	b.n	8004976 <HAL_TIM_ConfigClockSource+0x16e>
 80048fe:	687b      	ldr	r3, [r7, #4]
 8004900:	6818      	ldr	r0, [r3, #0]
 8004902:	683b      	ldr	r3, [r7, #0]
 8004904:	6859      	ldr	r1, [r3, #4]
 8004906:	683b      	ldr	r3, [r7, #0]
 8004908:	68db      	ldr	r3, [r3, #12]
 800490a:	461a      	mov	r2, r3
 800490c:	f000 f8c6 	bl	8004a9c <TIM_TI1_ConfigInputStage>
 8004910:	687b      	ldr	r3, [r7, #4]
 8004912:	681b      	ldr	r3, [r3, #0]
 8004914:	2150      	movs	r1, #80	; 0x50
 8004916:	4618      	mov	r0, r3
 8004918:	f000 f91d 	bl	8004b56 <TIM_ITRx_SetConfig>
 800491c:	e02b      	b.n	8004976 <HAL_TIM_ConfigClockSource+0x16e>
 800491e:	687b      	ldr	r3, [r7, #4]
 8004920:	6818      	ldr	r0, [r3, #0]
 8004922:	683b      	ldr	r3, [r7, #0]
 8004924:	6859      	ldr	r1, [r3, #4]
 8004926:	683b      	ldr	r3, [r7, #0]
 8004928:	68db      	ldr	r3, [r3, #12]
 800492a:	461a      	mov	r2, r3
 800492c:	f000 f8e4 	bl	8004af8 <TIM_TI2_ConfigInputStage>
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	681b      	ldr	r3, [r3, #0]
 8004934:	2160      	movs	r1, #96	; 0x60
 8004936:	4618      	mov	r0, r3
 8004938:	f000 f90d 	bl	8004b56 <TIM_ITRx_SetConfig>
 800493c:	e01b      	b.n	8004976 <HAL_TIM_ConfigClockSource+0x16e>
 800493e:	687b      	ldr	r3, [r7, #4]
 8004940:	6818      	ldr	r0, [r3, #0]
 8004942:	683b      	ldr	r3, [r7, #0]
 8004944:	6859      	ldr	r1, [r3, #4]
 8004946:	683b      	ldr	r3, [r7, #0]
 8004948:	68db      	ldr	r3, [r3, #12]
 800494a:	461a      	mov	r2, r3
 800494c:	f000 f8a6 	bl	8004a9c <TIM_TI1_ConfigInputStage>
 8004950:	687b      	ldr	r3, [r7, #4]
 8004952:	681b      	ldr	r3, [r3, #0]
 8004954:	2140      	movs	r1, #64	; 0x40
 8004956:	4618      	mov	r0, r3
 8004958:	f000 f8fd 	bl	8004b56 <TIM_ITRx_SetConfig>
 800495c:	e00b      	b.n	8004976 <HAL_TIM_ConfigClockSource+0x16e>
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	681a      	ldr	r2, [r3, #0]
 8004962:	683b      	ldr	r3, [r7, #0]
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	4619      	mov	r1, r3
 8004968:	4610      	mov	r0, r2
 800496a:	f000 f8f4 	bl	8004b56 <TIM_ITRx_SetConfig>
 800496e:	e002      	b.n	8004976 <HAL_TIM_ConfigClockSource+0x16e>
 8004970:	bf00      	nop
 8004972:	e000      	b.n	8004976 <HAL_TIM_ConfigClockSource+0x16e>
 8004974:	bf00      	nop
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	2201      	movs	r2, #1
 800497a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800497e:	687b      	ldr	r3, [r7, #4]
 8004980:	2200      	movs	r2, #0
 8004982:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004986:	2300      	movs	r3, #0
 8004988:	4618      	mov	r0, r3
 800498a:	3710      	adds	r7, #16
 800498c:	46bd      	mov	sp, r7
 800498e:	bd80      	pop	{r7, pc}

08004990 <HAL_TIM_OC_DelayElapsedCallback>:
 8004990:	b480      	push	{r7}
 8004992:	b083      	sub	sp, #12
 8004994:	af00      	add	r7, sp, #0
 8004996:	6078      	str	r0, [r7, #4]
 8004998:	bf00      	nop
 800499a:	370c      	adds	r7, #12
 800499c:	46bd      	mov	sp, r7
 800499e:	bc80      	pop	{r7}
 80049a0:	4770      	bx	lr

080049a2 <HAL_TIM_IC_CaptureCallback>:
 80049a2:	b480      	push	{r7}
 80049a4:	b083      	sub	sp, #12
 80049a6:	af00      	add	r7, sp, #0
 80049a8:	6078      	str	r0, [r7, #4]
 80049aa:	bf00      	nop
 80049ac:	370c      	adds	r7, #12
 80049ae:	46bd      	mov	sp, r7
 80049b0:	bc80      	pop	{r7}
 80049b2:	4770      	bx	lr

080049b4 <HAL_TIM_PWM_PulseFinishedCallback>:
 80049b4:	b480      	push	{r7}
 80049b6:	b083      	sub	sp, #12
 80049b8:	af00      	add	r7, sp, #0
 80049ba:	6078      	str	r0, [r7, #4]
 80049bc:	bf00      	nop
 80049be:	370c      	adds	r7, #12
 80049c0:	46bd      	mov	sp, r7
 80049c2:	bc80      	pop	{r7}
 80049c4:	4770      	bx	lr

080049c6 <HAL_TIM_TriggerCallback>:
 80049c6:	b480      	push	{r7}
 80049c8:	b083      	sub	sp, #12
 80049ca:	af00      	add	r7, sp, #0
 80049cc:	6078      	str	r0, [r7, #4]
 80049ce:	bf00      	nop
 80049d0:	370c      	adds	r7, #12
 80049d2:	46bd      	mov	sp, r7
 80049d4:	bc80      	pop	{r7}
 80049d6:	4770      	bx	lr

080049d8 <TIM_Base_SetConfig>:
 80049d8:	b480      	push	{r7}
 80049da:	b085      	sub	sp, #20
 80049dc:	af00      	add	r7, sp, #0
 80049de:	6078      	str	r0, [r7, #4]
 80049e0:	6039      	str	r1, [r7, #0]
 80049e2:	687b      	ldr	r3, [r7, #4]
 80049e4:	681b      	ldr	r3, [r3, #0]
 80049e6:	60fb      	str	r3, [r7, #12]
 80049e8:	687b      	ldr	r3, [r7, #4]
 80049ea:	4a29      	ldr	r2, [pc, #164]	; (8004a90 <TIM_Base_SetConfig+0xb8>)
 80049ec:	4293      	cmp	r3, r2
 80049ee:	d00b      	beq.n	8004a08 <TIM_Base_SetConfig+0x30>
 80049f0:	687b      	ldr	r3, [r7, #4]
 80049f2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80049f6:	d007      	beq.n	8004a08 <TIM_Base_SetConfig+0x30>
 80049f8:	687b      	ldr	r3, [r7, #4]
 80049fa:	4a26      	ldr	r2, [pc, #152]	; (8004a94 <TIM_Base_SetConfig+0xbc>)
 80049fc:	4293      	cmp	r3, r2
 80049fe:	d003      	beq.n	8004a08 <TIM_Base_SetConfig+0x30>
 8004a00:	687b      	ldr	r3, [r7, #4]
 8004a02:	4a25      	ldr	r2, [pc, #148]	; (8004a98 <TIM_Base_SetConfig+0xc0>)
 8004a04:	4293      	cmp	r3, r2
 8004a06:	d108      	bne.n	8004a1a <TIM_Base_SetConfig+0x42>
 8004a08:	68fb      	ldr	r3, [r7, #12]
 8004a0a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004a0e:	60fb      	str	r3, [r7, #12]
 8004a10:	683b      	ldr	r3, [r7, #0]
 8004a12:	685b      	ldr	r3, [r3, #4]
 8004a14:	68fa      	ldr	r2, [r7, #12]
 8004a16:	4313      	orrs	r3, r2
 8004a18:	60fb      	str	r3, [r7, #12]
 8004a1a:	687b      	ldr	r3, [r7, #4]
 8004a1c:	4a1c      	ldr	r2, [pc, #112]	; (8004a90 <TIM_Base_SetConfig+0xb8>)
 8004a1e:	4293      	cmp	r3, r2
 8004a20:	d00b      	beq.n	8004a3a <TIM_Base_SetConfig+0x62>
 8004a22:	687b      	ldr	r3, [r7, #4]
 8004a24:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004a28:	d007      	beq.n	8004a3a <TIM_Base_SetConfig+0x62>
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	4a19      	ldr	r2, [pc, #100]	; (8004a94 <TIM_Base_SetConfig+0xbc>)
 8004a2e:	4293      	cmp	r3, r2
 8004a30:	d003      	beq.n	8004a3a <TIM_Base_SetConfig+0x62>
 8004a32:	687b      	ldr	r3, [r7, #4]
 8004a34:	4a18      	ldr	r2, [pc, #96]	; (8004a98 <TIM_Base_SetConfig+0xc0>)
 8004a36:	4293      	cmp	r3, r2
 8004a38:	d108      	bne.n	8004a4c <TIM_Base_SetConfig+0x74>
 8004a3a:	68fb      	ldr	r3, [r7, #12]
 8004a3c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004a40:	60fb      	str	r3, [r7, #12]
 8004a42:	683b      	ldr	r3, [r7, #0]
 8004a44:	68db      	ldr	r3, [r3, #12]
 8004a46:	68fa      	ldr	r2, [r7, #12]
 8004a48:	4313      	orrs	r3, r2
 8004a4a:	60fb      	str	r3, [r7, #12]
 8004a4c:	68fb      	ldr	r3, [r7, #12]
 8004a4e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8004a52:	683b      	ldr	r3, [r7, #0]
 8004a54:	695b      	ldr	r3, [r3, #20]
 8004a56:	4313      	orrs	r3, r2
 8004a58:	60fb      	str	r3, [r7, #12]
 8004a5a:	687b      	ldr	r3, [r7, #4]
 8004a5c:	68fa      	ldr	r2, [r7, #12]
 8004a5e:	601a      	str	r2, [r3, #0]
 8004a60:	683b      	ldr	r3, [r7, #0]
 8004a62:	689a      	ldr	r2, [r3, #8]
 8004a64:	687b      	ldr	r3, [r7, #4]
 8004a66:	62da      	str	r2, [r3, #44]	; 0x2c
 8004a68:	683b      	ldr	r3, [r7, #0]
 8004a6a:	681a      	ldr	r2, [r3, #0]
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	629a      	str	r2, [r3, #40]	; 0x28
 8004a70:	687b      	ldr	r3, [r7, #4]
 8004a72:	4a07      	ldr	r2, [pc, #28]	; (8004a90 <TIM_Base_SetConfig+0xb8>)
 8004a74:	4293      	cmp	r3, r2
 8004a76:	d103      	bne.n	8004a80 <TIM_Base_SetConfig+0xa8>
 8004a78:	683b      	ldr	r3, [r7, #0]
 8004a7a:	691a      	ldr	r2, [r3, #16]
 8004a7c:	687b      	ldr	r3, [r7, #4]
 8004a7e:	631a      	str	r2, [r3, #48]	; 0x30
 8004a80:	687b      	ldr	r3, [r7, #4]
 8004a82:	2201      	movs	r2, #1
 8004a84:	615a      	str	r2, [r3, #20]
 8004a86:	bf00      	nop
 8004a88:	3714      	adds	r7, #20
 8004a8a:	46bd      	mov	sp, r7
 8004a8c:	bc80      	pop	{r7}
 8004a8e:	4770      	bx	lr
 8004a90:	40012c00 	.word	0x40012c00
 8004a94:	40000400 	.word	0x40000400
 8004a98:	40000800 	.word	0x40000800

08004a9c <TIM_TI1_ConfigInputStage>:
 8004a9c:	b480      	push	{r7}
 8004a9e:	b087      	sub	sp, #28
 8004aa0:	af00      	add	r7, sp, #0
 8004aa2:	60f8      	str	r0, [r7, #12]
 8004aa4:	60b9      	str	r1, [r7, #8]
 8004aa6:	607a      	str	r2, [r7, #4]
 8004aa8:	68fb      	ldr	r3, [r7, #12]
 8004aaa:	6a1b      	ldr	r3, [r3, #32]
 8004aac:	617b      	str	r3, [r7, #20]
 8004aae:	68fb      	ldr	r3, [r7, #12]
 8004ab0:	6a1b      	ldr	r3, [r3, #32]
 8004ab2:	f023 0201 	bic.w	r2, r3, #1
 8004ab6:	68fb      	ldr	r3, [r7, #12]
 8004ab8:	621a      	str	r2, [r3, #32]
 8004aba:	68fb      	ldr	r3, [r7, #12]
 8004abc:	699b      	ldr	r3, [r3, #24]
 8004abe:	613b      	str	r3, [r7, #16]
 8004ac0:	693b      	ldr	r3, [r7, #16]
 8004ac2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004ac6:	613b      	str	r3, [r7, #16]
 8004ac8:	687b      	ldr	r3, [r7, #4]
 8004aca:	011b      	lsls	r3, r3, #4
 8004acc:	693a      	ldr	r2, [r7, #16]
 8004ace:	4313      	orrs	r3, r2
 8004ad0:	613b      	str	r3, [r7, #16]
 8004ad2:	697b      	ldr	r3, [r7, #20]
 8004ad4:	f023 030a 	bic.w	r3, r3, #10
 8004ad8:	617b      	str	r3, [r7, #20]
 8004ada:	697a      	ldr	r2, [r7, #20]
 8004adc:	68bb      	ldr	r3, [r7, #8]
 8004ade:	4313      	orrs	r3, r2
 8004ae0:	617b      	str	r3, [r7, #20]
 8004ae2:	68fb      	ldr	r3, [r7, #12]
 8004ae4:	693a      	ldr	r2, [r7, #16]
 8004ae6:	619a      	str	r2, [r3, #24]
 8004ae8:	68fb      	ldr	r3, [r7, #12]
 8004aea:	697a      	ldr	r2, [r7, #20]
 8004aec:	621a      	str	r2, [r3, #32]
 8004aee:	bf00      	nop
 8004af0:	371c      	adds	r7, #28
 8004af2:	46bd      	mov	sp, r7
 8004af4:	bc80      	pop	{r7}
 8004af6:	4770      	bx	lr

08004af8 <TIM_TI2_ConfigInputStage>:
 8004af8:	b480      	push	{r7}
 8004afa:	b087      	sub	sp, #28
 8004afc:	af00      	add	r7, sp, #0
 8004afe:	60f8      	str	r0, [r7, #12]
 8004b00:	60b9      	str	r1, [r7, #8]
 8004b02:	607a      	str	r2, [r7, #4]
 8004b04:	68fb      	ldr	r3, [r7, #12]
 8004b06:	6a1b      	ldr	r3, [r3, #32]
 8004b08:	f023 0210 	bic.w	r2, r3, #16
 8004b0c:	68fb      	ldr	r3, [r7, #12]
 8004b0e:	621a      	str	r2, [r3, #32]
 8004b10:	68fb      	ldr	r3, [r7, #12]
 8004b12:	699b      	ldr	r3, [r3, #24]
 8004b14:	617b      	str	r3, [r7, #20]
 8004b16:	68fb      	ldr	r3, [r7, #12]
 8004b18:	6a1b      	ldr	r3, [r3, #32]
 8004b1a:	613b      	str	r3, [r7, #16]
 8004b1c:	697b      	ldr	r3, [r7, #20]
 8004b1e:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8004b22:	617b      	str	r3, [r7, #20]
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	031b      	lsls	r3, r3, #12
 8004b28:	697a      	ldr	r2, [r7, #20]
 8004b2a:	4313      	orrs	r3, r2
 8004b2c:	617b      	str	r3, [r7, #20]
 8004b2e:	693b      	ldr	r3, [r7, #16]
 8004b30:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8004b34:	613b      	str	r3, [r7, #16]
 8004b36:	68bb      	ldr	r3, [r7, #8]
 8004b38:	011b      	lsls	r3, r3, #4
 8004b3a:	693a      	ldr	r2, [r7, #16]
 8004b3c:	4313      	orrs	r3, r2
 8004b3e:	613b      	str	r3, [r7, #16]
 8004b40:	68fb      	ldr	r3, [r7, #12]
 8004b42:	697a      	ldr	r2, [r7, #20]
 8004b44:	619a      	str	r2, [r3, #24]
 8004b46:	68fb      	ldr	r3, [r7, #12]
 8004b48:	693a      	ldr	r2, [r7, #16]
 8004b4a:	621a      	str	r2, [r3, #32]
 8004b4c:	bf00      	nop
 8004b4e:	371c      	adds	r7, #28
 8004b50:	46bd      	mov	sp, r7
 8004b52:	bc80      	pop	{r7}
 8004b54:	4770      	bx	lr

08004b56 <TIM_ITRx_SetConfig>:
 8004b56:	b480      	push	{r7}
 8004b58:	b085      	sub	sp, #20
 8004b5a:	af00      	add	r7, sp, #0
 8004b5c:	6078      	str	r0, [r7, #4]
 8004b5e:	6039      	str	r1, [r7, #0]
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	689b      	ldr	r3, [r3, #8]
 8004b64:	60fb      	str	r3, [r7, #12]
 8004b66:	68fb      	ldr	r3, [r7, #12]
 8004b68:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004b6c:	60fb      	str	r3, [r7, #12]
 8004b6e:	683a      	ldr	r2, [r7, #0]
 8004b70:	68fb      	ldr	r3, [r7, #12]
 8004b72:	4313      	orrs	r3, r2
 8004b74:	f043 0307 	orr.w	r3, r3, #7
 8004b78:	60fb      	str	r3, [r7, #12]
 8004b7a:	687b      	ldr	r3, [r7, #4]
 8004b7c:	68fa      	ldr	r2, [r7, #12]
 8004b7e:	609a      	str	r2, [r3, #8]
 8004b80:	bf00      	nop
 8004b82:	3714      	adds	r7, #20
 8004b84:	46bd      	mov	sp, r7
 8004b86:	bc80      	pop	{r7}
 8004b88:	4770      	bx	lr

08004b8a <TIM_ETR_SetConfig>:
 8004b8a:	b480      	push	{r7}
 8004b8c:	b087      	sub	sp, #28
 8004b8e:	af00      	add	r7, sp, #0
 8004b90:	60f8      	str	r0, [r7, #12]
 8004b92:	60b9      	str	r1, [r7, #8]
 8004b94:	607a      	str	r2, [r7, #4]
 8004b96:	603b      	str	r3, [r7, #0]
 8004b98:	68fb      	ldr	r3, [r7, #12]
 8004b9a:	689b      	ldr	r3, [r3, #8]
 8004b9c:	617b      	str	r3, [r7, #20]
 8004b9e:	697b      	ldr	r3, [r7, #20]
 8004ba0:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8004ba4:	617b      	str	r3, [r7, #20]
 8004ba6:	683b      	ldr	r3, [r7, #0]
 8004ba8:	021a      	lsls	r2, r3, #8
 8004baa:	687b      	ldr	r3, [r7, #4]
 8004bac:	431a      	orrs	r2, r3
 8004bae:	68bb      	ldr	r3, [r7, #8]
 8004bb0:	4313      	orrs	r3, r2
 8004bb2:	697a      	ldr	r2, [r7, #20]
 8004bb4:	4313      	orrs	r3, r2
 8004bb6:	617b      	str	r3, [r7, #20]
 8004bb8:	68fb      	ldr	r3, [r7, #12]
 8004bba:	697a      	ldr	r2, [r7, #20]
 8004bbc:	609a      	str	r2, [r3, #8]
 8004bbe:	bf00      	nop
 8004bc0:	371c      	adds	r7, #28
 8004bc2:	46bd      	mov	sp, r7
 8004bc4:	bc80      	pop	{r7}
 8004bc6:	4770      	bx	lr

08004bc8 <HAL_TIMEx_MasterConfigSynchronization>:
 8004bc8:	b480      	push	{r7}
 8004bca:	b085      	sub	sp, #20
 8004bcc:	af00      	add	r7, sp, #0
 8004bce:	6078      	str	r0, [r7, #4]
 8004bd0:	6039      	str	r1, [r7, #0]
 8004bd2:	687b      	ldr	r3, [r7, #4]
 8004bd4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004bd8:	2b01      	cmp	r3, #1
 8004bda:	d101      	bne.n	8004be0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8004bdc:	2302      	movs	r3, #2
 8004bde:	e046      	b.n	8004c6e <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8004be0:	687b      	ldr	r3, [r7, #4]
 8004be2:	2201      	movs	r2, #1
 8004be4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004be8:	687b      	ldr	r3, [r7, #4]
 8004bea:	2202      	movs	r2, #2
 8004bec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004bf0:	687b      	ldr	r3, [r7, #4]
 8004bf2:	681b      	ldr	r3, [r3, #0]
 8004bf4:	685b      	ldr	r3, [r3, #4]
 8004bf6:	60fb      	str	r3, [r7, #12]
 8004bf8:	687b      	ldr	r3, [r7, #4]
 8004bfa:	681b      	ldr	r3, [r3, #0]
 8004bfc:	689b      	ldr	r3, [r3, #8]
 8004bfe:	60bb      	str	r3, [r7, #8]
 8004c00:	68fb      	ldr	r3, [r7, #12]
 8004c02:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004c06:	60fb      	str	r3, [r7, #12]
 8004c08:	683b      	ldr	r3, [r7, #0]
 8004c0a:	681b      	ldr	r3, [r3, #0]
 8004c0c:	68fa      	ldr	r2, [r7, #12]
 8004c0e:	4313      	orrs	r3, r2
 8004c10:	60fb      	str	r3, [r7, #12]
 8004c12:	687b      	ldr	r3, [r7, #4]
 8004c14:	681b      	ldr	r3, [r3, #0]
 8004c16:	68fa      	ldr	r2, [r7, #12]
 8004c18:	605a      	str	r2, [r3, #4]
 8004c1a:	687b      	ldr	r3, [r7, #4]
 8004c1c:	681b      	ldr	r3, [r3, #0]
 8004c1e:	4a16      	ldr	r2, [pc, #88]	; (8004c78 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8004c20:	4293      	cmp	r3, r2
 8004c22:	d00e      	beq.n	8004c42 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	681b      	ldr	r3, [r3, #0]
 8004c28:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004c2c:	d009      	beq.n	8004c42 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004c2e:	687b      	ldr	r3, [r7, #4]
 8004c30:	681b      	ldr	r3, [r3, #0]
 8004c32:	4a12      	ldr	r2, [pc, #72]	; (8004c7c <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8004c34:	4293      	cmp	r3, r2
 8004c36:	d004      	beq.n	8004c42 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004c38:	687b      	ldr	r3, [r7, #4]
 8004c3a:	681b      	ldr	r3, [r3, #0]
 8004c3c:	4a10      	ldr	r2, [pc, #64]	; (8004c80 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8004c3e:	4293      	cmp	r3, r2
 8004c40:	d10c      	bne.n	8004c5c <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8004c42:	68bb      	ldr	r3, [r7, #8]
 8004c44:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004c48:	60bb      	str	r3, [r7, #8]
 8004c4a:	683b      	ldr	r3, [r7, #0]
 8004c4c:	685b      	ldr	r3, [r3, #4]
 8004c4e:	68ba      	ldr	r2, [r7, #8]
 8004c50:	4313      	orrs	r3, r2
 8004c52:	60bb      	str	r3, [r7, #8]
 8004c54:	687b      	ldr	r3, [r7, #4]
 8004c56:	681b      	ldr	r3, [r3, #0]
 8004c58:	68ba      	ldr	r2, [r7, #8]
 8004c5a:	609a      	str	r2, [r3, #8]
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	2201      	movs	r2, #1
 8004c60:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004c64:	687b      	ldr	r3, [r7, #4]
 8004c66:	2200      	movs	r2, #0
 8004c68:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004c6c:	2300      	movs	r3, #0
 8004c6e:	4618      	mov	r0, r3
 8004c70:	3714      	adds	r7, #20
 8004c72:	46bd      	mov	sp, r7
 8004c74:	bc80      	pop	{r7}
 8004c76:	4770      	bx	lr
 8004c78:	40012c00 	.word	0x40012c00
 8004c7c:	40000400 	.word	0x40000400
 8004c80:	40000800 	.word	0x40000800

08004c84 <HAL_TIMEx_CommutCallback>:
 8004c84:	b480      	push	{r7}
 8004c86:	b083      	sub	sp, #12
 8004c88:	af00      	add	r7, sp, #0
 8004c8a:	6078      	str	r0, [r7, #4]
 8004c8c:	bf00      	nop
 8004c8e:	370c      	adds	r7, #12
 8004c90:	46bd      	mov	sp, r7
 8004c92:	bc80      	pop	{r7}
 8004c94:	4770      	bx	lr

08004c96 <HAL_TIMEx_BreakCallback>:
 8004c96:	b480      	push	{r7}
 8004c98:	b083      	sub	sp, #12
 8004c9a:	af00      	add	r7, sp, #0
 8004c9c:	6078      	str	r0, [r7, #4]
 8004c9e:	bf00      	nop
 8004ca0:	370c      	adds	r7, #12
 8004ca2:	46bd      	mov	sp, r7
 8004ca4:	bc80      	pop	{r7}
 8004ca6:	4770      	bx	lr

08004ca8 <HAL_UART_Init>:
 8004ca8:	b580      	push	{r7, lr}
 8004caa:	b082      	sub	sp, #8
 8004cac:	af00      	add	r7, sp, #0
 8004cae:	6078      	str	r0, [r7, #4]
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	2b00      	cmp	r3, #0
 8004cb4:	d101      	bne.n	8004cba <HAL_UART_Init+0x12>
 8004cb6:	2301      	movs	r3, #1
 8004cb8:	e03f      	b.n	8004d3a <HAL_UART_Init+0x92>
 8004cba:	687b      	ldr	r3, [r7, #4]
 8004cbc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004cc0:	b2db      	uxtb	r3, r3
 8004cc2:	2b00      	cmp	r3, #0
 8004cc4:	d106      	bne.n	8004cd4 <HAL_UART_Init+0x2c>
 8004cc6:	687b      	ldr	r3, [r7, #4]
 8004cc8:	2200      	movs	r2, #0
 8004cca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004cce:	6878      	ldr	r0, [r7, #4]
 8004cd0:	f7fd fc24 	bl	800251c <HAL_UART_MspInit>
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	2224      	movs	r2, #36	; 0x24
 8004cd8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004cdc:	687b      	ldr	r3, [r7, #4]
 8004cde:	681b      	ldr	r3, [r3, #0]
 8004ce0:	68da      	ldr	r2, [r3, #12]
 8004ce2:	687b      	ldr	r3, [r7, #4]
 8004ce4:	681b      	ldr	r3, [r3, #0]
 8004ce6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004cea:	60da      	str	r2, [r3, #12]
 8004cec:	6878      	ldr	r0, [r7, #4]
 8004cee:	f000 fc85 	bl	80055fc <UART_SetConfig>
 8004cf2:	687b      	ldr	r3, [r7, #4]
 8004cf4:	681b      	ldr	r3, [r3, #0]
 8004cf6:	691a      	ldr	r2, [r3, #16]
 8004cf8:	687b      	ldr	r3, [r7, #4]
 8004cfa:	681b      	ldr	r3, [r3, #0]
 8004cfc:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8004d00:	611a      	str	r2, [r3, #16]
 8004d02:	687b      	ldr	r3, [r7, #4]
 8004d04:	681b      	ldr	r3, [r3, #0]
 8004d06:	695a      	ldr	r2, [r3, #20]
 8004d08:	687b      	ldr	r3, [r7, #4]
 8004d0a:	681b      	ldr	r3, [r3, #0]
 8004d0c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8004d10:	615a      	str	r2, [r3, #20]
 8004d12:	687b      	ldr	r3, [r7, #4]
 8004d14:	681b      	ldr	r3, [r3, #0]
 8004d16:	68da      	ldr	r2, [r3, #12]
 8004d18:	687b      	ldr	r3, [r7, #4]
 8004d1a:	681b      	ldr	r3, [r3, #0]
 8004d1c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004d20:	60da      	str	r2, [r3, #12]
 8004d22:	687b      	ldr	r3, [r7, #4]
 8004d24:	2200      	movs	r2, #0
 8004d26:	641a      	str	r2, [r3, #64]	; 0x40
 8004d28:	687b      	ldr	r3, [r7, #4]
 8004d2a:	2220      	movs	r2, #32
 8004d2c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004d30:	687b      	ldr	r3, [r7, #4]
 8004d32:	2220      	movs	r2, #32
 8004d34:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004d38:	2300      	movs	r3, #0
 8004d3a:	4618      	mov	r0, r3
 8004d3c:	3708      	adds	r7, #8
 8004d3e:	46bd      	mov	sp, r7
 8004d40:	bd80      	pop	{r7, pc}

08004d42 <HAL_UART_Transmit>:
 8004d42:	b580      	push	{r7, lr}
 8004d44:	b08a      	sub	sp, #40	; 0x28
 8004d46:	af02      	add	r7, sp, #8
 8004d48:	60f8      	str	r0, [r7, #12]
 8004d4a:	60b9      	str	r1, [r7, #8]
 8004d4c:	603b      	str	r3, [r7, #0]
 8004d4e:	4613      	mov	r3, r2
 8004d50:	80fb      	strh	r3, [r7, #6]
 8004d52:	2300      	movs	r3, #0
 8004d54:	617b      	str	r3, [r7, #20]
 8004d56:	68fb      	ldr	r3, [r7, #12]
 8004d58:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004d5c:	b2db      	uxtb	r3, r3
 8004d5e:	2b20      	cmp	r3, #32
 8004d60:	d17c      	bne.n	8004e5c <HAL_UART_Transmit+0x11a>
 8004d62:	68bb      	ldr	r3, [r7, #8]
 8004d64:	2b00      	cmp	r3, #0
 8004d66:	d002      	beq.n	8004d6e <HAL_UART_Transmit+0x2c>
 8004d68:	88fb      	ldrh	r3, [r7, #6]
 8004d6a:	2b00      	cmp	r3, #0
 8004d6c:	d101      	bne.n	8004d72 <HAL_UART_Transmit+0x30>
 8004d6e:	2301      	movs	r3, #1
 8004d70:	e075      	b.n	8004e5e <HAL_UART_Transmit+0x11c>
 8004d72:	68fb      	ldr	r3, [r7, #12]
 8004d74:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004d78:	2b01      	cmp	r3, #1
 8004d7a:	d101      	bne.n	8004d80 <HAL_UART_Transmit+0x3e>
 8004d7c:	2302      	movs	r3, #2
 8004d7e:	e06e      	b.n	8004e5e <HAL_UART_Transmit+0x11c>
 8004d80:	68fb      	ldr	r3, [r7, #12]
 8004d82:	2201      	movs	r2, #1
 8004d84:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004d88:	68fb      	ldr	r3, [r7, #12]
 8004d8a:	2200      	movs	r2, #0
 8004d8c:	641a      	str	r2, [r3, #64]	; 0x40
 8004d8e:	68fb      	ldr	r3, [r7, #12]
 8004d90:	2221      	movs	r2, #33	; 0x21
 8004d92:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004d96:	f7fd ff71 	bl	8002c7c <HAL_GetTick>
 8004d9a:	6178      	str	r0, [r7, #20]
 8004d9c:	68fb      	ldr	r3, [r7, #12]
 8004d9e:	88fa      	ldrh	r2, [r7, #6]
 8004da0:	849a      	strh	r2, [r3, #36]	; 0x24
 8004da2:	68fb      	ldr	r3, [r7, #12]
 8004da4:	88fa      	ldrh	r2, [r7, #6]
 8004da6:	84da      	strh	r2, [r3, #38]	; 0x26
 8004da8:	68fb      	ldr	r3, [r7, #12]
 8004daa:	689b      	ldr	r3, [r3, #8]
 8004dac:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004db0:	d108      	bne.n	8004dc4 <HAL_UART_Transmit+0x82>
 8004db2:	68fb      	ldr	r3, [r7, #12]
 8004db4:	691b      	ldr	r3, [r3, #16]
 8004db6:	2b00      	cmp	r3, #0
 8004db8:	d104      	bne.n	8004dc4 <HAL_UART_Transmit+0x82>
 8004dba:	2300      	movs	r3, #0
 8004dbc:	61fb      	str	r3, [r7, #28]
 8004dbe:	68bb      	ldr	r3, [r7, #8]
 8004dc0:	61bb      	str	r3, [r7, #24]
 8004dc2:	e003      	b.n	8004dcc <HAL_UART_Transmit+0x8a>
 8004dc4:	68bb      	ldr	r3, [r7, #8]
 8004dc6:	61fb      	str	r3, [r7, #28]
 8004dc8:	2300      	movs	r3, #0
 8004dca:	61bb      	str	r3, [r7, #24]
 8004dcc:	68fb      	ldr	r3, [r7, #12]
 8004dce:	2200      	movs	r2, #0
 8004dd0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004dd4:	e02a      	b.n	8004e2c <HAL_UART_Transmit+0xea>
 8004dd6:	683b      	ldr	r3, [r7, #0]
 8004dd8:	9300      	str	r3, [sp, #0]
 8004dda:	697b      	ldr	r3, [r7, #20]
 8004ddc:	2200      	movs	r2, #0
 8004dde:	2180      	movs	r1, #128	; 0x80
 8004de0:	68f8      	ldr	r0, [r7, #12]
 8004de2:	f000 fa38 	bl	8005256 <UART_WaitOnFlagUntilTimeout>
 8004de6:	4603      	mov	r3, r0
 8004de8:	2b00      	cmp	r3, #0
 8004dea:	d001      	beq.n	8004df0 <HAL_UART_Transmit+0xae>
 8004dec:	2303      	movs	r3, #3
 8004dee:	e036      	b.n	8004e5e <HAL_UART_Transmit+0x11c>
 8004df0:	69fb      	ldr	r3, [r7, #28]
 8004df2:	2b00      	cmp	r3, #0
 8004df4:	d10b      	bne.n	8004e0e <HAL_UART_Transmit+0xcc>
 8004df6:	69bb      	ldr	r3, [r7, #24]
 8004df8:	881b      	ldrh	r3, [r3, #0]
 8004dfa:	461a      	mov	r2, r3
 8004dfc:	68fb      	ldr	r3, [r7, #12]
 8004dfe:	681b      	ldr	r3, [r3, #0]
 8004e00:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004e04:	605a      	str	r2, [r3, #4]
 8004e06:	69bb      	ldr	r3, [r7, #24]
 8004e08:	3302      	adds	r3, #2
 8004e0a:	61bb      	str	r3, [r7, #24]
 8004e0c:	e007      	b.n	8004e1e <HAL_UART_Transmit+0xdc>
 8004e0e:	69fb      	ldr	r3, [r7, #28]
 8004e10:	781a      	ldrb	r2, [r3, #0]
 8004e12:	68fb      	ldr	r3, [r7, #12]
 8004e14:	681b      	ldr	r3, [r3, #0]
 8004e16:	605a      	str	r2, [r3, #4]
 8004e18:	69fb      	ldr	r3, [r7, #28]
 8004e1a:	3301      	adds	r3, #1
 8004e1c:	61fb      	str	r3, [r7, #28]
 8004e1e:	68fb      	ldr	r3, [r7, #12]
 8004e20:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8004e22:	b29b      	uxth	r3, r3
 8004e24:	3b01      	subs	r3, #1
 8004e26:	b29a      	uxth	r2, r3
 8004e28:	68fb      	ldr	r3, [r7, #12]
 8004e2a:	84da      	strh	r2, [r3, #38]	; 0x26
 8004e2c:	68fb      	ldr	r3, [r7, #12]
 8004e2e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8004e30:	b29b      	uxth	r3, r3
 8004e32:	2b00      	cmp	r3, #0
 8004e34:	d1cf      	bne.n	8004dd6 <HAL_UART_Transmit+0x94>
 8004e36:	683b      	ldr	r3, [r7, #0]
 8004e38:	9300      	str	r3, [sp, #0]
 8004e3a:	697b      	ldr	r3, [r7, #20]
 8004e3c:	2200      	movs	r2, #0
 8004e3e:	2140      	movs	r1, #64	; 0x40
 8004e40:	68f8      	ldr	r0, [r7, #12]
 8004e42:	f000 fa08 	bl	8005256 <UART_WaitOnFlagUntilTimeout>
 8004e46:	4603      	mov	r3, r0
 8004e48:	2b00      	cmp	r3, #0
 8004e4a:	d001      	beq.n	8004e50 <HAL_UART_Transmit+0x10e>
 8004e4c:	2303      	movs	r3, #3
 8004e4e:	e006      	b.n	8004e5e <HAL_UART_Transmit+0x11c>
 8004e50:	68fb      	ldr	r3, [r7, #12]
 8004e52:	2220      	movs	r2, #32
 8004e54:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004e58:	2300      	movs	r3, #0
 8004e5a:	e000      	b.n	8004e5e <HAL_UART_Transmit+0x11c>
 8004e5c:	2302      	movs	r3, #2
 8004e5e:	4618      	mov	r0, r3
 8004e60:	3720      	adds	r7, #32
 8004e62:	46bd      	mov	sp, r7
 8004e64:	bd80      	pop	{r7, pc}

08004e66 <HAL_UART_Receive_IT>:
 8004e66:	b580      	push	{r7, lr}
 8004e68:	b084      	sub	sp, #16
 8004e6a:	af00      	add	r7, sp, #0
 8004e6c:	60f8      	str	r0, [r7, #12]
 8004e6e:	60b9      	str	r1, [r7, #8]
 8004e70:	4613      	mov	r3, r2
 8004e72:	80fb      	strh	r3, [r7, #6]
 8004e74:	68fb      	ldr	r3, [r7, #12]
 8004e76:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004e7a:	b2db      	uxtb	r3, r3
 8004e7c:	2b20      	cmp	r3, #32
 8004e7e:	d11d      	bne.n	8004ebc <HAL_UART_Receive_IT+0x56>
 8004e80:	68bb      	ldr	r3, [r7, #8]
 8004e82:	2b00      	cmp	r3, #0
 8004e84:	d002      	beq.n	8004e8c <HAL_UART_Receive_IT+0x26>
 8004e86:	88fb      	ldrh	r3, [r7, #6]
 8004e88:	2b00      	cmp	r3, #0
 8004e8a:	d101      	bne.n	8004e90 <HAL_UART_Receive_IT+0x2a>
 8004e8c:	2301      	movs	r3, #1
 8004e8e:	e016      	b.n	8004ebe <HAL_UART_Receive_IT+0x58>
 8004e90:	68fb      	ldr	r3, [r7, #12]
 8004e92:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004e96:	2b01      	cmp	r3, #1
 8004e98:	d101      	bne.n	8004e9e <HAL_UART_Receive_IT+0x38>
 8004e9a:	2302      	movs	r3, #2
 8004e9c:	e00f      	b.n	8004ebe <HAL_UART_Receive_IT+0x58>
 8004e9e:	68fb      	ldr	r3, [r7, #12]
 8004ea0:	2201      	movs	r2, #1
 8004ea2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004ea6:	68fb      	ldr	r3, [r7, #12]
 8004ea8:	2200      	movs	r2, #0
 8004eaa:	631a      	str	r2, [r3, #48]	; 0x30
 8004eac:	88fb      	ldrh	r3, [r7, #6]
 8004eae:	461a      	mov	r2, r3
 8004eb0:	68b9      	ldr	r1, [r7, #8]
 8004eb2:	68f8      	ldr	r0, [r7, #12]
 8004eb4:	f000 fa19 	bl	80052ea <UART_Start_Receive_IT>
 8004eb8:	4603      	mov	r3, r0
 8004eba:	e000      	b.n	8004ebe <HAL_UART_Receive_IT+0x58>
 8004ebc:	2302      	movs	r3, #2
 8004ebe:	4618      	mov	r0, r3
 8004ec0:	3710      	adds	r7, #16
 8004ec2:	46bd      	mov	sp, r7
 8004ec4:	bd80      	pop	{r7, pc}
	...

08004ec8 <HAL_UART_IRQHandler>:
 8004ec8:	b580      	push	{r7, lr}
 8004eca:	b08a      	sub	sp, #40	; 0x28
 8004ecc:	af00      	add	r7, sp, #0
 8004ece:	6078      	str	r0, [r7, #4]
 8004ed0:	687b      	ldr	r3, [r7, #4]
 8004ed2:	681b      	ldr	r3, [r3, #0]
 8004ed4:	681b      	ldr	r3, [r3, #0]
 8004ed6:	627b      	str	r3, [r7, #36]	; 0x24
 8004ed8:	687b      	ldr	r3, [r7, #4]
 8004eda:	681b      	ldr	r3, [r3, #0]
 8004edc:	68db      	ldr	r3, [r3, #12]
 8004ede:	623b      	str	r3, [r7, #32]
 8004ee0:	687b      	ldr	r3, [r7, #4]
 8004ee2:	681b      	ldr	r3, [r3, #0]
 8004ee4:	695b      	ldr	r3, [r3, #20]
 8004ee6:	61fb      	str	r3, [r7, #28]
 8004ee8:	2300      	movs	r3, #0
 8004eea:	61bb      	str	r3, [r7, #24]
 8004eec:	2300      	movs	r3, #0
 8004eee:	617b      	str	r3, [r7, #20]
 8004ef0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004ef2:	f003 030f 	and.w	r3, r3, #15
 8004ef6:	61bb      	str	r3, [r7, #24]
 8004ef8:	69bb      	ldr	r3, [r7, #24]
 8004efa:	2b00      	cmp	r3, #0
 8004efc:	d10d      	bne.n	8004f1a <HAL_UART_IRQHandler+0x52>
 8004efe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f00:	f003 0320 	and.w	r3, r3, #32
 8004f04:	2b00      	cmp	r3, #0
 8004f06:	d008      	beq.n	8004f1a <HAL_UART_IRQHandler+0x52>
 8004f08:	6a3b      	ldr	r3, [r7, #32]
 8004f0a:	f003 0320 	and.w	r3, r3, #32
 8004f0e:	2b00      	cmp	r3, #0
 8004f10:	d003      	beq.n	8004f1a <HAL_UART_IRQHandler+0x52>
 8004f12:	6878      	ldr	r0, [r7, #4]
 8004f14:	f000 fac9 	bl	80054aa <UART_Receive_IT>
 8004f18:	e17b      	b.n	8005212 <HAL_UART_IRQHandler+0x34a>
 8004f1a:	69bb      	ldr	r3, [r7, #24]
 8004f1c:	2b00      	cmp	r3, #0
 8004f1e:	f000 80b1 	beq.w	8005084 <HAL_UART_IRQHandler+0x1bc>
 8004f22:	69fb      	ldr	r3, [r7, #28]
 8004f24:	f003 0301 	and.w	r3, r3, #1
 8004f28:	2b00      	cmp	r3, #0
 8004f2a:	d105      	bne.n	8004f38 <HAL_UART_IRQHandler+0x70>
 8004f2c:	6a3b      	ldr	r3, [r7, #32]
 8004f2e:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8004f32:	2b00      	cmp	r3, #0
 8004f34:	f000 80a6 	beq.w	8005084 <HAL_UART_IRQHandler+0x1bc>
 8004f38:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f3a:	f003 0301 	and.w	r3, r3, #1
 8004f3e:	2b00      	cmp	r3, #0
 8004f40:	d00a      	beq.n	8004f58 <HAL_UART_IRQHandler+0x90>
 8004f42:	6a3b      	ldr	r3, [r7, #32]
 8004f44:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004f48:	2b00      	cmp	r3, #0
 8004f4a:	d005      	beq.n	8004f58 <HAL_UART_IRQHandler+0x90>
 8004f4c:	687b      	ldr	r3, [r7, #4]
 8004f4e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f50:	f043 0201 	orr.w	r2, r3, #1
 8004f54:	687b      	ldr	r3, [r7, #4]
 8004f56:	641a      	str	r2, [r3, #64]	; 0x40
 8004f58:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f5a:	f003 0304 	and.w	r3, r3, #4
 8004f5e:	2b00      	cmp	r3, #0
 8004f60:	d00a      	beq.n	8004f78 <HAL_UART_IRQHandler+0xb0>
 8004f62:	69fb      	ldr	r3, [r7, #28]
 8004f64:	f003 0301 	and.w	r3, r3, #1
 8004f68:	2b00      	cmp	r3, #0
 8004f6a:	d005      	beq.n	8004f78 <HAL_UART_IRQHandler+0xb0>
 8004f6c:	687b      	ldr	r3, [r7, #4]
 8004f6e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f70:	f043 0202 	orr.w	r2, r3, #2
 8004f74:	687b      	ldr	r3, [r7, #4]
 8004f76:	641a      	str	r2, [r3, #64]	; 0x40
 8004f78:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f7a:	f003 0302 	and.w	r3, r3, #2
 8004f7e:	2b00      	cmp	r3, #0
 8004f80:	d00a      	beq.n	8004f98 <HAL_UART_IRQHandler+0xd0>
 8004f82:	69fb      	ldr	r3, [r7, #28]
 8004f84:	f003 0301 	and.w	r3, r3, #1
 8004f88:	2b00      	cmp	r3, #0
 8004f8a:	d005      	beq.n	8004f98 <HAL_UART_IRQHandler+0xd0>
 8004f8c:	687b      	ldr	r3, [r7, #4]
 8004f8e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f90:	f043 0204 	orr.w	r2, r3, #4
 8004f94:	687b      	ldr	r3, [r7, #4]
 8004f96:	641a      	str	r2, [r3, #64]	; 0x40
 8004f98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f9a:	f003 0308 	and.w	r3, r3, #8
 8004f9e:	2b00      	cmp	r3, #0
 8004fa0:	d00f      	beq.n	8004fc2 <HAL_UART_IRQHandler+0xfa>
 8004fa2:	6a3b      	ldr	r3, [r7, #32]
 8004fa4:	f003 0320 	and.w	r3, r3, #32
 8004fa8:	2b00      	cmp	r3, #0
 8004faa:	d104      	bne.n	8004fb6 <HAL_UART_IRQHandler+0xee>
 8004fac:	69fb      	ldr	r3, [r7, #28]
 8004fae:	f003 0301 	and.w	r3, r3, #1
 8004fb2:	2b00      	cmp	r3, #0
 8004fb4:	d005      	beq.n	8004fc2 <HAL_UART_IRQHandler+0xfa>
 8004fb6:	687b      	ldr	r3, [r7, #4]
 8004fb8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fba:	f043 0208 	orr.w	r2, r3, #8
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	641a      	str	r2, [r3, #64]	; 0x40
 8004fc2:	687b      	ldr	r3, [r7, #4]
 8004fc4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fc6:	2b00      	cmp	r3, #0
 8004fc8:	f000 811e 	beq.w	8005208 <HAL_UART_IRQHandler+0x340>
 8004fcc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004fce:	f003 0320 	and.w	r3, r3, #32
 8004fd2:	2b00      	cmp	r3, #0
 8004fd4:	d007      	beq.n	8004fe6 <HAL_UART_IRQHandler+0x11e>
 8004fd6:	6a3b      	ldr	r3, [r7, #32]
 8004fd8:	f003 0320 	and.w	r3, r3, #32
 8004fdc:	2b00      	cmp	r3, #0
 8004fde:	d002      	beq.n	8004fe6 <HAL_UART_IRQHandler+0x11e>
 8004fe0:	6878      	ldr	r0, [r7, #4]
 8004fe2:	f000 fa62 	bl	80054aa <UART_Receive_IT>
 8004fe6:	687b      	ldr	r3, [r7, #4]
 8004fe8:	681b      	ldr	r3, [r3, #0]
 8004fea:	695b      	ldr	r3, [r3, #20]
 8004fec:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004ff0:	2b00      	cmp	r3, #0
 8004ff2:	bf14      	ite	ne
 8004ff4:	2301      	movne	r3, #1
 8004ff6:	2300      	moveq	r3, #0
 8004ff8:	b2db      	uxtb	r3, r3
 8004ffa:	617b      	str	r3, [r7, #20]
 8004ffc:	687b      	ldr	r3, [r7, #4]
 8004ffe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005000:	f003 0308 	and.w	r3, r3, #8
 8005004:	2b00      	cmp	r3, #0
 8005006:	d102      	bne.n	800500e <HAL_UART_IRQHandler+0x146>
 8005008:	697b      	ldr	r3, [r7, #20]
 800500a:	2b00      	cmp	r3, #0
 800500c:	d031      	beq.n	8005072 <HAL_UART_IRQHandler+0x1aa>
 800500e:	6878      	ldr	r0, [r7, #4]
 8005010:	f000 f9a4 	bl	800535c <UART_EndRxTransfer>
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	681b      	ldr	r3, [r3, #0]
 8005018:	695b      	ldr	r3, [r3, #20]
 800501a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800501e:	2b00      	cmp	r3, #0
 8005020:	d023      	beq.n	800506a <HAL_UART_IRQHandler+0x1a2>
 8005022:	687b      	ldr	r3, [r7, #4]
 8005024:	681b      	ldr	r3, [r3, #0]
 8005026:	695a      	ldr	r2, [r3, #20]
 8005028:	687b      	ldr	r3, [r7, #4]
 800502a:	681b      	ldr	r3, [r3, #0]
 800502c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005030:	615a      	str	r2, [r3, #20]
 8005032:	687b      	ldr	r3, [r7, #4]
 8005034:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005036:	2b00      	cmp	r3, #0
 8005038:	d013      	beq.n	8005062 <HAL_UART_IRQHandler+0x19a>
 800503a:	687b      	ldr	r3, [r7, #4]
 800503c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800503e:	4a76      	ldr	r2, [pc, #472]	; (8005218 <HAL_UART_IRQHandler+0x350>)
 8005040:	635a      	str	r2, [r3, #52]	; 0x34
 8005042:	687b      	ldr	r3, [r7, #4]
 8005044:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005046:	4618      	mov	r0, r3
 8005048:	f7fd ff8e 	bl	8002f68 <HAL_DMA_Abort_IT>
 800504c:	4603      	mov	r3, r0
 800504e:	2b00      	cmp	r3, #0
 8005050:	d016      	beq.n	8005080 <HAL_UART_IRQHandler+0x1b8>
 8005052:	687b      	ldr	r3, [r7, #4]
 8005054:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005056:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005058:	687a      	ldr	r2, [r7, #4]
 800505a:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800505c:	4610      	mov	r0, r2
 800505e:	4798      	blx	r3
 8005060:	e00e      	b.n	8005080 <HAL_UART_IRQHandler+0x1b8>
 8005062:	6878      	ldr	r0, [r7, #4]
 8005064:	f000 f8e3 	bl	800522e <HAL_UART_ErrorCallback>
 8005068:	e00a      	b.n	8005080 <HAL_UART_IRQHandler+0x1b8>
 800506a:	6878      	ldr	r0, [r7, #4]
 800506c:	f000 f8df 	bl	800522e <HAL_UART_ErrorCallback>
 8005070:	e006      	b.n	8005080 <HAL_UART_IRQHandler+0x1b8>
 8005072:	6878      	ldr	r0, [r7, #4]
 8005074:	f000 f8db 	bl	800522e <HAL_UART_ErrorCallback>
 8005078:	687b      	ldr	r3, [r7, #4]
 800507a:	2200      	movs	r2, #0
 800507c:	641a      	str	r2, [r3, #64]	; 0x40
 800507e:	e0c3      	b.n	8005208 <HAL_UART_IRQHandler+0x340>
 8005080:	bf00      	nop
 8005082:	e0c1      	b.n	8005208 <HAL_UART_IRQHandler+0x340>
 8005084:	687b      	ldr	r3, [r7, #4]
 8005086:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005088:	2b01      	cmp	r3, #1
 800508a:	f040 80a1 	bne.w	80051d0 <HAL_UART_IRQHandler+0x308>
 800508e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005090:	f003 0310 	and.w	r3, r3, #16
 8005094:	2b00      	cmp	r3, #0
 8005096:	f000 809b 	beq.w	80051d0 <HAL_UART_IRQHandler+0x308>
 800509a:	6a3b      	ldr	r3, [r7, #32]
 800509c:	f003 0310 	and.w	r3, r3, #16
 80050a0:	2b00      	cmp	r3, #0
 80050a2:	f000 8095 	beq.w	80051d0 <HAL_UART_IRQHandler+0x308>
 80050a6:	2300      	movs	r3, #0
 80050a8:	60fb      	str	r3, [r7, #12]
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	681b      	ldr	r3, [r3, #0]
 80050ae:	681b      	ldr	r3, [r3, #0]
 80050b0:	60fb      	str	r3, [r7, #12]
 80050b2:	687b      	ldr	r3, [r7, #4]
 80050b4:	681b      	ldr	r3, [r3, #0]
 80050b6:	685b      	ldr	r3, [r3, #4]
 80050b8:	60fb      	str	r3, [r7, #12]
 80050ba:	68fb      	ldr	r3, [r7, #12]
 80050bc:	687b      	ldr	r3, [r7, #4]
 80050be:	681b      	ldr	r3, [r3, #0]
 80050c0:	695b      	ldr	r3, [r3, #20]
 80050c2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80050c6:	2b00      	cmp	r3, #0
 80050c8:	d04e      	beq.n	8005168 <HAL_UART_IRQHandler+0x2a0>
 80050ca:	687b      	ldr	r3, [r7, #4]
 80050cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050ce:	681b      	ldr	r3, [r3, #0]
 80050d0:	685b      	ldr	r3, [r3, #4]
 80050d2:	823b      	strh	r3, [r7, #16]
 80050d4:	8a3b      	ldrh	r3, [r7, #16]
 80050d6:	2b00      	cmp	r3, #0
 80050d8:	f000 8098 	beq.w	800520c <HAL_UART_IRQHandler+0x344>
 80050dc:	687b      	ldr	r3, [r7, #4]
 80050de:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80050e0:	8a3a      	ldrh	r2, [r7, #16]
 80050e2:	429a      	cmp	r2, r3
 80050e4:	f080 8092 	bcs.w	800520c <HAL_UART_IRQHandler+0x344>
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	8a3a      	ldrh	r2, [r7, #16]
 80050ec:	85da      	strh	r2, [r3, #46]	; 0x2e
 80050ee:	687b      	ldr	r3, [r7, #4]
 80050f0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050f2:	699b      	ldr	r3, [r3, #24]
 80050f4:	2b20      	cmp	r3, #32
 80050f6:	d02b      	beq.n	8005150 <HAL_UART_IRQHandler+0x288>
 80050f8:	687b      	ldr	r3, [r7, #4]
 80050fa:	681b      	ldr	r3, [r3, #0]
 80050fc:	68da      	ldr	r2, [r3, #12]
 80050fe:	687b      	ldr	r3, [r7, #4]
 8005100:	681b      	ldr	r3, [r3, #0]
 8005102:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005106:	60da      	str	r2, [r3, #12]
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	681b      	ldr	r3, [r3, #0]
 800510c:	695a      	ldr	r2, [r3, #20]
 800510e:	687b      	ldr	r3, [r7, #4]
 8005110:	681b      	ldr	r3, [r3, #0]
 8005112:	f022 0201 	bic.w	r2, r2, #1
 8005116:	615a      	str	r2, [r3, #20]
 8005118:	687b      	ldr	r3, [r7, #4]
 800511a:	681b      	ldr	r3, [r3, #0]
 800511c:	695a      	ldr	r2, [r3, #20]
 800511e:	687b      	ldr	r3, [r7, #4]
 8005120:	681b      	ldr	r3, [r3, #0]
 8005122:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005126:	615a      	str	r2, [r3, #20]
 8005128:	687b      	ldr	r3, [r7, #4]
 800512a:	2220      	movs	r2, #32
 800512c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005130:	687b      	ldr	r3, [r7, #4]
 8005132:	2200      	movs	r2, #0
 8005134:	631a      	str	r2, [r3, #48]	; 0x30
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	681b      	ldr	r3, [r3, #0]
 800513a:	68da      	ldr	r2, [r3, #12]
 800513c:	687b      	ldr	r3, [r7, #4]
 800513e:	681b      	ldr	r3, [r3, #0]
 8005140:	f022 0210 	bic.w	r2, r2, #16
 8005144:	60da      	str	r2, [r3, #12]
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800514a:	4618      	mov	r0, r3
 800514c:	f7fd fed1 	bl	8002ef2 <HAL_DMA_Abort>
 8005150:	687b      	ldr	r3, [r7, #4]
 8005152:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8005154:	687b      	ldr	r3, [r7, #4]
 8005156:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8005158:	b29b      	uxth	r3, r3
 800515a:	1ad3      	subs	r3, r2, r3
 800515c:	b29b      	uxth	r3, r3
 800515e:	4619      	mov	r1, r3
 8005160:	6878      	ldr	r0, [r7, #4]
 8005162:	f000 f86d 	bl	8005240 <HAL_UARTEx_RxEventCallback>
 8005166:	e051      	b.n	800520c <HAL_UART_IRQHandler+0x344>
 8005168:	687b      	ldr	r3, [r7, #4]
 800516a:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800516c:	687b      	ldr	r3, [r7, #4]
 800516e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8005170:	b29b      	uxth	r3, r3
 8005172:	1ad3      	subs	r3, r2, r3
 8005174:	827b      	strh	r3, [r7, #18]
 8005176:	687b      	ldr	r3, [r7, #4]
 8005178:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800517a:	b29b      	uxth	r3, r3
 800517c:	2b00      	cmp	r3, #0
 800517e:	d047      	beq.n	8005210 <HAL_UART_IRQHandler+0x348>
 8005180:	8a7b      	ldrh	r3, [r7, #18]
 8005182:	2b00      	cmp	r3, #0
 8005184:	d044      	beq.n	8005210 <HAL_UART_IRQHandler+0x348>
 8005186:	687b      	ldr	r3, [r7, #4]
 8005188:	681b      	ldr	r3, [r3, #0]
 800518a:	68da      	ldr	r2, [r3, #12]
 800518c:	687b      	ldr	r3, [r7, #4]
 800518e:	681b      	ldr	r3, [r3, #0]
 8005190:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8005194:	60da      	str	r2, [r3, #12]
 8005196:	687b      	ldr	r3, [r7, #4]
 8005198:	681b      	ldr	r3, [r3, #0]
 800519a:	695a      	ldr	r2, [r3, #20]
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	681b      	ldr	r3, [r3, #0]
 80051a0:	f022 0201 	bic.w	r2, r2, #1
 80051a4:	615a      	str	r2, [r3, #20]
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	2220      	movs	r2, #32
 80051aa:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	2200      	movs	r2, #0
 80051b2:	631a      	str	r2, [r3, #48]	; 0x30
 80051b4:	687b      	ldr	r3, [r7, #4]
 80051b6:	681b      	ldr	r3, [r3, #0]
 80051b8:	68da      	ldr	r2, [r3, #12]
 80051ba:	687b      	ldr	r3, [r7, #4]
 80051bc:	681b      	ldr	r3, [r3, #0]
 80051be:	f022 0210 	bic.w	r2, r2, #16
 80051c2:	60da      	str	r2, [r3, #12]
 80051c4:	8a7b      	ldrh	r3, [r7, #18]
 80051c6:	4619      	mov	r1, r3
 80051c8:	6878      	ldr	r0, [r7, #4]
 80051ca:	f000 f839 	bl	8005240 <HAL_UARTEx_RxEventCallback>
 80051ce:	e01f      	b.n	8005210 <HAL_UART_IRQHandler+0x348>
 80051d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80051d2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80051d6:	2b00      	cmp	r3, #0
 80051d8:	d008      	beq.n	80051ec <HAL_UART_IRQHandler+0x324>
 80051da:	6a3b      	ldr	r3, [r7, #32]
 80051dc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80051e0:	2b00      	cmp	r3, #0
 80051e2:	d003      	beq.n	80051ec <HAL_UART_IRQHandler+0x324>
 80051e4:	6878      	ldr	r0, [r7, #4]
 80051e6:	f000 f8f9 	bl	80053dc <UART_Transmit_IT>
 80051ea:	e012      	b.n	8005212 <HAL_UART_IRQHandler+0x34a>
 80051ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80051ee:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80051f2:	2b00      	cmp	r3, #0
 80051f4:	d00d      	beq.n	8005212 <HAL_UART_IRQHandler+0x34a>
 80051f6:	6a3b      	ldr	r3, [r7, #32]
 80051f8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80051fc:	2b00      	cmp	r3, #0
 80051fe:	d008      	beq.n	8005212 <HAL_UART_IRQHandler+0x34a>
 8005200:	6878      	ldr	r0, [r7, #4]
 8005202:	f000 f93a 	bl	800547a <UART_EndTransmit_IT>
 8005206:	e004      	b.n	8005212 <HAL_UART_IRQHandler+0x34a>
 8005208:	bf00      	nop
 800520a:	e002      	b.n	8005212 <HAL_UART_IRQHandler+0x34a>
 800520c:	bf00      	nop
 800520e:	e000      	b.n	8005212 <HAL_UART_IRQHandler+0x34a>
 8005210:	bf00      	nop
 8005212:	3728      	adds	r7, #40	; 0x28
 8005214:	46bd      	mov	sp, r7
 8005216:	bd80      	pop	{r7, pc}
 8005218:	080053b5 	.word	0x080053b5

0800521c <HAL_UART_TxCpltCallback>:
 800521c:	b480      	push	{r7}
 800521e:	b083      	sub	sp, #12
 8005220:	af00      	add	r7, sp, #0
 8005222:	6078      	str	r0, [r7, #4]
 8005224:	bf00      	nop
 8005226:	370c      	adds	r7, #12
 8005228:	46bd      	mov	sp, r7
 800522a:	bc80      	pop	{r7}
 800522c:	4770      	bx	lr

0800522e <HAL_UART_ErrorCallback>:
 800522e:	b480      	push	{r7}
 8005230:	b083      	sub	sp, #12
 8005232:	af00      	add	r7, sp, #0
 8005234:	6078      	str	r0, [r7, #4]
 8005236:	bf00      	nop
 8005238:	370c      	adds	r7, #12
 800523a:	46bd      	mov	sp, r7
 800523c:	bc80      	pop	{r7}
 800523e:	4770      	bx	lr

08005240 <HAL_UARTEx_RxEventCallback>:
 8005240:	b480      	push	{r7}
 8005242:	b083      	sub	sp, #12
 8005244:	af00      	add	r7, sp, #0
 8005246:	6078      	str	r0, [r7, #4]
 8005248:	460b      	mov	r3, r1
 800524a:	807b      	strh	r3, [r7, #2]
 800524c:	bf00      	nop
 800524e:	370c      	adds	r7, #12
 8005250:	46bd      	mov	sp, r7
 8005252:	bc80      	pop	{r7}
 8005254:	4770      	bx	lr

08005256 <UART_WaitOnFlagUntilTimeout>:
 8005256:	b580      	push	{r7, lr}
 8005258:	b084      	sub	sp, #16
 800525a:	af00      	add	r7, sp, #0
 800525c:	60f8      	str	r0, [r7, #12]
 800525e:	60b9      	str	r1, [r7, #8]
 8005260:	603b      	str	r3, [r7, #0]
 8005262:	4613      	mov	r3, r2
 8005264:	71fb      	strb	r3, [r7, #7]
 8005266:	e02c      	b.n	80052c2 <UART_WaitOnFlagUntilTimeout+0x6c>
 8005268:	69bb      	ldr	r3, [r7, #24]
 800526a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800526e:	d028      	beq.n	80052c2 <UART_WaitOnFlagUntilTimeout+0x6c>
 8005270:	69bb      	ldr	r3, [r7, #24]
 8005272:	2b00      	cmp	r3, #0
 8005274:	d007      	beq.n	8005286 <UART_WaitOnFlagUntilTimeout+0x30>
 8005276:	f7fd fd01 	bl	8002c7c <HAL_GetTick>
 800527a:	4602      	mov	r2, r0
 800527c:	683b      	ldr	r3, [r7, #0]
 800527e:	1ad3      	subs	r3, r2, r3
 8005280:	69ba      	ldr	r2, [r7, #24]
 8005282:	429a      	cmp	r2, r3
 8005284:	d21d      	bcs.n	80052c2 <UART_WaitOnFlagUntilTimeout+0x6c>
 8005286:	68fb      	ldr	r3, [r7, #12]
 8005288:	681b      	ldr	r3, [r3, #0]
 800528a:	68da      	ldr	r2, [r3, #12]
 800528c:	68fb      	ldr	r3, [r7, #12]
 800528e:	681b      	ldr	r3, [r3, #0]
 8005290:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8005294:	60da      	str	r2, [r3, #12]
 8005296:	68fb      	ldr	r3, [r7, #12]
 8005298:	681b      	ldr	r3, [r3, #0]
 800529a:	695a      	ldr	r2, [r3, #20]
 800529c:	68fb      	ldr	r3, [r7, #12]
 800529e:	681b      	ldr	r3, [r3, #0]
 80052a0:	f022 0201 	bic.w	r2, r2, #1
 80052a4:	615a      	str	r2, [r3, #20]
 80052a6:	68fb      	ldr	r3, [r7, #12]
 80052a8:	2220      	movs	r2, #32
 80052aa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80052ae:	68fb      	ldr	r3, [r7, #12]
 80052b0:	2220      	movs	r2, #32
 80052b2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80052b6:	68fb      	ldr	r3, [r7, #12]
 80052b8:	2200      	movs	r2, #0
 80052ba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80052be:	2303      	movs	r3, #3
 80052c0:	e00f      	b.n	80052e2 <UART_WaitOnFlagUntilTimeout+0x8c>
 80052c2:	68fb      	ldr	r3, [r7, #12]
 80052c4:	681b      	ldr	r3, [r3, #0]
 80052c6:	681a      	ldr	r2, [r3, #0]
 80052c8:	68bb      	ldr	r3, [r7, #8]
 80052ca:	4013      	ands	r3, r2
 80052cc:	68ba      	ldr	r2, [r7, #8]
 80052ce:	429a      	cmp	r2, r3
 80052d0:	bf0c      	ite	eq
 80052d2:	2301      	moveq	r3, #1
 80052d4:	2300      	movne	r3, #0
 80052d6:	b2db      	uxtb	r3, r3
 80052d8:	461a      	mov	r2, r3
 80052da:	79fb      	ldrb	r3, [r7, #7]
 80052dc:	429a      	cmp	r2, r3
 80052de:	d0c3      	beq.n	8005268 <UART_WaitOnFlagUntilTimeout+0x12>
 80052e0:	2300      	movs	r3, #0
 80052e2:	4618      	mov	r0, r3
 80052e4:	3710      	adds	r7, #16
 80052e6:	46bd      	mov	sp, r7
 80052e8:	bd80      	pop	{r7, pc}

080052ea <UART_Start_Receive_IT>:
 80052ea:	b480      	push	{r7}
 80052ec:	b085      	sub	sp, #20
 80052ee:	af00      	add	r7, sp, #0
 80052f0:	60f8      	str	r0, [r7, #12]
 80052f2:	60b9      	str	r1, [r7, #8]
 80052f4:	4613      	mov	r3, r2
 80052f6:	80fb      	strh	r3, [r7, #6]
 80052f8:	68fb      	ldr	r3, [r7, #12]
 80052fa:	68ba      	ldr	r2, [r7, #8]
 80052fc:	629a      	str	r2, [r3, #40]	; 0x28
 80052fe:	68fb      	ldr	r3, [r7, #12]
 8005300:	88fa      	ldrh	r2, [r7, #6]
 8005302:	859a      	strh	r2, [r3, #44]	; 0x2c
 8005304:	68fb      	ldr	r3, [r7, #12]
 8005306:	88fa      	ldrh	r2, [r7, #6]
 8005308:	85da      	strh	r2, [r3, #46]	; 0x2e
 800530a:	68fb      	ldr	r3, [r7, #12]
 800530c:	2200      	movs	r2, #0
 800530e:	641a      	str	r2, [r3, #64]	; 0x40
 8005310:	68fb      	ldr	r3, [r7, #12]
 8005312:	2222      	movs	r2, #34	; 0x22
 8005314:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005318:	68fb      	ldr	r3, [r7, #12]
 800531a:	2200      	movs	r2, #0
 800531c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005320:	68fb      	ldr	r3, [r7, #12]
 8005322:	681b      	ldr	r3, [r3, #0]
 8005324:	68da      	ldr	r2, [r3, #12]
 8005326:	68fb      	ldr	r3, [r7, #12]
 8005328:	681b      	ldr	r3, [r3, #0]
 800532a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800532e:	60da      	str	r2, [r3, #12]
 8005330:	68fb      	ldr	r3, [r7, #12]
 8005332:	681b      	ldr	r3, [r3, #0]
 8005334:	695a      	ldr	r2, [r3, #20]
 8005336:	68fb      	ldr	r3, [r7, #12]
 8005338:	681b      	ldr	r3, [r3, #0]
 800533a:	f042 0201 	orr.w	r2, r2, #1
 800533e:	615a      	str	r2, [r3, #20]
 8005340:	68fb      	ldr	r3, [r7, #12]
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	68da      	ldr	r2, [r3, #12]
 8005346:	68fb      	ldr	r3, [r7, #12]
 8005348:	681b      	ldr	r3, [r3, #0]
 800534a:	f042 0220 	orr.w	r2, r2, #32
 800534e:	60da      	str	r2, [r3, #12]
 8005350:	2300      	movs	r3, #0
 8005352:	4618      	mov	r0, r3
 8005354:	3714      	adds	r7, #20
 8005356:	46bd      	mov	sp, r7
 8005358:	bc80      	pop	{r7}
 800535a:	4770      	bx	lr

0800535c <UART_EndRxTransfer>:
 800535c:	b480      	push	{r7}
 800535e:	b083      	sub	sp, #12
 8005360:	af00      	add	r7, sp, #0
 8005362:	6078      	str	r0, [r7, #4]
 8005364:	687b      	ldr	r3, [r7, #4]
 8005366:	681b      	ldr	r3, [r3, #0]
 8005368:	68da      	ldr	r2, [r3, #12]
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	681b      	ldr	r3, [r3, #0]
 800536e:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8005372:	60da      	str	r2, [r3, #12]
 8005374:	687b      	ldr	r3, [r7, #4]
 8005376:	681b      	ldr	r3, [r3, #0]
 8005378:	695a      	ldr	r2, [r3, #20]
 800537a:	687b      	ldr	r3, [r7, #4]
 800537c:	681b      	ldr	r3, [r3, #0]
 800537e:	f022 0201 	bic.w	r2, r2, #1
 8005382:	615a      	str	r2, [r3, #20]
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005388:	2b01      	cmp	r3, #1
 800538a:	d107      	bne.n	800539c <UART_EndRxTransfer+0x40>
 800538c:	687b      	ldr	r3, [r7, #4]
 800538e:	681b      	ldr	r3, [r3, #0]
 8005390:	68da      	ldr	r2, [r3, #12]
 8005392:	687b      	ldr	r3, [r7, #4]
 8005394:	681b      	ldr	r3, [r3, #0]
 8005396:	f022 0210 	bic.w	r2, r2, #16
 800539a:	60da      	str	r2, [r3, #12]
 800539c:	687b      	ldr	r3, [r7, #4]
 800539e:	2220      	movs	r2, #32
 80053a0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	2200      	movs	r2, #0
 80053a8:	631a      	str	r2, [r3, #48]	; 0x30
 80053aa:	bf00      	nop
 80053ac:	370c      	adds	r7, #12
 80053ae:	46bd      	mov	sp, r7
 80053b0:	bc80      	pop	{r7}
 80053b2:	4770      	bx	lr

080053b4 <UART_DMAAbortOnError>:
 80053b4:	b580      	push	{r7, lr}
 80053b6:	b084      	sub	sp, #16
 80053b8:	af00      	add	r7, sp, #0
 80053ba:	6078      	str	r0, [r7, #4]
 80053bc:	687b      	ldr	r3, [r7, #4]
 80053be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053c0:	60fb      	str	r3, [r7, #12]
 80053c2:	68fb      	ldr	r3, [r7, #12]
 80053c4:	2200      	movs	r2, #0
 80053c6:	85da      	strh	r2, [r3, #46]	; 0x2e
 80053c8:	68fb      	ldr	r3, [r7, #12]
 80053ca:	2200      	movs	r2, #0
 80053cc:	84da      	strh	r2, [r3, #38]	; 0x26
 80053ce:	68f8      	ldr	r0, [r7, #12]
 80053d0:	f7ff ff2d 	bl	800522e <HAL_UART_ErrorCallback>
 80053d4:	bf00      	nop
 80053d6:	3710      	adds	r7, #16
 80053d8:	46bd      	mov	sp, r7
 80053da:	bd80      	pop	{r7, pc}

080053dc <UART_Transmit_IT>:
 80053dc:	b480      	push	{r7}
 80053de:	b085      	sub	sp, #20
 80053e0:	af00      	add	r7, sp, #0
 80053e2:	6078      	str	r0, [r7, #4]
 80053e4:	687b      	ldr	r3, [r7, #4]
 80053e6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80053ea:	b2db      	uxtb	r3, r3
 80053ec:	2b21      	cmp	r3, #33	; 0x21
 80053ee:	d13e      	bne.n	800546e <UART_Transmit_IT+0x92>
 80053f0:	687b      	ldr	r3, [r7, #4]
 80053f2:	689b      	ldr	r3, [r3, #8]
 80053f4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80053f8:	d114      	bne.n	8005424 <UART_Transmit_IT+0x48>
 80053fa:	687b      	ldr	r3, [r7, #4]
 80053fc:	691b      	ldr	r3, [r3, #16]
 80053fe:	2b00      	cmp	r3, #0
 8005400:	d110      	bne.n	8005424 <UART_Transmit_IT+0x48>
 8005402:	687b      	ldr	r3, [r7, #4]
 8005404:	6a1b      	ldr	r3, [r3, #32]
 8005406:	60fb      	str	r3, [r7, #12]
 8005408:	68fb      	ldr	r3, [r7, #12]
 800540a:	881b      	ldrh	r3, [r3, #0]
 800540c:	461a      	mov	r2, r3
 800540e:	687b      	ldr	r3, [r7, #4]
 8005410:	681b      	ldr	r3, [r3, #0]
 8005412:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005416:	605a      	str	r2, [r3, #4]
 8005418:	687b      	ldr	r3, [r7, #4]
 800541a:	6a1b      	ldr	r3, [r3, #32]
 800541c:	1c9a      	adds	r2, r3, #2
 800541e:	687b      	ldr	r3, [r7, #4]
 8005420:	621a      	str	r2, [r3, #32]
 8005422:	e008      	b.n	8005436 <UART_Transmit_IT+0x5a>
 8005424:	687b      	ldr	r3, [r7, #4]
 8005426:	6a1b      	ldr	r3, [r3, #32]
 8005428:	1c59      	adds	r1, r3, #1
 800542a:	687a      	ldr	r2, [r7, #4]
 800542c:	6211      	str	r1, [r2, #32]
 800542e:	781a      	ldrb	r2, [r3, #0]
 8005430:	687b      	ldr	r3, [r7, #4]
 8005432:	681b      	ldr	r3, [r3, #0]
 8005434:	605a      	str	r2, [r3, #4]
 8005436:	687b      	ldr	r3, [r7, #4]
 8005438:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800543a:	b29b      	uxth	r3, r3
 800543c:	3b01      	subs	r3, #1
 800543e:	b29b      	uxth	r3, r3
 8005440:	687a      	ldr	r2, [r7, #4]
 8005442:	4619      	mov	r1, r3
 8005444:	84d1      	strh	r1, [r2, #38]	; 0x26
 8005446:	2b00      	cmp	r3, #0
 8005448:	d10f      	bne.n	800546a <UART_Transmit_IT+0x8e>
 800544a:	687b      	ldr	r3, [r7, #4]
 800544c:	681b      	ldr	r3, [r3, #0]
 800544e:	68da      	ldr	r2, [r3, #12]
 8005450:	687b      	ldr	r3, [r7, #4]
 8005452:	681b      	ldr	r3, [r3, #0]
 8005454:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005458:	60da      	str	r2, [r3, #12]
 800545a:	687b      	ldr	r3, [r7, #4]
 800545c:	681b      	ldr	r3, [r3, #0]
 800545e:	68da      	ldr	r2, [r3, #12]
 8005460:	687b      	ldr	r3, [r7, #4]
 8005462:	681b      	ldr	r3, [r3, #0]
 8005464:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005468:	60da      	str	r2, [r3, #12]
 800546a:	2300      	movs	r3, #0
 800546c:	e000      	b.n	8005470 <UART_Transmit_IT+0x94>
 800546e:	2302      	movs	r3, #2
 8005470:	4618      	mov	r0, r3
 8005472:	3714      	adds	r7, #20
 8005474:	46bd      	mov	sp, r7
 8005476:	bc80      	pop	{r7}
 8005478:	4770      	bx	lr

0800547a <UART_EndTransmit_IT>:
 800547a:	b580      	push	{r7, lr}
 800547c:	b082      	sub	sp, #8
 800547e:	af00      	add	r7, sp, #0
 8005480:	6078      	str	r0, [r7, #4]
 8005482:	687b      	ldr	r3, [r7, #4]
 8005484:	681b      	ldr	r3, [r3, #0]
 8005486:	68da      	ldr	r2, [r3, #12]
 8005488:	687b      	ldr	r3, [r7, #4]
 800548a:	681b      	ldr	r3, [r3, #0]
 800548c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005490:	60da      	str	r2, [r3, #12]
 8005492:	687b      	ldr	r3, [r7, #4]
 8005494:	2220      	movs	r2, #32
 8005496:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800549a:	6878      	ldr	r0, [r7, #4]
 800549c:	f7ff febe 	bl	800521c <HAL_UART_TxCpltCallback>
 80054a0:	2300      	movs	r3, #0
 80054a2:	4618      	mov	r0, r3
 80054a4:	3708      	adds	r7, #8
 80054a6:	46bd      	mov	sp, r7
 80054a8:	bd80      	pop	{r7, pc}

080054aa <UART_Receive_IT>:
 80054aa:	b580      	push	{r7, lr}
 80054ac:	b086      	sub	sp, #24
 80054ae:	af00      	add	r7, sp, #0
 80054b0:	6078      	str	r0, [r7, #4]
 80054b2:	687b      	ldr	r3, [r7, #4]
 80054b4:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80054b8:	b2db      	uxtb	r3, r3
 80054ba:	2b22      	cmp	r3, #34	; 0x22
 80054bc:	f040 8099 	bne.w	80055f2 <UART_Receive_IT+0x148>
 80054c0:	687b      	ldr	r3, [r7, #4]
 80054c2:	689b      	ldr	r3, [r3, #8]
 80054c4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80054c8:	d117      	bne.n	80054fa <UART_Receive_IT+0x50>
 80054ca:	687b      	ldr	r3, [r7, #4]
 80054cc:	691b      	ldr	r3, [r3, #16]
 80054ce:	2b00      	cmp	r3, #0
 80054d0:	d113      	bne.n	80054fa <UART_Receive_IT+0x50>
 80054d2:	2300      	movs	r3, #0
 80054d4:	617b      	str	r3, [r7, #20]
 80054d6:	687b      	ldr	r3, [r7, #4]
 80054d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80054da:	613b      	str	r3, [r7, #16]
 80054dc:	687b      	ldr	r3, [r7, #4]
 80054de:	681b      	ldr	r3, [r3, #0]
 80054e0:	685b      	ldr	r3, [r3, #4]
 80054e2:	b29b      	uxth	r3, r3
 80054e4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80054e8:	b29a      	uxth	r2, r3
 80054ea:	693b      	ldr	r3, [r7, #16]
 80054ec:	801a      	strh	r2, [r3, #0]
 80054ee:	687b      	ldr	r3, [r7, #4]
 80054f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80054f2:	1c9a      	adds	r2, r3, #2
 80054f4:	687b      	ldr	r3, [r7, #4]
 80054f6:	629a      	str	r2, [r3, #40]	; 0x28
 80054f8:	e026      	b.n	8005548 <UART_Receive_IT+0x9e>
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80054fe:	617b      	str	r3, [r7, #20]
 8005500:	2300      	movs	r3, #0
 8005502:	613b      	str	r3, [r7, #16]
 8005504:	687b      	ldr	r3, [r7, #4]
 8005506:	689b      	ldr	r3, [r3, #8]
 8005508:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800550c:	d007      	beq.n	800551e <UART_Receive_IT+0x74>
 800550e:	687b      	ldr	r3, [r7, #4]
 8005510:	689b      	ldr	r3, [r3, #8]
 8005512:	2b00      	cmp	r3, #0
 8005514:	d10a      	bne.n	800552c <UART_Receive_IT+0x82>
 8005516:	687b      	ldr	r3, [r7, #4]
 8005518:	691b      	ldr	r3, [r3, #16]
 800551a:	2b00      	cmp	r3, #0
 800551c:	d106      	bne.n	800552c <UART_Receive_IT+0x82>
 800551e:	687b      	ldr	r3, [r7, #4]
 8005520:	681b      	ldr	r3, [r3, #0]
 8005522:	685b      	ldr	r3, [r3, #4]
 8005524:	b2da      	uxtb	r2, r3
 8005526:	697b      	ldr	r3, [r7, #20]
 8005528:	701a      	strb	r2, [r3, #0]
 800552a:	e008      	b.n	800553e <UART_Receive_IT+0x94>
 800552c:	687b      	ldr	r3, [r7, #4]
 800552e:	681b      	ldr	r3, [r3, #0]
 8005530:	685b      	ldr	r3, [r3, #4]
 8005532:	b2db      	uxtb	r3, r3
 8005534:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8005538:	b2da      	uxtb	r2, r3
 800553a:	697b      	ldr	r3, [r7, #20]
 800553c:	701a      	strb	r2, [r3, #0]
 800553e:	687b      	ldr	r3, [r7, #4]
 8005540:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005542:	1c5a      	adds	r2, r3, #1
 8005544:	687b      	ldr	r3, [r7, #4]
 8005546:	629a      	str	r2, [r3, #40]	; 0x28
 8005548:	687b      	ldr	r3, [r7, #4]
 800554a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800554c:	b29b      	uxth	r3, r3
 800554e:	3b01      	subs	r3, #1
 8005550:	b29b      	uxth	r3, r3
 8005552:	687a      	ldr	r2, [r7, #4]
 8005554:	4619      	mov	r1, r3
 8005556:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8005558:	2b00      	cmp	r3, #0
 800555a:	d148      	bne.n	80055ee <UART_Receive_IT+0x144>
 800555c:	687b      	ldr	r3, [r7, #4]
 800555e:	681b      	ldr	r3, [r3, #0]
 8005560:	68da      	ldr	r2, [r3, #12]
 8005562:	687b      	ldr	r3, [r7, #4]
 8005564:	681b      	ldr	r3, [r3, #0]
 8005566:	f022 0220 	bic.w	r2, r2, #32
 800556a:	60da      	str	r2, [r3, #12]
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	681b      	ldr	r3, [r3, #0]
 8005570:	68da      	ldr	r2, [r3, #12]
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	681b      	ldr	r3, [r3, #0]
 8005576:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800557a:	60da      	str	r2, [r3, #12]
 800557c:	687b      	ldr	r3, [r7, #4]
 800557e:	681b      	ldr	r3, [r3, #0]
 8005580:	695a      	ldr	r2, [r3, #20]
 8005582:	687b      	ldr	r3, [r7, #4]
 8005584:	681b      	ldr	r3, [r3, #0]
 8005586:	f022 0201 	bic.w	r2, r2, #1
 800558a:	615a      	str	r2, [r3, #20]
 800558c:	687b      	ldr	r3, [r7, #4]
 800558e:	2220      	movs	r2, #32
 8005590:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005594:	687b      	ldr	r3, [r7, #4]
 8005596:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005598:	2b01      	cmp	r3, #1
 800559a:	d123      	bne.n	80055e4 <UART_Receive_IT+0x13a>
 800559c:	687b      	ldr	r3, [r7, #4]
 800559e:	2200      	movs	r2, #0
 80055a0:	631a      	str	r2, [r3, #48]	; 0x30
 80055a2:	687b      	ldr	r3, [r7, #4]
 80055a4:	681b      	ldr	r3, [r3, #0]
 80055a6:	68da      	ldr	r2, [r3, #12]
 80055a8:	687b      	ldr	r3, [r7, #4]
 80055aa:	681b      	ldr	r3, [r3, #0]
 80055ac:	f022 0210 	bic.w	r2, r2, #16
 80055b0:	60da      	str	r2, [r3, #12]
 80055b2:	687b      	ldr	r3, [r7, #4]
 80055b4:	681b      	ldr	r3, [r3, #0]
 80055b6:	681b      	ldr	r3, [r3, #0]
 80055b8:	f003 0310 	and.w	r3, r3, #16
 80055bc:	2b10      	cmp	r3, #16
 80055be:	d10a      	bne.n	80055d6 <UART_Receive_IT+0x12c>
 80055c0:	2300      	movs	r3, #0
 80055c2:	60fb      	str	r3, [r7, #12]
 80055c4:	687b      	ldr	r3, [r7, #4]
 80055c6:	681b      	ldr	r3, [r3, #0]
 80055c8:	681b      	ldr	r3, [r3, #0]
 80055ca:	60fb      	str	r3, [r7, #12]
 80055cc:	687b      	ldr	r3, [r7, #4]
 80055ce:	681b      	ldr	r3, [r3, #0]
 80055d0:	685b      	ldr	r3, [r3, #4]
 80055d2:	60fb      	str	r3, [r7, #12]
 80055d4:	68fb      	ldr	r3, [r7, #12]
 80055d6:	687b      	ldr	r3, [r7, #4]
 80055d8:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80055da:	4619      	mov	r1, r3
 80055dc:	6878      	ldr	r0, [r7, #4]
 80055de:	f7ff fe2f 	bl	8005240 <HAL_UARTEx_RxEventCallback>
 80055e2:	e002      	b.n	80055ea <UART_Receive_IT+0x140>
 80055e4:	6878      	ldr	r0, [r7, #4]
 80055e6:	f7fd f9c3 	bl	8002970 <HAL_UART_RxCpltCallback>
 80055ea:	2300      	movs	r3, #0
 80055ec:	e002      	b.n	80055f4 <UART_Receive_IT+0x14a>
 80055ee:	2300      	movs	r3, #0
 80055f0:	e000      	b.n	80055f4 <UART_Receive_IT+0x14a>
 80055f2:	2302      	movs	r3, #2
 80055f4:	4618      	mov	r0, r3
 80055f6:	3718      	adds	r7, #24
 80055f8:	46bd      	mov	sp, r7
 80055fa:	bd80      	pop	{r7, pc}

080055fc <UART_SetConfig>:
 80055fc:	b580      	push	{r7, lr}
 80055fe:	b084      	sub	sp, #16
 8005600:	af00      	add	r7, sp, #0
 8005602:	6078      	str	r0, [r7, #4]
 8005604:	687b      	ldr	r3, [r7, #4]
 8005606:	681b      	ldr	r3, [r3, #0]
 8005608:	691b      	ldr	r3, [r3, #16]
 800560a:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800560e:	687b      	ldr	r3, [r7, #4]
 8005610:	68da      	ldr	r2, [r3, #12]
 8005612:	687b      	ldr	r3, [r7, #4]
 8005614:	681b      	ldr	r3, [r3, #0]
 8005616:	430a      	orrs	r2, r1
 8005618:	611a      	str	r2, [r3, #16]
 800561a:	687b      	ldr	r3, [r7, #4]
 800561c:	689a      	ldr	r2, [r3, #8]
 800561e:	687b      	ldr	r3, [r7, #4]
 8005620:	691b      	ldr	r3, [r3, #16]
 8005622:	431a      	orrs	r2, r3
 8005624:	687b      	ldr	r3, [r7, #4]
 8005626:	695b      	ldr	r3, [r3, #20]
 8005628:	4313      	orrs	r3, r2
 800562a:	60bb      	str	r3, [r7, #8]
 800562c:	687b      	ldr	r3, [r7, #4]
 800562e:	681b      	ldr	r3, [r3, #0]
 8005630:	68db      	ldr	r3, [r3, #12]
 8005632:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8005636:	f023 030c 	bic.w	r3, r3, #12
 800563a:	687a      	ldr	r2, [r7, #4]
 800563c:	6812      	ldr	r2, [r2, #0]
 800563e:	68b9      	ldr	r1, [r7, #8]
 8005640:	430b      	orrs	r3, r1
 8005642:	60d3      	str	r3, [r2, #12]
 8005644:	687b      	ldr	r3, [r7, #4]
 8005646:	681b      	ldr	r3, [r3, #0]
 8005648:	695b      	ldr	r3, [r3, #20]
 800564a:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 800564e:	687b      	ldr	r3, [r7, #4]
 8005650:	699a      	ldr	r2, [r3, #24]
 8005652:	687b      	ldr	r3, [r7, #4]
 8005654:	681b      	ldr	r3, [r3, #0]
 8005656:	430a      	orrs	r2, r1
 8005658:	615a      	str	r2, [r3, #20]
 800565a:	687b      	ldr	r3, [r7, #4]
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	4a2c      	ldr	r2, [pc, #176]	; (8005710 <UART_SetConfig+0x114>)
 8005660:	4293      	cmp	r3, r2
 8005662:	d103      	bne.n	800566c <UART_SetConfig+0x70>
 8005664:	f7fe fef4 	bl	8004450 <HAL_RCC_GetPCLK2Freq>
 8005668:	60f8      	str	r0, [r7, #12]
 800566a:	e002      	b.n	8005672 <UART_SetConfig+0x76>
 800566c:	f7fe fedc 	bl	8004428 <HAL_RCC_GetPCLK1Freq>
 8005670:	60f8      	str	r0, [r7, #12]
 8005672:	68fa      	ldr	r2, [r7, #12]
 8005674:	4613      	mov	r3, r2
 8005676:	009b      	lsls	r3, r3, #2
 8005678:	4413      	add	r3, r2
 800567a:	009a      	lsls	r2, r3, #2
 800567c:	441a      	add	r2, r3
 800567e:	687b      	ldr	r3, [r7, #4]
 8005680:	685b      	ldr	r3, [r3, #4]
 8005682:	009b      	lsls	r3, r3, #2
 8005684:	fbb2 f3f3 	udiv	r3, r2, r3
 8005688:	4a22      	ldr	r2, [pc, #136]	; (8005714 <UART_SetConfig+0x118>)
 800568a:	fba2 2303 	umull	r2, r3, r2, r3
 800568e:	095b      	lsrs	r3, r3, #5
 8005690:	0119      	lsls	r1, r3, #4
 8005692:	68fa      	ldr	r2, [r7, #12]
 8005694:	4613      	mov	r3, r2
 8005696:	009b      	lsls	r3, r3, #2
 8005698:	4413      	add	r3, r2
 800569a:	009a      	lsls	r2, r3, #2
 800569c:	441a      	add	r2, r3
 800569e:	687b      	ldr	r3, [r7, #4]
 80056a0:	685b      	ldr	r3, [r3, #4]
 80056a2:	009b      	lsls	r3, r3, #2
 80056a4:	fbb2 f2f3 	udiv	r2, r2, r3
 80056a8:	4b1a      	ldr	r3, [pc, #104]	; (8005714 <UART_SetConfig+0x118>)
 80056aa:	fba3 0302 	umull	r0, r3, r3, r2
 80056ae:	095b      	lsrs	r3, r3, #5
 80056b0:	2064      	movs	r0, #100	; 0x64
 80056b2:	fb00 f303 	mul.w	r3, r0, r3
 80056b6:	1ad3      	subs	r3, r2, r3
 80056b8:	011b      	lsls	r3, r3, #4
 80056ba:	3332      	adds	r3, #50	; 0x32
 80056bc:	4a15      	ldr	r2, [pc, #84]	; (8005714 <UART_SetConfig+0x118>)
 80056be:	fba2 2303 	umull	r2, r3, r2, r3
 80056c2:	095b      	lsrs	r3, r3, #5
 80056c4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80056c8:	4419      	add	r1, r3
 80056ca:	68fa      	ldr	r2, [r7, #12]
 80056cc:	4613      	mov	r3, r2
 80056ce:	009b      	lsls	r3, r3, #2
 80056d0:	4413      	add	r3, r2
 80056d2:	009a      	lsls	r2, r3, #2
 80056d4:	441a      	add	r2, r3
 80056d6:	687b      	ldr	r3, [r7, #4]
 80056d8:	685b      	ldr	r3, [r3, #4]
 80056da:	009b      	lsls	r3, r3, #2
 80056dc:	fbb2 f2f3 	udiv	r2, r2, r3
 80056e0:	4b0c      	ldr	r3, [pc, #48]	; (8005714 <UART_SetConfig+0x118>)
 80056e2:	fba3 0302 	umull	r0, r3, r3, r2
 80056e6:	095b      	lsrs	r3, r3, #5
 80056e8:	2064      	movs	r0, #100	; 0x64
 80056ea:	fb00 f303 	mul.w	r3, r0, r3
 80056ee:	1ad3      	subs	r3, r2, r3
 80056f0:	011b      	lsls	r3, r3, #4
 80056f2:	3332      	adds	r3, #50	; 0x32
 80056f4:	4a07      	ldr	r2, [pc, #28]	; (8005714 <UART_SetConfig+0x118>)
 80056f6:	fba2 2303 	umull	r2, r3, r2, r3
 80056fa:	095b      	lsrs	r3, r3, #5
 80056fc:	f003 020f 	and.w	r2, r3, #15
 8005700:	687b      	ldr	r3, [r7, #4]
 8005702:	681b      	ldr	r3, [r3, #0]
 8005704:	440a      	add	r2, r1
 8005706:	609a      	str	r2, [r3, #8]
 8005708:	bf00      	nop
 800570a:	3710      	adds	r7, #16
 800570c:	46bd      	mov	sp, r7
 800570e:	bd80      	pop	{r7, pc}
 8005710:	40013800 	.word	0x40013800
 8005714:	51eb851f 	.word	0x51eb851f

08005718 <atoff>:
 8005718:	2100      	movs	r1, #0
 800571a:	f000 bf5d 	b.w	80065d8 <strtof>

0800571e <atoi>:
 800571e:	220a      	movs	r2, #10
 8005720:	2100      	movs	r1, #0
 8005722:	f001 b883 	b.w	800682c <strtol>
	...

08005728 <__errno>:
 8005728:	4b01      	ldr	r3, [pc, #4]	; (8005730 <__errno+0x8>)
 800572a:	6818      	ldr	r0, [r3, #0]
 800572c:	4770      	bx	lr
 800572e:	bf00      	nop
 8005730:	20000018 	.word	0x20000018

08005734 <__libc_init_array>:
 8005734:	b570      	push	{r4, r5, r6, lr}
 8005736:	2600      	movs	r6, #0
 8005738:	4d0c      	ldr	r5, [pc, #48]	; (800576c <__libc_init_array+0x38>)
 800573a:	4c0d      	ldr	r4, [pc, #52]	; (8005770 <__libc_init_array+0x3c>)
 800573c:	1b64      	subs	r4, r4, r5
 800573e:	10a4      	asrs	r4, r4, #2
 8005740:	42a6      	cmp	r6, r4
 8005742:	d109      	bne.n	8005758 <__libc_init_array+0x24>
 8005744:	f003 f9b4 	bl	8008ab0 <_init>
 8005748:	2600      	movs	r6, #0
 800574a:	4d0a      	ldr	r5, [pc, #40]	; (8005774 <__libc_init_array+0x40>)
 800574c:	4c0a      	ldr	r4, [pc, #40]	; (8005778 <__libc_init_array+0x44>)
 800574e:	1b64      	subs	r4, r4, r5
 8005750:	10a4      	asrs	r4, r4, #2
 8005752:	42a6      	cmp	r6, r4
 8005754:	d105      	bne.n	8005762 <__libc_init_array+0x2e>
 8005756:	bd70      	pop	{r4, r5, r6, pc}
 8005758:	f855 3b04 	ldr.w	r3, [r5], #4
 800575c:	4798      	blx	r3
 800575e:	3601      	adds	r6, #1
 8005760:	e7ee      	b.n	8005740 <__libc_init_array+0xc>
 8005762:	f855 3b04 	ldr.w	r3, [r5], #4
 8005766:	4798      	blx	r3
 8005768:	3601      	adds	r6, #1
 800576a:	e7f2      	b.n	8005752 <__libc_init_array+0x1e>
 800576c:	080090f0 	.word	0x080090f0
 8005770:	080090f0 	.word	0x080090f0
 8005774:	080090f0 	.word	0x080090f0
 8005778:	080090f4 	.word	0x080090f4

0800577c <malloc>:
 800577c:	4b02      	ldr	r3, [pc, #8]	; (8005788 <malloc+0xc>)
 800577e:	4601      	mov	r1, r0
 8005780:	6818      	ldr	r0, [r3, #0]
 8005782:	f000 b87b 	b.w	800587c <_malloc_r>
 8005786:	bf00      	nop
 8005788:	20000018 	.word	0x20000018

0800578c <free>:
 800578c:	4b02      	ldr	r3, [pc, #8]	; (8005798 <free+0xc>)
 800578e:	4601      	mov	r1, r0
 8005790:	6818      	ldr	r0, [r3, #0]
 8005792:	f000 b80b 	b.w	80057ac <_free_r>
 8005796:	bf00      	nop
 8005798:	20000018 	.word	0x20000018

0800579c <memset>:
 800579c:	4603      	mov	r3, r0
 800579e:	4402      	add	r2, r0
 80057a0:	4293      	cmp	r3, r2
 80057a2:	d100      	bne.n	80057a6 <memset+0xa>
 80057a4:	4770      	bx	lr
 80057a6:	f803 1b01 	strb.w	r1, [r3], #1
 80057aa:	e7f9      	b.n	80057a0 <memset+0x4>

080057ac <_free_r>:
 80057ac:	b538      	push	{r3, r4, r5, lr}
 80057ae:	4605      	mov	r5, r0
 80057b0:	2900      	cmp	r1, #0
 80057b2:	d040      	beq.n	8005836 <_free_r+0x8a>
 80057b4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80057b8:	1f0c      	subs	r4, r1, #4
 80057ba:	2b00      	cmp	r3, #0
 80057bc:	bfb8      	it	lt
 80057be:	18e4      	addlt	r4, r4, r3
 80057c0:	f001 fbf4 	bl	8006fac <__malloc_lock>
 80057c4:	4a1c      	ldr	r2, [pc, #112]	; (8005838 <_free_r+0x8c>)
 80057c6:	6813      	ldr	r3, [r2, #0]
 80057c8:	b933      	cbnz	r3, 80057d8 <_free_r+0x2c>
 80057ca:	6063      	str	r3, [r4, #4]
 80057cc:	6014      	str	r4, [r2, #0]
 80057ce:	4628      	mov	r0, r5
 80057d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80057d4:	f001 bbf0 	b.w	8006fb8 <__malloc_unlock>
 80057d8:	42a3      	cmp	r3, r4
 80057da:	d908      	bls.n	80057ee <_free_r+0x42>
 80057dc:	6820      	ldr	r0, [r4, #0]
 80057de:	1821      	adds	r1, r4, r0
 80057e0:	428b      	cmp	r3, r1
 80057e2:	bf01      	itttt	eq
 80057e4:	6819      	ldreq	r1, [r3, #0]
 80057e6:	685b      	ldreq	r3, [r3, #4]
 80057e8:	1809      	addeq	r1, r1, r0
 80057ea:	6021      	streq	r1, [r4, #0]
 80057ec:	e7ed      	b.n	80057ca <_free_r+0x1e>
 80057ee:	461a      	mov	r2, r3
 80057f0:	685b      	ldr	r3, [r3, #4]
 80057f2:	b10b      	cbz	r3, 80057f8 <_free_r+0x4c>
 80057f4:	42a3      	cmp	r3, r4
 80057f6:	d9fa      	bls.n	80057ee <_free_r+0x42>
 80057f8:	6811      	ldr	r1, [r2, #0]
 80057fa:	1850      	adds	r0, r2, r1
 80057fc:	42a0      	cmp	r0, r4
 80057fe:	d10b      	bne.n	8005818 <_free_r+0x6c>
 8005800:	6820      	ldr	r0, [r4, #0]
 8005802:	4401      	add	r1, r0
 8005804:	1850      	adds	r0, r2, r1
 8005806:	4283      	cmp	r3, r0
 8005808:	6011      	str	r1, [r2, #0]
 800580a:	d1e0      	bne.n	80057ce <_free_r+0x22>
 800580c:	6818      	ldr	r0, [r3, #0]
 800580e:	685b      	ldr	r3, [r3, #4]
 8005810:	4401      	add	r1, r0
 8005812:	6011      	str	r1, [r2, #0]
 8005814:	6053      	str	r3, [r2, #4]
 8005816:	e7da      	b.n	80057ce <_free_r+0x22>
 8005818:	d902      	bls.n	8005820 <_free_r+0x74>
 800581a:	230c      	movs	r3, #12
 800581c:	602b      	str	r3, [r5, #0]
 800581e:	e7d6      	b.n	80057ce <_free_r+0x22>
 8005820:	6820      	ldr	r0, [r4, #0]
 8005822:	1821      	adds	r1, r4, r0
 8005824:	428b      	cmp	r3, r1
 8005826:	bf01      	itttt	eq
 8005828:	6819      	ldreq	r1, [r3, #0]
 800582a:	685b      	ldreq	r3, [r3, #4]
 800582c:	1809      	addeq	r1, r1, r0
 800582e:	6021      	streq	r1, [r4, #0]
 8005830:	6063      	str	r3, [r4, #4]
 8005832:	6054      	str	r4, [r2, #4]
 8005834:	e7cb      	b.n	80057ce <_free_r+0x22>
 8005836:	bd38      	pop	{r3, r4, r5, pc}
 8005838:	200004d0 	.word	0x200004d0

0800583c <sbrk_aligned>:
 800583c:	b570      	push	{r4, r5, r6, lr}
 800583e:	4e0e      	ldr	r6, [pc, #56]	; (8005878 <sbrk_aligned+0x3c>)
 8005840:	460c      	mov	r4, r1
 8005842:	6831      	ldr	r1, [r6, #0]
 8005844:	4605      	mov	r5, r0
 8005846:	b911      	cbnz	r1, 800584e <sbrk_aligned+0x12>
 8005848:	f000 f88c 	bl	8005964 <_sbrk_r>
 800584c:	6030      	str	r0, [r6, #0]
 800584e:	4621      	mov	r1, r4
 8005850:	4628      	mov	r0, r5
 8005852:	f000 f887 	bl	8005964 <_sbrk_r>
 8005856:	1c43      	adds	r3, r0, #1
 8005858:	d00a      	beq.n	8005870 <sbrk_aligned+0x34>
 800585a:	1cc4      	adds	r4, r0, #3
 800585c:	f024 0403 	bic.w	r4, r4, #3
 8005860:	42a0      	cmp	r0, r4
 8005862:	d007      	beq.n	8005874 <sbrk_aligned+0x38>
 8005864:	1a21      	subs	r1, r4, r0
 8005866:	4628      	mov	r0, r5
 8005868:	f000 f87c 	bl	8005964 <_sbrk_r>
 800586c:	3001      	adds	r0, #1
 800586e:	d101      	bne.n	8005874 <sbrk_aligned+0x38>
 8005870:	f04f 34ff 	mov.w	r4, #4294967295
 8005874:	4620      	mov	r0, r4
 8005876:	bd70      	pop	{r4, r5, r6, pc}
 8005878:	200004d4 	.word	0x200004d4

0800587c <_malloc_r>:
 800587c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005880:	1ccd      	adds	r5, r1, #3
 8005882:	f025 0503 	bic.w	r5, r5, #3
 8005886:	3508      	adds	r5, #8
 8005888:	2d0c      	cmp	r5, #12
 800588a:	bf38      	it	cc
 800588c:	250c      	movcc	r5, #12
 800588e:	2d00      	cmp	r5, #0
 8005890:	4607      	mov	r7, r0
 8005892:	db01      	blt.n	8005898 <_malloc_r+0x1c>
 8005894:	42a9      	cmp	r1, r5
 8005896:	d905      	bls.n	80058a4 <_malloc_r+0x28>
 8005898:	230c      	movs	r3, #12
 800589a:	2600      	movs	r6, #0
 800589c:	603b      	str	r3, [r7, #0]
 800589e:	4630      	mov	r0, r6
 80058a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80058a4:	4e2e      	ldr	r6, [pc, #184]	; (8005960 <_malloc_r+0xe4>)
 80058a6:	f001 fb81 	bl	8006fac <__malloc_lock>
 80058aa:	6833      	ldr	r3, [r6, #0]
 80058ac:	461c      	mov	r4, r3
 80058ae:	bb34      	cbnz	r4, 80058fe <_malloc_r+0x82>
 80058b0:	4629      	mov	r1, r5
 80058b2:	4638      	mov	r0, r7
 80058b4:	f7ff ffc2 	bl	800583c <sbrk_aligned>
 80058b8:	1c43      	adds	r3, r0, #1
 80058ba:	4604      	mov	r4, r0
 80058bc:	d14d      	bne.n	800595a <_malloc_r+0xde>
 80058be:	6834      	ldr	r4, [r6, #0]
 80058c0:	4626      	mov	r6, r4
 80058c2:	2e00      	cmp	r6, #0
 80058c4:	d140      	bne.n	8005948 <_malloc_r+0xcc>
 80058c6:	6823      	ldr	r3, [r4, #0]
 80058c8:	4631      	mov	r1, r6
 80058ca:	4638      	mov	r0, r7
 80058cc:	eb04 0803 	add.w	r8, r4, r3
 80058d0:	f000 f848 	bl	8005964 <_sbrk_r>
 80058d4:	4580      	cmp	r8, r0
 80058d6:	d13a      	bne.n	800594e <_malloc_r+0xd2>
 80058d8:	6821      	ldr	r1, [r4, #0]
 80058da:	3503      	adds	r5, #3
 80058dc:	1a6d      	subs	r5, r5, r1
 80058de:	f025 0503 	bic.w	r5, r5, #3
 80058e2:	3508      	adds	r5, #8
 80058e4:	2d0c      	cmp	r5, #12
 80058e6:	bf38      	it	cc
 80058e8:	250c      	movcc	r5, #12
 80058ea:	4638      	mov	r0, r7
 80058ec:	4629      	mov	r1, r5
 80058ee:	f7ff ffa5 	bl	800583c <sbrk_aligned>
 80058f2:	3001      	adds	r0, #1
 80058f4:	d02b      	beq.n	800594e <_malloc_r+0xd2>
 80058f6:	6823      	ldr	r3, [r4, #0]
 80058f8:	442b      	add	r3, r5
 80058fa:	6023      	str	r3, [r4, #0]
 80058fc:	e00e      	b.n	800591c <_malloc_r+0xa0>
 80058fe:	6822      	ldr	r2, [r4, #0]
 8005900:	1b52      	subs	r2, r2, r5
 8005902:	d41e      	bmi.n	8005942 <_malloc_r+0xc6>
 8005904:	2a0b      	cmp	r2, #11
 8005906:	d916      	bls.n	8005936 <_malloc_r+0xba>
 8005908:	1961      	adds	r1, r4, r5
 800590a:	42a3      	cmp	r3, r4
 800590c:	6025      	str	r5, [r4, #0]
 800590e:	bf18      	it	ne
 8005910:	6059      	strne	r1, [r3, #4]
 8005912:	6863      	ldr	r3, [r4, #4]
 8005914:	bf08      	it	eq
 8005916:	6031      	streq	r1, [r6, #0]
 8005918:	5162      	str	r2, [r4, r5]
 800591a:	604b      	str	r3, [r1, #4]
 800591c:	4638      	mov	r0, r7
 800591e:	f104 060b 	add.w	r6, r4, #11
 8005922:	f001 fb49 	bl	8006fb8 <__malloc_unlock>
 8005926:	f026 0607 	bic.w	r6, r6, #7
 800592a:	1d23      	adds	r3, r4, #4
 800592c:	1af2      	subs	r2, r6, r3
 800592e:	d0b6      	beq.n	800589e <_malloc_r+0x22>
 8005930:	1b9b      	subs	r3, r3, r6
 8005932:	50a3      	str	r3, [r4, r2]
 8005934:	e7b3      	b.n	800589e <_malloc_r+0x22>
 8005936:	6862      	ldr	r2, [r4, #4]
 8005938:	42a3      	cmp	r3, r4
 800593a:	bf0c      	ite	eq
 800593c:	6032      	streq	r2, [r6, #0]
 800593e:	605a      	strne	r2, [r3, #4]
 8005940:	e7ec      	b.n	800591c <_malloc_r+0xa0>
 8005942:	4623      	mov	r3, r4
 8005944:	6864      	ldr	r4, [r4, #4]
 8005946:	e7b2      	b.n	80058ae <_malloc_r+0x32>
 8005948:	4634      	mov	r4, r6
 800594a:	6876      	ldr	r6, [r6, #4]
 800594c:	e7b9      	b.n	80058c2 <_malloc_r+0x46>
 800594e:	230c      	movs	r3, #12
 8005950:	4638      	mov	r0, r7
 8005952:	603b      	str	r3, [r7, #0]
 8005954:	f001 fb30 	bl	8006fb8 <__malloc_unlock>
 8005958:	e7a1      	b.n	800589e <_malloc_r+0x22>
 800595a:	6025      	str	r5, [r4, #0]
 800595c:	e7de      	b.n	800591c <_malloc_r+0xa0>
 800595e:	bf00      	nop
 8005960:	200004d0 	.word	0x200004d0

08005964 <_sbrk_r>:
 8005964:	b538      	push	{r3, r4, r5, lr}
 8005966:	2300      	movs	r3, #0
 8005968:	4d05      	ldr	r5, [pc, #20]	; (8005980 <_sbrk_r+0x1c>)
 800596a:	4604      	mov	r4, r0
 800596c:	4608      	mov	r0, r1
 800596e:	602b      	str	r3, [r5, #0]
 8005970:	f7fc ff38 	bl	80027e4 <_sbrk>
 8005974:	1c43      	adds	r3, r0, #1
 8005976:	d102      	bne.n	800597e <_sbrk_r+0x1a>
 8005978:	682b      	ldr	r3, [r5, #0]
 800597a:	b103      	cbz	r3, 800597e <_sbrk_r+0x1a>
 800597c:	6023      	str	r3, [r4, #0]
 800597e:	bd38      	pop	{r3, r4, r5, pc}
 8005980:	200004d8 	.word	0x200004d8

08005984 <siprintf>:
 8005984:	b40e      	push	{r1, r2, r3}
 8005986:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800598a:	b500      	push	{lr}
 800598c:	b09c      	sub	sp, #112	; 0x70
 800598e:	ab1d      	add	r3, sp, #116	; 0x74
 8005990:	9002      	str	r0, [sp, #8]
 8005992:	9006      	str	r0, [sp, #24]
 8005994:	9107      	str	r1, [sp, #28]
 8005996:	9104      	str	r1, [sp, #16]
 8005998:	4808      	ldr	r0, [pc, #32]	; (80059bc <siprintf+0x38>)
 800599a:	4909      	ldr	r1, [pc, #36]	; (80059c0 <siprintf+0x3c>)
 800599c:	f853 2b04 	ldr.w	r2, [r3], #4
 80059a0:	9105      	str	r1, [sp, #20]
 80059a2:	6800      	ldr	r0, [r0, #0]
 80059a4:	a902      	add	r1, sp, #8
 80059a6:	9301      	str	r3, [sp, #4]
 80059a8:	f002 f834 	bl	8007a14 <_svfiprintf_r>
 80059ac:	2200      	movs	r2, #0
 80059ae:	9b02      	ldr	r3, [sp, #8]
 80059b0:	701a      	strb	r2, [r3, #0]
 80059b2:	b01c      	add	sp, #112	; 0x70
 80059b4:	f85d eb04 	ldr.w	lr, [sp], #4
 80059b8:	b003      	add	sp, #12
 80059ba:	4770      	bx	lr
 80059bc:	20000018 	.word	0x20000018
 80059c0:	ffff0208 	.word	0xffff0208

080059c4 <sulp>:
 80059c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80059c8:	460f      	mov	r7, r1
 80059ca:	4690      	mov	r8, r2
 80059cc:	f001 fe6a 	bl	80076a4 <__ulp>
 80059d0:	4604      	mov	r4, r0
 80059d2:	460d      	mov	r5, r1
 80059d4:	f1b8 0f00 	cmp.w	r8, #0
 80059d8:	d011      	beq.n	80059fe <sulp+0x3a>
 80059da:	f3c7 530a 	ubfx	r3, r7, #20, #11
 80059de:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80059e2:	2b00      	cmp	r3, #0
 80059e4:	dd0b      	ble.n	80059fe <sulp+0x3a>
 80059e6:	2400      	movs	r4, #0
 80059e8:	051b      	lsls	r3, r3, #20
 80059ea:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 80059ee:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 80059f2:	4622      	mov	r2, r4
 80059f4:	462b      	mov	r3, r5
 80059f6:	f7fa fe2d 	bl	8000654 <__aeabi_dmul>
 80059fa:	4604      	mov	r4, r0
 80059fc:	460d      	mov	r5, r1
 80059fe:	4620      	mov	r0, r4
 8005a00:	4629      	mov	r1, r5
 8005a02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005a08 <_strtod_l>:
 8005a08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a0c:	469b      	mov	fp, r3
 8005a0e:	2300      	movs	r3, #0
 8005a10:	b09f      	sub	sp, #124	; 0x7c
 8005a12:	931a      	str	r3, [sp, #104]	; 0x68
 8005a14:	4b9e      	ldr	r3, [pc, #632]	; (8005c90 <_strtod_l+0x288>)
 8005a16:	4682      	mov	sl, r0
 8005a18:	681f      	ldr	r7, [r3, #0]
 8005a1a:	460e      	mov	r6, r1
 8005a1c:	4638      	mov	r0, r7
 8005a1e:	9215      	str	r2, [sp, #84]	; 0x54
 8005a20:	f7fa fba0 	bl	8000164 <strlen>
 8005a24:	f04f 0800 	mov.w	r8, #0
 8005a28:	4604      	mov	r4, r0
 8005a2a:	f04f 0900 	mov.w	r9, #0
 8005a2e:	9619      	str	r6, [sp, #100]	; 0x64
 8005a30:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005a32:	781a      	ldrb	r2, [r3, #0]
 8005a34:	2a2b      	cmp	r2, #43	; 0x2b
 8005a36:	d04c      	beq.n	8005ad2 <_strtod_l+0xca>
 8005a38:	d83a      	bhi.n	8005ab0 <_strtod_l+0xa8>
 8005a3a:	2a0d      	cmp	r2, #13
 8005a3c:	d833      	bhi.n	8005aa6 <_strtod_l+0x9e>
 8005a3e:	2a08      	cmp	r2, #8
 8005a40:	d833      	bhi.n	8005aaa <_strtod_l+0xa2>
 8005a42:	2a00      	cmp	r2, #0
 8005a44:	d03d      	beq.n	8005ac2 <_strtod_l+0xba>
 8005a46:	2300      	movs	r3, #0
 8005a48:	930a      	str	r3, [sp, #40]	; 0x28
 8005a4a:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8005a4c:	782b      	ldrb	r3, [r5, #0]
 8005a4e:	2b30      	cmp	r3, #48	; 0x30
 8005a50:	f040 80aa 	bne.w	8005ba8 <_strtod_l+0x1a0>
 8005a54:	786b      	ldrb	r3, [r5, #1]
 8005a56:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8005a5a:	2b58      	cmp	r3, #88	; 0x58
 8005a5c:	d166      	bne.n	8005b2c <_strtod_l+0x124>
 8005a5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005a60:	4650      	mov	r0, sl
 8005a62:	9301      	str	r3, [sp, #4]
 8005a64:	ab1a      	add	r3, sp, #104	; 0x68
 8005a66:	9300      	str	r3, [sp, #0]
 8005a68:	4a8a      	ldr	r2, [pc, #552]	; (8005c94 <_strtod_l+0x28c>)
 8005a6a:	f8cd b008 	str.w	fp, [sp, #8]
 8005a6e:	ab1b      	add	r3, sp, #108	; 0x6c
 8005a70:	a919      	add	r1, sp, #100	; 0x64
 8005a72:	f000 ff7d 	bl	8006970 <__gethex>
 8005a76:	f010 0607 	ands.w	r6, r0, #7
 8005a7a:	4604      	mov	r4, r0
 8005a7c:	d005      	beq.n	8005a8a <_strtod_l+0x82>
 8005a7e:	2e06      	cmp	r6, #6
 8005a80:	d129      	bne.n	8005ad6 <_strtod_l+0xce>
 8005a82:	2300      	movs	r3, #0
 8005a84:	3501      	adds	r5, #1
 8005a86:	9519      	str	r5, [sp, #100]	; 0x64
 8005a88:	930a      	str	r3, [sp, #40]	; 0x28
 8005a8a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005a8c:	2b00      	cmp	r3, #0
 8005a8e:	f040 858a 	bne.w	80065a6 <_strtod_l+0xb9e>
 8005a92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005a94:	b1d3      	cbz	r3, 8005acc <_strtod_l+0xc4>
 8005a96:	4642      	mov	r2, r8
 8005a98:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8005a9c:	4610      	mov	r0, r2
 8005a9e:	4619      	mov	r1, r3
 8005aa0:	b01f      	add	sp, #124	; 0x7c
 8005aa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005aa6:	2a20      	cmp	r2, #32
 8005aa8:	d1cd      	bne.n	8005a46 <_strtod_l+0x3e>
 8005aaa:	3301      	adds	r3, #1
 8005aac:	9319      	str	r3, [sp, #100]	; 0x64
 8005aae:	e7bf      	b.n	8005a30 <_strtod_l+0x28>
 8005ab0:	2a2d      	cmp	r2, #45	; 0x2d
 8005ab2:	d1c8      	bne.n	8005a46 <_strtod_l+0x3e>
 8005ab4:	2201      	movs	r2, #1
 8005ab6:	920a      	str	r2, [sp, #40]	; 0x28
 8005ab8:	1c5a      	adds	r2, r3, #1
 8005aba:	9219      	str	r2, [sp, #100]	; 0x64
 8005abc:	785b      	ldrb	r3, [r3, #1]
 8005abe:	2b00      	cmp	r3, #0
 8005ac0:	d1c3      	bne.n	8005a4a <_strtod_l+0x42>
 8005ac2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005ac4:	9619      	str	r6, [sp, #100]	; 0x64
 8005ac6:	2b00      	cmp	r3, #0
 8005ac8:	f040 856b 	bne.w	80065a2 <_strtod_l+0xb9a>
 8005acc:	4642      	mov	r2, r8
 8005ace:	464b      	mov	r3, r9
 8005ad0:	e7e4      	b.n	8005a9c <_strtod_l+0x94>
 8005ad2:	2200      	movs	r2, #0
 8005ad4:	e7ef      	b.n	8005ab6 <_strtod_l+0xae>
 8005ad6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8005ad8:	b13a      	cbz	r2, 8005aea <_strtod_l+0xe2>
 8005ada:	2135      	movs	r1, #53	; 0x35
 8005adc:	a81c      	add	r0, sp, #112	; 0x70
 8005ade:	f001 fee5 	bl	80078ac <__copybits>
 8005ae2:	4650      	mov	r0, sl
 8005ae4:	991a      	ldr	r1, [sp, #104]	; 0x68
 8005ae6:	f001 faad 	bl	8007044 <_Bfree>
 8005aea:	3e01      	subs	r6, #1
 8005aec:	2e04      	cmp	r6, #4
 8005aee:	d806      	bhi.n	8005afe <_strtod_l+0xf6>
 8005af0:	e8df f006 	tbb	[pc, r6]
 8005af4:	1714030a 	.word	0x1714030a
 8005af8:	0a          	.byte	0x0a
 8005af9:	00          	.byte	0x00
 8005afa:	e9dd 891c 	ldrd	r8, r9, [sp, #112]	; 0x70
 8005afe:	0721      	lsls	r1, r4, #28
 8005b00:	d5c3      	bpl.n	8005a8a <_strtod_l+0x82>
 8005b02:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 8005b06:	e7c0      	b.n	8005a8a <_strtod_l+0x82>
 8005b08:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8005b0a:	e9dd 831c 	ldrd	r8, r3, [sp, #112]	; 0x70
 8005b0e:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8005b12:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8005b16:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 8005b1a:	e7f0      	b.n	8005afe <_strtod_l+0xf6>
 8005b1c:	f8df 9178 	ldr.w	r9, [pc, #376]	; 8005c98 <_strtod_l+0x290>
 8005b20:	e7ed      	b.n	8005afe <_strtod_l+0xf6>
 8005b22:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 8005b26:	f04f 38ff 	mov.w	r8, #4294967295
 8005b2a:	e7e8      	b.n	8005afe <_strtod_l+0xf6>
 8005b2c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005b2e:	1c5a      	adds	r2, r3, #1
 8005b30:	9219      	str	r2, [sp, #100]	; 0x64
 8005b32:	785b      	ldrb	r3, [r3, #1]
 8005b34:	2b30      	cmp	r3, #48	; 0x30
 8005b36:	d0f9      	beq.n	8005b2c <_strtod_l+0x124>
 8005b38:	2b00      	cmp	r3, #0
 8005b3a:	d0a6      	beq.n	8005a8a <_strtod_l+0x82>
 8005b3c:	2301      	movs	r3, #1
 8005b3e:	9307      	str	r3, [sp, #28]
 8005b40:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005b42:	220a      	movs	r2, #10
 8005b44:	9308      	str	r3, [sp, #32]
 8005b46:	2300      	movs	r3, #0
 8005b48:	469b      	mov	fp, r3
 8005b4a:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8005b4e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8005b50:	7805      	ldrb	r5, [r0, #0]
 8005b52:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 8005b56:	b2d9      	uxtb	r1, r3
 8005b58:	2909      	cmp	r1, #9
 8005b5a:	d927      	bls.n	8005bac <_strtod_l+0x1a4>
 8005b5c:	4622      	mov	r2, r4
 8005b5e:	4639      	mov	r1, r7
 8005b60:	f002 fb50 	bl	8008204 <strncmp>
 8005b64:	2800      	cmp	r0, #0
 8005b66:	d033      	beq.n	8005bd0 <_strtod_l+0x1c8>
 8005b68:	2000      	movs	r0, #0
 8005b6a:	462a      	mov	r2, r5
 8005b6c:	465c      	mov	r4, fp
 8005b6e:	4603      	mov	r3, r0
 8005b70:	9004      	str	r0, [sp, #16]
 8005b72:	2a65      	cmp	r2, #101	; 0x65
 8005b74:	d001      	beq.n	8005b7a <_strtod_l+0x172>
 8005b76:	2a45      	cmp	r2, #69	; 0x45
 8005b78:	d114      	bne.n	8005ba4 <_strtod_l+0x19c>
 8005b7a:	b91c      	cbnz	r4, 8005b84 <_strtod_l+0x17c>
 8005b7c:	9a07      	ldr	r2, [sp, #28]
 8005b7e:	4302      	orrs	r2, r0
 8005b80:	d09f      	beq.n	8005ac2 <_strtod_l+0xba>
 8005b82:	2400      	movs	r4, #0
 8005b84:	9e19      	ldr	r6, [sp, #100]	; 0x64
 8005b86:	1c72      	adds	r2, r6, #1
 8005b88:	9219      	str	r2, [sp, #100]	; 0x64
 8005b8a:	7872      	ldrb	r2, [r6, #1]
 8005b8c:	2a2b      	cmp	r2, #43	; 0x2b
 8005b8e:	d079      	beq.n	8005c84 <_strtod_l+0x27c>
 8005b90:	2a2d      	cmp	r2, #45	; 0x2d
 8005b92:	f000 8083 	beq.w	8005c9c <_strtod_l+0x294>
 8005b96:	2700      	movs	r7, #0
 8005b98:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8005b9c:	2909      	cmp	r1, #9
 8005b9e:	f240 8083 	bls.w	8005ca8 <_strtod_l+0x2a0>
 8005ba2:	9619      	str	r6, [sp, #100]	; 0x64
 8005ba4:	2500      	movs	r5, #0
 8005ba6:	e09f      	b.n	8005ce8 <_strtod_l+0x2e0>
 8005ba8:	2300      	movs	r3, #0
 8005baa:	e7c8      	b.n	8005b3e <_strtod_l+0x136>
 8005bac:	f1bb 0f08 	cmp.w	fp, #8
 8005bb0:	bfd5      	itete	le
 8005bb2:	9906      	ldrle	r1, [sp, #24]
 8005bb4:	9905      	ldrgt	r1, [sp, #20]
 8005bb6:	fb02 3301 	mlale	r3, r2, r1, r3
 8005bba:	fb02 3301 	mlagt	r3, r2, r1, r3
 8005bbe:	f100 0001 	add.w	r0, r0, #1
 8005bc2:	bfd4      	ite	le
 8005bc4:	9306      	strle	r3, [sp, #24]
 8005bc6:	9305      	strgt	r3, [sp, #20]
 8005bc8:	f10b 0b01 	add.w	fp, fp, #1
 8005bcc:	9019      	str	r0, [sp, #100]	; 0x64
 8005bce:	e7be      	b.n	8005b4e <_strtod_l+0x146>
 8005bd0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005bd2:	191a      	adds	r2, r3, r4
 8005bd4:	9219      	str	r2, [sp, #100]	; 0x64
 8005bd6:	5d1a      	ldrb	r2, [r3, r4]
 8005bd8:	f1bb 0f00 	cmp.w	fp, #0
 8005bdc:	d036      	beq.n	8005c4c <_strtod_l+0x244>
 8005bde:	465c      	mov	r4, fp
 8005be0:	9004      	str	r0, [sp, #16]
 8005be2:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8005be6:	2b09      	cmp	r3, #9
 8005be8:	d912      	bls.n	8005c10 <_strtod_l+0x208>
 8005bea:	2301      	movs	r3, #1
 8005bec:	e7c1      	b.n	8005b72 <_strtod_l+0x16a>
 8005bee:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005bf0:	3001      	adds	r0, #1
 8005bf2:	1c5a      	adds	r2, r3, #1
 8005bf4:	9219      	str	r2, [sp, #100]	; 0x64
 8005bf6:	785a      	ldrb	r2, [r3, #1]
 8005bf8:	2a30      	cmp	r2, #48	; 0x30
 8005bfa:	d0f8      	beq.n	8005bee <_strtod_l+0x1e6>
 8005bfc:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 8005c00:	2b08      	cmp	r3, #8
 8005c02:	f200 84d5 	bhi.w	80065b0 <_strtod_l+0xba8>
 8005c06:	9004      	str	r0, [sp, #16]
 8005c08:	2000      	movs	r0, #0
 8005c0a:	4604      	mov	r4, r0
 8005c0c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005c0e:	9308      	str	r3, [sp, #32]
 8005c10:	3a30      	subs	r2, #48	; 0x30
 8005c12:	f100 0301 	add.w	r3, r0, #1
 8005c16:	d013      	beq.n	8005c40 <_strtod_l+0x238>
 8005c18:	9904      	ldr	r1, [sp, #16]
 8005c1a:	1905      	adds	r5, r0, r4
 8005c1c:	4419      	add	r1, r3
 8005c1e:	9104      	str	r1, [sp, #16]
 8005c20:	4623      	mov	r3, r4
 8005c22:	210a      	movs	r1, #10
 8005c24:	42ab      	cmp	r3, r5
 8005c26:	d113      	bne.n	8005c50 <_strtod_l+0x248>
 8005c28:	1823      	adds	r3, r4, r0
 8005c2a:	2b08      	cmp	r3, #8
 8005c2c:	f104 0401 	add.w	r4, r4, #1
 8005c30:	4404      	add	r4, r0
 8005c32:	dc1b      	bgt.n	8005c6c <_strtod_l+0x264>
 8005c34:	230a      	movs	r3, #10
 8005c36:	9906      	ldr	r1, [sp, #24]
 8005c38:	fb03 2301 	mla	r3, r3, r1, r2
 8005c3c:	9306      	str	r3, [sp, #24]
 8005c3e:	2300      	movs	r3, #0
 8005c40:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8005c42:	4618      	mov	r0, r3
 8005c44:	1c51      	adds	r1, r2, #1
 8005c46:	9119      	str	r1, [sp, #100]	; 0x64
 8005c48:	7852      	ldrb	r2, [r2, #1]
 8005c4a:	e7ca      	b.n	8005be2 <_strtod_l+0x1da>
 8005c4c:	4658      	mov	r0, fp
 8005c4e:	e7d3      	b.n	8005bf8 <_strtod_l+0x1f0>
 8005c50:	2b08      	cmp	r3, #8
 8005c52:	dc04      	bgt.n	8005c5e <_strtod_l+0x256>
 8005c54:	9f06      	ldr	r7, [sp, #24]
 8005c56:	434f      	muls	r7, r1
 8005c58:	9706      	str	r7, [sp, #24]
 8005c5a:	3301      	adds	r3, #1
 8005c5c:	e7e2      	b.n	8005c24 <_strtod_l+0x21c>
 8005c5e:	1c5f      	adds	r7, r3, #1
 8005c60:	2f10      	cmp	r7, #16
 8005c62:	bfde      	ittt	le
 8005c64:	9f05      	ldrle	r7, [sp, #20]
 8005c66:	434f      	mulle	r7, r1
 8005c68:	9705      	strle	r7, [sp, #20]
 8005c6a:	e7f6      	b.n	8005c5a <_strtod_l+0x252>
 8005c6c:	2c10      	cmp	r4, #16
 8005c6e:	bfdf      	itttt	le
 8005c70:	230a      	movle	r3, #10
 8005c72:	9905      	ldrle	r1, [sp, #20]
 8005c74:	fb03 2301 	mlale	r3, r3, r1, r2
 8005c78:	9305      	strle	r3, [sp, #20]
 8005c7a:	e7e0      	b.n	8005c3e <_strtod_l+0x236>
 8005c7c:	2300      	movs	r3, #0
 8005c7e:	9304      	str	r3, [sp, #16]
 8005c80:	2301      	movs	r3, #1
 8005c82:	e77b      	b.n	8005b7c <_strtod_l+0x174>
 8005c84:	2700      	movs	r7, #0
 8005c86:	1cb2      	adds	r2, r6, #2
 8005c88:	9219      	str	r2, [sp, #100]	; 0x64
 8005c8a:	78b2      	ldrb	r2, [r6, #2]
 8005c8c:	e784      	b.n	8005b98 <_strtod_l+0x190>
 8005c8e:	bf00      	nop
 8005c90:	08008ef0 	.word	0x08008ef0
 8005c94:	08008c74 	.word	0x08008c74
 8005c98:	7ff00000 	.word	0x7ff00000
 8005c9c:	2701      	movs	r7, #1
 8005c9e:	e7f2      	b.n	8005c86 <_strtod_l+0x27e>
 8005ca0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8005ca2:	1c51      	adds	r1, r2, #1
 8005ca4:	9119      	str	r1, [sp, #100]	; 0x64
 8005ca6:	7852      	ldrb	r2, [r2, #1]
 8005ca8:	2a30      	cmp	r2, #48	; 0x30
 8005caa:	d0f9      	beq.n	8005ca0 <_strtod_l+0x298>
 8005cac:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 8005cb0:	2908      	cmp	r1, #8
 8005cb2:	f63f af77 	bhi.w	8005ba4 <_strtod_l+0x19c>
 8005cb6:	f04f 0e0a 	mov.w	lr, #10
 8005cba:	f1a2 0c30 	sub.w	ip, r2, #48	; 0x30
 8005cbe:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8005cc0:	9209      	str	r2, [sp, #36]	; 0x24
 8005cc2:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8005cc4:	1c51      	adds	r1, r2, #1
 8005cc6:	9119      	str	r1, [sp, #100]	; 0x64
 8005cc8:	7852      	ldrb	r2, [r2, #1]
 8005cca:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 8005cce:	2d09      	cmp	r5, #9
 8005cd0:	d935      	bls.n	8005d3e <_strtod_l+0x336>
 8005cd2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8005cd4:	1b49      	subs	r1, r1, r5
 8005cd6:	2908      	cmp	r1, #8
 8005cd8:	f644 651f 	movw	r5, #19999	; 0x4e1f
 8005cdc:	dc02      	bgt.n	8005ce4 <_strtod_l+0x2dc>
 8005cde:	4565      	cmp	r5, ip
 8005ce0:	bfa8      	it	ge
 8005ce2:	4665      	movge	r5, ip
 8005ce4:	b107      	cbz	r7, 8005ce8 <_strtod_l+0x2e0>
 8005ce6:	426d      	negs	r5, r5
 8005ce8:	2c00      	cmp	r4, #0
 8005cea:	d14c      	bne.n	8005d86 <_strtod_l+0x37e>
 8005cec:	9907      	ldr	r1, [sp, #28]
 8005cee:	4301      	orrs	r1, r0
 8005cf0:	f47f aecb 	bne.w	8005a8a <_strtod_l+0x82>
 8005cf4:	2b00      	cmp	r3, #0
 8005cf6:	f47f aee4 	bne.w	8005ac2 <_strtod_l+0xba>
 8005cfa:	2a69      	cmp	r2, #105	; 0x69
 8005cfc:	d026      	beq.n	8005d4c <_strtod_l+0x344>
 8005cfe:	dc23      	bgt.n	8005d48 <_strtod_l+0x340>
 8005d00:	2a49      	cmp	r2, #73	; 0x49
 8005d02:	d023      	beq.n	8005d4c <_strtod_l+0x344>
 8005d04:	2a4e      	cmp	r2, #78	; 0x4e
 8005d06:	f47f aedc 	bne.w	8005ac2 <_strtod_l+0xba>
 8005d0a:	499d      	ldr	r1, [pc, #628]	; (8005f80 <_strtod_l+0x578>)
 8005d0c:	a819      	add	r0, sp, #100	; 0x64
 8005d0e:	f001 f87d 	bl	8006e0c <__match>
 8005d12:	2800      	cmp	r0, #0
 8005d14:	f43f aed5 	beq.w	8005ac2 <_strtod_l+0xba>
 8005d18:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005d1a:	781b      	ldrb	r3, [r3, #0]
 8005d1c:	2b28      	cmp	r3, #40	; 0x28
 8005d1e:	d12c      	bne.n	8005d7a <_strtod_l+0x372>
 8005d20:	4998      	ldr	r1, [pc, #608]	; (8005f84 <_strtod_l+0x57c>)
 8005d22:	aa1c      	add	r2, sp, #112	; 0x70
 8005d24:	a819      	add	r0, sp, #100	; 0x64
 8005d26:	f001 f885 	bl	8006e34 <__hexnan>
 8005d2a:	2805      	cmp	r0, #5
 8005d2c:	d125      	bne.n	8005d7a <_strtod_l+0x372>
 8005d2e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8005d30:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
 8005d34:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 8005d38:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 8005d3c:	e6a5      	b.n	8005a8a <_strtod_l+0x82>
 8005d3e:	fb0e 2c0c 	mla	ip, lr, ip, r2
 8005d42:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
 8005d46:	e7bc      	b.n	8005cc2 <_strtod_l+0x2ba>
 8005d48:	2a6e      	cmp	r2, #110	; 0x6e
 8005d4a:	e7dc      	b.n	8005d06 <_strtod_l+0x2fe>
 8005d4c:	498e      	ldr	r1, [pc, #568]	; (8005f88 <_strtod_l+0x580>)
 8005d4e:	a819      	add	r0, sp, #100	; 0x64
 8005d50:	f001 f85c 	bl	8006e0c <__match>
 8005d54:	2800      	cmp	r0, #0
 8005d56:	f43f aeb4 	beq.w	8005ac2 <_strtod_l+0xba>
 8005d5a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005d5c:	498b      	ldr	r1, [pc, #556]	; (8005f8c <_strtod_l+0x584>)
 8005d5e:	3b01      	subs	r3, #1
 8005d60:	a819      	add	r0, sp, #100	; 0x64
 8005d62:	9319      	str	r3, [sp, #100]	; 0x64
 8005d64:	f001 f852 	bl	8006e0c <__match>
 8005d68:	b910      	cbnz	r0, 8005d70 <_strtod_l+0x368>
 8005d6a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005d6c:	3301      	adds	r3, #1
 8005d6e:	9319      	str	r3, [sp, #100]	; 0x64
 8005d70:	f04f 0800 	mov.w	r8, #0
 8005d74:	f8df 9218 	ldr.w	r9, [pc, #536]	; 8005f90 <_strtod_l+0x588>
 8005d78:	e687      	b.n	8005a8a <_strtod_l+0x82>
 8005d7a:	4886      	ldr	r0, [pc, #536]	; (8005f94 <_strtod_l+0x58c>)
 8005d7c:	f002 fa38 	bl	80081f0 <nan>
 8005d80:	4680      	mov	r8, r0
 8005d82:	4689      	mov	r9, r1
 8005d84:	e681      	b.n	8005a8a <_strtod_l+0x82>
 8005d86:	9b04      	ldr	r3, [sp, #16]
 8005d88:	f1bb 0f00 	cmp.w	fp, #0
 8005d8c:	bf08      	it	eq
 8005d8e:	46a3      	moveq	fp, r4
 8005d90:	1aeb      	subs	r3, r5, r3
 8005d92:	2c10      	cmp	r4, #16
 8005d94:	9806      	ldr	r0, [sp, #24]
 8005d96:	4626      	mov	r6, r4
 8005d98:	9307      	str	r3, [sp, #28]
 8005d9a:	bfa8      	it	ge
 8005d9c:	2610      	movge	r6, #16
 8005d9e:	f7fa fbdf 	bl	8000560 <__aeabi_ui2d>
 8005da2:	2c09      	cmp	r4, #9
 8005da4:	4680      	mov	r8, r0
 8005da6:	4689      	mov	r9, r1
 8005da8:	dd13      	ble.n	8005dd2 <_strtod_l+0x3ca>
 8005daa:	4b7b      	ldr	r3, [pc, #492]	; (8005f98 <_strtod_l+0x590>)
 8005dac:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8005db0:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8005db4:	f7fa fc4e 	bl	8000654 <__aeabi_dmul>
 8005db8:	4680      	mov	r8, r0
 8005dba:	9805      	ldr	r0, [sp, #20]
 8005dbc:	4689      	mov	r9, r1
 8005dbe:	f7fa fbcf 	bl	8000560 <__aeabi_ui2d>
 8005dc2:	4602      	mov	r2, r0
 8005dc4:	460b      	mov	r3, r1
 8005dc6:	4640      	mov	r0, r8
 8005dc8:	4649      	mov	r1, r9
 8005dca:	f7fa fa8d 	bl	80002e8 <__adddf3>
 8005dce:	4680      	mov	r8, r0
 8005dd0:	4689      	mov	r9, r1
 8005dd2:	2c0f      	cmp	r4, #15
 8005dd4:	dc36      	bgt.n	8005e44 <_strtod_l+0x43c>
 8005dd6:	9b07      	ldr	r3, [sp, #28]
 8005dd8:	2b00      	cmp	r3, #0
 8005dda:	f43f ae56 	beq.w	8005a8a <_strtod_l+0x82>
 8005dde:	dd22      	ble.n	8005e26 <_strtod_l+0x41e>
 8005de0:	2b16      	cmp	r3, #22
 8005de2:	dc09      	bgt.n	8005df8 <_strtod_l+0x3f0>
 8005de4:	496c      	ldr	r1, [pc, #432]	; (8005f98 <_strtod_l+0x590>)
 8005de6:	4642      	mov	r2, r8
 8005de8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8005dec:	464b      	mov	r3, r9
 8005dee:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005df2:	f7fa fc2f 	bl	8000654 <__aeabi_dmul>
 8005df6:	e7c3      	b.n	8005d80 <_strtod_l+0x378>
 8005df8:	9a07      	ldr	r2, [sp, #28]
 8005dfa:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 8005dfe:	4293      	cmp	r3, r2
 8005e00:	db20      	blt.n	8005e44 <_strtod_l+0x43c>
 8005e02:	4d65      	ldr	r5, [pc, #404]	; (8005f98 <_strtod_l+0x590>)
 8005e04:	f1c4 040f 	rsb	r4, r4, #15
 8005e08:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 8005e0c:	4642      	mov	r2, r8
 8005e0e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005e12:	464b      	mov	r3, r9
 8005e14:	f7fa fc1e 	bl	8000654 <__aeabi_dmul>
 8005e18:	9b07      	ldr	r3, [sp, #28]
 8005e1a:	1b1c      	subs	r4, r3, r4
 8005e1c:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 8005e20:	e9d5 2300 	ldrd	r2, r3, [r5]
 8005e24:	e7e5      	b.n	8005df2 <_strtod_l+0x3ea>
 8005e26:	9b07      	ldr	r3, [sp, #28]
 8005e28:	3316      	adds	r3, #22
 8005e2a:	db0b      	blt.n	8005e44 <_strtod_l+0x43c>
 8005e2c:	9b04      	ldr	r3, [sp, #16]
 8005e2e:	4640      	mov	r0, r8
 8005e30:	1b5d      	subs	r5, r3, r5
 8005e32:	4b59      	ldr	r3, [pc, #356]	; (8005f98 <_strtod_l+0x590>)
 8005e34:	4649      	mov	r1, r9
 8005e36:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8005e3a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8005e3e:	f7fa fd33 	bl	80008a8 <__aeabi_ddiv>
 8005e42:	e79d      	b.n	8005d80 <_strtod_l+0x378>
 8005e44:	9b07      	ldr	r3, [sp, #28]
 8005e46:	1ba6      	subs	r6, r4, r6
 8005e48:	441e      	add	r6, r3
 8005e4a:	2e00      	cmp	r6, #0
 8005e4c:	dd74      	ble.n	8005f38 <_strtod_l+0x530>
 8005e4e:	f016 030f 	ands.w	r3, r6, #15
 8005e52:	d00a      	beq.n	8005e6a <_strtod_l+0x462>
 8005e54:	4950      	ldr	r1, [pc, #320]	; (8005f98 <_strtod_l+0x590>)
 8005e56:	4642      	mov	r2, r8
 8005e58:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8005e5c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005e60:	464b      	mov	r3, r9
 8005e62:	f7fa fbf7 	bl	8000654 <__aeabi_dmul>
 8005e66:	4680      	mov	r8, r0
 8005e68:	4689      	mov	r9, r1
 8005e6a:	f036 060f 	bics.w	r6, r6, #15
 8005e6e:	d052      	beq.n	8005f16 <_strtod_l+0x50e>
 8005e70:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
 8005e74:	dd27      	ble.n	8005ec6 <_strtod_l+0x4be>
 8005e76:	f04f 0b00 	mov.w	fp, #0
 8005e7a:	f8cd b010 	str.w	fp, [sp, #16]
 8005e7e:	f8cd b020 	str.w	fp, [sp, #32]
 8005e82:	f8cd b018 	str.w	fp, [sp, #24]
 8005e86:	2322      	movs	r3, #34	; 0x22
 8005e88:	f04f 0800 	mov.w	r8, #0
 8005e8c:	f8df 9100 	ldr.w	r9, [pc, #256]	; 8005f90 <_strtod_l+0x588>
 8005e90:	f8ca 3000 	str.w	r3, [sl]
 8005e94:	9b08      	ldr	r3, [sp, #32]
 8005e96:	2b00      	cmp	r3, #0
 8005e98:	f43f adf7 	beq.w	8005a8a <_strtod_l+0x82>
 8005e9c:	4650      	mov	r0, sl
 8005e9e:	991a      	ldr	r1, [sp, #104]	; 0x68
 8005ea0:	f001 f8d0 	bl	8007044 <_Bfree>
 8005ea4:	4650      	mov	r0, sl
 8005ea6:	9906      	ldr	r1, [sp, #24]
 8005ea8:	f001 f8cc 	bl	8007044 <_Bfree>
 8005eac:	4650      	mov	r0, sl
 8005eae:	9904      	ldr	r1, [sp, #16]
 8005eb0:	f001 f8c8 	bl	8007044 <_Bfree>
 8005eb4:	4650      	mov	r0, sl
 8005eb6:	9908      	ldr	r1, [sp, #32]
 8005eb8:	f001 f8c4 	bl	8007044 <_Bfree>
 8005ebc:	4659      	mov	r1, fp
 8005ebe:	4650      	mov	r0, sl
 8005ec0:	f001 f8c0 	bl	8007044 <_Bfree>
 8005ec4:	e5e1      	b.n	8005a8a <_strtod_l+0x82>
 8005ec6:	4b35      	ldr	r3, [pc, #212]	; (8005f9c <_strtod_l+0x594>)
 8005ec8:	4640      	mov	r0, r8
 8005eca:	9305      	str	r3, [sp, #20]
 8005ecc:	2300      	movs	r3, #0
 8005ece:	4649      	mov	r1, r9
 8005ed0:	461f      	mov	r7, r3
 8005ed2:	1136      	asrs	r6, r6, #4
 8005ed4:	2e01      	cmp	r6, #1
 8005ed6:	dc21      	bgt.n	8005f1c <_strtod_l+0x514>
 8005ed8:	b10b      	cbz	r3, 8005ede <_strtod_l+0x4d6>
 8005eda:	4680      	mov	r8, r0
 8005edc:	4689      	mov	r9, r1
 8005ede:	4b2f      	ldr	r3, [pc, #188]	; (8005f9c <_strtod_l+0x594>)
 8005ee0:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8005ee4:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8005ee8:	4642      	mov	r2, r8
 8005eea:	e9d7 0100 	ldrd	r0, r1, [r7]
 8005eee:	464b      	mov	r3, r9
 8005ef0:	f7fa fbb0 	bl	8000654 <__aeabi_dmul>
 8005ef4:	4b26      	ldr	r3, [pc, #152]	; (8005f90 <_strtod_l+0x588>)
 8005ef6:	460a      	mov	r2, r1
 8005ef8:	400b      	ands	r3, r1
 8005efa:	4929      	ldr	r1, [pc, #164]	; (8005fa0 <_strtod_l+0x598>)
 8005efc:	4680      	mov	r8, r0
 8005efe:	428b      	cmp	r3, r1
 8005f00:	d8b9      	bhi.n	8005e76 <_strtod_l+0x46e>
 8005f02:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8005f06:	428b      	cmp	r3, r1
 8005f08:	bf86      	itte	hi
 8005f0a:	f04f 38ff 	movhi.w	r8, #4294967295
 8005f0e:	f8df 9094 	ldrhi.w	r9, [pc, #148]	; 8005fa4 <_strtod_l+0x59c>
 8005f12:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 8005f16:	2300      	movs	r3, #0
 8005f18:	9305      	str	r3, [sp, #20]
 8005f1a:	e07f      	b.n	800601c <_strtod_l+0x614>
 8005f1c:	07f2      	lsls	r2, r6, #31
 8005f1e:	d505      	bpl.n	8005f2c <_strtod_l+0x524>
 8005f20:	9b05      	ldr	r3, [sp, #20]
 8005f22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f26:	f7fa fb95 	bl	8000654 <__aeabi_dmul>
 8005f2a:	2301      	movs	r3, #1
 8005f2c:	9a05      	ldr	r2, [sp, #20]
 8005f2e:	3701      	adds	r7, #1
 8005f30:	3208      	adds	r2, #8
 8005f32:	1076      	asrs	r6, r6, #1
 8005f34:	9205      	str	r2, [sp, #20]
 8005f36:	e7cd      	b.n	8005ed4 <_strtod_l+0x4cc>
 8005f38:	d0ed      	beq.n	8005f16 <_strtod_l+0x50e>
 8005f3a:	4276      	negs	r6, r6
 8005f3c:	f016 020f 	ands.w	r2, r6, #15
 8005f40:	d00a      	beq.n	8005f58 <_strtod_l+0x550>
 8005f42:	4b15      	ldr	r3, [pc, #84]	; (8005f98 <_strtod_l+0x590>)
 8005f44:	4640      	mov	r0, r8
 8005f46:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005f4a:	4649      	mov	r1, r9
 8005f4c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f50:	f7fa fcaa 	bl	80008a8 <__aeabi_ddiv>
 8005f54:	4680      	mov	r8, r0
 8005f56:	4689      	mov	r9, r1
 8005f58:	1136      	asrs	r6, r6, #4
 8005f5a:	d0dc      	beq.n	8005f16 <_strtod_l+0x50e>
 8005f5c:	2e1f      	cmp	r6, #31
 8005f5e:	dd23      	ble.n	8005fa8 <_strtod_l+0x5a0>
 8005f60:	f04f 0b00 	mov.w	fp, #0
 8005f64:	f8cd b010 	str.w	fp, [sp, #16]
 8005f68:	f8cd b020 	str.w	fp, [sp, #32]
 8005f6c:	f8cd b018 	str.w	fp, [sp, #24]
 8005f70:	2322      	movs	r3, #34	; 0x22
 8005f72:	f04f 0800 	mov.w	r8, #0
 8005f76:	f04f 0900 	mov.w	r9, #0
 8005f7a:	f8ca 3000 	str.w	r3, [sl]
 8005f7e:	e789      	b.n	8005e94 <_strtod_l+0x48c>
 8005f80:	08008c71 	.word	0x08008c71
 8005f84:	08008c88 	.word	0x08008c88
 8005f88:	08008c68 	.word	0x08008c68
 8005f8c:	08008c6b 	.word	0x08008c6b
 8005f90:	7ff00000 	.word	0x7ff00000
 8005f94:	08008d77 	.word	0x08008d77
 8005f98:	08008f88 	.word	0x08008f88
 8005f9c:	08008f60 	.word	0x08008f60
 8005fa0:	7ca00000 	.word	0x7ca00000
 8005fa4:	7fefffff 	.word	0x7fefffff
 8005fa8:	f016 0310 	ands.w	r3, r6, #16
 8005fac:	bf18      	it	ne
 8005fae:	236a      	movne	r3, #106	; 0x6a
 8005fb0:	4640      	mov	r0, r8
 8005fb2:	9305      	str	r3, [sp, #20]
 8005fb4:	4649      	mov	r1, r9
 8005fb6:	2300      	movs	r3, #0
 8005fb8:	4fb0      	ldr	r7, [pc, #704]	; (800627c <_strtod_l+0x874>)
 8005fba:	07f2      	lsls	r2, r6, #31
 8005fbc:	d504      	bpl.n	8005fc8 <_strtod_l+0x5c0>
 8005fbe:	e9d7 2300 	ldrd	r2, r3, [r7]
 8005fc2:	f7fa fb47 	bl	8000654 <__aeabi_dmul>
 8005fc6:	2301      	movs	r3, #1
 8005fc8:	1076      	asrs	r6, r6, #1
 8005fca:	f107 0708 	add.w	r7, r7, #8
 8005fce:	d1f4      	bne.n	8005fba <_strtod_l+0x5b2>
 8005fd0:	b10b      	cbz	r3, 8005fd6 <_strtod_l+0x5ce>
 8005fd2:	4680      	mov	r8, r0
 8005fd4:	4689      	mov	r9, r1
 8005fd6:	9b05      	ldr	r3, [sp, #20]
 8005fd8:	b1c3      	cbz	r3, 800600c <_strtod_l+0x604>
 8005fda:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8005fde:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8005fe2:	2b00      	cmp	r3, #0
 8005fe4:	4649      	mov	r1, r9
 8005fe6:	dd11      	ble.n	800600c <_strtod_l+0x604>
 8005fe8:	2b1f      	cmp	r3, #31
 8005fea:	f340 8127 	ble.w	800623c <_strtod_l+0x834>
 8005fee:	2b34      	cmp	r3, #52	; 0x34
 8005ff0:	bfd8      	it	le
 8005ff2:	f04f 33ff 	movle.w	r3, #4294967295
 8005ff6:	f04f 0800 	mov.w	r8, #0
 8005ffa:	bfcf      	iteee	gt
 8005ffc:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8006000:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 8006004:	fa03 f202 	lslle.w	r2, r3, r2
 8006008:	ea02 0901 	andle.w	r9, r2, r1
 800600c:	2200      	movs	r2, #0
 800600e:	2300      	movs	r3, #0
 8006010:	4640      	mov	r0, r8
 8006012:	4649      	mov	r1, r9
 8006014:	f7fa fd86 	bl	8000b24 <__aeabi_dcmpeq>
 8006018:	2800      	cmp	r0, #0
 800601a:	d1a1      	bne.n	8005f60 <_strtod_l+0x558>
 800601c:	9b06      	ldr	r3, [sp, #24]
 800601e:	465a      	mov	r2, fp
 8006020:	9300      	str	r3, [sp, #0]
 8006022:	4650      	mov	r0, sl
 8006024:	4623      	mov	r3, r4
 8006026:	9908      	ldr	r1, [sp, #32]
 8006028:	f001 f874 	bl	8007114 <__s2b>
 800602c:	9008      	str	r0, [sp, #32]
 800602e:	2800      	cmp	r0, #0
 8006030:	f43f af21 	beq.w	8005e76 <_strtod_l+0x46e>
 8006034:	9b04      	ldr	r3, [sp, #16]
 8006036:	f04f 0b00 	mov.w	fp, #0
 800603a:	1b5d      	subs	r5, r3, r5
 800603c:	9b07      	ldr	r3, [sp, #28]
 800603e:	f8cd b010 	str.w	fp, [sp, #16]
 8006042:	2b00      	cmp	r3, #0
 8006044:	bfb4      	ite	lt
 8006046:	462b      	movlt	r3, r5
 8006048:	2300      	movge	r3, #0
 800604a:	930e      	str	r3, [sp, #56]	; 0x38
 800604c:	9b07      	ldr	r3, [sp, #28]
 800604e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8006052:	9314      	str	r3, [sp, #80]	; 0x50
 8006054:	9b08      	ldr	r3, [sp, #32]
 8006056:	4650      	mov	r0, sl
 8006058:	6859      	ldr	r1, [r3, #4]
 800605a:	f000 ffb3 	bl	8006fc4 <_Balloc>
 800605e:	9006      	str	r0, [sp, #24]
 8006060:	2800      	cmp	r0, #0
 8006062:	f43f af10 	beq.w	8005e86 <_strtod_l+0x47e>
 8006066:	9b08      	ldr	r3, [sp, #32]
 8006068:	300c      	adds	r0, #12
 800606a:	691a      	ldr	r2, [r3, #16]
 800606c:	f103 010c 	add.w	r1, r3, #12
 8006070:	3202      	adds	r2, #2
 8006072:	0092      	lsls	r2, r2, #2
 8006074:	f000 ff8c 	bl	8006f90 <memcpy>
 8006078:	ab1c      	add	r3, sp, #112	; 0x70
 800607a:	9301      	str	r3, [sp, #4]
 800607c:	ab1b      	add	r3, sp, #108	; 0x6c
 800607e:	9300      	str	r3, [sp, #0]
 8006080:	4642      	mov	r2, r8
 8006082:	464b      	mov	r3, r9
 8006084:	4650      	mov	r0, sl
 8006086:	e9cd 890c 	strd	r8, r9, [sp, #48]	; 0x30
 800608a:	f001 fb85 	bl	8007798 <__d2b>
 800608e:	901a      	str	r0, [sp, #104]	; 0x68
 8006090:	2800      	cmp	r0, #0
 8006092:	f43f aef8 	beq.w	8005e86 <_strtod_l+0x47e>
 8006096:	2101      	movs	r1, #1
 8006098:	4650      	mov	r0, sl
 800609a:	f001 f8d3 	bl	8007244 <__i2b>
 800609e:	4603      	mov	r3, r0
 80060a0:	9004      	str	r0, [sp, #16]
 80060a2:	2800      	cmp	r0, #0
 80060a4:	f43f aeef 	beq.w	8005e86 <_strtod_l+0x47e>
 80060a8:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 80060aa:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80060ac:	2d00      	cmp	r5, #0
 80060ae:	bfab      	itete	ge
 80060b0:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 80060b2:	9b14      	ldrlt	r3, [sp, #80]	; 0x50
 80060b4:	18ee      	addge	r6, r5, r3
 80060b6:	1b5c      	sublt	r4, r3, r5
 80060b8:	9b05      	ldr	r3, [sp, #20]
 80060ba:	bfa8      	it	ge
 80060bc:	9c14      	ldrge	r4, [sp, #80]	; 0x50
 80060be:	eba5 0503 	sub.w	r5, r5, r3
 80060c2:	4415      	add	r5, r2
 80060c4:	4b6e      	ldr	r3, [pc, #440]	; (8006280 <_strtod_l+0x878>)
 80060c6:	f105 35ff 	add.w	r5, r5, #4294967295
 80060ca:	bfb8      	it	lt
 80060cc:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 80060ce:	429d      	cmp	r5, r3
 80060d0:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 80060d4:	f280 80c4 	bge.w	8006260 <_strtod_l+0x858>
 80060d8:	1b5b      	subs	r3, r3, r5
 80060da:	2b1f      	cmp	r3, #31
 80060dc:	f04f 0701 	mov.w	r7, #1
 80060e0:	eba2 0203 	sub.w	r2, r2, r3
 80060e4:	f300 80b1 	bgt.w	800624a <_strtod_l+0x842>
 80060e8:	2500      	movs	r5, #0
 80060ea:	fa07 f303 	lsl.w	r3, r7, r3
 80060ee:	930f      	str	r3, [sp, #60]	; 0x3c
 80060f0:	18b7      	adds	r7, r6, r2
 80060f2:	9b05      	ldr	r3, [sp, #20]
 80060f4:	42be      	cmp	r6, r7
 80060f6:	4414      	add	r4, r2
 80060f8:	441c      	add	r4, r3
 80060fa:	4633      	mov	r3, r6
 80060fc:	bfa8      	it	ge
 80060fe:	463b      	movge	r3, r7
 8006100:	42a3      	cmp	r3, r4
 8006102:	bfa8      	it	ge
 8006104:	4623      	movge	r3, r4
 8006106:	2b00      	cmp	r3, #0
 8006108:	bfc2      	ittt	gt
 800610a:	1aff      	subgt	r7, r7, r3
 800610c:	1ae4      	subgt	r4, r4, r3
 800610e:	1af6      	subgt	r6, r6, r3
 8006110:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006112:	2b00      	cmp	r3, #0
 8006114:	dd17      	ble.n	8006146 <_strtod_l+0x73e>
 8006116:	461a      	mov	r2, r3
 8006118:	4650      	mov	r0, sl
 800611a:	9904      	ldr	r1, [sp, #16]
 800611c:	f001 f950 	bl	80073c0 <__pow5mult>
 8006120:	9004      	str	r0, [sp, #16]
 8006122:	2800      	cmp	r0, #0
 8006124:	f43f aeaf 	beq.w	8005e86 <_strtod_l+0x47e>
 8006128:	4601      	mov	r1, r0
 800612a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800612c:	4650      	mov	r0, sl
 800612e:	f001 f89f 	bl	8007270 <__multiply>
 8006132:	9009      	str	r0, [sp, #36]	; 0x24
 8006134:	2800      	cmp	r0, #0
 8006136:	f43f aea6 	beq.w	8005e86 <_strtod_l+0x47e>
 800613a:	4650      	mov	r0, sl
 800613c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800613e:	f000 ff81 	bl	8007044 <_Bfree>
 8006142:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006144:	931a      	str	r3, [sp, #104]	; 0x68
 8006146:	2f00      	cmp	r7, #0
 8006148:	f300 808e 	bgt.w	8006268 <_strtod_l+0x860>
 800614c:	9b07      	ldr	r3, [sp, #28]
 800614e:	2b00      	cmp	r3, #0
 8006150:	dd08      	ble.n	8006164 <_strtod_l+0x75c>
 8006152:	4650      	mov	r0, sl
 8006154:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006156:	9906      	ldr	r1, [sp, #24]
 8006158:	f001 f932 	bl	80073c0 <__pow5mult>
 800615c:	9006      	str	r0, [sp, #24]
 800615e:	2800      	cmp	r0, #0
 8006160:	f43f ae91 	beq.w	8005e86 <_strtod_l+0x47e>
 8006164:	2c00      	cmp	r4, #0
 8006166:	dd08      	ble.n	800617a <_strtod_l+0x772>
 8006168:	4622      	mov	r2, r4
 800616a:	4650      	mov	r0, sl
 800616c:	9906      	ldr	r1, [sp, #24]
 800616e:	f001 f981 	bl	8007474 <__lshift>
 8006172:	9006      	str	r0, [sp, #24]
 8006174:	2800      	cmp	r0, #0
 8006176:	f43f ae86 	beq.w	8005e86 <_strtod_l+0x47e>
 800617a:	2e00      	cmp	r6, #0
 800617c:	dd08      	ble.n	8006190 <_strtod_l+0x788>
 800617e:	4632      	mov	r2, r6
 8006180:	4650      	mov	r0, sl
 8006182:	9904      	ldr	r1, [sp, #16]
 8006184:	f001 f976 	bl	8007474 <__lshift>
 8006188:	9004      	str	r0, [sp, #16]
 800618a:	2800      	cmp	r0, #0
 800618c:	f43f ae7b 	beq.w	8005e86 <_strtod_l+0x47e>
 8006190:	4650      	mov	r0, sl
 8006192:	9a06      	ldr	r2, [sp, #24]
 8006194:	991a      	ldr	r1, [sp, #104]	; 0x68
 8006196:	f001 f9f9 	bl	800758c <__mdiff>
 800619a:	4683      	mov	fp, r0
 800619c:	2800      	cmp	r0, #0
 800619e:	f43f ae72 	beq.w	8005e86 <_strtod_l+0x47e>
 80061a2:	2400      	movs	r4, #0
 80061a4:	68c3      	ldr	r3, [r0, #12]
 80061a6:	9904      	ldr	r1, [sp, #16]
 80061a8:	60c4      	str	r4, [r0, #12]
 80061aa:	930b      	str	r3, [sp, #44]	; 0x2c
 80061ac:	f001 f9d2 	bl	8007554 <__mcmp>
 80061b0:	42a0      	cmp	r0, r4
 80061b2:	da6b      	bge.n	800628c <_strtod_l+0x884>
 80061b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80061b6:	ea53 0308 	orrs.w	r3, r3, r8
 80061ba:	f040 8091 	bne.w	80062e0 <_strtod_l+0x8d8>
 80061be:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80061c2:	2b00      	cmp	r3, #0
 80061c4:	f040 808c 	bne.w	80062e0 <_strtod_l+0x8d8>
 80061c8:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 80061cc:	0d1b      	lsrs	r3, r3, #20
 80061ce:	051b      	lsls	r3, r3, #20
 80061d0:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 80061d4:	f240 8084 	bls.w	80062e0 <_strtod_l+0x8d8>
 80061d8:	f8db 3014 	ldr.w	r3, [fp, #20]
 80061dc:	b91b      	cbnz	r3, 80061e6 <_strtod_l+0x7de>
 80061de:	f8db 3010 	ldr.w	r3, [fp, #16]
 80061e2:	2b01      	cmp	r3, #1
 80061e4:	dd7c      	ble.n	80062e0 <_strtod_l+0x8d8>
 80061e6:	4659      	mov	r1, fp
 80061e8:	2201      	movs	r2, #1
 80061ea:	4650      	mov	r0, sl
 80061ec:	f001 f942 	bl	8007474 <__lshift>
 80061f0:	9904      	ldr	r1, [sp, #16]
 80061f2:	4683      	mov	fp, r0
 80061f4:	f001 f9ae 	bl	8007554 <__mcmp>
 80061f8:	2800      	cmp	r0, #0
 80061fa:	dd71      	ble.n	80062e0 <_strtod_l+0x8d8>
 80061fc:	9905      	ldr	r1, [sp, #20]
 80061fe:	464b      	mov	r3, r9
 8006200:	4a20      	ldr	r2, [pc, #128]	; (8006284 <_strtod_l+0x87c>)
 8006202:	2900      	cmp	r1, #0
 8006204:	f000 808c 	beq.w	8006320 <_strtod_l+0x918>
 8006208:	ea02 0109 	and.w	r1, r2, r9
 800620c:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8006210:	f300 8086 	bgt.w	8006320 <_strtod_l+0x918>
 8006214:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8006218:	f77f aeaa 	ble.w	8005f70 <_strtod_l+0x568>
 800621c:	4640      	mov	r0, r8
 800621e:	4649      	mov	r1, r9
 8006220:	4b19      	ldr	r3, [pc, #100]	; (8006288 <_strtod_l+0x880>)
 8006222:	2200      	movs	r2, #0
 8006224:	f7fa fa16 	bl	8000654 <__aeabi_dmul>
 8006228:	460b      	mov	r3, r1
 800622a:	4303      	orrs	r3, r0
 800622c:	bf08      	it	eq
 800622e:	2322      	moveq	r3, #34	; 0x22
 8006230:	4680      	mov	r8, r0
 8006232:	4689      	mov	r9, r1
 8006234:	bf08      	it	eq
 8006236:	f8ca 3000 	streq.w	r3, [sl]
 800623a:	e62f      	b.n	8005e9c <_strtod_l+0x494>
 800623c:	f04f 32ff 	mov.w	r2, #4294967295
 8006240:	fa02 f303 	lsl.w	r3, r2, r3
 8006244:	ea03 0808 	and.w	r8, r3, r8
 8006248:	e6e0      	b.n	800600c <_strtod_l+0x604>
 800624a:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 800624e:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 8006252:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 8006256:	35e2      	adds	r5, #226	; 0xe2
 8006258:	fa07 f505 	lsl.w	r5, r7, r5
 800625c:	970f      	str	r7, [sp, #60]	; 0x3c
 800625e:	e747      	b.n	80060f0 <_strtod_l+0x6e8>
 8006260:	2301      	movs	r3, #1
 8006262:	2500      	movs	r5, #0
 8006264:	930f      	str	r3, [sp, #60]	; 0x3c
 8006266:	e743      	b.n	80060f0 <_strtod_l+0x6e8>
 8006268:	463a      	mov	r2, r7
 800626a:	4650      	mov	r0, sl
 800626c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800626e:	f001 f901 	bl	8007474 <__lshift>
 8006272:	901a      	str	r0, [sp, #104]	; 0x68
 8006274:	2800      	cmp	r0, #0
 8006276:	f47f af69 	bne.w	800614c <_strtod_l+0x744>
 800627a:	e604      	b.n	8005e86 <_strtod_l+0x47e>
 800627c:	08008ca0 	.word	0x08008ca0
 8006280:	fffffc02 	.word	0xfffffc02
 8006284:	7ff00000 	.word	0x7ff00000
 8006288:	39500000 	.word	0x39500000
 800628c:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8006290:	d165      	bne.n	800635e <_strtod_l+0x956>
 8006292:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8006294:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8006298:	b35a      	cbz	r2, 80062f2 <_strtod_l+0x8ea>
 800629a:	4a99      	ldr	r2, [pc, #612]	; (8006500 <_strtod_l+0xaf8>)
 800629c:	4293      	cmp	r3, r2
 800629e:	d12b      	bne.n	80062f8 <_strtod_l+0x8f0>
 80062a0:	9b05      	ldr	r3, [sp, #20]
 80062a2:	4641      	mov	r1, r8
 80062a4:	b303      	cbz	r3, 80062e8 <_strtod_l+0x8e0>
 80062a6:	464a      	mov	r2, r9
 80062a8:	4b96      	ldr	r3, [pc, #600]	; (8006504 <_strtod_l+0xafc>)
 80062aa:	4013      	ands	r3, r2
 80062ac:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 80062b0:	f04f 32ff 	mov.w	r2, #4294967295
 80062b4:	d81b      	bhi.n	80062ee <_strtod_l+0x8e6>
 80062b6:	0d1b      	lsrs	r3, r3, #20
 80062b8:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80062bc:	fa02 f303 	lsl.w	r3, r2, r3
 80062c0:	4299      	cmp	r1, r3
 80062c2:	d119      	bne.n	80062f8 <_strtod_l+0x8f0>
 80062c4:	4b90      	ldr	r3, [pc, #576]	; (8006508 <_strtod_l+0xb00>)
 80062c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80062c8:	429a      	cmp	r2, r3
 80062ca:	d102      	bne.n	80062d2 <_strtod_l+0x8ca>
 80062cc:	3101      	adds	r1, #1
 80062ce:	f43f adda 	beq.w	8005e86 <_strtod_l+0x47e>
 80062d2:	f04f 0800 	mov.w	r8, #0
 80062d6:	4b8b      	ldr	r3, [pc, #556]	; (8006504 <_strtod_l+0xafc>)
 80062d8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80062da:	401a      	ands	r2, r3
 80062dc:	f502 1980 	add.w	r9, r2, #1048576	; 0x100000
 80062e0:	9b05      	ldr	r3, [sp, #20]
 80062e2:	2b00      	cmp	r3, #0
 80062e4:	d19a      	bne.n	800621c <_strtod_l+0x814>
 80062e6:	e5d9      	b.n	8005e9c <_strtod_l+0x494>
 80062e8:	f04f 33ff 	mov.w	r3, #4294967295
 80062ec:	e7e8      	b.n	80062c0 <_strtod_l+0x8b8>
 80062ee:	4613      	mov	r3, r2
 80062f0:	e7e6      	b.n	80062c0 <_strtod_l+0x8b8>
 80062f2:	ea53 0308 	orrs.w	r3, r3, r8
 80062f6:	d081      	beq.n	80061fc <_strtod_l+0x7f4>
 80062f8:	b1e5      	cbz	r5, 8006334 <_strtod_l+0x92c>
 80062fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80062fc:	421d      	tst	r5, r3
 80062fe:	d0ef      	beq.n	80062e0 <_strtod_l+0x8d8>
 8006300:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006302:	4640      	mov	r0, r8
 8006304:	4649      	mov	r1, r9
 8006306:	9a05      	ldr	r2, [sp, #20]
 8006308:	b1c3      	cbz	r3, 800633c <_strtod_l+0x934>
 800630a:	f7ff fb5b 	bl	80059c4 <sulp>
 800630e:	4602      	mov	r2, r0
 8006310:	460b      	mov	r3, r1
 8006312:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8006316:	f7f9 ffe7 	bl	80002e8 <__adddf3>
 800631a:	4680      	mov	r8, r0
 800631c:	4689      	mov	r9, r1
 800631e:	e7df      	b.n	80062e0 <_strtod_l+0x8d8>
 8006320:	4013      	ands	r3, r2
 8006322:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8006326:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 800632a:	f04f 38ff 	mov.w	r8, #4294967295
 800632e:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 8006332:	e7d5      	b.n	80062e0 <_strtod_l+0x8d8>
 8006334:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006336:	ea13 0f08 	tst.w	r3, r8
 800633a:	e7e0      	b.n	80062fe <_strtod_l+0x8f6>
 800633c:	f7ff fb42 	bl	80059c4 <sulp>
 8006340:	4602      	mov	r2, r0
 8006342:	460b      	mov	r3, r1
 8006344:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8006348:	f7f9 ffcc 	bl	80002e4 <__aeabi_dsub>
 800634c:	2200      	movs	r2, #0
 800634e:	2300      	movs	r3, #0
 8006350:	4680      	mov	r8, r0
 8006352:	4689      	mov	r9, r1
 8006354:	f7fa fbe6 	bl	8000b24 <__aeabi_dcmpeq>
 8006358:	2800      	cmp	r0, #0
 800635a:	d0c1      	beq.n	80062e0 <_strtod_l+0x8d8>
 800635c:	e608      	b.n	8005f70 <_strtod_l+0x568>
 800635e:	4658      	mov	r0, fp
 8006360:	9904      	ldr	r1, [sp, #16]
 8006362:	f001 fa75 	bl	8007850 <__ratio>
 8006366:	2200      	movs	r2, #0
 8006368:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800636c:	4606      	mov	r6, r0
 800636e:	460f      	mov	r7, r1
 8006370:	f7fa fbec 	bl	8000b4c <__aeabi_dcmple>
 8006374:	2800      	cmp	r0, #0
 8006376:	d070      	beq.n	800645a <_strtod_l+0xa52>
 8006378:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800637a:	2b00      	cmp	r3, #0
 800637c:	d042      	beq.n	8006404 <_strtod_l+0x9fc>
 800637e:	2600      	movs	r6, #0
 8006380:	4f62      	ldr	r7, [pc, #392]	; (800650c <_strtod_l+0xb04>)
 8006382:	4d62      	ldr	r5, [pc, #392]	; (800650c <_strtod_l+0xb04>)
 8006384:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006386:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800638a:	0d1b      	lsrs	r3, r3, #20
 800638c:	051b      	lsls	r3, r3, #20
 800638e:	930f      	str	r3, [sp, #60]	; 0x3c
 8006390:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006392:	4b5f      	ldr	r3, [pc, #380]	; (8006510 <_strtod_l+0xb08>)
 8006394:	429a      	cmp	r2, r3
 8006396:	f040 80c3 	bne.w	8006520 <_strtod_l+0xb18>
 800639a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800639c:	4640      	mov	r0, r8
 800639e:	f1a3 7954 	sub.w	r9, r3, #55574528	; 0x3500000
 80063a2:	4649      	mov	r1, r9
 80063a4:	f001 f97e 	bl	80076a4 <__ulp>
 80063a8:	4602      	mov	r2, r0
 80063aa:	460b      	mov	r3, r1
 80063ac:	4630      	mov	r0, r6
 80063ae:	4639      	mov	r1, r7
 80063b0:	f7fa f950 	bl	8000654 <__aeabi_dmul>
 80063b4:	4642      	mov	r2, r8
 80063b6:	464b      	mov	r3, r9
 80063b8:	f7f9 ff96 	bl	80002e8 <__adddf3>
 80063bc:	460b      	mov	r3, r1
 80063be:	4951      	ldr	r1, [pc, #324]	; (8006504 <_strtod_l+0xafc>)
 80063c0:	4a54      	ldr	r2, [pc, #336]	; (8006514 <_strtod_l+0xb0c>)
 80063c2:	4019      	ands	r1, r3
 80063c4:	4291      	cmp	r1, r2
 80063c6:	4680      	mov	r8, r0
 80063c8:	d95d      	bls.n	8006486 <_strtod_l+0xa7e>
 80063ca:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80063cc:	4b4e      	ldr	r3, [pc, #312]	; (8006508 <_strtod_l+0xb00>)
 80063ce:	429a      	cmp	r2, r3
 80063d0:	d103      	bne.n	80063da <_strtod_l+0x9d2>
 80063d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80063d4:	3301      	adds	r3, #1
 80063d6:	f43f ad56 	beq.w	8005e86 <_strtod_l+0x47e>
 80063da:	f04f 38ff 	mov.w	r8, #4294967295
 80063de:	f8df 9128 	ldr.w	r9, [pc, #296]	; 8006508 <_strtod_l+0xb00>
 80063e2:	4650      	mov	r0, sl
 80063e4:	991a      	ldr	r1, [sp, #104]	; 0x68
 80063e6:	f000 fe2d 	bl	8007044 <_Bfree>
 80063ea:	4650      	mov	r0, sl
 80063ec:	9906      	ldr	r1, [sp, #24]
 80063ee:	f000 fe29 	bl	8007044 <_Bfree>
 80063f2:	4650      	mov	r0, sl
 80063f4:	9904      	ldr	r1, [sp, #16]
 80063f6:	f000 fe25 	bl	8007044 <_Bfree>
 80063fa:	4659      	mov	r1, fp
 80063fc:	4650      	mov	r0, sl
 80063fe:	f000 fe21 	bl	8007044 <_Bfree>
 8006402:	e627      	b.n	8006054 <_strtod_l+0x64c>
 8006404:	f1b8 0f00 	cmp.w	r8, #0
 8006408:	d119      	bne.n	800643e <_strtod_l+0xa36>
 800640a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800640c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006410:	b9e3      	cbnz	r3, 800644c <_strtod_l+0xa44>
 8006412:	2200      	movs	r2, #0
 8006414:	4630      	mov	r0, r6
 8006416:	4639      	mov	r1, r7
 8006418:	4b3c      	ldr	r3, [pc, #240]	; (800650c <_strtod_l+0xb04>)
 800641a:	f7fa fb8d 	bl	8000b38 <__aeabi_dcmplt>
 800641e:	b9c8      	cbnz	r0, 8006454 <_strtod_l+0xa4c>
 8006420:	2200      	movs	r2, #0
 8006422:	4630      	mov	r0, r6
 8006424:	4639      	mov	r1, r7
 8006426:	4b3c      	ldr	r3, [pc, #240]	; (8006518 <_strtod_l+0xb10>)
 8006428:	f7fa f914 	bl	8000654 <__aeabi_dmul>
 800642c:	4604      	mov	r4, r0
 800642e:	460d      	mov	r5, r1
 8006430:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8006434:	9416      	str	r4, [sp, #88]	; 0x58
 8006436:	9317      	str	r3, [sp, #92]	; 0x5c
 8006438:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
 800643c:	e7a2      	b.n	8006384 <_strtod_l+0x97c>
 800643e:	f1b8 0f01 	cmp.w	r8, #1
 8006442:	d103      	bne.n	800644c <_strtod_l+0xa44>
 8006444:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006446:	2b00      	cmp	r3, #0
 8006448:	f43f ad92 	beq.w	8005f70 <_strtod_l+0x568>
 800644c:	2600      	movs	r6, #0
 800644e:	2400      	movs	r4, #0
 8006450:	4f32      	ldr	r7, [pc, #200]	; (800651c <_strtod_l+0xb14>)
 8006452:	e796      	b.n	8006382 <_strtod_l+0x97a>
 8006454:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8006456:	4d30      	ldr	r5, [pc, #192]	; (8006518 <_strtod_l+0xb10>)
 8006458:	e7ea      	b.n	8006430 <_strtod_l+0xa28>
 800645a:	4b2f      	ldr	r3, [pc, #188]	; (8006518 <_strtod_l+0xb10>)
 800645c:	2200      	movs	r2, #0
 800645e:	4630      	mov	r0, r6
 8006460:	4639      	mov	r1, r7
 8006462:	f7fa f8f7 	bl	8000654 <__aeabi_dmul>
 8006466:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006468:	4604      	mov	r4, r0
 800646a:	460d      	mov	r5, r1
 800646c:	b933      	cbnz	r3, 800647c <_strtod_l+0xa74>
 800646e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8006472:	9010      	str	r0, [sp, #64]	; 0x40
 8006474:	9311      	str	r3, [sp, #68]	; 0x44
 8006476:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800647a:	e783      	b.n	8006384 <_strtod_l+0x97c>
 800647c:	4602      	mov	r2, r0
 800647e:	460b      	mov	r3, r1
 8006480:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8006484:	e7f7      	b.n	8006476 <_strtod_l+0xa6e>
 8006486:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 800648a:	9b05      	ldr	r3, [sp, #20]
 800648c:	2b00      	cmp	r3, #0
 800648e:	d1a8      	bne.n	80063e2 <_strtod_l+0x9da>
 8006490:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8006494:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006496:	0d1b      	lsrs	r3, r3, #20
 8006498:	051b      	lsls	r3, r3, #20
 800649a:	429a      	cmp	r2, r3
 800649c:	d1a1      	bne.n	80063e2 <_strtod_l+0x9da>
 800649e:	4620      	mov	r0, r4
 80064a0:	4629      	mov	r1, r5
 80064a2:	f7fa fdb1 	bl	8001008 <__aeabi_d2lz>
 80064a6:	f7fa f8a7 	bl	80005f8 <__aeabi_l2d>
 80064aa:	4602      	mov	r2, r0
 80064ac:	460b      	mov	r3, r1
 80064ae:	4620      	mov	r0, r4
 80064b0:	4629      	mov	r1, r5
 80064b2:	f7f9 ff17 	bl	80002e4 <__aeabi_dsub>
 80064b6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80064b8:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80064bc:	ea43 0308 	orr.w	r3, r3, r8
 80064c0:	4313      	orrs	r3, r2
 80064c2:	4604      	mov	r4, r0
 80064c4:	460d      	mov	r5, r1
 80064c6:	d066      	beq.n	8006596 <_strtod_l+0xb8e>
 80064c8:	a309      	add	r3, pc, #36	; (adr r3, 80064f0 <_strtod_l+0xae8>)
 80064ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80064ce:	f7fa fb33 	bl	8000b38 <__aeabi_dcmplt>
 80064d2:	2800      	cmp	r0, #0
 80064d4:	f47f ace2 	bne.w	8005e9c <_strtod_l+0x494>
 80064d8:	a307      	add	r3, pc, #28	; (adr r3, 80064f8 <_strtod_l+0xaf0>)
 80064da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80064de:	4620      	mov	r0, r4
 80064e0:	4629      	mov	r1, r5
 80064e2:	f7fa fb47 	bl	8000b74 <__aeabi_dcmpgt>
 80064e6:	2800      	cmp	r0, #0
 80064e8:	f43f af7b 	beq.w	80063e2 <_strtod_l+0x9da>
 80064ec:	e4d6      	b.n	8005e9c <_strtod_l+0x494>
 80064ee:	bf00      	nop
 80064f0:	94a03595 	.word	0x94a03595
 80064f4:	3fdfffff 	.word	0x3fdfffff
 80064f8:	35afe535 	.word	0x35afe535
 80064fc:	3fe00000 	.word	0x3fe00000
 8006500:	000fffff 	.word	0x000fffff
 8006504:	7ff00000 	.word	0x7ff00000
 8006508:	7fefffff 	.word	0x7fefffff
 800650c:	3ff00000 	.word	0x3ff00000
 8006510:	7fe00000 	.word	0x7fe00000
 8006514:	7c9fffff 	.word	0x7c9fffff
 8006518:	3fe00000 	.word	0x3fe00000
 800651c:	bff00000 	.word	0xbff00000
 8006520:	9b05      	ldr	r3, [sp, #20]
 8006522:	b313      	cbz	r3, 800656a <_strtod_l+0xb62>
 8006524:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006526:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800652a:	d81e      	bhi.n	800656a <_strtod_l+0xb62>
 800652c:	a326      	add	r3, pc, #152	; (adr r3, 80065c8 <_strtod_l+0xbc0>)
 800652e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006532:	4620      	mov	r0, r4
 8006534:	4629      	mov	r1, r5
 8006536:	f7fa fb09 	bl	8000b4c <__aeabi_dcmple>
 800653a:	b190      	cbz	r0, 8006562 <_strtod_l+0xb5a>
 800653c:	4629      	mov	r1, r5
 800653e:	4620      	mov	r0, r4
 8006540:	f7fa fb38 	bl	8000bb4 <__aeabi_d2uiz>
 8006544:	2801      	cmp	r0, #1
 8006546:	bf38      	it	cc
 8006548:	2001      	movcc	r0, #1
 800654a:	f7fa f809 	bl	8000560 <__aeabi_ui2d>
 800654e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006550:	4604      	mov	r4, r0
 8006552:	460d      	mov	r5, r1
 8006554:	b9d3      	cbnz	r3, 800658c <_strtod_l+0xb84>
 8006556:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800655a:	9012      	str	r0, [sp, #72]	; 0x48
 800655c:	9313      	str	r3, [sp, #76]	; 0x4c
 800655e:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 8006562:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006564:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 8006568:	1a9f      	subs	r7, r3, r2
 800656a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800656e:	f001 f899 	bl	80076a4 <__ulp>
 8006572:	4602      	mov	r2, r0
 8006574:	460b      	mov	r3, r1
 8006576:	4630      	mov	r0, r6
 8006578:	4639      	mov	r1, r7
 800657a:	f7fa f86b 	bl	8000654 <__aeabi_dmul>
 800657e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8006582:	f7f9 feb1 	bl	80002e8 <__adddf3>
 8006586:	4680      	mov	r8, r0
 8006588:	4689      	mov	r9, r1
 800658a:	e77e      	b.n	800648a <_strtod_l+0xa82>
 800658c:	4602      	mov	r2, r0
 800658e:	460b      	mov	r3, r1
 8006590:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 8006594:	e7e3      	b.n	800655e <_strtod_l+0xb56>
 8006596:	a30e      	add	r3, pc, #56	; (adr r3, 80065d0 <_strtod_l+0xbc8>)
 8006598:	e9d3 2300 	ldrd	r2, r3, [r3]
 800659c:	f7fa facc 	bl	8000b38 <__aeabi_dcmplt>
 80065a0:	e7a1      	b.n	80064e6 <_strtod_l+0xade>
 80065a2:	2300      	movs	r3, #0
 80065a4:	930a      	str	r3, [sp, #40]	; 0x28
 80065a6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80065a8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80065aa:	6013      	str	r3, [r2, #0]
 80065ac:	f7ff ba71 	b.w	8005a92 <_strtod_l+0x8a>
 80065b0:	2a65      	cmp	r2, #101	; 0x65
 80065b2:	f43f ab63 	beq.w	8005c7c <_strtod_l+0x274>
 80065b6:	2a45      	cmp	r2, #69	; 0x45
 80065b8:	f43f ab60 	beq.w	8005c7c <_strtod_l+0x274>
 80065bc:	2301      	movs	r3, #1
 80065be:	f7ff bb95 	b.w	8005cec <_strtod_l+0x2e4>
 80065c2:	bf00      	nop
 80065c4:	f3af 8000 	nop.w
 80065c8:	ffc00000 	.word	0xffc00000
 80065cc:	41dfffff 	.word	0x41dfffff
 80065d0:	94a03595 	.word	0x94a03595
 80065d4:	3fcfffff 	.word	0x3fcfffff

080065d8 <strtof>:
 80065d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80065dc:	4f22      	ldr	r7, [pc, #136]	; (8006668 <strtof+0x90>)
 80065de:	460a      	mov	r2, r1
 80065e0:	4b22      	ldr	r3, [pc, #136]	; (800666c <strtof+0x94>)
 80065e2:	4601      	mov	r1, r0
 80065e4:	6838      	ldr	r0, [r7, #0]
 80065e6:	f7ff fa0f 	bl	8005a08 <_strtod_l>
 80065ea:	4602      	mov	r2, r0
 80065ec:	460b      	mov	r3, r1
 80065ee:	4606      	mov	r6, r0
 80065f0:	460c      	mov	r4, r1
 80065f2:	f7fa fac9 	bl	8000b88 <__aeabi_dcmpun>
 80065f6:	b168      	cbz	r0, 8006614 <strtof+0x3c>
 80065f8:	2c00      	cmp	r4, #0
 80065fa:	481d      	ldr	r0, [pc, #116]	; (8006670 <strtof+0x98>)
 80065fc:	da06      	bge.n	800660c <strtof+0x34>
 80065fe:	f001 fdfd 	bl	80081fc <nanf>
 8006602:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 8006606:	4628      	mov	r0, r5
 8006608:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800660c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006610:	f001 bdf4 	b.w	80081fc <nanf>
 8006614:	4621      	mov	r1, r4
 8006616:	4630      	mov	r0, r6
 8006618:	f7fa faec 	bl	8000bf4 <__aeabi_d2f>
 800661c:	f020 4800 	bic.w	r8, r0, #2147483648	; 0x80000000
 8006620:	4605      	mov	r5, r0
 8006622:	4914      	ldr	r1, [pc, #80]	; (8006674 <strtof+0x9c>)
 8006624:	4640      	mov	r0, r8
 8006626:	f7fa fcb9 	bl	8000f9c <__aeabi_fcmpun>
 800662a:	2800      	cmp	r0, #0
 800662c:	d1eb      	bne.n	8006606 <strtof+0x2e>
 800662e:	4640      	mov	r0, r8
 8006630:	4910      	ldr	r1, [pc, #64]	; (8006674 <strtof+0x9c>)
 8006632:	f7fa fc95 	bl	8000f60 <__aeabi_fcmple>
 8006636:	2800      	cmp	r0, #0
 8006638:	d1e5      	bne.n	8006606 <strtof+0x2e>
 800663a:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
 800663e:	f04f 32ff 	mov.w	r2, #4294967295
 8006642:	4630      	mov	r0, r6
 8006644:	4621      	mov	r1, r4
 8006646:	4b0c      	ldr	r3, [pc, #48]	; (8006678 <strtof+0xa0>)
 8006648:	f7fa fa9e 	bl	8000b88 <__aeabi_dcmpun>
 800664c:	b940      	cbnz	r0, 8006660 <strtof+0x88>
 800664e:	f04f 32ff 	mov.w	r2, #4294967295
 8006652:	4630      	mov	r0, r6
 8006654:	4621      	mov	r1, r4
 8006656:	4b08      	ldr	r3, [pc, #32]	; (8006678 <strtof+0xa0>)
 8006658:	f7fa fa78 	bl	8000b4c <__aeabi_dcmple>
 800665c:	2800      	cmp	r0, #0
 800665e:	d0d2      	beq.n	8006606 <strtof+0x2e>
 8006660:	2222      	movs	r2, #34	; 0x22
 8006662:	683b      	ldr	r3, [r7, #0]
 8006664:	601a      	str	r2, [r3, #0]
 8006666:	e7ce      	b.n	8006606 <strtof+0x2e>
 8006668:	20000018 	.word	0x20000018
 800666c:	20000080 	.word	0x20000080
 8006670:	08008d77 	.word	0x08008d77
 8006674:	7f7fffff 	.word	0x7f7fffff
 8006678:	7fefffff 	.word	0x7fefffff

0800667c <strtok>:
 800667c:	4b16      	ldr	r3, [pc, #88]	; (80066d8 <strtok+0x5c>)
 800667e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006682:	681f      	ldr	r7, [r3, #0]
 8006684:	4605      	mov	r5, r0
 8006686:	6dbc      	ldr	r4, [r7, #88]	; 0x58
 8006688:	460e      	mov	r6, r1
 800668a:	b9ec      	cbnz	r4, 80066c8 <strtok+0x4c>
 800668c:	2050      	movs	r0, #80	; 0x50
 800668e:	f7ff f875 	bl	800577c <malloc>
 8006692:	4602      	mov	r2, r0
 8006694:	65b8      	str	r0, [r7, #88]	; 0x58
 8006696:	b920      	cbnz	r0, 80066a2 <strtok+0x26>
 8006698:	2157      	movs	r1, #87	; 0x57
 800669a:	4b10      	ldr	r3, [pc, #64]	; (80066dc <strtok+0x60>)
 800669c:	4810      	ldr	r0, [pc, #64]	; (80066e0 <strtok+0x64>)
 800669e:	f000 f8cf 	bl	8006840 <__assert_func>
 80066a2:	e9c0 4400 	strd	r4, r4, [r0]
 80066a6:	e9c0 4402 	strd	r4, r4, [r0, #8]
 80066aa:	e9c0 4404 	strd	r4, r4, [r0, #16]
 80066ae:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 80066b2:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 80066b6:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 80066ba:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 80066be:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 80066c2:	6184      	str	r4, [r0, #24]
 80066c4:	7704      	strb	r4, [r0, #28]
 80066c6:	6244      	str	r4, [r0, #36]	; 0x24
 80066c8:	4631      	mov	r1, r6
 80066ca:	4628      	mov	r0, r5
 80066cc:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80066ce:	2301      	movs	r3, #1
 80066d0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80066d4:	f000 b806 	b.w	80066e4 <__strtok_r>
 80066d8:	20000018 	.word	0x20000018
 80066dc:	08008cc8 	.word	0x08008cc8
 80066e0:	08008cdf 	.word	0x08008cdf

080066e4 <__strtok_r>:
 80066e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80066e6:	b908      	cbnz	r0, 80066ec <__strtok_r+0x8>
 80066e8:	6810      	ldr	r0, [r2, #0]
 80066ea:	b188      	cbz	r0, 8006710 <__strtok_r+0x2c>
 80066ec:	4604      	mov	r4, r0
 80066ee:	460f      	mov	r7, r1
 80066f0:	4620      	mov	r0, r4
 80066f2:	f814 5b01 	ldrb.w	r5, [r4], #1
 80066f6:	f817 6b01 	ldrb.w	r6, [r7], #1
 80066fa:	b91e      	cbnz	r6, 8006704 <__strtok_r+0x20>
 80066fc:	b965      	cbnz	r5, 8006718 <__strtok_r+0x34>
 80066fe:	4628      	mov	r0, r5
 8006700:	6015      	str	r5, [r2, #0]
 8006702:	e005      	b.n	8006710 <__strtok_r+0x2c>
 8006704:	42b5      	cmp	r5, r6
 8006706:	d1f6      	bne.n	80066f6 <__strtok_r+0x12>
 8006708:	2b00      	cmp	r3, #0
 800670a:	d1f0      	bne.n	80066ee <__strtok_r+0xa>
 800670c:	6014      	str	r4, [r2, #0]
 800670e:	7003      	strb	r3, [r0, #0]
 8006710:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006712:	461c      	mov	r4, r3
 8006714:	e00c      	b.n	8006730 <__strtok_r+0x4c>
 8006716:	b915      	cbnz	r5, 800671e <__strtok_r+0x3a>
 8006718:	460e      	mov	r6, r1
 800671a:	f814 3b01 	ldrb.w	r3, [r4], #1
 800671e:	f816 5b01 	ldrb.w	r5, [r6], #1
 8006722:	42ab      	cmp	r3, r5
 8006724:	d1f7      	bne.n	8006716 <__strtok_r+0x32>
 8006726:	2b00      	cmp	r3, #0
 8006728:	d0f3      	beq.n	8006712 <__strtok_r+0x2e>
 800672a:	2300      	movs	r3, #0
 800672c:	f804 3c01 	strb.w	r3, [r4, #-1]
 8006730:	6014      	str	r4, [r2, #0]
 8006732:	e7ed      	b.n	8006710 <__strtok_r+0x2c>

08006734 <_strtol_l.constprop.0>:
 8006734:	2b01      	cmp	r3, #1
 8006736:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800673a:	4680      	mov	r8, r0
 800673c:	d001      	beq.n	8006742 <_strtol_l.constprop.0+0xe>
 800673e:	2b24      	cmp	r3, #36	; 0x24
 8006740:	d906      	bls.n	8006750 <_strtol_l.constprop.0+0x1c>
 8006742:	f7fe fff1 	bl	8005728 <__errno>
 8006746:	2316      	movs	r3, #22
 8006748:	6003      	str	r3, [r0, #0]
 800674a:	2000      	movs	r0, #0
 800674c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006750:	460d      	mov	r5, r1
 8006752:	4f35      	ldr	r7, [pc, #212]	; (8006828 <_strtol_l.constprop.0+0xf4>)
 8006754:	4628      	mov	r0, r5
 8006756:	f815 4b01 	ldrb.w	r4, [r5], #1
 800675a:	5de6      	ldrb	r6, [r4, r7]
 800675c:	f016 0608 	ands.w	r6, r6, #8
 8006760:	d1f8      	bne.n	8006754 <_strtol_l.constprop.0+0x20>
 8006762:	2c2d      	cmp	r4, #45	; 0x2d
 8006764:	d12f      	bne.n	80067c6 <_strtol_l.constprop.0+0x92>
 8006766:	2601      	movs	r6, #1
 8006768:	782c      	ldrb	r4, [r5, #0]
 800676a:	1c85      	adds	r5, r0, #2
 800676c:	2b00      	cmp	r3, #0
 800676e:	d057      	beq.n	8006820 <_strtol_l.constprop.0+0xec>
 8006770:	2b10      	cmp	r3, #16
 8006772:	d109      	bne.n	8006788 <_strtol_l.constprop.0+0x54>
 8006774:	2c30      	cmp	r4, #48	; 0x30
 8006776:	d107      	bne.n	8006788 <_strtol_l.constprop.0+0x54>
 8006778:	7828      	ldrb	r0, [r5, #0]
 800677a:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800677e:	2858      	cmp	r0, #88	; 0x58
 8006780:	d149      	bne.n	8006816 <_strtol_l.constprop.0+0xe2>
 8006782:	2310      	movs	r3, #16
 8006784:	786c      	ldrb	r4, [r5, #1]
 8006786:	3502      	adds	r5, #2
 8006788:	2700      	movs	r7, #0
 800678a:	f106 4e00 	add.w	lr, r6, #2147483648	; 0x80000000
 800678e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8006792:	fbbe f9f3 	udiv	r9, lr, r3
 8006796:	4638      	mov	r0, r7
 8006798:	fb03 ea19 	mls	sl, r3, r9, lr
 800679c:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80067a0:	f1bc 0f09 	cmp.w	ip, #9
 80067a4:	d814      	bhi.n	80067d0 <_strtol_l.constprop.0+0x9c>
 80067a6:	4664      	mov	r4, ip
 80067a8:	42a3      	cmp	r3, r4
 80067aa:	dd22      	ble.n	80067f2 <_strtol_l.constprop.0+0xbe>
 80067ac:	2f00      	cmp	r7, #0
 80067ae:	db1d      	blt.n	80067ec <_strtol_l.constprop.0+0xb8>
 80067b0:	4581      	cmp	r9, r0
 80067b2:	d31b      	bcc.n	80067ec <_strtol_l.constprop.0+0xb8>
 80067b4:	d101      	bne.n	80067ba <_strtol_l.constprop.0+0x86>
 80067b6:	45a2      	cmp	sl, r4
 80067b8:	db18      	blt.n	80067ec <_strtol_l.constprop.0+0xb8>
 80067ba:	2701      	movs	r7, #1
 80067bc:	fb00 4003 	mla	r0, r0, r3, r4
 80067c0:	f815 4b01 	ldrb.w	r4, [r5], #1
 80067c4:	e7ea      	b.n	800679c <_strtol_l.constprop.0+0x68>
 80067c6:	2c2b      	cmp	r4, #43	; 0x2b
 80067c8:	bf04      	itt	eq
 80067ca:	782c      	ldrbeq	r4, [r5, #0]
 80067cc:	1c85      	addeq	r5, r0, #2
 80067ce:	e7cd      	b.n	800676c <_strtol_l.constprop.0+0x38>
 80067d0:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 80067d4:	f1bc 0f19 	cmp.w	ip, #25
 80067d8:	d801      	bhi.n	80067de <_strtol_l.constprop.0+0xaa>
 80067da:	3c37      	subs	r4, #55	; 0x37
 80067dc:	e7e4      	b.n	80067a8 <_strtol_l.constprop.0+0x74>
 80067de:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 80067e2:	f1bc 0f19 	cmp.w	ip, #25
 80067e6:	d804      	bhi.n	80067f2 <_strtol_l.constprop.0+0xbe>
 80067e8:	3c57      	subs	r4, #87	; 0x57
 80067ea:	e7dd      	b.n	80067a8 <_strtol_l.constprop.0+0x74>
 80067ec:	f04f 37ff 	mov.w	r7, #4294967295
 80067f0:	e7e6      	b.n	80067c0 <_strtol_l.constprop.0+0x8c>
 80067f2:	2f00      	cmp	r7, #0
 80067f4:	da07      	bge.n	8006806 <_strtol_l.constprop.0+0xd2>
 80067f6:	2322      	movs	r3, #34	; 0x22
 80067f8:	4670      	mov	r0, lr
 80067fa:	f8c8 3000 	str.w	r3, [r8]
 80067fe:	2a00      	cmp	r2, #0
 8006800:	d0a4      	beq.n	800674c <_strtol_l.constprop.0+0x18>
 8006802:	1e69      	subs	r1, r5, #1
 8006804:	e005      	b.n	8006812 <_strtol_l.constprop.0+0xde>
 8006806:	b106      	cbz	r6, 800680a <_strtol_l.constprop.0+0xd6>
 8006808:	4240      	negs	r0, r0
 800680a:	2a00      	cmp	r2, #0
 800680c:	d09e      	beq.n	800674c <_strtol_l.constprop.0+0x18>
 800680e:	2f00      	cmp	r7, #0
 8006810:	d1f7      	bne.n	8006802 <_strtol_l.constprop.0+0xce>
 8006812:	6011      	str	r1, [r2, #0]
 8006814:	e79a      	b.n	800674c <_strtol_l.constprop.0+0x18>
 8006816:	2430      	movs	r4, #48	; 0x30
 8006818:	2b00      	cmp	r3, #0
 800681a:	d1b5      	bne.n	8006788 <_strtol_l.constprop.0+0x54>
 800681c:	2308      	movs	r3, #8
 800681e:	e7b3      	b.n	8006788 <_strtol_l.constprop.0+0x54>
 8006820:	2c30      	cmp	r4, #48	; 0x30
 8006822:	d0a9      	beq.n	8006778 <_strtol_l.constprop.0+0x44>
 8006824:	230a      	movs	r3, #10
 8006826:	e7af      	b.n	8006788 <_strtol_l.constprop.0+0x54>
 8006828:	08008d79 	.word	0x08008d79

0800682c <strtol>:
 800682c:	4613      	mov	r3, r2
 800682e:	460a      	mov	r2, r1
 8006830:	4601      	mov	r1, r0
 8006832:	4802      	ldr	r0, [pc, #8]	; (800683c <strtol+0x10>)
 8006834:	6800      	ldr	r0, [r0, #0]
 8006836:	f7ff bf7d 	b.w	8006734 <_strtol_l.constprop.0>
 800683a:	bf00      	nop
 800683c:	20000018 	.word	0x20000018

08006840 <__assert_func>:
 8006840:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006842:	4614      	mov	r4, r2
 8006844:	461a      	mov	r2, r3
 8006846:	4b09      	ldr	r3, [pc, #36]	; (800686c <__assert_func+0x2c>)
 8006848:	4605      	mov	r5, r0
 800684a:	681b      	ldr	r3, [r3, #0]
 800684c:	68d8      	ldr	r0, [r3, #12]
 800684e:	b14c      	cbz	r4, 8006864 <__assert_func+0x24>
 8006850:	4b07      	ldr	r3, [pc, #28]	; (8006870 <__assert_func+0x30>)
 8006852:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8006856:	9100      	str	r1, [sp, #0]
 8006858:	462b      	mov	r3, r5
 800685a:	4906      	ldr	r1, [pc, #24]	; (8006874 <__assert_func+0x34>)
 800685c:	f000 f80e 	bl	800687c <fiprintf>
 8006860:	f001 fdb2 	bl	80083c8 <abort>
 8006864:	4b04      	ldr	r3, [pc, #16]	; (8006878 <__assert_func+0x38>)
 8006866:	461c      	mov	r4, r3
 8006868:	e7f3      	b.n	8006852 <__assert_func+0x12>
 800686a:	bf00      	nop
 800686c:	20000018 	.word	0x20000018
 8006870:	08008d3c 	.word	0x08008d3c
 8006874:	08008d49 	.word	0x08008d49
 8006878:	08008d77 	.word	0x08008d77

0800687c <fiprintf>:
 800687c:	b40e      	push	{r1, r2, r3}
 800687e:	b503      	push	{r0, r1, lr}
 8006880:	4601      	mov	r1, r0
 8006882:	ab03      	add	r3, sp, #12
 8006884:	4805      	ldr	r0, [pc, #20]	; (800689c <fiprintf+0x20>)
 8006886:	f853 2b04 	ldr.w	r2, [r3], #4
 800688a:	6800      	ldr	r0, [r0, #0]
 800688c:	9301      	str	r3, [sp, #4]
 800688e:	f001 f9e9 	bl	8007c64 <_vfiprintf_r>
 8006892:	b002      	add	sp, #8
 8006894:	f85d eb04 	ldr.w	lr, [sp], #4
 8006898:	b003      	add	sp, #12
 800689a:	4770      	bx	lr
 800689c:	20000018 	.word	0x20000018

080068a0 <rshift>:
 80068a0:	6903      	ldr	r3, [r0, #16]
 80068a2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80068a6:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 80068aa:	f100 0414 	add.w	r4, r0, #20
 80068ae:	ea4f 1261 	mov.w	r2, r1, asr #5
 80068b2:	dd46      	ble.n	8006942 <rshift+0xa2>
 80068b4:	f011 011f 	ands.w	r1, r1, #31
 80068b8:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80068bc:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80068c0:	d10c      	bne.n	80068dc <rshift+0x3c>
 80068c2:	4629      	mov	r1, r5
 80068c4:	f100 0710 	add.w	r7, r0, #16
 80068c8:	42b1      	cmp	r1, r6
 80068ca:	d335      	bcc.n	8006938 <rshift+0x98>
 80068cc:	1a9b      	subs	r3, r3, r2
 80068ce:	009b      	lsls	r3, r3, #2
 80068d0:	1eea      	subs	r2, r5, #3
 80068d2:	4296      	cmp	r6, r2
 80068d4:	bf38      	it	cc
 80068d6:	2300      	movcc	r3, #0
 80068d8:	4423      	add	r3, r4
 80068da:	e015      	b.n	8006908 <rshift+0x68>
 80068dc:	46a1      	mov	r9, r4
 80068de:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80068e2:	f1c1 0820 	rsb	r8, r1, #32
 80068e6:	40cf      	lsrs	r7, r1
 80068e8:	f105 0e04 	add.w	lr, r5, #4
 80068ec:	4576      	cmp	r6, lr
 80068ee:	46f4      	mov	ip, lr
 80068f0:	d816      	bhi.n	8006920 <rshift+0x80>
 80068f2:	1a9a      	subs	r2, r3, r2
 80068f4:	0092      	lsls	r2, r2, #2
 80068f6:	3a04      	subs	r2, #4
 80068f8:	3501      	adds	r5, #1
 80068fa:	42ae      	cmp	r6, r5
 80068fc:	bf38      	it	cc
 80068fe:	2200      	movcc	r2, #0
 8006900:	18a3      	adds	r3, r4, r2
 8006902:	50a7      	str	r7, [r4, r2]
 8006904:	b107      	cbz	r7, 8006908 <rshift+0x68>
 8006906:	3304      	adds	r3, #4
 8006908:	42a3      	cmp	r3, r4
 800690a:	eba3 0204 	sub.w	r2, r3, r4
 800690e:	bf08      	it	eq
 8006910:	2300      	moveq	r3, #0
 8006912:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8006916:	6102      	str	r2, [r0, #16]
 8006918:	bf08      	it	eq
 800691a:	6143      	streq	r3, [r0, #20]
 800691c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006920:	f8dc c000 	ldr.w	ip, [ip]
 8006924:	fa0c fc08 	lsl.w	ip, ip, r8
 8006928:	ea4c 0707 	orr.w	r7, ip, r7
 800692c:	f849 7b04 	str.w	r7, [r9], #4
 8006930:	f85e 7b04 	ldr.w	r7, [lr], #4
 8006934:	40cf      	lsrs	r7, r1
 8006936:	e7d9      	b.n	80068ec <rshift+0x4c>
 8006938:	f851 cb04 	ldr.w	ip, [r1], #4
 800693c:	f847 cf04 	str.w	ip, [r7, #4]!
 8006940:	e7c2      	b.n	80068c8 <rshift+0x28>
 8006942:	4623      	mov	r3, r4
 8006944:	e7e0      	b.n	8006908 <rshift+0x68>

08006946 <__hexdig_fun>:
 8006946:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800694a:	2b09      	cmp	r3, #9
 800694c:	d802      	bhi.n	8006954 <__hexdig_fun+0xe>
 800694e:	3820      	subs	r0, #32
 8006950:	b2c0      	uxtb	r0, r0
 8006952:	4770      	bx	lr
 8006954:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8006958:	2b05      	cmp	r3, #5
 800695a:	d801      	bhi.n	8006960 <__hexdig_fun+0x1a>
 800695c:	3847      	subs	r0, #71	; 0x47
 800695e:	e7f7      	b.n	8006950 <__hexdig_fun+0xa>
 8006960:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8006964:	2b05      	cmp	r3, #5
 8006966:	d801      	bhi.n	800696c <__hexdig_fun+0x26>
 8006968:	3827      	subs	r0, #39	; 0x27
 800696a:	e7f1      	b.n	8006950 <__hexdig_fun+0xa>
 800696c:	2000      	movs	r0, #0
 800696e:	4770      	bx	lr

08006970 <__gethex>:
 8006970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006974:	b08b      	sub	sp, #44	; 0x2c
 8006976:	9305      	str	r3, [sp, #20]
 8006978:	4bb2      	ldr	r3, [pc, #712]	; (8006c44 <__gethex+0x2d4>)
 800697a:	9002      	str	r0, [sp, #8]
 800697c:	681b      	ldr	r3, [r3, #0]
 800697e:	468b      	mov	fp, r1
 8006980:	4618      	mov	r0, r3
 8006982:	4690      	mov	r8, r2
 8006984:	9303      	str	r3, [sp, #12]
 8006986:	f7f9 fbed 	bl	8000164 <strlen>
 800698a:	4682      	mov	sl, r0
 800698c:	9b03      	ldr	r3, [sp, #12]
 800698e:	f8db 2000 	ldr.w	r2, [fp]
 8006992:	4403      	add	r3, r0
 8006994:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8006998:	9306      	str	r3, [sp, #24]
 800699a:	1c93      	adds	r3, r2, #2
 800699c:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 80069a0:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 80069a4:	32fe      	adds	r2, #254	; 0xfe
 80069a6:	18d1      	adds	r1, r2, r3
 80069a8:	461f      	mov	r7, r3
 80069aa:	f813 0b01 	ldrb.w	r0, [r3], #1
 80069ae:	9101      	str	r1, [sp, #4]
 80069b0:	2830      	cmp	r0, #48	; 0x30
 80069b2:	d0f8      	beq.n	80069a6 <__gethex+0x36>
 80069b4:	f7ff ffc7 	bl	8006946 <__hexdig_fun>
 80069b8:	4604      	mov	r4, r0
 80069ba:	2800      	cmp	r0, #0
 80069bc:	d13a      	bne.n	8006a34 <__gethex+0xc4>
 80069be:	4652      	mov	r2, sl
 80069c0:	4638      	mov	r0, r7
 80069c2:	9903      	ldr	r1, [sp, #12]
 80069c4:	f001 fc1e 	bl	8008204 <strncmp>
 80069c8:	4605      	mov	r5, r0
 80069ca:	2800      	cmp	r0, #0
 80069cc:	d166      	bne.n	8006a9c <__gethex+0x12c>
 80069ce:	f817 000a 	ldrb.w	r0, [r7, sl]
 80069d2:	eb07 060a 	add.w	r6, r7, sl
 80069d6:	f7ff ffb6 	bl	8006946 <__hexdig_fun>
 80069da:	2800      	cmp	r0, #0
 80069dc:	d060      	beq.n	8006aa0 <__gethex+0x130>
 80069de:	4633      	mov	r3, r6
 80069e0:	7818      	ldrb	r0, [r3, #0]
 80069e2:	461f      	mov	r7, r3
 80069e4:	2830      	cmp	r0, #48	; 0x30
 80069e6:	f103 0301 	add.w	r3, r3, #1
 80069ea:	d0f9      	beq.n	80069e0 <__gethex+0x70>
 80069ec:	f7ff ffab 	bl	8006946 <__hexdig_fun>
 80069f0:	2301      	movs	r3, #1
 80069f2:	fab0 f480 	clz	r4, r0
 80069f6:	4635      	mov	r5, r6
 80069f8:	0964      	lsrs	r4, r4, #5
 80069fa:	9301      	str	r3, [sp, #4]
 80069fc:	463a      	mov	r2, r7
 80069fe:	4616      	mov	r6, r2
 8006a00:	7830      	ldrb	r0, [r6, #0]
 8006a02:	3201      	adds	r2, #1
 8006a04:	f7ff ff9f 	bl	8006946 <__hexdig_fun>
 8006a08:	2800      	cmp	r0, #0
 8006a0a:	d1f8      	bne.n	80069fe <__gethex+0x8e>
 8006a0c:	4652      	mov	r2, sl
 8006a0e:	4630      	mov	r0, r6
 8006a10:	9903      	ldr	r1, [sp, #12]
 8006a12:	f001 fbf7 	bl	8008204 <strncmp>
 8006a16:	b980      	cbnz	r0, 8006a3a <__gethex+0xca>
 8006a18:	b94d      	cbnz	r5, 8006a2e <__gethex+0xbe>
 8006a1a:	eb06 050a 	add.w	r5, r6, sl
 8006a1e:	462a      	mov	r2, r5
 8006a20:	4616      	mov	r6, r2
 8006a22:	7830      	ldrb	r0, [r6, #0]
 8006a24:	3201      	adds	r2, #1
 8006a26:	f7ff ff8e 	bl	8006946 <__hexdig_fun>
 8006a2a:	2800      	cmp	r0, #0
 8006a2c:	d1f8      	bne.n	8006a20 <__gethex+0xb0>
 8006a2e:	1bad      	subs	r5, r5, r6
 8006a30:	00ad      	lsls	r5, r5, #2
 8006a32:	e004      	b.n	8006a3e <__gethex+0xce>
 8006a34:	2400      	movs	r4, #0
 8006a36:	4625      	mov	r5, r4
 8006a38:	e7e0      	b.n	80069fc <__gethex+0x8c>
 8006a3a:	2d00      	cmp	r5, #0
 8006a3c:	d1f7      	bne.n	8006a2e <__gethex+0xbe>
 8006a3e:	7833      	ldrb	r3, [r6, #0]
 8006a40:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8006a44:	2b50      	cmp	r3, #80	; 0x50
 8006a46:	d139      	bne.n	8006abc <__gethex+0x14c>
 8006a48:	7873      	ldrb	r3, [r6, #1]
 8006a4a:	2b2b      	cmp	r3, #43	; 0x2b
 8006a4c:	d02a      	beq.n	8006aa4 <__gethex+0x134>
 8006a4e:	2b2d      	cmp	r3, #45	; 0x2d
 8006a50:	d02c      	beq.n	8006aac <__gethex+0x13c>
 8006a52:	f04f 0900 	mov.w	r9, #0
 8006a56:	1c71      	adds	r1, r6, #1
 8006a58:	7808      	ldrb	r0, [r1, #0]
 8006a5a:	f7ff ff74 	bl	8006946 <__hexdig_fun>
 8006a5e:	1e43      	subs	r3, r0, #1
 8006a60:	b2db      	uxtb	r3, r3
 8006a62:	2b18      	cmp	r3, #24
 8006a64:	d82a      	bhi.n	8006abc <__gethex+0x14c>
 8006a66:	f1a0 0210 	sub.w	r2, r0, #16
 8006a6a:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8006a6e:	f7ff ff6a 	bl	8006946 <__hexdig_fun>
 8006a72:	1e43      	subs	r3, r0, #1
 8006a74:	b2db      	uxtb	r3, r3
 8006a76:	2b18      	cmp	r3, #24
 8006a78:	d91b      	bls.n	8006ab2 <__gethex+0x142>
 8006a7a:	f1b9 0f00 	cmp.w	r9, #0
 8006a7e:	d000      	beq.n	8006a82 <__gethex+0x112>
 8006a80:	4252      	negs	r2, r2
 8006a82:	4415      	add	r5, r2
 8006a84:	f8cb 1000 	str.w	r1, [fp]
 8006a88:	b1d4      	cbz	r4, 8006ac0 <__gethex+0x150>
 8006a8a:	9b01      	ldr	r3, [sp, #4]
 8006a8c:	2b00      	cmp	r3, #0
 8006a8e:	bf14      	ite	ne
 8006a90:	2700      	movne	r7, #0
 8006a92:	2706      	moveq	r7, #6
 8006a94:	4638      	mov	r0, r7
 8006a96:	b00b      	add	sp, #44	; 0x2c
 8006a98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a9c:	463e      	mov	r6, r7
 8006a9e:	4625      	mov	r5, r4
 8006aa0:	2401      	movs	r4, #1
 8006aa2:	e7cc      	b.n	8006a3e <__gethex+0xce>
 8006aa4:	f04f 0900 	mov.w	r9, #0
 8006aa8:	1cb1      	adds	r1, r6, #2
 8006aaa:	e7d5      	b.n	8006a58 <__gethex+0xe8>
 8006aac:	f04f 0901 	mov.w	r9, #1
 8006ab0:	e7fa      	b.n	8006aa8 <__gethex+0x138>
 8006ab2:	230a      	movs	r3, #10
 8006ab4:	fb03 0202 	mla	r2, r3, r2, r0
 8006ab8:	3a10      	subs	r2, #16
 8006aba:	e7d6      	b.n	8006a6a <__gethex+0xfa>
 8006abc:	4631      	mov	r1, r6
 8006abe:	e7e1      	b.n	8006a84 <__gethex+0x114>
 8006ac0:	4621      	mov	r1, r4
 8006ac2:	1bf3      	subs	r3, r6, r7
 8006ac4:	3b01      	subs	r3, #1
 8006ac6:	2b07      	cmp	r3, #7
 8006ac8:	dc0a      	bgt.n	8006ae0 <__gethex+0x170>
 8006aca:	9802      	ldr	r0, [sp, #8]
 8006acc:	f000 fa7a 	bl	8006fc4 <_Balloc>
 8006ad0:	4604      	mov	r4, r0
 8006ad2:	b940      	cbnz	r0, 8006ae6 <__gethex+0x176>
 8006ad4:	4602      	mov	r2, r0
 8006ad6:	21de      	movs	r1, #222	; 0xde
 8006ad8:	4b5b      	ldr	r3, [pc, #364]	; (8006c48 <__gethex+0x2d8>)
 8006ada:	485c      	ldr	r0, [pc, #368]	; (8006c4c <__gethex+0x2dc>)
 8006adc:	f7ff feb0 	bl	8006840 <__assert_func>
 8006ae0:	3101      	adds	r1, #1
 8006ae2:	105b      	asrs	r3, r3, #1
 8006ae4:	e7ef      	b.n	8006ac6 <__gethex+0x156>
 8006ae6:	f04f 0b00 	mov.w	fp, #0
 8006aea:	f100 0914 	add.w	r9, r0, #20
 8006aee:	f1ca 0301 	rsb	r3, sl, #1
 8006af2:	f8cd 9010 	str.w	r9, [sp, #16]
 8006af6:	f8cd b004 	str.w	fp, [sp, #4]
 8006afa:	9308      	str	r3, [sp, #32]
 8006afc:	42b7      	cmp	r7, r6
 8006afe:	d33f      	bcc.n	8006b80 <__gethex+0x210>
 8006b00:	9f04      	ldr	r7, [sp, #16]
 8006b02:	9b01      	ldr	r3, [sp, #4]
 8006b04:	f847 3b04 	str.w	r3, [r7], #4
 8006b08:	eba7 0709 	sub.w	r7, r7, r9
 8006b0c:	10bf      	asrs	r7, r7, #2
 8006b0e:	6127      	str	r7, [r4, #16]
 8006b10:	4618      	mov	r0, r3
 8006b12:	f000 fb49 	bl	80071a8 <__hi0bits>
 8006b16:	017f      	lsls	r7, r7, #5
 8006b18:	f8d8 6000 	ldr.w	r6, [r8]
 8006b1c:	1a3f      	subs	r7, r7, r0
 8006b1e:	42b7      	cmp	r7, r6
 8006b20:	dd62      	ble.n	8006be8 <__gethex+0x278>
 8006b22:	1bbf      	subs	r7, r7, r6
 8006b24:	4639      	mov	r1, r7
 8006b26:	4620      	mov	r0, r4
 8006b28:	f000 fee3 	bl	80078f2 <__any_on>
 8006b2c:	4682      	mov	sl, r0
 8006b2e:	b1a8      	cbz	r0, 8006b5c <__gethex+0x1ec>
 8006b30:	f04f 0a01 	mov.w	sl, #1
 8006b34:	1e7b      	subs	r3, r7, #1
 8006b36:	1159      	asrs	r1, r3, #5
 8006b38:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8006b3c:	f003 021f 	and.w	r2, r3, #31
 8006b40:	fa0a f202 	lsl.w	r2, sl, r2
 8006b44:	420a      	tst	r2, r1
 8006b46:	d009      	beq.n	8006b5c <__gethex+0x1ec>
 8006b48:	4553      	cmp	r3, sl
 8006b4a:	dd05      	ble.n	8006b58 <__gethex+0x1e8>
 8006b4c:	4620      	mov	r0, r4
 8006b4e:	1eb9      	subs	r1, r7, #2
 8006b50:	f000 fecf 	bl	80078f2 <__any_on>
 8006b54:	2800      	cmp	r0, #0
 8006b56:	d144      	bne.n	8006be2 <__gethex+0x272>
 8006b58:	f04f 0a02 	mov.w	sl, #2
 8006b5c:	4639      	mov	r1, r7
 8006b5e:	4620      	mov	r0, r4
 8006b60:	f7ff fe9e 	bl	80068a0 <rshift>
 8006b64:	443d      	add	r5, r7
 8006b66:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8006b6a:	42ab      	cmp	r3, r5
 8006b6c:	da4a      	bge.n	8006c04 <__gethex+0x294>
 8006b6e:	4621      	mov	r1, r4
 8006b70:	9802      	ldr	r0, [sp, #8]
 8006b72:	f000 fa67 	bl	8007044 <_Bfree>
 8006b76:	2300      	movs	r3, #0
 8006b78:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006b7a:	27a3      	movs	r7, #163	; 0xa3
 8006b7c:	6013      	str	r3, [r2, #0]
 8006b7e:	e789      	b.n	8006a94 <__gethex+0x124>
 8006b80:	1e73      	subs	r3, r6, #1
 8006b82:	9a06      	ldr	r2, [sp, #24]
 8006b84:	9307      	str	r3, [sp, #28]
 8006b86:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8006b8a:	4293      	cmp	r3, r2
 8006b8c:	d019      	beq.n	8006bc2 <__gethex+0x252>
 8006b8e:	f1bb 0f20 	cmp.w	fp, #32
 8006b92:	d107      	bne.n	8006ba4 <__gethex+0x234>
 8006b94:	9b04      	ldr	r3, [sp, #16]
 8006b96:	9a01      	ldr	r2, [sp, #4]
 8006b98:	f843 2b04 	str.w	r2, [r3], #4
 8006b9c:	9304      	str	r3, [sp, #16]
 8006b9e:	2300      	movs	r3, #0
 8006ba0:	469b      	mov	fp, r3
 8006ba2:	9301      	str	r3, [sp, #4]
 8006ba4:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 8006ba8:	f7ff fecd 	bl	8006946 <__hexdig_fun>
 8006bac:	9b01      	ldr	r3, [sp, #4]
 8006bae:	f000 000f 	and.w	r0, r0, #15
 8006bb2:	fa00 f00b 	lsl.w	r0, r0, fp
 8006bb6:	4303      	orrs	r3, r0
 8006bb8:	9301      	str	r3, [sp, #4]
 8006bba:	f10b 0b04 	add.w	fp, fp, #4
 8006bbe:	9b07      	ldr	r3, [sp, #28]
 8006bc0:	e00d      	b.n	8006bde <__gethex+0x26e>
 8006bc2:	9a08      	ldr	r2, [sp, #32]
 8006bc4:	1e73      	subs	r3, r6, #1
 8006bc6:	4413      	add	r3, r2
 8006bc8:	42bb      	cmp	r3, r7
 8006bca:	d3e0      	bcc.n	8006b8e <__gethex+0x21e>
 8006bcc:	4618      	mov	r0, r3
 8006bce:	4652      	mov	r2, sl
 8006bd0:	9903      	ldr	r1, [sp, #12]
 8006bd2:	9309      	str	r3, [sp, #36]	; 0x24
 8006bd4:	f001 fb16 	bl	8008204 <strncmp>
 8006bd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006bda:	2800      	cmp	r0, #0
 8006bdc:	d1d7      	bne.n	8006b8e <__gethex+0x21e>
 8006bde:	461e      	mov	r6, r3
 8006be0:	e78c      	b.n	8006afc <__gethex+0x18c>
 8006be2:	f04f 0a03 	mov.w	sl, #3
 8006be6:	e7b9      	b.n	8006b5c <__gethex+0x1ec>
 8006be8:	da09      	bge.n	8006bfe <__gethex+0x28e>
 8006bea:	1bf7      	subs	r7, r6, r7
 8006bec:	4621      	mov	r1, r4
 8006bee:	463a      	mov	r2, r7
 8006bf0:	9802      	ldr	r0, [sp, #8]
 8006bf2:	f000 fc3f 	bl	8007474 <__lshift>
 8006bf6:	4604      	mov	r4, r0
 8006bf8:	1bed      	subs	r5, r5, r7
 8006bfa:	f100 0914 	add.w	r9, r0, #20
 8006bfe:	f04f 0a00 	mov.w	sl, #0
 8006c02:	e7b0      	b.n	8006b66 <__gethex+0x1f6>
 8006c04:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8006c08:	42a8      	cmp	r0, r5
 8006c0a:	dd72      	ble.n	8006cf2 <__gethex+0x382>
 8006c0c:	1b45      	subs	r5, r0, r5
 8006c0e:	42ae      	cmp	r6, r5
 8006c10:	dc35      	bgt.n	8006c7e <__gethex+0x30e>
 8006c12:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006c16:	2b02      	cmp	r3, #2
 8006c18:	d029      	beq.n	8006c6e <__gethex+0x2fe>
 8006c1a:	2b03      	cmp	r3, #3
 8006c1c:	d02b      	beq.n	8006c76 <__gethex+0x306>
 8006c1e:	2b01      	cmp	r3, #1
 8006c20:	d11c      	bne.n	8006c5c <__gethex+0x2ec>
 8006c22:	42ae      	cmp	r6, r5
 8006c24:	d11a      	bne.n	8006c5c <__gethex+0x2ec>
 8006c26:	2e01      	cmp	r6, #1
 8006c28:	d112      	bne.n	8006c50 <__gethex+0x2e0>
 8006c2a:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8006c2e:	9a05      	ldr	r2, [sp, #20]
 8006c30:	2762      	movs	r7, #98	; 0x62
 8006c32:	6013      	str	r3, [r2, #0]
 8006c34:	2301      	movs	r3, #1
 8006c36:	6123      	str	r3, [r4, #16]
 8006c38:	f8c9 3000 	str.w	r3, [r9]
 8006c3c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006c3e:	601c      	str	r4, [r3, #0]
 8006c40:	e728      	b.n	8006a94 <__gethex+0x124>
 8006c42:	bf00      	nop
 8006c44:	08008ef0 	.word	0x08008ef0
 8006c48:	08008e79 	.word	0x08008e79
 8006c4c:	08008e8a 	.word	0x08008e8a
 8006c50:	4620      	mov	r0, r4
 8006c52:	1e71      	subs	r1, r6, #1
 8006c54:	f000 fe4d 	bl	80078f2 <__any_on>
 8006c58:	2800      	cmp	r0, #0
 8006c5a:	d1e6      	bne.n	8006c2a <__gethex+0x2ba>
 8006c5c:	4621      	mov	r1, r4
 8006c5e:	9802      	ldr	r0, [sp, #8]
 8006c60:	f000 f9f0 	bl	8007044 <_Bfree>
 8006c64:	2300      	movs	r3, #0
 8006c66:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006c68:	2750      	movs	r7, #80	; 0x50
 8006c6a:	6013      	str	r3, [r2, #0]
 8006c6c:	e712      	b.n	8006a94 <__gethex+0x124>
 8006c6e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006c70:	2b00      	cmp	r3, #0
 8006c72:	d1f3      	bne.n	8006c5c <__gethex+0x2ec>
 8006c74:	e7d9      	b.n	8006c2a <__gethex+0x2ba>
 8006c76:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006c78:	2b00      	cmp	r3, #0
 8006c7a:	d1d6      	bne.n	8006c2a <__gethex+0x2ba>
 8006c7c:	e7ee      	b.n	8006c5c <__gethex+0x2ec>
 8006c7e:	1e6f      	subs	r7, r5, #1
 8006c80:	f1ba 0f00 	cmp.w	sl, #0
 8006c84:	d132      	bne.n	8006cec <__gethex+0x37c>
 8006c86:	b127      	cbz	r7, 8006c92 <__gethex+0x322>
 8006c88:	4639      	mov	r1, r7
 8006c8a:	4620      	mov	r0, r4
 8006c8c:	f000 fe31 	bl	80078f2 <__any_on>
 8006c90:	4682      	mov	sl, r0
 8006c92:	2101      	movs	r1, #1
 8006c94:	117b      	asrs	r3, r7, #5
 8006c96:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8006c9a:	f007 071f 	and.w	r7, r7, #31
 8006c9e:	fa01 f707 	lsl.w	r7, r1, r7
 8006ca2:	421f      	tst	r7, r3
 8006ca4:	f04f 0702 	mov.w	r7, #2
 8006ca8:	4629      	mov	r1, r5
 8006caa:	4620      	mov	r0, r4
 8006cac:	bf18      	it	ne
 8006cae:	f04a 0a02 	orrne.w	sl, sl, #2
 8006cb2:	1b76      	subs	r6, r6, r5
 8006cb4:	f7ff fdf4 	bl	80068a0 <rshift>
 8006cb8:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8006cbc:	f1ba 0f00 	cmp.w	sl, #0
 8006cc0:	d048      	beq.n	8006d54 <__gethex+0x3e4>
 8006cc2:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006cc6:	2b02      	cmp	r3, #2
 8006cc8:	d015      	beq.n	8006cf6 <__gethex+0x386>
 8006cca:	2b03      	cmp	r3, #3
 8006ccc:	d017      	beq.n	8006cfe <__gethex+0x38e>
 8006cce:	2b01      	cmp	r3, #1
 8006cd0:	d109      	bne.n	8006ce6 <__gethex+0x376>
 8006cd2:	f01a 0f02 	tst.w	sl, #2
 8006cd6:	d006      	beq.n	8006ce6 <__gethex+0x376>
 8006cd8:	f8d9 0000 	ldr.w	r0, [r9]
 8006cdc:	ea4a 0a00 	orr.w	sl, sl, r0
 8006ce0:	f01a 0f01 	tst.w	sl, #1
 8006ce4:	d10e      	bne.n	8006d04 <__gethex+0x394>
 8006ce6:	f047 0710 	orr.w	r7, r7, #16
 8006cea:	e033      	b.n	8006d54 <__gethex+0x3e4>
 8006cec:	f04f 0a01 	mov.w	sl, #1
 8006cf0:	e7cf      	b.n	8006c92 <__gethex+0x322>
 8006cf2:	2701      	movs	r7, #1
 8006cf4:	e7e2      	b.n	8006cbc <__gethex+0x34c>
 8006cf6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006cf8:	f1c3 0301 	rsb	r3, r3, #1
 8006cfc:	9315      	str	r3, [sp, #84]	; 0x54
 8006cfe:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006d00:	2b00      	cmp	r3, #0
 8006d02:	d0f0      	beq.n	8006ce6 <__gethex+0x376>
 8006d04:	f04f 0c00 	mov.w	ip, #0
 8006d08:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8006d0c:	f104 0314 	add.w	r3, r4, #20
 8006d10:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8006d14:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8006d18:	4618      	mov	r0, r3
 8006d1a:	f853 2b04 	ldr.w	r2, [r3], #4
 8006d1e:	f1b2 3fff 	cmp.w	r2, #4294967295
 8006d22:	d01c      	beq.n	8006d5e <__gethex+0x3ee>
 8006d24:	3201      	adds	r2, #1
 8006d26:	6002      	str	r2, [r0, #0]
 8006d28:	2f02      	cmp	r7, #2
 8006d2a:	f104 0314 	add.w	r3, r4, #20
 8006d2e:	d13d      	bne.n	8006dac <__gethex+0x43c>
 8006d30:	f8d8 2000 	ldr.w	r2, [r8]
 8006d34:	3a01      	subs	r2, #1
 8006d36:	42b2      	cmp	r2, r6
 8006d38:	d10a      	bne.n	8006d50 <__gethex+0x3e0>
 8006d3a:	2201      	movs	r2, #1
 8006d3c:	1171      	asrs	r1, r6, #5
 8006d3e:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8006d42:	f006 061f 	and.w	r6, r6, #31
 8006d46:	fa02 f606 	lsl.w	r6, r2, r6
 8006d4a:	421e      	tst	r6, r3
 8006d4c:	bf18      	it	ne
 8006d4e:	4617      	movne	r7, r2
 8006d50:	f047 0720 	orr.w	r7, r7, #32
 8006d54:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006d56:	601c      	str	r4, [r3, #0]
 8006d58:	9b05      	ldr	r3, [sp, #20]
 8006d5a:	601d      	str	r5, [r3, #0]
 8006d5c:	e69a      	b.n	8006a94 <__gethex+0x124>
 8006d5e:	4299      	cmp	r1, r3
 8006d60:	f843 cc04 	str.w	ip, [r3, #-4]
 8006d64:	d8d8      	bhi.n	8006d18 <__gethex+0x3a8>
 8006d66:	68a3      	ldr	r3, [r4, #8]
 8006d68:	459b      	cmp	fp, r3
 8006d6a:	db17      	blt.n	8006d9c <__gethex+0x42c>
 8006d6c:	6861      	ldr	r1, [r4, #4]
 8006d6e:	9802      	ldr	r0, [sp, #8]
 8006d70:	3101      	adds	r1, #1
 8006d72:	f000 f927 	bl	8006fc4 <_Balloc>
 8006d76:	4681      	mov	r9, r0
 8006d78:	b918      	cbnz	r0, 8006d82 <__gethex+0x412>
 8006d7a:	4602      	mov	r2, r0
 8006d7c:	2184      	movs	r1, #132	; 0x84
 8006d7e:	4b19      	ldr	r3, [pc, #100]	; (8006de4 <__gethex+0x474>)
 8006d80:	e6ab      	b.n	8006ada <__gethex+0x16a>
 8006d82:	6922      	ldr	r2, [r4, #16]
 8006d84:	f104 010c 	add.w	r1, r4, #12
 8006d88:	3202      	adds	r2, #2
 8006d8a:	0092      	lsls	r2, r2, #2
 8006d8c:	300c      	adds	r0, #12
 8006d8e:	f000 f8ff 	bl	8006f90 <memcpy>
 8006d92:	4621      	mov	r1, r4
 8006d94:	9802      	ldr	r0, [sp, #8]
 8006d96:	f000 f955 	bl	8007044 <_Bfree>
 8006d9a:	464c      	mov	r4, r9
 8006d9c:	6923      	ldr	r3, [r4, #16]
 8006d9e:	1c5a      	adds	r2, r3, #1
 8006da0:	6122      	str	r2, [r4, #16]
 8006da2:	2201      	movs	r2, #1
 8006da4:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006da8:	615a      	str	r2, [r3, #20]
 8006daa:	e7bd      	b.n	8006d28 <__gethex+0x3b8>
 8006dac:	6922      	ldr	r2, [r4, #16]
 8006dae:	455a      	cmp	r2, fp
 8006db0:	dd0b      	ble.n	8006dca <__gethex+0x45a>
 8006db2:	2101      	movs	r1, #1
 8006db4:	4620      	mov	r0, r4
 8006db6:	f7ff fd73 	bl	80068a0 <rshift>
 8006dba:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8006dbe:	3501      	adds	r5, #1
 8006dc0:	42ab      	cmp	r3, r5
 8006dc2:	f6ff aed4 	blt.w	8006b6e <__gethex+0x1fe>
 8006dc6:	2701      	movs	r7, #1
 8006dc8:	e7c2      	b.n	8006d50 <__gethex+0x3e0>
 8006dca:	f016 061f 	ands.w	r6, r6, #31
 8006dce:	d0fa      	beq.n	8006dc6 <__gethex+0x456>
 8006dd0:	4453      	add	r3, sl
 8006dd2:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8006dd6:	f000 f9e7 	bl	80071a8 <__hi0bits>
 8006dda:	f1c6 0620 	rsb	r6, r6, #32
 8006dde:	42b0      	cmp	r0, r6
 8006de0:	dbe7      	blt.n	8006db2 <__gethex+0x442>
 8006de2:	e7f0      	b.n	8006dc6 <__gethex+0x456>
 8006de4:	08008e79 	.word	0x08008e79

08006de8 <L_shift>:
 8006de8:	f1c2 0208 	rsb	r2, r2, #8
 8006dec:	0092      	lsls	r2, r2, #2
 8006dee:	b570      	push	{r4, r5, r6, lr}
 8006df0:	f1c2 0620 	rsb	r6, r2, #32
 8006df4:	6843      	ldr	r3, [r0, #4]
 8006df6:	6804      	ldr	r4, [r0, #0]
 8006df8:	fa03 f506 	lsl.w	r5, r3, r6
 8006dfc:	432c      	orrs	r4, r5
 8006dfe:	40d3      	lsrs	r3, r2
 8006e00:	6004      	str	r4, [r0, #0]
 8006e02:	f840 3f04 	str.w	r3, [r0, #4]!
 8006e06:	4288      	cmp	r0, r1
 8006e08:	d3f4      	bcc.n	8006df4 <L_shift+0xc>
 8006e0a:	bd70      	pop	{r4, r5, r6, pc}

08006e0c <__match>:
 8006e0c:	b530      	push	{r4, r5, lr}
 8006e0e:	6803      	ldr	r3, [r0, #0]
 8006e10:	3301      	adds	r3, #1
 8006e12:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006e16:	b914      	cbnz	r4, 8006e1e <__match+0x12>
 8006e18:	6003      	str	r3, [r0, #0]
 8006e1a:	2001      	movs	r0, #1
 8006e1c:	bd30      	pop	{r4, r5, pc}
 8006e1e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006e22:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8006e26:	2d19      	cmp	r5, #25
 8006e28:	bf98      	it	ls
 8006e2a:	3220      	addls	r2, #32
 8006e2c:	42a2      	cmp	r2, r4
 8006e2e:	d0f0      	beq.n	8006e12 <__match+0x6>
 8006e30:	2000      	movs	r0, #0
 8006e32:	e7f3      	b.n	8006e1c <__match+0x10>

08006e34 <__hexnan>:
 8006e34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006e38:	2500      	movs	r5, #0
 8006e3a:	680b      	ldr	r3, [r1, #0]
 8006e3c:	4682      	mov	sl, r0
 8006e3e:	115e      	asrs	r6, r3, #5
 8006e40:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8006e44:	f013 031f 	ands.w	r3, r3, #31
 8006e48:	bf18      	it	ne
 8006e4a:	3604      	addne	r6, #4
 8006e4c:	1f37      	subs	r7, r6, #4
 8006e4e:	46b9      	mov	r9, r7
 8006e50:	463c      	mov	r4, r7
 8006e52:	46ab      	mov	fp, r5
 8006e54:	b087      	sub	sp, #28
 8006e56:	4690      	mov	r8, r2
 8006e58:	6802      	ldr	r2, [r0, #0]
 8006e5a:	9301      	str	r3, [sp, #4]
 8006e5c:	f846 5c04 	str.w	r5, [r6, #-4]
 8006e60:	9502      	str	r5, [sp, #8]
 8006e62:	7851      	ldrb	r1, [r2, #1]
 8006e64:	1c53      	adds	r3, r2, #1
 8006e66:	9303      	str	r3, [sp, #12]
 8006e68:	b341      	cbz	r1, 8006ebc <__hexnan+0x88>
 8006e6a:	4608      	mov	r0, r1
 8006e6c:	9205      	str	r2, [sp, #20]
 8006e6e:	9104      	str	r1, [sp, #16]
 8006e70:	f7ff fd69 	bl	8006946 <__hexdig_fun>
 8006e74:	2800      	cmp	r0, #0
 8006e76:	d14f      	bne.n	8006f18 <__hexnan+0xe4>
 8006e78:	9904      	ldr	r1, [sp, #16]
 8006e7a:	9a05      	ldr	r2, [sp, #20]
 8006e7c:	2920      	cmp	r1, #32
 8006e7e:	d818      	bhi.n	8006eb2 <__hexnan+0x7e>
 8006e80:	9b02      	ldr	r3, [sp, #8]
 8006e82:	459b      	cmp	fp, r3
 8006e84:	dd13      	ble.n	8006eae <__hexnan+0x7a>
 8006e86:	454c      	cmp	r4, r9
 8006e88:	d206      	bcs.n	8006e98 <__hexnan+0x64>
 8006e8a:	2d07      	cmp	r5, #7
 8006e8c:	dc04      	bgt.n	8006e98 <__hexnan+0x64>
 8006e8e:	462a      	mov	r2, r5
 8006e90:	4649      	mov	r1, r9
 8006e92:	4620      	mov	r0, r4
 8006e94:	f7ff ffa8 	bl	8006de8 <L_shift>
 8006e98:	4544      	cmp	r4, r8
 8006e9a:	d950      	bls.n	8006f3e <__hexnan+0x10a>
 8006e9c:	2300      	movs	r3, #0
 8006e9e:	f1a4 0904 	sub.w	r9, r4, #4
 8006ea2:	f844 3c04 	str.w	r3, [r4, #-4]
 8006ea6:	461d      	mov	r5, r3
 8006ea8:	464c      	mov	r4, r9
 8006eaa:	f8cd b008 	str.w	fp, [sp, #8]
 8006eae:	9a03      	ldr	r2, [sp, #12]
 8006eb0:	e7d7      	b.n	8006e62 <__hexnan+0x2e>
 8006eb2:	2929      	cmp	r1, #41	; 0x29
 8006eb4:	d156      	bne.n	8006f64 <__hexnan+0x130>
 8006eb6:	3202      	adds	r2, #2
 8006eb8:	f8ca 2000 	str.w	r2, [sl]
 8006ebc:	f1bb 0f00 	cmp.w	fp, #0
 8006ec0:	d050      	beq.n	8006f64 <__hexnan+0x130>
 8006ec2:	454c      	cmp	r4, r9
 8006ec4:	d206      	bcs.n	8006ed4 <__hexnan+0xa0>
 8006ec6:	2d07      	cmp	r5, #7
 8006ec8:	dc04      	bgt.n	8006ed4 <__hexnan+0xa0>
 8006eca:	462a      	mov	r2, r5
 8006ecc:	4649      	mov	r1, r9
 8006ece:	4620      	mov	r0, r4
 8006ed0:	f7ff ff8a 	bl	8006de8 <L_shift>
 8006ed4:	4544      	cmp	r4, r8
 8006ed6:	d934      	bls.n	8006f42 <__hexnan+0x10e>
 8006ed8:	4623      	mov	r3, r4
 8006eda:	f1a8 0204 	sub.w	r2, r8, #4
 8006ede:	f853 1b04 	ldr.w	r1, [r3], #4
 8006ee2:	429f      	cmp	r7, r3
 8006ee4:	f842 1f04 	str.w	r1, [r2, #4]!
 8006ee8:	d2f9      	bcs.n	8006ede <__hexnan+0xaa>
 8006eea:	1b3b      	subs	r3, r7, r4
 8006eec:	f023 0303 	bic.w	r3, r3, #3
 8006ef0:	3304      	adds	r3, #4
 8006ef2:	3401      	adds	r4, #1
 8006ef4:	3e03      	subs	r6, #3
 8006ef6:	42b4      	cmp	r4, r6
 8006ef8:	bf88      	it	hi
 8006efa:	2304      	movhi	r3, #4
 8006efc:	2200      	movs	r2, #0
 8006efe:	4443      	add	r3, r8
 8006f00:	f843 2b04 	str.w	r2, [r3], #4
 8006f04:	429f      	cmp	r7, r3
 8006f06:	d2fb      	bcs.n	8006f00 <__hexnan+0xcc>
 8006f08:	683b      	ldr	r3, [r7, #0]
 8006f0a:	b91b      	cbnz	r3, 8006f14 <__hexnan+0xe0>
 8006f0c:	4547      	cmp	r7, r8
 8006f0e:	d127      	bne.n	8006f60 <__hexnan+0x12c>
 8006f10:	2301      	movs	r3, #1
 8006f12:	603b      	str	r3, [r7, #0]
 8006f14:	2005      	movs	r0, #5
 8006f16:	e026      	b.n	8006f66 <__hexnan+0x132>
 8006f18:	3501      	adds	r5, #1
 8006f1a:	2d08      	cmp	r5, #8
 8006f1c:	f10b 0b01 	add.w	fp, fp, #1
 8006f20:	dd06      	ble.n	8006f30 <__hexnan+0xfc>
 8006f22:	4544      	cmp	r4, r8
 8006f24:	d9c3      	bls.n	8006eae <__hexnan+0x7a>
 8006f26:	2300      	movs	r3, #0
 8006f28:	2501      	movs	r5, #1
 8006f2a:	f844 3c04 	str.w	r3, [r4, #-4]
 8006f2e:	3c04      	subs	r4, #4
 8006f30:	6822      	ldr	r2, [r4, #0]
 8006f32:	f000 000f 	and.w	r0, r0, #15
 8006f36:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 8006f3a:	6022      	str	r2, [r4, #0]
 8006f3c:	e7b7      	b.n	8006eae <__hexnan+0x7a>
 8006f3e:	2508      	movs	r5, #8
 8006f40:	e7b5      	b.n	8006eae <__hexnan+0x7a>
 8006f42:	9b01      	ldr	r3, [sp, #4]
 8006f44:	2b00      	cmp	r3, #0
 8006f46:	d0df      	beq.n	8006f08 <__hexnan+0xd4>
 8006f48:	f04f 32ff 	mov.w	r2, #4294967295
 8006f4c:	f1c3 0320 	rsb	r3, r3, #32
 8006f50:	fa22 f303 	lsr.w	r3, r2, r3
 8006f54:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8006f58:	401a      	ands	r2, r3
 8006f5a:	f846 2c04 	str.w	r2, [r6, #-4]
 8006f5e:	e7d3      	b.n	8006f08 <__hexnan+0xd4>
 8006f60:	3f04      	subs	r7, #4
 8006f62:	e7d1      	b.n	8006f08 <__hexnan+0xd4>
 8006f64:	2004      	movs	r0, #4
 8006f66:	b007      	add	sp, #28
 8006f68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006f6c <__ascii_mbtowc>:
 8006f6c:	b082      	sub	sp, #8
 8006f6e:	b901      	cbnz	r1, 8006f72 <__ascii_mbtowc+0x6>
 8006f70:	a901      	add	r1, sp, #4
 8006f72:	b142      	cbz	r2, 8006f86 <__ascii_mbtowc+0x1a>
 8006f74:	b14b      	cbz	r3, 8006f8a <__ascii_mbtowc+0x1e>
 8006f76:	7813      	ldrb	r3, [r2, #0]
 8006f78:	600b      	str	r3, [r1, #0]
 8006f7a:	7812      	ldrb	r2, [r2, #0]
 8006f7c:	1e10      	subs	r0, r2, #0
 8006f7e:	bf18      	it	ne
 8006f80:	2001      	movne	r0, #1
 8006f82:	b002      	add	sp, #8
 8006f84:	4770      	bx	lr
 8006f86:	4610      	mov	r0, r2
 8006f88:	e7fb      	b.n	8006f82 <__ascii_mbtowc+0x16>
 8006f8a:	f06f 0001 	mvn.w	r0, #1
 8006f8e:	e7f8      	b.n	8006f82 <__ascii_mbtowc+0x16>

08006f90 <memcpy>:
 8006f90:	440a      	add	r2, r1
 8006f92:	4291      	cmp	r1, r2
 8006f94:	f100 33ff 	add.w	r3, r0, #4294967295
 8006f98:	d100      	bne.n	8006f9c <memcpy+0xc>
 8006f9a:	4770      	bx	lr
 8006f9c:	b510      	push	{r4, lr}
 8006f9e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006fa2:	4291      	cmp	r1, r2
 8006fa4:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006fa8:	d1f9      	bne.n	8006f9e <memcpy+0xe>
 8006faa:	bd10      	pop	{r4, pc}

08006fac <__malloc_lock>:
 8006fac:	4801      	ldr	r0, [pc, #4]	; (8006fb4 <__malloc_lock+0x8>)
 8006fae:	f001 bbc7 	b.w	8008740 <__retarget_lock_acquire_recursive>
 8006fb2:	bf00      	nop
 8006fb4:	200004dc 	.word	0x200004dc

08006fb8 <__malloc_unlock>:
 8006fb8:	4801      	ldr	r0, [pc, #4]	; (8006fc0 <__malloc_unlock+0x8>)
 8006fba:	f001 bbc2 	b.w	8008742 <__retarget_lock_release_recursive>
 8006fbe:	bf00      	nop
 8006fc0:	200004dc 	.word	0x200004dc

08006fc4 <_Balloc>:
 8006fc4:	b570      	push	{r4, r5, r6, lr}
 8006fc6:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006fc8:	4604      	mov	r4, r0
 8006fca:	460d      	mov	r5, r1
 8006fcc:	b976      	cbnz	r6, 8006fec <_Balloc+0x28>
 8006fce:	2010      	movs	r0, #16
 8006fd0:	f7fe fbd4 	bl	800577c <malloc>
 8006fd4:	4602      	mov	r2, r0
 8006fd6:	6260      	str	r0, [r4, #36]	; 0x24
 8006fd8:	b920      	cbnz	r0, 8006fe4 <_Balloc+0x20>
 8006fda:	2166      	movs	r1, #102	; 0x66
 8006fdc:	4b17      	ldr	r3, [pc, #92]	; (800703c <_Balloc+0x78>)
 8006fde:	4818      	ldr	r0, [pc, #96]	; (8007040 <_Balloc+0x7c>)
 8006fe0:	f7ff fc2e 	bl	8006840 <__assert_func>
 8006fe4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006fe8:	6006      	str	r6, [r0, #0]
 8006fea:	60c6      	str	r6, [r0, #12]
 8006fec:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8006fee:	68f3      	ldr	r3, [r6, #12]
 8006ff0:	b183      	cbz	r3, 8007014 <_Balloc+0x50>
 8006ff2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006ff4:	68db      	ldr	r3, [r3, #12]
 8006ff6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006ffa:	b9b8      	cbnz	r0, 800702c <_Balloc+0x68>
 8006ffc:	2101      	movs	r1, #1
 8006ffe:	fa01 f605 	lsl.w	r6, r1, r5
 8007002:	1d72      	adds	r2, r6, #5
 8007004:	4620      	mov	r0, r4
 8007006:	0092      	lsls	r2, r2, #2
 8007008:	f000 fc94 	bl	8007934 <_calloc_r>
 800700c:	b160      	cbz	r0, 8007028 <_Balloc+0x64>
 800700e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8007012:	e00e      	b.n	8007032 <_Balloc+0x6e>
 8007014:	2221      	movs	r2, #33	; 0x21
 8007016:	2104      	movs	r1, #4
 8007018:	4620      	mov	r0, r4
 800701a:	f000 fc8b 	bl	8007934 <_calloc_r>
 800701e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007020:	60f0      	str	r0, [r6, #12]
 8007022:	68db      	ldr	r3, [r3, #12]
 8007024:	2b00      	cmp	r3, #0
 8007026:	d1e4      	bne.n	8006ff2 <_Balloc+0x2e>
 8007028:	2000      	movs	r0, #0
 800702a:	bd70      	pop	{r4, r5, r6, pc}
 800702c:	6802      	ldr	r2, [r0, #0]
 800702e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8007032:	2300      	movs	r3, #0
 8007034:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8007038:	e7f7      	b.n	800702a <_Balloc+0x66>
 800703a:	bf00      	nop
 800703c:	08008cc8 	.word	0x08008cc8
 8007040:	08008f04 	.word	0x08008f04

08007044 <_Bfree>:
 8007044:	b570      	push	{r4, r5, r6, lr}
 8007046:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8007048:	4605      	mov	r5, r0
 800704a:	460c      	mov	r4, r1
 800704c:	b976      	cbnz	r6, 800706c <_Bfree+0x28>
 800704e:	2010      	movs	r0, #16
 8007050:	f7fe fb94 	bl	800577c <malloc>
 8007054:	4602      	mov	r2, r0
 8007056:	6268      	str	r0, [r5, #36]	; 0x24
 8007058:	b920      	cbnz	r0, 8007064 <_Bfree+0x20>
 800705a:	218a      	movs	r1, #138	; 0x8a
 800705c:	4b08      	ldr	r3, [pc, #32]	; (8007080 <_Bfree+0x3c>)
 800705e:	4809      	ldr	r0, [pc, #36]	; (8007084 <_Bfree+0x40>)
 8007060:	f7ff fbee 	bl	8006840 <__assert_func>
 8007064:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8007068:	6006      	str	r6, [r0, #0]
 800706a:	60c6      	str	r6, [r0, #12]
 800706c:	b13c      	cbz	r4, 800707e <_Bfree+0x3a>
 800706e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8007070:	6862      	ldr	r2, [r4, #4]
 8007072:	68db      	ldr	r3, [r3, #12]
 8007074:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8007078:	6021      	str	r1, [r4, #0]
 800707a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800707e:	bd70      	pop	{r4, r5, r6, pc}
 8007080:	08008cc8 	.word	0x08008cc8
 8007084:	08008f04 	.word	0x08008f04

08007088 <__multadd>:
 8007088:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800708c:	4607      	mov	r7, r0
 800708e:	460c      	mov	r4, r1
 8007090:	461e      	mov	r6, r3
 8007092:	2000      	movs	r0, #0
 8007094:	690d      	ldr	r5, [r1, #16]
 8007096:	f101 0c14 	add.w	ip, r1, #20
 800709a:	f8dc 3000 	ldr.w	r3, [ip]
 800709e:	3001      	adds	r0, #1
 80070a0:	b299      	uxth	r1, r3
 80070a2:	fb02 6101 	mla	r1, r2, r1, r6
 80070a6:	0c1e      	lsrs	r6, r3, #16
 80070a8:	0c0b      	lsrs	r3, r1, #16
 80070aa:	fb02 3306 	mla	r3, r2, r6, r3
 80070ae:	b289      	uxth	r1, r1
 80070b0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80070b4:	4285      	cmp	r5, r0
 80070b6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80070ba:	f84c 1b04 	str.w	r1, [ip], #4
 80070be:	dcec      	bgt.n	800709a <__multadd+0x12>
 80070c0:	b30e      	cbz	r6, 8007106 <__multadd+0x7e>
 80070c2:	68a3      	ldr	r3, [r4, #8]
 80070c4:	42ab      	cmp	r3, r5
 80070c6:	dc19      	bgt.n	80070fc <__multadd+0x74>
 80070c8:	6861      	ldr	r1, [r4, #4]
 80070ca:	4638      	mov	r0, r7
 80070cc:	3101      	adds	r1, #1
 80070ce:	f7ff ff79 	bl	8006fc4 <_Balloc>
 80070d2:	4680      	mov	r8, r0
 80070d4:	b928      	cbnz	r0, 80070e2 <__multadd+0x5a>
 80070d6:	4602      	mov	r2, r0
 80070d8:	21b5      	movs	r1, #181	; 0xb5
 80070da:	4b0c      	ldr	r3, [pc, #48]	; (800710c <__multadd+0x84>)
 80070dc:	480c      	ldr	r0, [pc, #48]	; (8007110 <__multadd+0x88>)
 80070de:	f7ff fbaf 	bl	8006840 <__assert_func>
 80070e2:	6922      	ldr	r2, [r4, #16]
 80070e4:	f104 010c 	add.w	r1, r4, #12
 80070e8:	3202      	adds	r2, #2
 80070ea:	0092      	lsls	r2, r2, #2
 80070ec:	300c      	adds	r0, #12
 80070ee:	f7ff ff4f 	bl	8006f90 <memcpy>
 80070f2:	4621      	mov	r1, r4
 80070f4:	4638      	mov	r0, r7
 80070f6:	f7ff ffa5 	bl	8007044 <_Bfree>
 80070fa:	4644      	mov	r4, r8
 80070fc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8007100:	3501      	adds	r5, #1
 8007102:	615e      	str	r6, [r3, #20]
 8007104:	6125      	str	r5, [r4, #16]
 8007106:	4620      	mov	r0, r4
 8007108:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800710c:	08008e79 	.word	0x08008e79
 8007110:	08008f04 	.word	0x08008f04

08007114 <__s2b>:
 8007114:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007118:	4615      	mov	r5, r2
 800711a:	2209      	movs	r2, #9
 800711c:	461f      	mov	r7, r3
 800711e:	3308      	adds	r3, #8
 8007120:	460c      	mov	r4, r1
 8007122:	fb93 f3f2 	sdiv	r3, r3, r2
 8007126:	4606      	mov	r6, r0
 8007128:	2201      	movs	r2, #1
 800712a:	2100      	movs	r1, #0
 800712c:	429a      	cmp	r2, r3
 800712e:	db09      	blt.n	8007144 <__s2b+0x30>
 8007130:	4630      	mov	r0, r6
 8007132:	f7ff ff47 	bl	8006fc4 <_Balloc>
 8007136:	b940      	cbnz	r0, 800714a <__s2b+0x36>
 8007138:	4602      	mov	r2, r0
 800713a:	21ce      	movs	r1, #206	; 0xce
 800713c:	4b18      	ldr	r3, [pc, #96]	; (80071a0 <__s2b+0x8c>)
 800713e:	4819      	ldr	r0, [pc, #100]	; (80071a4 <__s2b+0x90>)
 8007140:	f7ff fb7e 	bl	8006840 <__assert_func>
 8007144:	0052      	lsls	r2, r2, #1
 8007146:	3101      	adds	r1, #1
 8007148:	e7f0      	b.n	800712c <__s2b+0x18>
 800714a:	9b08      	ldr	r3, [sp, #32]
 800714c:	2d09      	cmp	r5, #9
 800714e:	6143      	str	r3, [r0, #20]
 8007150:	f04f 0301 	mov.w	r3, #1
 8007154:	6103      	str	r3, [r0, #16]
 8007156:	dd16      	ble.n	8007186 <__s2b+0x72>
 8007158:	f104 0909 	add.w	r9, r4, #9
 800715c:	46c8      	mov	r8, r9
 800715e:	442c      	add	r4, r5
 8007160:	f818 3b01 	ldrb.w	r3, [r8], #1
 8007164:	4601      	mov	r1, r0
 8007166:	220a      	movs	r2, #10
 8007168:	4630      	mov	r0, r6
 800716a:	3b30      	subs	r3, #48	; 0x30
 800716c:	f7ff ff8c 	bl	8007088 <__multadd>
 8007170:	45a0      	cmp	r8, r4
 8007172:	d1f5      	bne.n	8007160 <__s2b+0x4c>
 8007174:	f1a5 0408 	sub.w	r4, r5, #8
 8007178:	444c      	add	r4, r9
 800717a:	1b2d      	subs	r5, r5, r4
 800717c:	1963      	adds	r3, r4, r5
 800717e:	42bb      	cmp	r3, r7
 8007180:	db04      	blt.n	800718c <__s2b+0x78>
 8007182:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007186:	2509      	movs	r5, #9
 8007188:	340a      	adds	r4, #10
 800718a:	e7f6      	b.n	800717a <__s2b+0x66>
 800718c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8007190:	4601      	mov	r1, r0
 8007192:	220a      	movs	r2, #10
 8007194:	4630      	mov	r0, r6
 8007196:	3b30      	subs	r3, #48	; 0x30
 8007198:	f7ff ff76 	bl	8007088 <__multadd>
 800719c:	e7ee      	b.n	800717c <__s2b+0x68>
 800719e:	bf00      	nop
 80071a0:	08008e79 	.word	0x08008e79
 80071a4:	08008f04 	.word	0x08008f04

080071a8 <__hi0bits>:
 80071a8:	0c02      	lsrs	r2, r0, #16
 80071aa:	0412      	lsls	r2, r2, #16
 80071ac:	4603      	mov	r3, r0
 80071ae:	b9ca      	cbnz	r2, 80071e4 <__hi0bits+0x3c>
 80071b0:	0403      	lsls	r3, r0, #16
 80071b2:	2010      	movs	r0, #16
 80071b4:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80071b8:	bf04      	itt	eq
 80071ba:	021b      	lsleq	r3, r3, #8
 80071bc:	3008      	addeq	r0, #8
 80071be:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80071c2:	bf04      	itt	eq
 80071c4:	011b      	lsleq	r3, r3, #4
 80071c6:	3004      	addeq	r0, #4
 80071c8:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80071cc:	bf04      	itt	eq
 80071ce:	009b      	lsleq	r3, r3, #2
 80071d0:	3002      	addeq	r0, #2
 80071d2:	2b00      	cmp	r3, #0
 80071d4:	db05      	blt.n	80071e2 <__hi0bits+0x3a>
 80071d6:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 80071da:	f100 0001 	add.w	r0, r0, #1
 80071de:	bf08      	it	eq
 80071e0:	2020      	moveq	r0, #32
 80071e2:	4770      	bx	lr
 80071e4:	2000      	movs	r0, #0
 80071e6:	e7e5      	b.n	80071b4 <__hi0bits+0xc>

080071e8 <__lo0bits>:
 80071e8:	6803      	ldr	r3, [r0, #0]
 80071ea:	4602      	mov	r2, r0
 80071ec:	f013 0007 	ands.w	r0, r3, #7
 80071f0:	d00b      	beq.n	800720a <__lo0bits+0x22>
 80071f2:	07d9      	lsls	r1, r3, #31
 80071f4:	d421      	bmi.n	800723a <__lo0bits+0x52>
 80071f6:	0798      	lsls	r0, r3, #30
 80071f8:	bf49      	itett	mi
 80071fa:	085b      	lsrmi	r3, r3, #1
 80071fc:	089b      	lsrpl	r3, r3, #2
 80071fe:	2001      	movmi	r0, #1
 8007200:	6013      	strmi	r3, [r2, #0]
 8007202:	bf5c      	itt	pl
 8007204:	2002      	movpl	r0, #2
 8007206:	6013      	strpl	r3, [r2, #0]
 8007208:	4770      	bx	lr
 800720a:	b299      	uxth	r1, r3
 800720c:	b909      	cbnz	r1, 8007212 <__lo0bits+0x2a>
 800720e:	2010      	movs	r0, #16
 8007210:	0c1b      	lsrs	r3, r3, #16
 8007212:	b2d9      	uxtb	r1, r3
 8007214:	b909      	cbnz	r1, 800721a <__lo0bits+0x32>
 8007216:	3008      	adds	r0, #8
 8007218:	0a1b      	lsrs	r3, r3, #8
 800721a:	0719      	lsls	r1, r3, #28
 800721c:	bf04      	itt	eq
 800721e:	091b      	lsreq	r3, r3, #4
 8007220:	3004      	addeq	r0, #4
 8007222:	0799      	lsls	r1, r3, #30
 8007224:	bf04      	itt	eq
 8007226:	089b      	lsreq	r3, r3, #2
 8007228:	3002      	addeq	r0, #2
 800722a:	07d9      	lsls	r1, r3, #31
 800722c:	d403      	bmi.n	8007236 <__lo0bits+0x4e>
 800722e:	085b      	lsrs	r3, r3, #1
 8007230:	f100 0001 	add.w	r0, r0, #1
 8007234:	d003      	beq.n	800723e <__lo0bits+0x56>
 8007236:	6013      	str	r3, [r2, #0]
 8007238:	4770      	bx	lr
 800723a:	2000      	movs	r0, #0
 800723c:	4770      	bx	lr
 800723e:	2020      	movs	r0, #32
 8007240:	4770      	bx	lr
	...

08007244 <__i2b>:
 8007244:	b510      	push	{r4, lr}
 8007246:	460c      	mov	r4, r1
 8007248:	2101      	movs	r1, #1
 800724a:	f7ff febb 	bl	8006fc4 <_Balloc>
 800724e:	4602      	mov	r2, r0
 8007250:	b928      	cbnz	r0, 800725e <__i2b+0x1a>
 8007252:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8007256:	4b04      	ldr	r3, [pc, #16]	; (8007268 <__i2b+0x24>)
 8007258:	4804      	ldr	r0, [pc, #16]	; (800726c <__i2b+0x28>)
 800725a:	f7ff faf1 	bl	8006840 <__assert_func>
 800725e:	2301      	movs	r3, #1
 8007260:	6144      	str	r4, [r0, #20]
 8007262:	6103      	str	r3, [r0, #16]
 8007264:	bd10      	pop	{r4, pc}
 8007266:	bf00      	nop
 8007268:	08008e79 	.word	0x08008e79
 800726c:	08008f04 	.word	0x08008f04

08007270 <__multiply>:
 8007270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007274:	4691      	mov	r9, r2
 8007276:	690a      	ldr	r2, [r1, #16]
 8007278:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800727c:	460c      	mov	r4, r1
 800727e:	429a      	cmp	r2, r3
 8007280:	bfbe      	ittt	lt
 8007282:	460b      	movlt	r3, r1
 8007284:	464c      	movlt	r4, r9
 8007286:	4699      	movlt	r9, r3
 8007288:	6927      	ldr	r7, [r4, #16]
 800728a:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800728e:	68a3      	ldr	r3, [r4, #8]
 8007290:	6861      	ldr	r1, [r4, #4]
 8007292:	eb07 060a 	add.w	r6, r7, sl
 8007296:	42b3      	cmp	r3, r6
 8007298:	b085      	sub	sp, #20
 800729a:	bfb8      	it	lt
 800729c:	3101      	addlt	r1, #1
 800729e:	f7ff fe91 	bl	8006fc4 <_Balloc>
 80072a2:	b930      	cbnz	r0, 80072b2 <__multiply+0x42>
 80072a4:	4602      	mov	r2, r0
 80072a6:	f240 115d 	movw	r1, #349	; 0x15d
 80072aa:	4b43      	ldr	r3, [pc, #268]	; (80073b8 <__multiply+0x148>)
 80072ac:	4843      	ldr	r0, [pc, #268]	; (80073bc <__multiply+0x14c>)
 80072ae:	f7ff fac7 	bl	8006840 <__assert_func>
 80072b2:	f100 0514 	add.w	r5, r0, #20
 80072b6:	462b      	mov	r3, r5
 80072b8:	2200      	movs	r2, #0
 80072ba:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80072be:	4543      	cmp	r3, r8
 80072c0:	d321      	bcc.n	8007306 <__multiply+0x96>
 80072c2:	f104 0314 	add.w	r3, r4, #20
 80072c6:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80072ca:	f109 0314 	add.w	r3, r9, #20
 80072ce:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 80072d2:	9202      	str	r2, [sp, #8]
 80072d4:	1b3a      	subs	r2, r7, r4
 80072d6:	3a15      	subs	r2, #21
 80072d8:	f022 0203 	bic.w	r2, r2, #3
 80072dc:	3204      	adds	r2, #4
 80072de:	f104 0115 	add.w	r1, r4, #21
 80072e2:	428f      	cmp	r7, r1
 80072e4:	bf38      	it	cc
 80072e6:	2204      	movcc	r2, #4
 80072e8:	9201      	str	r2, [sp, #4]
 80072ea:	9a02      	ldr	r2, [sp, #8]
 80072ec:	9303      	str	r3, [sp, #12]
 80072ee:	429a      	cmp	r2, r3
 80072f0:	d80c      	bhi.n	800730c <__multiply+0x9c>
 80072f2:	2e00      	cmp	r6, #0
 80072f4:	dd03      	ble.n	80072fe <__multiply+0x8e>
 80072f6:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80072fa:	2b00      	cmp	r3, #0
 80072fc:	d059      	beq.n	80073b2 <__multiply+0x142>
 80072fe:	6106      	str	r6, [r0, #16]
 8007300:	b005      	add	sp, #20
 8007302:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007306:	f843 2b04 	str.w	r2, [r3], #4
 800730a:	e7d8      	b.n	80072be <__multiply+0x4e>
 800730c:	f8b3 a000 	ldrh.w	sl, [r3]
 8007310:	f1ba 0f00 	cmp.w	sl, #0
 8007314:	d023      	beq.n	800735e <__multiply+0xee>
 8007316:	46a9      	mov	r9, r5
 8007318:	f04f 0c00 	mov.w	ip, #0
 800731c:	f104 0e14 	add.w	lr, r4, #20
 8007320:	f85e 2b04 	ldr.w	r2, [lr], #4
 8007324:	f8d9 1000 	ldr.w	r1, [r9]
 8007328:	fa1f fb82 	uxth.w	fp, r2
 800732c:	b289      	uxth	r1, r1
 800732e:	fb0a 110b 	mla	r1, sl, fp, r1
 8007332:	4461      	add	r1, ip
 8007334:	f8d9 c000 	ldr.w	ip, [r9]
 8007338:	0c12      	lsrs	r2, r2, #16
 800733a:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 800733e:	fb0a c202 	mla	r2, sl, r2, ip
 8007342:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8007346:	b289      	uxth	r1, r1
 8007348:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800734c:	4577      	cmp	r7, lr
 800734e:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8007352:	f849 1b04 	str.w	r1, [r9], #4
 8007356:	d8e3      	bhi.n	8007320 <__multiply+0xb0>
 8007358:	9a01      	ldr	r2, [sp, #4]
 800735a:	f845 c002 	str.w	ip, [r5, r2]
 800735e:	9a03      	ldr	r2, [sp, #12]
 8007360:	3304      	adds	r3, #4
 8007362:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8007366:	f1b9 0f00 	cmp.w	r9, #0
 800736a:	d020      	beq.n	80073ae <__multiply+0x13e>
 800736c:	46ae      	mov	lr, r5
 800736e:	f04f 0a00 	mov.w	sl, #0
 8007372:	6829      	ldr	r1, [r5, #0]
 8007374:	f104 0c14 	add.w	ip, r4, #20
 8007378:	f8bc b000 	ldrh.w	fp, [ip]
 800737c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8007380:	b289      	uxth	r1, r1
 8007382:	fb09 220b 	mla	r2, r9, fp, r2
 8007386:	4492      	add	sl, r2
 8007388:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800738c:	f84e 1b04 	str.w	r1, [lr], #4
 8007390:	f85c 2b04 	ldr.w	r2, [ip], #4
 8007394:	f8be 1000 	ldrh.w	r1, [lr]
 8007398:	0c12      	lsrs	r2, r2, #16
 800739a:	fb09 1102 	mla	r1, r9, r2, r1
 800739e:	4567      	cmp	r7, ip
 80073a0:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 80073a4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80073a8:	d8e6      	bhi.n	8007378 <__multiply+0x108>
 80073aa:	9a01      	ldr	r2, [sp, #4]
 80073ac:	50a9      	str	r1, [r5, r2]
 80073ae:	3504      	adds	r5, #4
 80073b0:	e79b      	b.n	80072ea <__multiply+0x7a>
 80073b2:	3e01      	subs	r6, #1
 80073b4:	e79d      	b.n	80072f2 <__multiply+0x82>
 80073b6:	bf00      	nop
 80073b8:	08008e79 	.word	0x08008e79
 80073bc:	08008f04 	.word	0x08008f04

080073c0 <__pow5mult>:
 80073c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073c4:	4615      	mov	r5, r2
 80073c6:	f012 0203 	ands.w	r2, r2, #3
 80073ca:	4606      	mov	r6, r0
 80073cc:	460f      	mov	r7, r1
 80073ce:	d007      	beq.n	80073e0 <__pow5mult+0x20>
 80073d0:	4c25      	ldr	r4, [pc, #148]	; (8007468 <__pow5mult+0xa8>)
 80073d2:	3a01      	subs	r2, #1
 80073d4:	2300      	movs	r3, #0
 80073d6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80073da:	f7ff fe55 	bl	8007088 <__multadd>
 80073de:	4607      	mov	r7, r0
 80073e0:	10ad      	asrs	r5, r5, #2
 80073e2:	d03d      	beq.n	8007460 <__pow5mult+0xa0>
 80073e4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80073e6:	b97c      	cbnz	r4, 8007408 <__pow5mult+0x48>
 80073e8:	2010      	movs	r0, #16
 80073ea:	f7fe f9c7 	bl	800577c <malloc>
 80073ee:	4602      	mov	r2, r0
 80073f0:	6270      	str	r0, [r6, #36]	; 0x24
 80073f2:	b928      	cbnz	r0, 8007400 <__pow5mult+0x40>
 80073f4:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 80073f8:	4b1c      	ldr	r3, [pc, #112]	; (800746c <__pow5mult+0xac>)
 80073fa:	481d      	ldr	r0, [pc, #116]	; (8007470 <__pow5mult+0xb0>)
 80073fc:	f7ff fa20 	bl	8006840 <__assert_func>
 8007400:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8007404:	6004      	str	r4, [r0, #0]
 8007406:	60c4      	str	r4, [r0, #12]
 8007408:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800740c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8007410:	b94c      	cbnz	r4, 8007426 <__pow5mult+0x66>
 8007412:	f240 2171 	movw	r1, #625	; 0x271
 8007416:	4630      	mov	r0, r6
 8007418:	f7ff ff14 	bl	8007244 <__i2b>
 800741c:	2300      	movs	r3, #0
 800741e:	4604      	mov	r4, r0
 8007420:	f8c8 0008 	str.w	r0, [r8, #8]
 8007424:	6003      	str	r3, [r0, #0]
 8007426:	f04f 0900 	mov.w	r9, #0
 800742a:	07eb      	lsls	r3, r5, #31
 800742c:	d50a      	bpl.n	8007444 <__pow5mult+0x84>
 800742e:	4639      	mov	r1, r7
 8007430:	4622      	mov	r2, r4
 8007432:	4630      	mov	r0, r6
 8007434:	f7ff ff1c 	bl	8007270 <__multiply>
 8007438:	4680      	mov	r8, r0
 800743a:	4639      	mov	r1, r7
 800743c:	4630      	mov	r0, r6
 800743e:	f7ff fe01 	bl	8007044 <_Bfree>
 8007442:	4647      	mov	r7, r8
 8007444:	106d      	asrs	r5, r5, #1
 8007446:	d00b      	beq.n	8007460 <__pow5mult+0xa0>
 8007448:	6820      	ldr	r0, [r4, #0]
 800744a:	b938      	cbnz	r0, 800745c <__pow5mult+0x9c>
 800744c:	4622      	mov	r2, r4
 800744e:	4621      	mov	r1, r4
 8007450:	4630      	mov	r0, r6
 8007452:	f7ff ff0d 	bl	8007270 <__multiply>
 8007456:	6020      	str	r0, [r4, #0]
 8007458:	f8c0 9000 	str.w	r9, [r0]
 800745c:	4604      	mov	r4, r0
 800745e:	e7e4      	b.n	800742a <__pow5mult+0x6a>
 8007460:	4638      	mov	r0, r7
 8007462:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007466:	bf00      	nop
 8007468:	08009050 	.word	0x08009050
 800746c:	08008cc8 	.word	0x08008cc8
 8007470:	08008f04 	.word	0x08008f04

08007474 <__lshift>:
 8007474:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007478:	460c      	mov	r4, r1
 800747a:	4607      	mov	r7, r0
 800747c:	4691      	mov	r9, r2
 800747e:	6923      	ldr	r3, [r4, #16]
 8007480:	6849      	ldr	r1, [r1, #4]
 8007482:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8007486:	68a3      	ldr	r3, [r4, #8]
 8007488:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800748c:	f108 0601 	add.w	r6, r8, #1
 8007490:	42b3      	cmp	r3, r6
 8007492:	db0b      	blt.n	80074ac <__lshift+0x38>
 8007494:	4638      	mov	r0, r7
 8007496:	f7ff fd95 	bl	8006fc4 <_Balloc>
 800749a:	4605      	mov	r5, r0
 800749c:	b948      	cbnz	r0, 80074b2 <__lshift+0x3e>
 800749e:	4602      	mov	r2, r0
 80074a0:	f240 11d9 	movw	r1, #473	; 0x1d9
 80074a4:	4b29      	ldr	r3, [pc, #164]	; (800754c <__lshift+0xd8>)
 80074a6:	482a      	ldr	r0, [pc, #168]	; (8007550 <__lshift+0xdc>)
 80074a8:	f7ff f9ca 	bl	8006840 <__assert_func>
 80074ac:	3101      	adds	r1, #1
 80074ae:	005b      	lsls	r3, r3, #1
 80074b0:	e7ee      	b.n	8007490 <__lshift+0x1c>
 80074b2:	2300      	movs	r3, #0
 80074b4:	f100 0114 	add.w	r1, r0, #20
 80074b8:	f100 0210 	add.w	r2, r0, #16
 80074bc:	4618      	mov	r0, r3
 80074be:	4553      	cmp	r3, sl
 80074c0:	db37      	blt.n	8007532 <__lshift+0xbe>
 80074c2:	6920      	ldr	r0, [r4, #16]
 80074c4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80074c8:	f104 0314 	add.w	r3, r4, #20
 80074cc:	f019 091f 	ands.w	r9, r9, #31
 80074d0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80074d4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 80074d8:	d02f      	beq.n	800753a <__lshift+0xc6>
 80074da:	468a      	mov	sl, r1
 80074dc:	f04f 0c00 	mov.w	ip, #0
 80074e0:	f1c9 0e20 	rsb	lr, r9, #32
 80074e4:	681a      	ldr	r2, [r3, #0]
 80074e6:	fa02 f209 	lsl.w	r2, r2, r9
 80074ea:	ea42 020c 	orr.w	r2, r2, ip
 80074ee:	f84a 2b04 	str.w	r2, [sl], #4
 80074f2:	f853 2b04 	ldr.w	r2, [r3], #4
 80074f6:	4298      	cmp	r0, r3
 80074f8:	fa22 fc0e 	lsr.w	ip, r2, lr
 80074fc:	d8f2      	bhi.n	80074e4 <__lshift+0x70>
 80074fe:	1b03      	subs	r3, r0, r4
 8007500:	3b15      	subs	r3, #21
 8007502:	f023 0303 	bic.w	r3, r3, #3
 8007506:	3304      	adds	r3, #4
 8007508:	f104 0215 	add.w	r2, r4, #21
 800750c:	4290      	cmp	r0, r2
 800750e:	bf38      	it	cc
 8007510:	2304      	movcc	r3, #4
 8007512:	f841 c003 	str.w	ip, [r1, r3]
 8007516:	f1bc 0f00 	cmp.w	ip, #0
 800751a:	d001      	beq.n	8007520 <__lshift+0xac>
 800751c:	f108 0602 	add.w	r6, r8, #2
 8007520:	3e01      	subs	r6, #1
 8007522:	4638      	mov	r0, r7
 8007524:	4621      	mov	r1, r4
 8007526:	612e      	str	r6, [r5, #16]
 8007528:	f7ff fd8c 	bl	8007044 <_Bfree>
 800752c:	4628      	mov	r0, r5
 800752e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007532:	f842 0f04 	str.w	r0, [r2, #4]!
 8007536:	3301      	adds	r3, #1
 8007538:	e7c1      	b.n	80074be <__lshift+0x4a>
 800753a:	3904      	subs	r1, #4
 800753c:	f853 2b04 	ldr.w	r2, [r3], #4
 8007540:	4298      	cmp	r0, r3
 8007542:	f841 2f04 	str.w	r2, [r1, #4]!
 8007546:	d8f9      	bhi.n	800753c <__lshift+0xc8>
 8007548:	e7ea      	b.n	8007520 <__lshift+0xac>
 800754a:	bf00      	nop
 800754c:	08008e79 	.word	0x08008e79
 8007550:	08008f04 	.word	0x08008f04

08007554 <__mcmp>:
 8007554:	4603      	mov	r3, r0
 8007556:	690a      	ldr	r2, [r1, #16]
 8007558:	6900      	ldr	r0, [r0, #16]
 800755a:	b530      	push	{r4, r5, lr}
 800755c:	1a80      	subs	r0, r0, r2
 800755e:	d10d      	bne.n	800757c <__mcmp+0x28>
 8007560:	3314      	adds	r3, #20
 8007562:	3114      	adds	r1, #20
 8007564:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8007568:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800756c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8007570:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8007574:	4295      	cmp	r5, r2
 8007576:	d002      	beq.n	800757e <__mcmp+0x2a>
 8007578:	d304      	bcc.n	8007584 <__mcmp+0x30>
 800757a:	2001      	movs	r0, #1
 800757c:	bd30      	pop	{r4, r5, pc}
 800757e:	42a3      	cmp	r3, r4
 8007580:	d3f4      	bcc.n	800756c <__mcmp+0x18>
 8007582:	e7fb      	b.n	800757c <__mcmp+0x28>
 8007584:	f04f 30ff 	mov.w	r0, #4294967295
 8007588:	e7f8      	b.n	800757c <__mcmp+0x28>
	...

0800758c <__mdiff>:
 800758c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007590:	460d      	mov	r5, r1
 8007592:	4607      	mov	r7, r0
 8007594:	4611      	mov	r1, r2
 8007596:	4628      	mov	r0, r5
 8007598:	4614      	mov	r4, r2
 800759a:	f7ff ffdb 	bl	8007554 <__mcmp>
 800759e:	1e06      	subs	r6, r0, #0
 80075a0:	d111      	bne.n	80075c6 <__mdiff+0x3a>
 80075a2:	4631      	mov	r1, r6
 80075a4:	4638      	mov	r0, r7
 80075a6:	f7ff fd0d 	bl	8006fc4 <_Balloc>
 80075aa:	4602      	mov	r2, r0
 80075ac:	b928      	cbnz	r0, 80075ba <__mdiff+0x2e>
 80075ae:	f240 2132 	movw	r1, #562	; 0x232
 80075b2:	4b3a      	ldr	r3, [pc, #232]	; (800769c <__mdiff+0x110>)
 80075b4:	483a      	ldr	r0, [pc, #232]	; (80076a0 <__mdiff+0x114>)
 80075b6:	f7ff f943 	bl	8006840 <__assert_func>
 80075ba:	2301      	movs	r3, #1
 80075bc:	e9c0 3604 	strd	r3, r6, [r0, #16]
 80075c0:	4610      	mov	r0, r2
 80075c2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80075c6:	bfa4      	itt	ge
 80075c8:	4623      	movge	r3, r4
 80075ca:	462c      	movge	r4, r5
 80075cc:	4638      	mov	r0, r7
 80075ce:	6861      	ldr	r1, [r4, #4]
 80075d0:	bfa6      	itte	ge
 80075d2:	461d      	movge	r5, r3
 80075d4:	2600      	movge	r6, #0
 80075d6:	2601      	movlt	r6, #1
 80075d8:	f7ff fcf4 	bl	8006fc4 <_Balloc>
 80075dc:	4602      	mov	r2, r0
 80075de:	b918      	cbnz	r0, 80075e8 <__mdiff+0x5c>
 80075e0:	f44f 7110 	mov.w	r1, #576	; 0x240
 80075e4:	4b2d      	ldr	r3, [pc, #180]	; (800769c <__mdiff+0x110>)
 80075e6:	e7e5      	b.n	80075b4 <__mdiff+0x28>
 80075e8:	f102 0814 	add.w	r8, r2, #20
 80075ec:	46c2      	mov	sl, r8
 80075ee:	f04f 0c00 	mov.w	ip, #0
 80075f2:	6927      	ldr	r7, [r4, #16]
 80075f4:	60c6      	str	r6, [r0, #12]
 80075f6:	692e      	ldr	r6, [r5, #16]
 80075f8:	f104 0014 	add.w	r0, r4, #20
 80075fc:	f105 0914 	add.w	r9, r5, #20
 8007600:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 8007604:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8007608:	3410      	adds	r4, #16
 800760a:	f854 bf04 	ldr.w	fp, [r4, #4]!
 800760e:	f859 3b04 	ldr.w	r3, [r9], #4
 8007612:	fa1f f18b 	uxth.w	r1, fp
 8007616:	448c      	add	ip, r1
 8007618:	b299      	uxth	r1, r3
 800761a:	0c1b      	lsrs	r3, r3, #16
 800761c:	ebac 0101 	sub.w	r1, ip, r1
 8007620:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8007624:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8007628:	b289      	uxth	r1, r1
 800762a:	ea4f 4c23 	mov.w	ip, r3, asr #16
 800762e:	454e      	cmp	r6, r9
 8007630:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8007634:	f84a 3b04 	str.w	r3, [sl], #4
 8007638:	d8e7      	bhi.n	800760a <__mdiff+0x7e>
 800763a:	1b73      	subs	r3, r6, r5
 800763c:	3b15      	subs	r3, #21
 800763e:	f023 0303 	bic.w	r3, r3, #3
 8007642:	3515      	adds	r5, #21
 8007644:	3304      	adds	r3, #4
 8007646:	42ae      	cmp	r6, r5
 8007648:	bf38      	it	cc
 800764a:	2304      	movcc	r3, #4
 800764c:	4418      	add	r0, r3
 800764e:	4443      	add	r3, r8
 8007650:	461e      	mov	r6, r3
 8007652:	4605      	mov	r5, r0
 8007654:	4575      	cmp	r5, lr
 8007656:	d30e      	bcc.n	8007676 <__mdiff+0xea>
 8007658:	f10e 0103 	add.w	r1, lr, #3
 800765c:	1a09      	subs	r1, r1, r0
 800765e:	f021 0103 	bic.w	r1, r1, #3
 8007662:	3803      	subs	r0, #3
 8007664:	4586      	cmp	lr, r0
 8007666:	bf38      	it	cc
 8007668:	2100      	movcc	r1, #0
 800766a:	4419      	add	r1, r3
 800766c:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8007670:	b18b      	cbz	r3, 8007696 <__mdiff+0x10a>
 8007672:	6117      	str	r7, [r2, #16]
 8007674:	e7a4      	b.n	80075c0 <__mdiff+0x34>
 8007676:	f855 8b04 	ldr.w	r8, [r5], #4
 800767a:	fa1f f188 	uxth.w	r1, r8
 800767e:	4461      	add	r1, ip
 8007680:	140c      	asrs	r4, r1, #16
 8007682:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8007686:	b289      	uxth	r1, r1
 8007688:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 800768c:	ea4f 4c24 	mov.w	ip, r4, asr #16
 8007690:	f846 1b04 	str.w	r1, [r6], #4
 8007694:	e7de      	b.n	8007654 <__mdiff+0xc8>
 8007696:	3f01      	subs	r7, #1
 8007698:	e7e8      	b.n	800766c <__mdiff+0xe0>
 800769a:	bf00      	nop
 800769c:	08008e79 	.word	0x08008e79
 80076a0:	08008f04 	.word	0x08008f04

080076a4 <__ulp>:
 80076a4:	4b11      	ldr	r3, [pc, #68]	; (80076ec <__ulp+0x48>)
 80076a6:	400b      	ands	r3, r1
 80076a8:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 80076ac:	2b00      	cmp	r3, #0
 80076ae:	dd02      	ble.n	80076b6 <__ulp+0x12>
 80076b0:	2000      	movs	r0, #0
 80076b2:	4619      	mov	r1, r3
 80076b4:	4770      	bx	lr
 80076b6:	425b      	negs	r3, r3
 80076b8:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 80076bc:	f04f 0000 	mov.w	r0, #0
 80076c0:	f04f 0100 	mov.w	r1, #0
 80076c4:	ea4f 5223 	mov.w	r2, r3, asr #20
 80076c8:	da04      	bge.n	80076d4 <__ulp+0x30>
 80076ca:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 80076ce:	fa43 f102 	asr.w	r1, r3, r2
 80076d2:	4770      	bx	lr
 80076d4:	f1a2 0314 	sub.w	r3, r2, #20
 80076d8:	2b1e      	cmp	r3, #30
 80076da:	bfd6      	itet	le
 80076dc:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 80076e0:	2301      	movgt	r3, #1
 80076e2:	fa22 f303 	lsrle.w	r3, r2, r3
 80076e6:	4618      	mov	r0, r3
 80076e8:	4770      	bx	lr
 80076ea:	bf00      	nop
 80076ec:	7ff00000 	.word	0x7ff00000

080076f0 <__b2d>:
 80076f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80076f4:	6907      	ldr	r7, [r0, #16]
 80076f6:	f100 0914 	add.w	r9, r0, #20
 80076fa:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 80076fe:	f857 6c04 	ldr.w	r6, [r7, #-4]
 8007702:	f1a7 0804 	sub.w	r8, r7, #4
 8007706:	4630      	mov	r0, r6
 8007708:	f7ff fd4e 	bl	80071a8 <__hi0bits>
 800770c:	f1c0 0320 	rsb	r3, r0, #32
 8007710:	280a      	cmp	r0, #10
 8007712:	600b      	str	r3, [r1, #0]
 8007714:	491f      	ldr	r1, [pc, #124]	; (8007794 <__b2d+0xa4>)
 8007716:	dc17      	bgt.n	8007748 <__b2d+0x58>
 8007718:	45c1      	cmp	r9, r8
 800771a:	bf28      	it	cs
 800771c:	2200      	movcs	r2, #0
 800771e:	f1c0 0c0b 	rsb	ip, r0, #11
 8007722:	fa26 f30c 	lsr.w	r3, r6, ip
 8007726:	bf38      	it	cc
 8007728:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 800772c:	ea43 0501 	orr.w	r5, r3, r1
 8007730:	f100 0315 	add.w	r3, r0, #21
 8007734:	fa06 f303 	lsl.w	r3, r6, r3
 8007738:	fa22 f20c 	lsr.w	r2, r2, ip
 800773c:	ea43 0402 	orr.w	r4, r3, r2
 8007740:	4620      	mov	r0, r4
 8007742:	4629      	mov	r1, r5
 8007744:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007748:	45c1      	cmp	r9, r8
 800774a:	bf2e      	itee	cs
 800774c:	2200      	movcs	r2, #0
 800774e:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8007752:	f1a7 0808 	subcc.w	r8, r7, #8
 8007756:	f1b0 030b 	subs.w	r3, r0, #11
 800775a:	d016      	beq.n	800778a <__b2d+0x9a>
 800775c:	f1c3 0720 	rsb	r7, r3, #32
 8007760:	fa22 f107 	lsr.w	r1, r2, r7
 8007764:	45c8      	cmp	r8, r9
 8007766:	fa06 f603 	lsl.w	r6, r6, r3
 800776a:	ea46 0601 	orr.w	r6, r6, r1
 800776e:	bf94      	ite	ls
 8007770:	2100      	movls	r1, #0
 8007772:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 8007776:	f046 557f 	orr.w	r5, r6, #1069547520	; 0x3fc00000
 800777a:	fa02 f003 	lsl.w	r0, r2, r3
 800777e:	40f9      	lsrs	r1, r7
 8007780:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8007784:	ea40 0401 	orr.w	r4, r0, r1
 8007788:	e7da      	b.n	8007740 <__b2d+0x50>
 800778a:	4614      	mov	r4, r2
 800778c:	ea46 0501 	orr.w	r5, r6, r1
 8007790:	e7d6      	b.n	8007740 <__b2d+0x50>
 8007792:	bf00      	nop
 8007794:	3ff00000 	.word	0x3ff00000

08007798 <__d2b>:
 8007798:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800779c:	2101      	movs	r1, #1
 800779e:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 80077a2:	4690      	mov	r8, r2
 80077a4:	461d      	mov	r5, r3
 80077a6:	f7ff fc0d 	bl	8006fc4 <_Balloc>
 80077aa:	4604      	mov	r4, r0
 80077ac:	b930      	cbnz	r0, 80077bc <__d2b+0x24>
 80077ae:	4602      	mov	r2, r0
 80077b0:	f240 310a 	movw	r1, #778	; 0x30a
 80077b4:	4b24      	ldr	r3, [pc, #144]	; (8007848 <__d2b+0xb0>)
 80077b6:	4825      	ldr	r0, [pc, #148]	; (800784c <__d2b+0xb4>)
 80077b8:	f7ff f842 	bl	8006840 <__assert_func>
 80077bc:	f3c5 0313 	ubfx	r3, r5, #0, #20
 80077c0:	f3c5 550a 	ubfx	r5, r5, #20, #11
 80077c4:	bb2d      	cbnz	r5, 8007812 <__d2b+0x7a>
 80077c6:	9301      	str	r3, [sp, #4]
 80077c8:	f1b8 0300 	subs.w	r3, r8, #0
 80077cc:	d026      	beq.n	800781c <__d2b+0x84>
 80077ce:	4668      	mov	r0, sp
 80077d0:	9300      	str	r3, [sp, #0]
 80077d2:	f7ff fd09 	bl	80071e8 <__lo0bits>
 80077d6:	9900      	ldr	r1, [sp, #0]
 80077d8:	b1f0      	cbz	r0, 8007818 <__d2b+0x80>
 80077da:	9a01      	ldr	r2, [sp, #4]
 80077dc:	f1c0 0320 	rsb	r3, r0, #32
 80077e0:	fa02 f303 	lsl.w	r3, r2, r3
 80077e4:	430b      	orrs	r3, r1
 80077e6:	40c2      	lsrs	r2, r0
 80077e8:	6163      	str	r3, [r4, #20]
 80077ea:	9201      	str	r2, [sp, #4]
 80077ec:	9b01      	ldr	r3, [sp, #4]
 80077ee:	2b00      	cmp	r3, #0
 80077f0:	bf14      	ite	ne
 80077f2:	2102      	movne	r1, #2
 80077f4:	2101      	moveq	r1, #1
 80077f6:	61a3      	str	r3, [r4, #24]
 80077f8:	6121      	str	r1, [r4, #16]
 80077fa:	b1c5      	cbz	r5, 800782e <__d2b+0x96>
 80077fc:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8007800:	4405      	add	r5, r0
 8007802:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8007806:	603d      	str	r5, [r7, #0]
 8007808:	6030      	str	r0, [r6, #0]
 800780a:	4620      	mov	r0, r4
 800780c:	b002      	add	sp, #8
 800780e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007812:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8007816:	e7d6      	b.n	80077c6 <__d2b+0x2e>
 8007818:	6161      	str	r1, [r4, #20]
 800781a:	e7e7      	b.n	80077ec <__d2b+0x54>
 800781c:	a801      	add	r0, sp, #4
 800781e:	f7ff fce3 	bl	80071e8 <__lo0bits>
 8007822:	2101      	movs	r1, #1
 8007824:	9b01      	ldr	r3, [sp, #4]
 8007826:	6121      	str	r1, [r4, #16]
 8007828:	6163      	str	r3, [r4, #20]
 800782a:	3020      	adds	r0, #32
 800782c:	e7e5      	b.n	80077fa <__d2b+0x62>
 800782e:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 8007832:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8007836:	6038      	str	r0, [r7, #0]
 8007838:	6918      	ldr	r0, [r3, #16]
 800783a:	f7ff fcb5 	bl	80071a8 <__hi0bits>
 800783e:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 8007842:	6031      	str	r1, [r6, #0]
 8007844:	e7e1      	b.n	800780a <__d2b+0x72>
 8007846:	bf00      	nop
 8007848:	08008e79 	.word	0x08008e79
 800784c:	08008f04 	.word	0x08008f04

08007850 <__ratio>:
 8007850:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007854:	4688      	mov	r8, r1
 8007856:	4669      	mov	r1, sp
 8007858:	4681      	mov	r9, r0
 800785a:	f7ff ff49 	bl	80076f0 <__b2d>
 800785e:	460f      	mov	r7, r1
 8007860:	4604      	mov	r4, r0
 8007862:	460d      	mov	r5, r1
 8007864:	4640      	mov	r0, r8
 8007866:	a901      	add	r1, sp, #4
 8007868:	f7ff ff42 	bl	80076f0 <__b2d>
 800786c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8007870:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8007874:	468b      	mov	fp, r1
 8007876:	eba3 0c02 	sub.w	ip, r3, r2
 800787a:	e9dd 3200 	ldrd	r3, r2, [sp]
 800787e:	1a9b      	subs	r3, r3, r2
 8007880:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8007884:	2b00      	cmp	r3, #0
 8007886:	bfd5      	itete	le
 8007888:	460a      	movle	r2, r1
 800788a:	462a      	movgt	r2, r5
 800788c:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8007890:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8007894:	bfd8      	it	le
 8007896:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800789a:	465b      	mov	r3, fp
 800789c:	4602      	mov	r2, r0
 800789e:	4639      	mov	r1, r7
 80078a0:	4620      	mov	r0, r4
 80078a2:	f7f9 f801 	bl	80008a8 <__aeabi_ddiv>
 80078a6:	b003      	add	sp, #12
 80078a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080078ac <__copybits>:
 80078ac:	3901      	subs	r1, #1
 80078ae:	b570      	push	{r4, r5, r6, lr}
 80078b0:	1149      	asrs	r1, r1, #5
 80078b2:	6914      	ldr	r4, [r2, #16]
 80078b4:	3101      	adds	r1, #1
 80078b6:	f102 0314 	add.w	r3, r2, #20
 80078ba:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80078be:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80078c2:	1f05      	subs	r5, r0, #4
 80078c4:	42a3      	cmp	r3, r4
 80078c6:	d30c      	bcc.n	80078e2 <__copybits+0x36>
 80078c8:	1aa3      	subs	r3, r4, r2
 80078ca:	3b11      	subs	r3, #17
 80078cc:	f023 0303 	bic.w	r3, r3, #3
 80078d0:	3211      	adds	r2, #17
 80078d2:	42a2      	cmp	r2, r4
 80078d4:	bf88      	it	hi
 80078d6:	2300      	movhi	r3, #0
 80078d8:	4418      	add	r0, r3
 80078da:	2300      	movs	r3, #0
 80078dc:	4288      	cmp	r0, r1
 80078de:	d305      	bcc.n	80078ec <__copybits+0x40>
 80078e0:	bd70      	pop	{r4, r5, r6, pc}
 80078e2:	f853 6b04 	ldr.w	r6, [r3], #4
 80078e6:	f845 6f04 	str.w	r6, [r5, #4]!
 80078ea:	e7eb      	b.n	80078c4 <__copybits+0x18>
 80078ec:	f840 3b04 	str.w	r3, [r0], #4
 80078f0:	e7f4      	b.n	80078dc <__copybits+0x30>

080078f2 <__any_on>:
 80078f2:	f100 0214 	add.w	r2, r0, #20
 80078f6:	6900      	ldr	r0, [r0, #16]
 80078f8:	114b      	asrs	r3, r1, #5
 80078fa:	4298      	cmp	r0, r3
 80078fc:	b510      	push	{r4, lr}
 80078fe:	db11      	blt.n	8007924 <__any_on+0x32>
 8007900:	dd0a      	ble.n	8007918 <__any_on+0x26>
 8007902:	f011 011f 	ands.w	r1, r1, #31
 8007906:	d007      	beq.n	8007918 <__any_on+0x26>
 8007908:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800790c:	fa24 f001 	lsr.w	r0, r4, r1
 8007910:	fa00 f101 	lsl.w	r1, r0, r1
 8007914:	428c      	cmp	r4, r1
 8007916:	d10b      	bne.n	8007930 <__any_on+0x3e>
 8007918:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800791c:	4293      	cmp	r3, r2
 800791e:	d803      	bhi.n	8007928 <__any_on+0x36>
 8007920:	2000      	movs	r0, #0
 8007922:	bd10      	pop	{r4, pc}
 8007924:	4603      	mov	r3, r0
 8007926:	e7f7      	b.n	8007918 <__any_on+0x26>
 8007928:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800792c:	2900      	cmp	r1, #0
 800792e:	d0f5      	beq.n	800791c <__any_on+0x2a>
 8007930:	2001      	movs	r0, #1
 8007932:	e7f6      	b.n	8007922 <__any_on+0x30>

08007934 <_calloc_r>:
 8007934:	b570      	push	{r4, r5, r6, lr}
 8007936:	fba1 5402 	umull	r5, r4, r1, r2
 800793a:	b934      	cbnz	r4, 800794a <_calloc_r+0x16>
 800793c:	4629      	mov	r1, r5
 800793e:	f7fd ff9d 	bl	800587c <_malloc_r>
 8007942:	4606      	mov	r6, r0
 8007944:	b928      	cbnz	r0, 8007952 <_calloc_r+0x1e>
 8007946:	4630      	mov	r0, r6
 8007948:	bd70      	pop	{r4, r5, r6, pc}
 800794a:	220c      	movs	r2, #12
 800794c:	2600      	movs	r6, #0
 800794e:	6002      	str	r2, [r0, #0]
 8007950:	e7f9      	b.n	8007946 <_calloc_r+0x12>
 8007952:	462a      	mov	r2, r5
 8007954:	4621      	mov	r1, r4
 8007956:	f7fd ff21 	bl	800579c <memset>
 800795a:	e7f4      	b.n	8007946 <_calloc_r+0x12>

0800795c <__ssputs_r>:
 800795c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007960:	688e      	ldr	r6, [r1, #8]
 8007962:	4682      	mov	sl, r0
 8007964:	429e      	cmp	r6, r3
 8007966:	460c      	mov	r4, r1
 8007968:	4690      	mov	r8, r2
 800796a:	461f      	mov	r7, r3
 800796c:	d838      	bhi.n	80079e0 <__ssputs_r+0x84>
 800796e:	898a      	ldrh	r2, [r1, #12]
 8007970:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8007974:	d032      	beq.n	80079dc <__ssputs_r+0x80>
 8007976:	6825      	ldr	r5, [r4, #0]
 8007978:	6909      	ldr	r1, [r1, #16]
 800797a:	3301      	adds	r3, #1
 800797c:	eba5 0901 	sub.w	r9, r5, r1
 8007980:	6965      	ldr	r5, [r4, #20]
 8007982:	444b      	add	r3, r9
 8007984:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8007988:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800798c:	106d      	asrs	r5, r5, #1
 800798e:	429d      	cmp	r5, r3
 8007990:	bf38      	it	cc
 8007992:	461d      	movcc	r5, r3
 8007994:	0553      	lsls	r3, r2, #21
 8007996:	d531      	bpl.n	80079fc <__ssputs_r+0xa0>
 8007998:	4629      	mov	r1, r5
 800799a:	f7fd ff6f 	bl	800587c <_malloc_r>
 800799e:	4606      	mov	r6, r0
 80079a0:	b950      	cbnz	r0, 80079b8 <__ssputs_r+0x5c>
 80079a2:	230c      	movs	r3, #12
 80079a4:	f04f 30ff 	mov.w	r0, #4294967295
 80079a8:	f8ca 3000 	str.w	r3, [sl]
 80079ac:	89a3      	ldrh	r3, [r4, #12]
 80079ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80079b2:	81a3      	strh	r3, [r4, #12]
 80079b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80079b8:	464a      	mov	r2, r9
 80079ba:	6921      	ldr	r1, [r4, #16]
 80079bc:	f7ff fae8 	bl	8006f90 <memcpy>
 80079c0:	89a3      	ldrh	r3, [r4, #12]
 80079c2:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80079c6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80079ca:	81a3      	strh	r3, [r4, #12]
 80079cc:	6126      	str	r6, [r4, #16]
 80079ce:	444e      	add	r6, r9
 80079d0:	6026      	str	r6, [r4, #0]
 80079d2:	463e      	mov	r6, r7
 80079d4:	6165      	str	r5, [r4, #20]
 80079d6:	eba5 0509 	sub.w	r5, r5, r9
 80079da:	60a5      	str	r5, [r4, #8]
 80079dc:	42be      	cmp	r6, r7
 80079de:	d900      	bls.n	80079e2 <__ssputs_r+0x86>
 80079e0:	463e      	mov	r6, r7
 80079e2:	4632      	mov	r2, r6
 80079e4:	4641      	mov	r1, r8
 80079e6:	6820      	ldr	r0, [r4, #0]
 80079e8:	f000 ff20 	bl	800882c <memmove>
 80079ec:	68a3      	ldr	r3, [r4, #8]
 80079ee:	2000      	movs	r0, #0
 80079f0:	1b9b      	subs	r3, r3, r6
 80079f2:	60a3      	str	r3, [r4, #8]
 80079f4:	6823      	ldr	r3, [r4, #0]
 80079f6:	4433      	add	r3, r6
 80079f8:	6023      	str	r3, [r4, #0]
 80079fa:	e7db      	b.n	80079b4 <__ssputs_r+0x58>
 80079fc:	462a      	mov	r2, r5
 80079fe:	f000 ff2f 	bl	8008860 <_realloc_r>
 8007a02:	4606      	mov	r6, r0
 8007a04:	2800      	cmp	r0, #0
 8007a06:	d1e1      	bne.n	80079cc <__ssputs_r+0x70>
 8007a08:	4650      	mov	r0, sl
 8007a0a:	6921      	ldr	r1, [r4, #16]
 8007a0c:	f7fd fece 	bl	80057ac <_free_r>
 8007a10:	e7c7      	b.n	80079a2 <__ssputs_r+0x46>
	...

08007a14 <_svfiprintf_r>:
 8007a14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a18:	4698      	mov	r8, r3
 8007a1a:	898b      	ldrh	r3, [r1, #12]
 8007a1c:	4607      	mov	r7, r0
 8007a1e:	061b      	lsls	r3, r3, #24
 8007a20:	460d      	mov	r5, r1
 8007a22:	4614      	mov	r4, r2
 8007a24:	b09d      	sub	sp, #116	; 0x74
 8007a26:	d50e      	bpl.n	8007a46 <_svfiprintf_r+0x32>
 8007a28:	690b      	ldr	r3, [r1, #16]
 8007a2a:	b963      	cbnz	r3, 8007a46 <_svfiprintf_r+0x32>
 8007a2c:	2140      	movs	r1, #64	; 0x40
 8007a2e:	f7fd ff25 	bl	800587c <_malloc_r>
 8007a32:	6028      	str	r0, [r5, #0]
 8007a34:	6128      	str	r0, [r5, #16]
 8007a36:	b920      	cbnz	r0, 8007a42 <_svfiprintf_r+0x2e>
 8007a38:	230c      	movs	r3, #12
 8007a3a:	603b      	str	r3, [r7, #0]
 8007a3c:	f04f 30ff 	mov.w	r0, #4294967295
 8007a40:	e0d1      	b.n	8007be6 <_svfiprintf_r+0x1d2>
 8007a42:	2340      	movs	r3, #64	; 0x40
 8007a44:	616b      	str	r3, [r5, #20]
 8007a46:	2300      	movs	r3, #0
 8007a48:	9309      	str	r3, [sp, #36]	; 0x24
 8007a4a:	2320      	movs	r3, #32
 8007a4c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007a50:	2330      	movs	r3, #48	; 0x30
 8007a52:	f04f 0901 	mov.w	r9, #1
 8007a56:	f8cd 800c 	str.w	r8, [sp, #12]
 8007a5a:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8007c00 <_svfiprintf_r+0x1ec>
 8007a5e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8007a62:	4623      	mov	r3, r4
 8007a64:	469a      	mov	sl, r3
 8007a66:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007a6a:	b10a      	cbz	r2, 8007a70 <_svfiprintf_r+0x5c>
 8007a6c:	2a25      	cmp	r2, #37	; 0x25
 8007a6e:	d1f9      	bne.n	8007a64 <_svfiprintf_r+0x50>
 8007a70:	ebba 0b04 	subs.w	fp, sl, r4
 8007a74:	d00b      	beq.n	8007a8e <_svfiprintf_r+0x7a>
 8007a76:	465b      	mov	r3, fp
 8007a78:	4622      	mov	r2, r4
 8007a7a:	4629      	mov	r1, r5
 8007a7c:	4638      	mov	r0, r7
 8007a7e:	f7ff ff6d 	bl	800795c <__ssputs_r>
 8007a82:	3001      	adds	r0, #1
 8007a84:	f000 80aa 	beq.w	8007bdc <_svfiprintf_r+0x1c8>
 8007a88:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007a8a:	445a      	add	r2, fp
 8007a8c:	9209      	str	r2, [sp, #36]	; 0x24
 8007a8e:	f89a 3000 	ldrb.w	r3, [sl]
 8007a92:	2b00      	cmp	r3, #0
 8007a94:	f000 80a2 	beq.w	8007bdc <_svfiprintf_r+0x1c8>
 8007a98:	2300      	movs	r3, #0
 8007a9a:	f04f 32ff 	mov.w	r2, #4294967295
 8007a9e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007aa2:	f10a 0a01 	add.w	sl, sl, #1
 8007aa6:	9304      	str	r3, [sp, #16]
 8007aa8:	9307      	str	r3, [sp, #28]
 8007aaa:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8007aae:	931a      	str	r3, [sp, #104]	; 0x68
 8007ab0:	4654      	mov	r4, sl
 8007ab2:	2205      	movs	r2, #5
 8007ab4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007ab8:	4851      	ldr	r0, [pc, #324]	; (8007c00 <_svfiprintf_r+0x1ec>)
 8007aba:	f000 fea9 	bl	8008810 <memchr>
 8007abe:	9a04      	ldr	r2, [sp, #16]
 8007ac0:	b9d8      	cbnz	r0, 8007afa <_svfiprintf_r+0xe6>
 8007ac2:	06d0      	lsls	r0, r2, #27
 8007ac4:	bf44      	itt	mi
 8007ac6:	2320      	movmi	r3, #32
 8007ac8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007acc:	0711      	lsls	r1, r2, #28
 8007ace:	bf44      	itt	mi
 8007ad0:	232b      	movmi	r3, #43	; 0x2b
 8007ad2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007ad6:	f89a 3000 	ldrb.w	r3, [sl]
 8007ada:	2b2a      	cmp	r3, #42	; 0x2a
 8007adc:	d015      	beq.n	8007b0a <_svfiprintf_r+0xf6>
 8007ade:	4654      	mov	r4, sl
 8007ae0:	2000      	movs	r0, #0
 8007ae2:	f04f 0c0a 	mov.w	ip, #10
 8007ae6:	9a07      	ldr	r2, [sp, #28]
 8007ae8:	4621      	mov	r1, r4
 8007aea:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007aee:	3b30      	subs	r3, #48	; 0x30
 8007af0:	2b09      	cmp	r3, #9
 8007af2:	d94e      	bls.n	8007b92 <_svfiprintf_r+0x17e>
 8007af4:	b1b0      	cbz	r0, 8007b24 <_svfiprintf_r+0x110>
 8007af6:	9207      	str	r2, [sp, #28]
 8007af8:	e014      	b.n	8007b24 <_svfiprintf_r+0x110>
 8007afa:	eba0 0308 	sub.w	r3, r0, r8
 8007afe:	fa09 f303 	lsl.w	r3, r9, r3
 8007b02:	4313      	orrs	r3, r2
 8007b04:	46a2      	mov	sl, r4
 8007b06:	9304      	str	r3, [sp, #16]
 8007b08:	e7d2      	b.n	8007ab0 <_svfiprintf_r+0x9c>
 8007b0a:	9b03      	ldr	r3, [sp, #12]
 8007b0c:	1d19      	adds	r1, r3, #4
 8007b0e:	681b      	ldr	r3, [r3, #0]
 8007b10:	9103      	str	r1, [sp, #12]
 8007b12:	2b00      	cmp	r3, #0
 8007b14:	bfbb      	ittet	lt
 8007b16:	425b      	neglt	r3, r3
 8007b18:	f042 0202 	orrlt.w	r2, r2, #2
 8007b1c:	9307      	strge	r3, [sp, #28]
 8007b1e:	9307      	strlt	r3, [sp, #28]
 8007b20:	bfb8      	it	lt
 8007b22:	9204      	strlt	r2, [sp, #16]
 8007b24:	7823      	ldrb	r3, [r4, #0]
 8007b26:	2b2e      	cmp	r3, #46	; 0x2e
 8007b28:	d10c      	bne.n	8007b44 <_svfiprintf_r+0x130>
 8007b2a:	7863      	ldrb	r3, [r4, #1]
 8007b2c:	2b2a      	cmp	r3, #42	; 0x2a
 8007b2e:	d135      	bne.n	8007b9c <_svfiprintf_r+0x188>
 8007b30:	9b03      	ldr	r3, [sp, #12]
 8007b32:	3402      	adds	r4, #2
 8007b34:	1d1a      	adds	r2, r3, #4
 8007b36:	681b      	ldr	r3, [r3, #0]
 8007b38:	9203      	str	r2, [sp, #12]
 8007b3a:	2b00      	cmp	r3, #0
 8007b3c:	bfb8      	it	lt
 8007b3e:	f04f 33ff 	movlt.w	r3, #4294967295
 8007b42:	9305      	str	r3, [sp, #20]
 8007b44:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 8007c04 <_svfiprintf_r+0x1f0>
 8007b48:	2203      	movs	r2, #3
 8007b4a:	4650      	mov	r0, sl
 8007b4c:	7821      	ldrb	r1, [r4, #0]
 8007b4e:	f000 fe5f 	bl	8008810 <memchr>
 8007b52:	b140      	cbz	r0, 8007b66 <_svfiprintf_r+0x152>
 8007b54:	2340      	movs	r3, #64	; 0x40
 8007b56:	eba0 000a 	sub.w	r0, r0, sl
 8007b5a:	fa03 f000 	lsl.w	r0, r3, r0
 8007b5e:	9b04      	ldr	r3, [sp, #16]
 8007b60:	3401      	adds	r4, #1
 8007b62:	4303      	orrs	r3, r0
 8007b64:	9304      	str	r3, [sp, #16]
 8007b66:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007b6a:	2206      	movs	r2, #6
 8007b6c:	4826      	ldr	r0, [pc, #152]	; (8007c08 <_svfiprintf_r+0x1f4>)
 8007b6e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007b72:	f000 fe4d 	bl	8008810 <memchr>
 8007b76:	2800      	cmp	r0, #0
 8007b78:	d038      	beq.n	8007bec <_svfiprintf_r+0x1d8>
 8007b7a:	4b24      	ldr	r3, [pc, #144]	; (8007c0c <_svfiprintf_r+0x1f8>)
 8007b7c:	bb1b      	cbnz	r3, 8007bc6 <_svfiprintf_r+0x1b2>
 8007b7e:	9b03      	ldr	r3, [sp, #12]
 8007b80:	3307      	adds	r3, #7
 8007b82:	f023 0307 	bic.w	r3, r3, #7
 8007b86:	3308      	adds	r3, #8
 8007b88:	9303      	str	r3, [sp, #12]
 8007b8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007b8c:	4433      	add	r3, r6
 8007b8e:	9309      	str	r3, [sp, #36]	; 0x24
 8007b90:	e767      	b.n	8007a62 <_svfiprintf_r+0x4e>
 8007b92:	460c      	mov	r4, r1
 8007b94:	2001      	movs	r0, #1
 8007b96:	fb0c 3202 	mla	r2, ip, r2, r3
 8007b9a:	e7a5      	b.n	8007ae8 <_svfiprintf_r+0xd4>
 8007b9c:	2300      	movs	r3, #0
 8007b9e:	f04f 0c0a 	mov.w	ip, #10
 8007ba2:	4619      	mov	r1, r3
 8007ba4:	3401      	adds	r4, #1
 8007ba6:	9305      	str	r3, [sp, #20]
 8007ba8:	4620      	mov	r0, r4
 8007baa:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007bae:	3a30      	subs	r2, #48	; 0x30
 8007bb0:	2a09      	cmp	r2, #9
 8007bb2:	d903      	bls.n	8007bbc <_svfiprintf_r+0x1a8>
 8007bb4:	2b00      	cmp	r3, #0
 8007bb6:	d0c5      	beq.n	8007b44 <_svfiprintf_r+0x130>
 8007bb8:	9105      	str	r1, [sp, #20]
 8007bba:	e7c3      	b.n	8007b44 <_svfiprintf_r+0x130>
 8007bbc:	4604      	mov	r4, r0
 8007bbe:	2301      	movs	r3, #1
 8007bc0:	fb0c 2101 	mla	r1, ip, r1, r2
 8007bc4:	e7f0      	b.n	8007ba8 <_svfiprintf_r+0x194>
 8007bc6:	ab03      	add	r3, sp, #12
 8007bc8:	9300      	str	r3, [sp, #0]
 8007bca:	462a      	mov	r2, r5
 8007bcc:	4638      	mov	r0, r7
 8007bce:	4b10      	ldr	r3, [pc, #64]	; (8007c10 <_svfiprintf_r+0x1fc>)
 8007bd0:	a904      	add	r1, sp, #16
 8007bd2:	f3af 8000 	nop.w
 8007bd6:	1c42      	adds	r2, r0, #1
 8007bd8:	4606      	mov	r6, r0
 8007bda:	d1d6      	bne.n	8007b8a <_svfiprintf_r+0x176>
 8007bdc:	89ab      	ldrh	r3, [r5, #12]
 8007bde:	065b      	lsls	r3, r3, #25
 8007be0:	f53f af2c 	bmi.w	8007a3c <_svfiprintf_r+0x28>
 8007be4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007be6:	b01d      	add	sp, #116	; 0x74
 8007be8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007bec:	ab03      	add	r3, sp, #12
 8007bee:	9300      	str	r3, [sp, #0]
 8007bf0:	462a      	mov	r2, r5
 8007bf2:	4638      	mov	r0, r7
 8007bf4:	4b06      	ldr	r3, [pc, #24]	; (8007c10 <_svfiprintf_r+0x1fc>)
 8007bf6:	a904      	add	r1, sp, #16
 8007bf8:	f000 f9d4 	bl	8007fa4 <_printf_i>
 8007bfc:	e7eb      	b.n	8007bd6 <_svfiprintf_r+0x1c2>
 8007bfe:	bf00      	nop
 8007c00:	0800905c 	.word	0x0800905c
 8007c04:	08009062 	.word	0x08009062
 8007c08:	08009066 	.word	0x08009066
 8007c0c:	00000000 	.word	0x00000000
 8007c10:	0800795d 	.word	0x0800795d

08007c14 <__sfputc_r>:
 8007c14:	6893      	ldr	r3, [r2, #8]
 8007c16:	b410      	push	{r4}
 8007c18:	3b01      	subs	r3, #1
 8007c1a:	2b00      	cmp	r3, #0
 8007c1c:	6093      	str	r3, [r2, #8]
 8007c1e:	da07      	bge.n	8007c30 <__sfputc_r+0x1c>
 8007c20:	6994      	ldr	r4, [r2, #24]
 8007c22:	42a3      	cmp	r3, r4
 8007c24:	db01      	blt.n	8007c2a <__sfputc_r+0x16>
 8007c26:	290a      	cmp	r1, #10
 8007c28:	d102      	bne.n	8007c30 <__sfputc_r+0x1c>
 8007c2a:	bc10      	pop	{r4}
 8007c2c:	f000 bafe 	b.w	800822c <__swbuf_r>
 8007c30:	6813      	ldr	r3, [r2, #0]
 8007c32:	1c58      	adds	r0, r3, #1
 8007c34:	6010      	str	r0, [r2, #0]
 8007c36:	7019      	strb	r1, [r3, #0]
 8007c38:	4608      	mov	r0, r1
 8007c3a:	bc10      	pop	{r4}
 8007c3c:	4770      	bx	lr

08007c3e <__sfputs_r>:
 8007c3e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007c40:	4606      	mov	r6, r0
 8007c42:	460f      	mov	r7, r1
 8007c44:	4614      	mov	r4, r2
 8007c46:	18d5      	adds	r5, r2, r3
 8007c48:	42ac      	cmp	r4, r5
 8007c4a:	d101      	bne.n	8007c50 <__sfputs_r+0x12>
 8007c4c:	2000      	movs	r0, #0
 8007c4e:	e007      	b.n	8007c60 <__sfputs_r+0x22>
 8007c50:	463a      	mov	r2, r7
 8007c52:	4630      	mov	r0, r6
 8007c54:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007c58:	f7ff ffdc 	bl	8007c14 <__sfputc_r>
 8007c5c:	1c43      	adds	r3, r0, #1
 8007c5e:	d1f3      	bne.n	8007c48 <__sfputs_r+0xa>
 8007c60:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08007c64 <_vfiprintf_r>:
 8007c64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007c68:	460d      	mov	r5, r1
 8007c6a:	4614      	mov	r4, r2
 8007c6c:	4698      	mov	r8, r3
 8007c6e:	4606      	mov	r6, r0
 8007c70:	b09d      	sub	sp, #116	; 0x74
 8007c72:	b118      	cbz	r0, 8007c7c <_vfiprintf_r+0x18>
 8007c74:	6983      	ldr	r3, [r0, #24]
 8007c76:	b90b      	cbnz	r3, 8007c7c <_vfiprintf_r+0x18>
 8007c78:	f000 fcc4 	bl	8008604 <__sinit>
 8007c7c:	4b89      	ldr	r3, [pc, #548]	; (8007ea4 <_vfiprintf_r+0x240>)
 8007c7e:	429d      	cmp	r5, r3
 8007c80:	d11b      	bne.n	8007cba <_vfiprintf_r+0x56>
 8007c82:	6875      	ldr	r5, [r6, #4]
 8007c84:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007c86:	07d9      	lsls	r1, r3, #31
 8007c88:	d405      	bmi.n	8007c96 <_vfiprintf_r+0x32>
 8007c8a:	89ab      	ldrh	r3, [r5, #12]
 8007c8c:	059a      	lsls	r2, r3, #22
 8007c8e:	d402      	bmi.n	8007c96 <_vfiprintf_r+0x32>
 8007c90:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007c92:	f000 fd55 	bl	8008740 <__retarget_lock_acquire_recursive>
 8007c96:	89ab      	ldrh	r3, [r5, #12]
 8007c98:	071b      	lsls	r3, r3, #28
 8007c9a:	d501      	bpl.n	8007ca0 <_vfiprintf_r+0x3c>
 8007c9c:	692b      	ldr	r3, [r5, #16]
 8007c9e:	b9eb      	cbnz	r3, 8007cdc <_vfiprintf_r+0x78>
 8007ca0:	4629      	mov	r1, r5
 8007ca2:	4630      	mov	r0, r6
 8007ca4:	f000 fb22 	bl	80082ec <__swsetup_r>
 8007ca8:	b1c0      	cbz	r0, 8007cdc <_vfiprintf_r+0x78>
 8007caa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007cac:	07dc      	lsls	r4, r3, #31
 8007cae:	d50e      	bpl.n	8007cce <_vfiprintf_r+0x6a>
 8007cb0:	f04f 30ff 	mov.w	r0, #4294967295
 8007cb4:	b01d      	add	sp, #116	; 0x74
 8007cb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007cba:	4b7b      	ldr	r3, [pc, #492]	; (8007ea8 <_vfiprintf_r+0x244>)
 8007cbc:	429d      	cmp	r5, r3
 8007cbe:	d101      	bne.n	8007cc4 <_vfiprintf_r+0x60>
 8007cc0:	68b5      	ldr	r5, [r6, #8]
 8007cc2:	e7df      	b.n	8007c84 <_vfiprintf_r+0x20>
 8007cc4:	4b79      	ldr	r3, [pc, #484]	; (8007eac <_vfiprintf_r+0x248>)
 8007cc6:	429d      	cmp	r5, r3
 8007cc8:	bf08      	it	eq
 8007cca:	68f5      	ldreq	r5, [r6, #12]
 8007ccc:	e7da      	b.n	8007c84 <_vfiprintf_r+0x20>
 8007cce:	89ab      	ldrh	r3, [r5, #12]
 8007cd0:	0598      	lsls	r0, r3, #22
 8007cd2:	d4ed      	bmi.n	8007cb0 <_vfiprintf_r+0x4c>
 8007cd4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007cd6:	f000 fd34 	bl	8008742 <__retarget_lock_release_recursive>
 8007cda:	e7e9      	b.n	8007cb0 <_vfiprintf_r+0x4c>
 8007cdc:	2300      	movs	r3, #0
 8007cde:	9309      	str	r3, [sp, #36]	; 0x24
 8007ce0:	2320      	movs	r3, #32
 8007ce2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007ce6:	2330      	movs	r3, #48	; 0x30
 8007ce8:	f04f 0901 	mov.w	r9, #1
 8007cec:	f8cd 800c 	str.w	r8, [sp, #12]
 8007cf0:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8007eb0 <_vfiprintf_r+0x24c>
 8007cf4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8007cf8:	4623      	mov	r3, r4
 8007cfa:	469a      	mov	sl, r3
 8007cfc:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007d00:	b10a      	cbz	r2, 8007d06 <_vfiprintf_r+0xa2>
 8007d02:	2a25      	cmp	r2, #37	; 0x25
 8007d04:	d1f9      	bne.n	8007cfa <_vfiprintf_r+0x96>
 8007d06:	ebba 0b04 	subs.w	fp, sl, r4
 8007d0a:	d00b      	beq.n	8007d24 <_vfiprintf_r+0xc0>
 8007d0c:	465b      	mov	r3, fp
 8007d0e:	4622      	mov	r2, r4
 8007d10:	4629      	mov	r1, r5
 8007d12:	4630      	mov	r0, r6
 8007d14:	f7ff ff93 	bl	8007c3e <__sfputs_r>
 8007d18:	3001      	adds	r0, #1
 8007d1a:	f000 80aa 	beq.w	8007e72 <_vfiprintf_r+0x20e>
 8007d1e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007d20:	445a      	add	r2, fp
 8007d22:	9209      	str	r2, [sp, #36]	; 0x24
 8007d24:	f89a 3000 	ldrb.w	r3, [sl]
 8007d28:	2b00      	cmp	r3, #0
 8007d2a:	f000 80a2 	beq.w	8007e72 <_vfiprintf_r+0x20e>
 8007d2e:	2300      	movs	r3, #0
 8007d30:	f04f 32ff 	mov.w	r2, #4294967295
 8007d34:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007d38:	f10a 0a01 	add.w	sl, sl, #1
 8007d3c:	9304      	str	r3, [sp, #16]
 8007d3e:	9307      	str	r3, [sp, #28]
 8007d40:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8007d44:	931a      	str	r3, [sp, #104]	; 0x68
 8007d46:	4654      	mov	r4, sl
 8007d48:	2205      	movs	r2, #5
 8007d4a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007d4e:	4858      	ldr	r0, [pc, #352]	; (8007eb0 <_vfiprintf_r+0x24c>)
 8007d50:	f000 fd5e 	bl	8008810 <memchr>
 8007d54:	9a04      	ldr	r2, [sp, #16]
 8007d56:	b9d8      	cbnz	r0, 8007d90 <_vfiprintf_r+0x12c>
 8007d58:	06d1      	lsls	r1, r2, #27
 8007d5a:	bf44      	itt	mi
 8007d5c:	2320      	movmi	r3, #32
 8007d5e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007d62:	0713      	lsls	r3, r2, #28
 8007d64:	bf44      	itt	mi
 8007d66:	232b      	movmi	r3, #43	; 0x2b
 8007d68:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007d6c:	f89a 3000 	ldrb.w	r3, [sl]
 8007d70:	2b2a      	cmp	r3, #42	; 0x2a
 8007d72:	d015      	beq.n	8007da0 <_vfiprintf_r+0x13c>
 8007d74:	4654      	mov	r4, sl
 8007d76:	2000      	movs	r0, #0
 8007d78:	f04f 0c0a 	mov.w	ip, #10
 8007d7c:	9a07      	ldr	r2, [sp, #28]
 8007d7e:	4621      	mov	r1, r4
 8007d80:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007d84:	3b30      	subs	r3, #48	; 0x30
 8007d86:	2b09      	cmp	r3, #9
 8007d88:	d94e      	bls.n	8007e28 <_vfiprintf_r+0x1c4>
 8007d8a:	b1b0      	cbz	r0, 8007dba <_vfiprintf_r+0x156>
 8007d8c:	9207      	str	r2, [sp, #28]
 8007d8e:	e014      	b.n	8007dba <_vfiprintf_r+0x156>
 8007d90:	eba0 0308 	sub.w	r3, r0, r8
 8007d94:	fa09 f303 	lsl.w	r3, r9, r3
 8007d98:	4313      	orrs	r3, r2
 8007d9a:	46a2      	mov	sl, r4
 8007d9c:	9304      	str	r3, [sp, #16]
 8007d9e:	e7d2      	b.n	8007d46 <_vfiprintf_r+0xe2>
 8007da0:	9b03      	ldr	r3, [sp, #12]
 8007da2:	1d19      	adds	r1, r3, #4
 8007da4:	681b      	ldr	r3, [r3, #0]
 8007da6:	9103      	str	r1, [sp, #12]
 8007da8:	2b00      	cmp	r3, #0
 8007daa:	bfbb      	ittet	lt
 8007dac:	425b      	neglt	r3, r3
 8007dae:	f042 0202 	orrlt.w	r2, r2, #2
 8007db2:	9307      	strge	r3, [sp, #28]
 8007db4:	9307      	strlt	r3, [sp, #28]
 8007db6:	bfb8      	it	lt
 8007db8:	9204      	strlt	r2, [sp, #16]
 8007dba:	7823      	ldrb	r3, [r4, #0]
 8007dbc:	2b2e      	cmp	r3, #46	; 0x2e
 8007dbe:	d10c      	bne.n	8007dda <_vfiprintf_r+0x176>
 8007dc0:	7863      	ldrb	r3, [r4, #1]
 8007dc2:	2b2a      	cmp	r3, #42	; 0x2a
 8007dc4:	d135      	bne.n	8007e32 <_vfiprintf_r+0x1ce>
 8007dc6:	9b03      	ldr	r3, [sp, #12]
 8007dc8:	3402      	adds	r4, #2
 8007dca:	1d1a      	adds	r2, r3, #4
 8007dcc:	681b      	ldr	r3, [r3, #0]
 8007dce:	9203      	str	r2, [sp, #12]
 8007dd0:	2b00      	cmp	r3, #0
 8007dd2:	bfb8      	it	lt
 8007dd4:	f04f 33ff 	movlt.w	r3, #4294967295
 8007dd8:	9305      	str	r3, [sp, #20]
 8007dda:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8007eb4 <_vfiprintf_r+0x250>
 8007dde:	2203      	movs	r2, #3
 8007de0:	4650      	mov	r0, sl
 8007de2:	7821      	ldrb	r1, [r4, #0]
 8007de4:	f000 fd14 	bl	8008810 <memchr>
 8007de8:	b140      	cbz	r0, 8007dfc <_vfiprintf_r+0x198>
 8007dea:	2340      	movs	r3, #64	; 0x40
 8007dec:	eba0 000a 	sub.w	r0, r0, sl
 8007df0:	fa03 f000 	lsl.w	r0, r3, r0
 8007df4:	9b04      	ldr	r3, [sp, #16]
 8007df6:	3401      	adds	r4, #1
 8007df8:	4303      	orrs	r3, r0
 8007dfa:	9304      	str	r3, [sp, #16]
 8007dfc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007e00:	2206      	movs	r2, #6
 8007e02:	482d      	ldr	r0, [pc, #180]	; (8007eb8 <_vfiprintf_r+0x254>)
 8007e04:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007e08:	f000 fd02 	bl	8008810 <memchr>
 8007e0c:	2800      	cmp	r0, #0
 8007e0e:	d03f      	beq.n	8007e90 <_vfiprintf_r+0x22c>
 8007e10:	4b2a      	ldr	r3, [pc, #168]	; (8007ebc <_vfiprintf_r+0x258>)
 8007e12:	bb1b      	cbnz	r3, 8007e5c <_vfiprintf_r+0x1f8>
 8007e14:	9b03      	ldr	r3, [sp, #12]
 8007e16:	3307      	adds	r3, #7
 8007e18:	f023 0307 	bic.w	r3, r3, #7
 8007e1c:	3308      	adds	r3, #8
 8007e1e:	9303      	str	r3, [sp, #12]
 8007e20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007e22:	443b      	add	r3, r7
 8007e24:	9309      	str	r3, [sp, #36]	; 0x24
 8007e26:	e767      	b.n	8007cf8 <_vfiprintf_r+0x94>
 8007e28:	460c      	mov	r4, r1
 8007e2a:	2001      	movs	r0, #1
 8007e2c:	fb0c 3202 	mla	r2, ip, r2, r3
 8007e30:	e7a5      	b.n	8007d7e <_vfiprintf_r+0x11a>
 8007e32:	2300      	movs	r3, #0
 8007e34:	f04f 0c0a 	mov.w	ip, #10
 8007e38:	4619      	mov	r1, r3
 8007e3a:	3401      	adds	r4, #1
 8007e3c:	9305      	str	r3, [sp, #20]
 8007e3e:	4620      	mov	r0, r4
 8007e40:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007e44:	3a30      	subs	r2, #48	; 0x30
 8007e46:	2a09      	cmp	r2, #9
 8007e48:	d903      	bls.n	8007e52 <_vfiprintf_r+0x1ee>
 8007e4a:	2b00      	cmp	r3, #0
 8007e4c:	d0c5      	beq.n	8007dda <_vfiprintf_r+0x176>
 8007e4e:	9105      	str	r1, [sp, #20]
 8007e50:	e7c3      	b.n	8007dda <_vfiprintf_r+0x176>
 8007e52:	4604      	mov	r4, r0
 8007e54:	2301      	movs	r3, #1
 8007e56:	fb0c 2101 	mla	r1, ip, r1, r2
 8007e5a:	e7f0      	b.n	8007e3e <_vfiprintf_r+0x1da>
 8007e5c:	ab03      	add	r3, sp, #12
 8007e5e:	9300      	str	r3, [sp, #0]
 8007e60:	462a      	mov	r2, r5
 8007e62:	4630      	mov	r0, r6
 8007e64:	4b16      	ldr	r3, [pc, #88]	; (8007ec0 <_vfiprintf_r+0x25c>)
 8007e66:	a904      	add	r1, sp, #16
 8007e68:	f3af 8000 	nop.w
 8007e6c:	4607      	mov	r7, r0
 8007e6e:	1c78      	adds	r0, r7, #1
 8007e70:	d1d6      	bne.n	8007e20 <_vfiprintf_r+0x1bc>
 8007e72:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007e74:	07d9      	lsls	r1, r3, #31
 8007e76:	d405      	bmi.n	8007e84 <_vfiprintf_r+0x220>
 8007e78:	89ab      	ldrh	r3, [r5, #12]
 8007e7a:	059a      	lsls	r2, r3, #22
 8007e7c:	d402      	bmi.n	8007e84 <_vfiprintf_r+0x220>
 8007e7e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007e80:	f000 fc5f 	bl	8008742 <__retarget_lock_release_recursive>
 8007e84:	89ab      	ldrh	r3, [r5, #12]
 8007e86:	065b      	lsls	r3, r3, #25
 8007e88:	f53f af12 	bmi.w	8007cb0 <_vfiprintf_r+0x4c>
 8007e8c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007e8e:	e711      	b.n	8007cb4 <_vfiprintf_r+0x50>
 8007e90:	ab03      	add	r3, sp, #12
 8007e92:	9300      	str	r3, [sp, #0]
 8007e94:	462a      	mov	r2, r5
 8007e96:	4630      	mov	r0, r6
 8007e98:	4b09      	ldr	r3, [pc, #36]	; (8007ec0 <_vfiprintf_r+0x25c>)
 8007e9a:	a904      	add	r1, sp, #16
 8007e9c:	f000 f882 	bl	8007fa4 <_printf_i>
 8007ea0:	e7e4      	b.n	8007e6c <_vfiprintf_r+0x208>
 8007ea2:	bf00      	nop
 8007ea4:	080090b0 	.word	0x080090b0
 8007ea8:	080090d0 	.word	0x080090d0
 8007eac:	08009090 	.word	0x08009090
 8007eb0:	0800905c 	.word	0x0800905c
 8007eb4:	08009062 	.word	0x08009062
 8007eb8:	08009066 	.word	0x08009066
 8007ebc:	00000000 	.word	0x00000000
 8007ec0:	08007c3f 	.word	0x08007c3f

08007ec4 <_printf_common>:
 8007ec4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007ec8:	4616      	mov	r6, r2
 8007eca:	4699      	mov	r9, r3
 8007ecc:	688a      	ldr	r2, [r1, #8]
 8007ece:	690b      	ldr	r3, [r1, #16]
 8007ed0:	4607      	mov	r7, r0
 8007ed2:	4293      	cmp	r3, r2
 8007ed4:	bfb8      	it	lt
 8007ed6:	4613      	movlt	r3, r2
 8007ed8:	6033      	str	r3, [r6, #0]
 8007eda:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8007ede:	460c      	mov	r4, r1
 8007ee0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8007ee4:	b10a      	cbz	r2, 8007eea <_printf_common+0x26>
 8007ee6:	3301      	adds	r3, #1
 8007ee8:	6033      	str	r3, [r6, #0]
 8007eea:	6823      	ldr	r3, [r4, #0]
 8007eec:	0699      	lsls	r1, r3, #26
 8007eee:	bf42      	ittt	mi
 8007ef0:	6833      	ldrmi	r3, [r6, #0]
 8007ef2:	3302      	addmi	r3, #2
 8007ef4:	6033      	strmi	r3, [r6, #0]
 8007ef6:	6825      	ldr	r5, [r4, #0]
 8007ef8:	f015 0506 	ands.w	r5, r5, #6
 8007efc:	d106      	bne.n	8007f0c <_printf_common+0x48>
 8007efe:	f104 0a19 	add.w	sl, r4, #25
 8007f02:	68e3      	ldr	r3, [r4, #12]
 8007f04:	6832      	ldr	r2, [r6, #0]
 8007f06:	1a9b      	subs	r3, r3, r2
 8007f08:	42ab      	cmp	r3, r5
 8007f0a:	dc28      	bgt.n	8007f5e <_printf_common+0x9a>
 8007f0c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8007f10:	1e13      	subs	r3, r2, #0
 8007f12:	6822      	ldr	r2, [r4, #0]
 8007f14:	bf18      	it	ne
 8007f16:	2301      	movne	r3, #1
 8007f18:	0692      	lsls	r2, r2, #26
 8007f1a:	d42d      	bmi.n	8007f78 <_printf_common+0xb4>
 8007f1c:	4649      	mov	r1, r9
 8007f1e:	4638      	mov	r0, r7
 8007f20:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8007f24:	47c0      	blx	r8
 8007f26:	3001      	adds	r0, #1
 8007f28:	d020      	beq.n	8007f6c <_printf_common+0xa8>
 8007f2a:	6823      	ldr	r3, [r4, #0]
 8007f2c:	68e5      	ldr	r5, [r4, #12]
 8007f2e:	f003 0306 	and.w	r3, r3, #6
 8007f32:	2b04      	cmp	r3, #4
 8007f34:	bf18      	it	ne
 8007f36:	2500      	movne	r5, #0
 8007f38:	6832      	ldr	r2, [r6, #0]
 8007f3a:	f04f 0600 	mov.w	r6, #0
 8007f3e:	68a3      	ldr	r3, [r4, #8]
 8007f40:	bf08      	it	eq
 8007f42:	1aad      	subeq	r5, r5, r2
 8007f44:	6922      	ldr	r2, [r4, #16]
 8007f46:	bf08      	it	eq
 8007f48:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8007f4c:	4293      	cmp	r3, r2
 8007f4e:	bfc4      	itt	gt
 8007f50:	1a9b      	subgt	r3, r3, r2
 8007f52:	18ed      	addgt	r5, r5, r3
 8007f54:	341a      	adds	r4, #26
 8007f56:	42b5      	cmp	r5, r6
 8007f58:	d11a      	bne.n	8007f90 <_printf_common+0xcc>
 8007f5a:	2000      	movs	r0, #0
 8007f5c:	e008      	b.n	8007f70 <_printf_common+0xac>
 8007f5e:	2301      	movs	r3, #1
 8007f60:	4652      	mov	r2, sl
 8007f62:	4649      	mov	r1, r9
 8007f64:	4638      	mov	r0, r7
 8007f66:	47c0      	blx	r8
 8007f68:	3001      	adds	r0, #1
 8007f6a:	d103      	bne.n	8007f74 <_printf_common+0xb0>
 8007f6c:	f04f 30ff 	mov.w	r0, #4294967295
 8007f70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007f74:	3501      	adds	r5, #1
 8007f76:	e7c4      	b.n	8007f02 <_printf_common+0x3e>
 8007f78:	2030      	movs	r0, #48	; 0x30
 8007f7a:	18e1      	adds	r1, r4, r3
 8007f7c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8007f80:	1c5a      	adds	r2, r3, #1
 8007f82:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8007f86:	4422      	add	r2, r4
 8007f88:	3302      	adds	r3, #2
 8007f8a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8007f8e:	e7c5      	b.n	8007f1c <_printf_common+0x58>
 8007f90:	2301      	movs	r3, #1
 8007f92:	4622      	mov	r2, r4
 8007f94:	4649      	mov	r1, r9
 8007f96:	4638      	mov	r0, r7
 8007f98:	47c0      	blx	r8
 8007f9a:	3001      	adds	r0, #1
 8007f9c:	d0e6      	beq.n	8007f6c <_printf_common+0xa8>
 8007f9e:	3601      	adds	r6, #1
 8007fa0:	e7d9      	b.n	8007f56 <_printf_common+0x92>
	...

08007fa4 <_printf_i>:
 8007fa4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007fa8:	7e0f      	ldrb	r7, [r1, #24]
 8007faa:	4691      	mov	r9, r2
 8007fac:	2f78      	cmp	r7, #120	; 0x78
 8007fae:	4680      	mov	r8, r0
 8007fb0:	460c      	mov	r4, r1
 8007fb2:	469a      	mov	sl, r3
 8007fb4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8007fb6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8007fba:	d807      	bhi.n	8007fcc <_printf_i+0x28>
 8007fbc:	2f62      	cmp	r7, #98	; 0x62
 8007fbe:	d80a      	bhi.n	8007fd6 <_printf_i+0x32>
 8007fc0:	2f00      	cmp	r7, #0
 8007fc2:	f000 80d9 	beq.w	8008178 <_printf_i+0x1d4>
 8007fc6:	2f58      	cmp	r7, #88	; 0x58
 8007fc8:	f000 80a4 	beq.w	8008114 <_printf_i+0x170>
 8007fcc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8007fd0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8007fd4:	e03a      	b.n	800804c <_printf_i+0xa8>
 8007fd6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8007fda:	2b15      	cmp	r3, #21
 8007fdc:	d8f6      	bhi.n	8007fcc <_printf_i+0x28>
 8007fde:	a101      	add	r1, pc, #4	; (adr r1, 8007fe4 <_printf_i+0x40>)
 8007fe0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8007fe4:	0800803d 	.word	0x0800803d
 8007fe8:	08008051 	.word	0x08008051
 8007fec:	08007fcd 	.word	0x08007fcd
 8007ff0:	08007fcd 	.word	0x08007fcd
 8007ff4:	08007fcd 	.word	0x08007fcd
 8007ff8:	08007fcd 	.word	0x08007fcd
 8007ffc:	08008051 	.word	0x08008051
 8008000:	08007fcd 	.word	0x08007fcd
 8008004:	08007fcd 	.word	0x08007fcd
 8008008:	08007fcd 	.word	0x08007fcd
 800800c:	08007fcd 	.word	0x08007fcd
 8008010:	0800815f 	.word	0x0800815f
 8008014:	08008081 	.word	0x08008081
 8008018:	08008141 	.word	0x08008141
 800801c:	08007fcd 	.word	0x08007fcd
 8008020:	08007fcd 	.word	0x08007fcd
 8008024:	08008181 	.word	0x08008181
 8008028:	08007fcd 	.word	0x08007fcd
 800802c:	08008081 	.word	0x08008081
 8008030:	08007fcd 	.word	0x08007fcd
 8008034:	08007fcd 	.word	0x08007fcd
 8008038:	08008149 	.word	0x08008149
 800803c:	682b      	ldr	r3, [r5, #0]
 800803e:	1d1a      	adds	r2, r3, #4
 8008040:	681b      	ldr	r3, [r3, #0]
 8008042:	602a      	str	r2, [r5, #0]
 8008044:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8008048:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800804c:	2301      	movs	r3, #1
 800804e:	e0a4      	b.n	800819a <_printf_i+0x1f6>
 8008050:	6820      	ldr	r0, [r4, #0]
 8008052:	6829      	ldr	r1, [r5, #0]
 8008054:	0606      	lsls	r6, r0, #24
 8008056:	f101 0304 	add.w	r3, r1, #4
 800805a:	d50a      	bpl.n	8008072 <_printf_i+0xce>
 800805c:	680e      	ldr	r6, [r1, #0]
 800805e:	602b      	str	r3, [r5, #0]
 8008060:	2e00      	cmp	r6, #0
 8008062:	da03      	bge.n	800806c <_printf_i+0xc8>
 8008064:	232d      	movs	r3, #45	; 0x2d
 8008066:	4276      	negs	r6, r6
 8008068:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800806c:	230a      	movs	r3, #10
 800806e:	485e      	ldr	r0, [pc, #376]	; (80081e8 <_printf_i+0x244>)
 8008070:	e019      	b.n	80080a6 <_printf_i+0x102>
 8008072:	680e      	ldr	r6, [r1, #0]
 8008074:	f010 0f40 	tst.w	r0, #64	; 0x40
 8008078:	602b      	str	r3, [r5, #0]
 800807a:	bf18      	it	ne
 800807c:	b236      	sxthne	r6, r6
 800807e:	e7ef      	b.n	8008060 <_printf_i+0xbc>
 8008080:	682b      	ldr	r3, [r5, #0]
 8008082:	6820      	ldr	r0, [r4, #0]
 8008084:	1d19      	adds	r1, r3, #4
 8008086:	6029      	str	r1, [r5, #0]
 8008088:	0601      	lsls	r1, r0, #24
 800808a:	d501      	bpl.n	8008090 <_printf_i+0xec>
 800808c:	681e      	ldr	r6, [r3, #0]
 800808e:	e002      	b.n	8008096 <_printf_i+0xf2>
 8008090:	0646      	lsls	r6, r0, #25
 8008092:	d5fb      	bpl.n	800808c <_printf_i+0xe8>
 8008094:	881e      	ldrh	r6, [r3, #0]
 8008096:	2f6f      	cmp	r7, #111	; 0x6f
 8008098:	bf0c      	ite	eq
 800809a:	2308      	moveq	r3, #8
 800809c:	230a      	movne	r3, #10
 800809e:	4852      	ldr	r0, [pc, #328]	; (80081e8 <_printf_i+0x244>)
 80080a0:	2100      	movs	r1, #0
 80080a2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80080a6:	6865      	ldr	r5, [r4, #4]
 80080a8:	2d00      	cmp	r5, #0
 80080aa:	bfa8      	it	ge
 80080ac:	6821      	ldrge	r1, [r4, #0]
 80080ae:	60a5      	str	r5, [r4, #8]
 80080b0:	bfa4      	itt	ge
 80080b2:	f021 0104 	bicge.w	r1, r1, #4
 80080b6:	6021      	strge	r1, [r4, #0]
 80080b8:	b90e      	cbnz	r6, 80080be <_printf_i+0x11a>
 80080ba:	2d00      	cmp	r5, #0
 80080bc:	d04d      	beq.n	800815a <_printf_i+0x1b6>
 80080be:	4615      	mov	r5, r2
 80080c0:	fbb6 f1f3 	udiv	r1, r6, r3
 80080c4:	fb03 6711 	mls	r7, r3, r1, r6
 80080c8:	5dc7      	ldrb	r7, [r0, r7]
 80080ca:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80080ce:	4637      	mov	r7, r6
 80080d0:	42bb      	cmp	r3, r7
 80080d2:	460e      	mov	r6, r1
 80080d4:	d9f4      	bls.n	80080c0 <_printf_i+0x11c>
 80080d6:	2b08      	cmp	r3, #8
 80080d8:	d10b      	bne.n	80080f2 <_printf_i+0x14e>
 80080da:	6823      	ldr	r3, [r4, #0]
 80080dc:	07de      	lsls	r6, r3, #31
 80080de:	d508      	bpl.n	80080f2 <_printf_i+0x14e>
 80080e0:	6923      	ldr	r3, [r4, #16]
 80080e2:	6861      	ldr	r1, [r4, #4]
 80080e4:	4299      	cmp	r1, r3
 80080e6:	bfde      	ittt	le
 80080e8:	2330      	movle	r3, #48	; 0x30
 80080ea:	f805 3c01 	strble.w	r3, [r5, #-1]
 80080ee:	f105 35ff 	addle.w	r5, r5, #4294967295
 80080f2:	1b52      	subs	r2, r2, r5
 80080f4:	6122      	str	r2, [r4, #16]
 80080f6:	464b      	mov	r3, r9
 80080f8:	4621      	mov	r1, r4
 80080fa:	4640      	mov	r0, r8
 80080fc:	f8cd a000 	str.w	sl, [sp]
 8008100:	aa03      	add	r2, sp, #12
 8008102:	f7ff fedf 	bl	8007ec4 <_printf_common>
 8008106:	3001      	adds	r0, #1
 8008108:	d14c      	bne.n	80081a4 <_printf_i+0x200>
 800810a:	f04f 30ff 	mov.w	r0, #4294967295
 800810e:	b004      	add	sp, #16
 8008110:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008114:	4834      	ldr	r0, [pc, #208]	; (80081e8 <_printf_i+0x244>)
 8008116:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800811a:	6829      	ldr	r1, [r5, #0]
 800811c:	6823      	ldr	r3, [r4, #0]
 800811e:	f851 6b04 	ldr.w	r6, [r1], #4
 8008122:	6029      	str	r1, [r5, #0]
 8008124:	061d      	lsls	r5, r3, #24
 8008126:	d514      	bpl.n	8008152 <_printf_i+0x1ae>
 8008128:	07df      	lsls	r7, r3, #31
 800812a:	bf44      	itt	mi
 800812c:	f043 0320 	orrmi.w	r3, r3, #32
 8008130:	6023      	strmi	r3, [r4, #0]
 8008132:	b91e      	cbnz	r6, 800813c <_printf_i+0x198>
 8008134:	6823      	ldr	r3, [r4, #0]
 8008136:	f023 0320 	bic.w	r3, r3, #32
 800813a:	6023      	str	r3, [r4, #0]
 800813c:	2310      	movs	r3, #16
 800813e:	e7af      	b.n	80080a0 <_printf_i+0xfc>
 8008140:	6823      	ldr	r3, [r4, #0]
 8008142:	f043 0320 	orr.w	r3, r3, #32
 8008146:	6023      	str	r3, [r4, #0]
 8008148:	2378      	movs	r3, #120	; 0x78
 800814a:	4828      	ldr	r0, [pc, #160]	; (80081ec <_printf_i+0x248>)
 800814c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8008150:	e7e3      	b.n	800811a <_printf_i+0x176>
 8008152:	0659      	lsls	r1, r3, #25
 8008154:	bf48      	it	mi
 8008156:	b2b6      	uxthmi	r6, r6
 8008158:	e7e6      	b.n	8008128 <_printf_i+0x184>
 800815a:	4615      	mov	r5, r2
 800815c:	e7bb      	b.n	80080d6 <_printf_i+0x132>
 800815e:	682b      	ldr	r3, [r5, #0]
 8008160:	6826      	ldr	r6, [r4, #0]
 8008162:	1d18      	adds	r0, r3, #4
 8008164:	6961      	ldr	r1, [r4, #20]
 8008166:	6028      	str	r0, [r5, #0]
 8008168:	0635      	lsls	r5, r6, #24
 800816a:	681b      	ldr	r3, [r3, #0]
 800816c:	d501      	bpl.n	8008172 <_printf_i+0x1ce>
 800816e:	6019      	str	r1, [r3, #0]
 8008170:	e002      	b.n	8008178 <_printf_i+0x1d4>
 8008172:	0670      	lsls	r0, r6, #25
 8008174:	d5fb      	bpl.n	800816e <_printf_i+0x1ca>
 8008176:	8019      	strh	r1, [r3, #0]
 8008178:	2300      	movs	r3, #0
 800817a:	4615      	mov	r5, r2
 800817c:	6123      	str	r3, [r4, #16]
 800817e:	e7ba      	b.n	80080f6 <_printf_i+0x152>
 8008180:	682b      	ldr	r3, [r5, #0]
 8008182:	2100      	movs	r1, #0
 8008184:	1d1a      	adds	r2, r3, #4
 8008186:	602a      	str	r2, [r5, #0]
 8008188:	681d      	ldr	r5, [r3, #0]
 800818a:	6862      	ldr	r2, [r4, #4]
 800818c:	4628      	mov	r0, r5
 800818e:	f000 fb3f 	bl	8008810 <memchr>
 8008192:	b108      	cbz	r0, 8008198 <_printf_i+0x1f4>
 8008194:	1b40      	subs	r0, r0, r5
 8008196:	6060      	str	r0, [r4, #4]
 8008198:	6863      	ldr	r3, [r4, #4]
 800819a:	6123      	str	r3, [r4, #16]
 800819c:	2300      	movs	r3, #0
 800819e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80081a2:	e7a8      	b.n	80080f6 <_printf_i+0x152>
 80081a4:	462a      	mov	r2, r5
 80081a6:	4649      	mov	r1, r9
 80081a8:	4640      	mov	r0, r8
 80081aa:	6923      	ldr	r3, [r4, #16]
 80081ac:	47d0      	blx	sl
 80081ae:	3001      	adds	r0, #1
 80081b0:	d0ab      	beq.n	800810a <_printf_i+0x166>
 80081b2:	6823      	ldr	r3, [r4, #0]
 80081b4:	079b      	lsls	r3, r3, #30
 80081b6:	d413      	bmi.n	80081e0 <_printf_i+0x23c>
 80081b8:	68e0      	ldr	r0, [r4, #12]
 80081ba:	9b03      	ldr	r3, [sp, #12]
 80081bc:	4298      	cmp	r0, r3
 80081be:	bfb8      	it	lt
 80081c0:	4618      	movlt	r0, r3
 80081c2:	e7a4      	b.n	800810e <_printf_i+0x16a>
 80081c4:	2301      	movs	r3, #1
 80081c6:	4632      	mov	r2, r6
 80081c8:	4649      	mov	r1, r9
 80081ca:	4640      	mov	r0, r8
 80081cc:	47d0      	blx	sl
 80081ce:	3001      	adds	r0, #1
 80081d0:	d09b      	beq.n	800810a <_printf_i+0x166>
 80081d2:	3501      	adds	r5, #1
 80081d4:	68e3      	ldr	r3, [r4, #12]
 80081d6:	9903      	ldr	r1, [sp, #12]
 80081d8:	1a5b      	subs	r3, r3, r1
 80081da:	42ab      	cmp	r3, r5
 80081dc:	dcf2      	bgt.n	80081c4 <_printf_i+0x220>
 80081de:	e7eb      	b.n	80081b8 <_printf_i+0x214>
 80081e0:	2500      	movs	r5, #0
 80081e2:	f104 0619 	add.w	r6, r4, #25
 80081e6:	e7f5      	b.n	80081d4 <_printf_i+0x230>
 80081e8:	0800906d 	.word	0x0800906d
 80081ec:	0800907e 	.word	0x0800907e

080081f0 <nan>:
 80081f0:	2000      	movs	r0, #0
 80081f2:	4901      	ldr	r1, [pc, #4]	; (80081f8 <nan+0x8>)
 80081f4:	4770      	bx	lr
 80081f6:	bf00      	nop
 80081f8:	7ff80000 	.word	0x7ff80000

080081fc <nanf>:
 80081fc:	4800      	ldr	r0, [pc, #0]	; (8008200 <nanf+0x4>)
 80081fe:	4770      	bx	lr
 8008200:	7fc00000 	.word	0x7fc00000

08008204 <strncmp>:
 8008204:	4603      	mov	r3, r0
 8008206:	b510      	push	{r4, lr}
 8008208:	b172      	cbz	r2, 8008228 <strncmp+0x24>
 800820a:	3901      	subs	r1, #1
 800820c:	1884      	adds	r4, r0, r2
 800820e:	f813 0b01 	ldrb.w	r0, [r3], #1
 8008212:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8008216:	4290      	cmp	r0, r2
 8008218:	d101      	bne.n	800821e <strncmp+0x1a>
 800821a:	42a3      	cmp	r3, r4
 800821c:	d101      	bne.n	8008222 <strncmp+0x1e>
 800821e:	1a80      	subs	r0, r0, r2
 8008220:	bd10      	pop	{r4, pc}
 8008222:	2800      	cmp	r0, #0
 8008224:	d1f3      	bne.n	800820e <strncmp+0xa>
 8008226:	e7fa      	b.n	800821e <strncmp+0x1a>
 8008228:	4610      	mov	r0, r2
 800822a:	e7f9      	b.n	8008220 <strncmp+0x1c>

0800822c <__swbuf_r>:
 800822c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800822e:	460e      	mov	r6, r1
 8008230:	4614      	mov	r4, r2
 8008232:	4605      	mov	r5, r0
 8008234:	b118      	cbz	r0, 800823e <__swbuf_r+0x12>
 8008236:	6983      	ldr	r3, [r0, #24]
 8008238:	b90b      	cbnz	r3, 800823e <__swbuf_r+0x12>
 800823a:	f000 f9e3 	bl	8008604 <__sinit>
 800823e:	4b21      	ldr	r3, [pc, #132]	; (80082c4 <__swbuf_r+0x98>)
 8008240:	429c      	cmp	r4, r3
 8008242:	d12b      	bne.n	800829c <__swbuf_r+0x70>
 8008244:	686c      	ldr	r4, [r5, #4]
 8008246:	69a3      	ldr	r3, [r4, #24]
 8008248:	60a3      	str	r3, [r4, #8]
 800824a:	89a3      	ldrh	r3, [r4, #12]
 800824c:	071a      	lsls	r2, r3, #28
 800824e:	d52f      	bpl.n	80082b0 <__swbuf_r+0x84>
 8008250:	6923      	ldr	r3, [r4, #16]
 8008252:	b36b      	cbz	r3, 80082b0 <__swbuf_r+0x84>
 8008254:	6923      	ldr	r3, [r4, #16]
 8008256:	6820      	ldr	r0, [r4, #0]
 8008258:	b2f6      	uxtb	r6, r6
 800825a:	1ac0      	subs	r0, r0, r3
 800825c:	6963      	ldr	r3, [r4, #20]
 800825e:	4637      	mov	r7, r6
 8008260:	4283      	cmp	r3, r0
 8008262:	dc04      	bgt.n	800826e <__swbuf_r+0x42>
 8008264:	4621      	mov	r1, r4
 8008266:	4628      	mov	r0, r5
 8008268:	f000 f938 	bl	80084dc <_fflush_r>
 800826c:	bb30      	cbnz	r0, 80082bc <__swbuf_r+0x90>
 800826e:	68a3      	ldr	r3, [r4, #8]
 8008270:	3001      	adds	r0, #1
 8008272:	3b01      	subs	r3, #1
 8008274:	60a3      	str	r3, [r4, #8]
 8008276:	6823      	ldr	r3, [r4, #0]
 8008278:	1c5a      	adds	r2, r3, #1
 800827a:	6022      	str	r2, [r4, #0]
 800827c:	701e      	strb	r6, [r3, #0]
 800827e:	6963      	ldr	r3, [r4, #20]
 8008280:	4283      	cmp	r3, r0
 8008282:	d004      	beq.n	800828e <__swbuf_r+0x62>
 8008284:	89a3      	ldrh	r3, [r4, #12]
 8008286:	07db      	lsls	r3, r3, #31
 8008288:	d506      	bpl.n	8008298 <__swbuf_r+0x6c>
 800828a:	2e0a      	cmp	r6, #10
 800828c:	d104      	bne.n	8008298 <__swbuf_r+0x6c>
 800828e:	4621      	mov	r1, r4
 8008290:	4628      	mov	r0, r5
 8008292:	f000 f923 	bl	80084dc <_fflush_r>
 8008296:	b988      	cbnz	r0, 80082bc <__swbuf_r+0x90>
 8008298:	4638      	mov	r0, r7
 800829a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800829c:	4b0a      	ldr	r3, [pc, #40]	; (80082c8 <__swbuf_r+0x9c>)
 800829e:	429c      	cmp	r4, r3
 80082a0:	d101      	bne.n	80082a6 <__swbuf_r+0x7a>
 80082a2:	68ac      	ldr	r4, [r5, #8]
 80082a4:	e7cf      	b.n	8008246 <__swbuf_r+0x1a>
 80082a6:	4b09      	ldr	r3, [pc, #36]	; (80082cc <__swbuf_r+0xa0>)
 80082a8:	429c      	cmp	r4, r3
 80082aa:	bf08      	it	eq
 80082ac:	68ec      	ldreq	r4, [r5, #12]
 80082ae:	e7ca      	b.n	8008246 <__swbuf_r+0x1a>
 80082b0:	4621      	mov	r1, r4
 80082b2:	4628      	mov	r0, r5
 80082b4:	f000 f81a 	bl	80082ec <__swsetup_r>
 80082b8:	2800      	cmp	r0, #0
 80082ba:	d0cb      	beq.n	8008254 <__swbuf_r+0x28>
 80082bc:	f04f 37ff 	mov.w	r7, #4294967295
 80082c0:	e7ea      	b.n	8008298 <__swbuf_r+0x6c>
 80082c2:	bf00      	nop
 80082c4:	080090b0 	.word	0x080090b0
 80082c8:	080090d0 	.word	0x080090d0
 80082cc:	08009090 	.word	0x08009090

080082d0 <__ascii_wctomb>:
 80082d0:	4603      	mov	r3, r0
 80082d2:	4608      	mov	r0, r1
 80082d4:	b141      	cbz	r1, 80082e8 <__ascii_wctomb+0x18>
 80082d6:	2aff      	cmp	r2, #255	; 0xff
 80082d8:	d904      	bls.n	80082e4 <__ascii_wctomb+0x14>
 80082da:	228a      	movs	r2, #138	; 0x8a
 80082dc:	f04f 30ff 	mov.w	r0, #4294967295
 80082e0:	601a      	str	r2, [r3, #0]
 80082e2:	4770      	bx	lr
 80082e4:	2001      	movs	r0, #1
 80082e6:	700a      	strb	r2, [r1, #0]
 80082e8:	4770      	bx	lr
	...

080082ec <__swsetup_r>:
 80082ec:	4b32      	ldr	r3, [pc, #200]	; (80083b8 <__swsetup_r+0xcc>)
 80082ee:	b570      	push	{r4, r5, r6, lr}
 80082f0:	681d      	ldr	r5, [r3, #0]
 80082f2:	4606      	mov	r6, r0
 80082f4:	460c      	mov	r4, r1
 80082f6:	b125      	cbz	r5, 8008302 <__swsetup_r+0x16>
 80082f8:	69ab      	ldr	r3, [r5, #24]
 80082fa:	b913      	cbnz	r3, 8008302 <__swsetup_r+0x16>
 80082fc:	4628      	mov	r0, r5
 80082fe:	f000 f981 	bl	8008604 <__sinit>
 8008302:	4b2e      	ldr	r3, [pc, #184]	; (80083bc <__swsetup_r+0xd0>)
 8008304:	429c      	cmp	r4, r3
 8008306:	d10f      	bne.n	8008328 <__swsetup_r+0x3c>
 8008308:	686c      	ldr	r4, [r5, #4]
 800830a:	89a3      	ldrh	r3, [r4, #12]
 800830c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8008310:	0719      	lsls	r1, r3, #28
 8008312:	d42c      	bmi.n	800836e <__swsetup_r+0x82>
 8008314:	06dd      	lsls	r5, r3, #27
 8008316:	d411      	bmi.n	800833c <__swsetup_r+0x50>
 8008318:	2309      	movs	r3, #9
 800831a:	6033      	str	r3, [r6, #0]
 800831c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8008320:	f04f 30ff 	mov.w	r0, #4294967295
 8008324:	81a3      	strh	r3, [r4, #12]
 8008326:	e03e      	b.n	80083a6 <__swsetup_r+0xba>
 8008328:	4b25      	ldr	r3, [pc, #148]	; (80083c0 <__swsetup_r+0xd4>)
 800832a:	429c      	cmp	r4, r3
 800832c:	d101      	bne.n	8008332 <__swsetup_r+0x46>
 800832e:	68ac      	ldr	r4, [r5, #8]
 8008330:	e7eb      	b.n	800830a <__swsetup_r+0x1e>
 8008332:	4b24      	ldr	r3, [pc, #144]	; (80083c4 <__swsetup_r+0xd8>)
 8008334:	429c      	cmp	r4, r3
 8008336:	bf08      	it	eq
 8008338:	68ec      	ldreq	r4, [r5, #12]
 800833a:	e7e6      	b.n	800830a <__swsetup_r+0x1e>
 800833c:	0758      	lsls	r0, r3, #29
 800833e:	d512      	bpl.n	8008366 <__swsetup_r+0x7a>
 8008340:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8008342:	b141      	cbz	r1, 8008356 <__swsetup_r+0x6a>
 8008344:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8008348:	4299      	cmp	r1, r3
 800834a:	d002      	beq.n	8008352 <__swsetup_r+0x66>
 800834c:	4630      	mov	r0, r6
 800834e:	f7fd fa2d 	bl	80057ac <_free_r>
 8008352:	2300      	movs	r3, #0
 8008354:	6363      	str	r3, [r4, #52]	; 0x34
 8008356:	89a3      	ldrh	r3, [r4, #12]
 8008358:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800835c:	81a3      	strh	r3, [r4, #12]
 800835e:	2300      	movs	r3, #0
 8008360:	6063      	str	r3, [r4, #4]
 8008362:	6923      	ldr	r3, [r4, #16]
 8008364:	6023      	str	r3, [r4, #0]
 8008366:	89a3      	ldrh	r3, [r4, #12]
 8008368:	f043 0308 	orr.w	r3, r3, #8
 800836c:	81a3      	strh	r3, [r4, #12]
 800836e:	6923      	ldr	r3, [r4, #16]
 8008370:	b94b      	cbnz	r3, 8008386 <__swsetup_r+0x9a>
 8008372:	89a3      	ldrh	r3, [r4, #12]
 8008374:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8008378:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800837c:	d003      	beq.n	8008386 <__swsetup_r+0x9a>
 800837e:	4621      	mov	r1, r4
 8008380:	4630      	mov	r0, r6
 8008382:	f000 fa05 	bl	8008790 <__smakebuf_r>
 8008386:	89a0      	ldrh	r0, [r4, #12]
 8008388:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800838c:	f010 0301 	ands.w	r3, r0, #1
 8008390:	d00a      	beq.n	80083a8 <__swsetup_r+0xbc>
 8008392:	2300      	movs	r3, #0
 8008394:	60a3      	str	r3, [r4, #8]
 8008396:	6963      	ldr	r3, [r4, #20]
 8008398:	425b      	negs	r3, r3
 800839a:	61a3      	str	r3, [r4, #24]
 800839c:	6923      	ldr	r3, [r4, #16]
 800839e:	b943      	cbnz	r3, 80083b2 <__swsetup_r+0xc6>
 80083a0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80083a4:	d1ba      	bne.n	800831c <__swsetup_r+0x30>
 80083a6:	bd70      	pop	{r4, r5, r6, pc}
 80083a8:	0781      	lsls	r1, r0, #30
 80083aa:	bf58      	it	pl
 80083ac:	6963      	ldrpl	r3, [r4, #20]
 80083ae:	60a3      	str	r3, [r4, #8]
 80083b0:	e7f4      	b.n	800839c <__swsetup_r+0xb0>
 80083b2:	2000      	movs	r0, #0
 80083b4:	e7f7      	b.n	80083a6 <__swsetup_r+0xba>
 80083b6:	bf00      	nop
 80083b8:	20000018 	.word	0x20000018
 80083bc:	080090b0 	.word	0x080090b0
 80083c0:	080090d0 	.word	0x080090d0
 80083c4:	08009090 	.word	0x08009090

080083c8 <abort>:
 80083c8:	2006      	movs	r0, #6
 80083ca:	b508      	push	{r3, lr}
 80083cc:	f000 faa0 	bl	8008910 <raise>
 80083d0:	2001      	movs	r0, #1
 80083d2:	f7fa f994 	bl	80026fe <_exit>
	...

080083d8 <__sflush_r>:
 80083d8:	898a      	ldrh	r2, [r1, #12]
 80083da:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80083dc:	4605      	mov	r5, r0
 80083de:	0710      	lsls	r0, r2, #28
 80083e0:	460c      	mov	r4, r1
 80083e2:	d457      	bmi.n	8008494 <__sflush_r+0xbc>
 80083e4:	684b      	ldr	r3, [r1, #4]
 80083e6:	2b00      	cmp	r3, #0
 80083e8:	dc04      	bgt.n	80083f4 <__sflush_r+0x1c>
 80083ea:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80083ec:	2b00      	cmp	r3, #0
 80083ee:	dc01      	bgt.n	80083f4 <__sflush_r+0x1c>
 80083f0:	2000      	movs	r0, #0
 80083f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80083f4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80083f6:	2e00      	cmp	r6, #0
 80083f8:	d0fa      	beq.n	80083f0 <__sflush_r+0x18>
 80083fa:	2300      	movs	r3, #0
 80083fc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8008400:	682f      	ldr	r7, [r5, #0]
 8008402:	602b      	str	r3, [r5, #0]
 8008404:	d032      	beq.n	800846c <__sflush_r+0x94>
 8008406:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8008408:	89a3      	ldrh	r3, [r4, #12]
 800840a:	075a      	lsls	r2, r3, #29
 800840c:	d505      	bpl.n	800841a <__sflush_r+0x42>
 800840e:	6863      	ldr	r3, [r4, #4]
 8008410:	1ac0      	subs	r0, r0, r3
 8008412:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8008414:	b10b      	cbz	r3, 800841a <__sflush_r+0x42>
 8008416:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008418:	1ac0      	subs	r0, r0, r3
 800841a:	2300      	movs	r3, #0
 800841c:	4602      	mov	r2, r0
 800841e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8008420:	4628      	mov	r0, r5
 8008422:	6a21      	ldr	r1, [r4, #32]
 8008424:	47b0      	blx	r6
 8008426:	1c43      	adds	r3, r0, #1
 8008428:	89a3      	ldrh	r3, [r4, #12]
 800842a:	d106      	bne.n	800843a <__sflush_r+0x62>
 800842c:	6829      	ldr	r1, [r5, #0]
 800842e:	291d      	cmp	r1, #29
 8008430:	d82c      	bhi.n	800848c <__sflush_r+0xb4>
 8008432:	4a29      	ldr	r2, [pc, #164]	; (80084d8 <__sflush_r+0x100>)
 8008434:	40ca      	lsrs	r2, r1
 8008436:	07d6      	lsls	r6, r2, #31
 8008438:	d528      	bpl.n	800848c <__sflush_r+0xb4>
 800843a:	2200      	movs	r2, #0
 800843c:	6062      	str	r2, [r4, #4]
 800843e:	6922      	ldr	r2, [r4, #16]
 8008440:	04d9      	lsls	r1, r3, #19
 8008442:	6022      	str	r2, [r4, #0]
 8008444:	d504      	bpl.n	8008450 <__sflush_r+0x78>
 8008446:	1c42      	adds	r2, r0, #1
 8008448:	d101      	bne.n	800844e <__sflush_r+0x76>
 800844a:	682b      	ldr	r3, [r5, #0]
 800844c:	b903      	cbnz	r3, 8008450 <__sflush_r+0x78>
 800844e:	6560      	str	r0, [r4, #84]	; 0x54
 8008450:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8008452:	602f      	str	r7, [r5, #0]
 8008454:	2900      	cmp	r1, #0
 8008456:	d0cb      	beq.n	80083f0 <__sflush_r+0x18>
 8008458:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800845c:	4299      	cmp	r1, r3
 800845e:	d002      	beq.n	8008466 <__sflush_r+0x8e>
 8008460:	4628      	mov	r0, r5
 8008462:	f7fd f9a3 	bl	80057ac <_free_r>
 8008466:	2000      	movs	r0, #0
 8008468:	6360      	str	r0, [r4, #52]	; 0x34
 800846a:	e7c2      	b.n	80083f2 <__sflush_r+0x1a>
 800846c:	6a21      	ldr	r1, [r4, #32]
 800846e:	2301      	movs	r3, #1
 8008470:	4628      	mov	r0, r5
 8008472:	47b0      	blx	r6
 8008474:	1c41      	adds	r1, r0, #1
 8008476:	d1c7      	bne.n	8008408 <__sflush_r+0x30>
 8008478:	682b      	ldr	r3, [r5, #0]
 800847a:	2b00      	cmp	r3, #0
 800847c:	d0c4      	beq.n	8008408 <__sflush_r+0x30>
 800847e:	2b1d      	cmp	r3, #29
 8008480:	d001      	beq.n	8008486 <__sflush_r+0xae>
 8008482:	2b16      	cmp	r3, #22
 8008484:	d101      	bne.n	800848a <__sflush_r+0xb2>
 8008486:	602f      	str	r7, [r5, #0]
 8008488:	e7b2      	b.n	80083f0 <__sflush_r+0x18>
 800848a:	89a3      	ldrh	r3, [r4, #12]
 800848c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008490:	81a3      	strh	r3, [r4, #12]
 8008492:	e7ae      	b.n	80083f2 <__sflush_r+0x1a>
 8008494:	690f      	ldr	r7, [r1, #16]
 8008496:	2f00      	cmp	r7, #0
 8008498:	d0aa      	beq.n	80083f0 <__sflush_r+0x18>
 800849a:	0793      	lsls	r3, r2, #30
 800849c:	bf18      	it	ne
 800849e:	2300      	movne	r3, #0
 80084a0:	680e      	ldr	r6, [r1, #0]
 80084a2:	bf08      	it	eq
 80084a4:	694b      	ldreq	r3, [r1, #20]
 80084a6:	1bf6      	subs	r6, r6, r7
 80084a8:	600f      	str	r7, [r1, #0]
 80084aa:	608b      	str	r3, [r1, #8]
 80084ac:	2e00      	cmp	r6, #0
 80084ae:	dd9f      	ble.n	80083f0 <__sflush_r+0x18>
 80084b0:	4633      	mov	r3, r6
 80084b2:	463a      	mov	r2, r7
 80084b4:	4628      	mov	r0, r5
 80084b6:	6a21      	ldr	r1, [r4, #32]
 80084b8:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 80084bc:	47e0      	blx	ip
 80084be:	2800      	cmp	r0, #0
 80084c0:	dc06      	bgt.n	80084d0 <__sflush_r+0xf8>
 80084c2:	89a3      	ldrh	r3, [r4, #12]
 80084c4:	f04f 30ff 	mov.w	r0, #4294967295
 80084c8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80084cc:	81a3      	strh	r3, [r4, #12]
 80084ce:	e790      	b.n	80083f2 <__sflush_r+0x1a>
 80084d0:	4407      	add	r7, r0
 80084d2:	1a36      	subs	r6, r6, r0
 80084d4:	e7ea      	b.n	80084ac <__sflush_r+0xd4>
 80084d6:	bf00      	nop
 80084d8:	20400001 	.word	0x20400001

080084dc <_fflush_r>:
 80084dc:	b538      	push	{r3, r4, r5, lr}
 80084de:	690b      	ldr	r3, [r1, #16]
 80084e0:	4605      	mov	r5, r0
 80084e2:	460c      	mov	r4, r1
 80084e4:	b913      	cbnz	r3, 80084ec <_fflush_r+0x10>
 80084e6:	2500      	movs	r5, #0
 80084e8:	4628      	mov	r0, r5
 80084ea:	bd38      	pop	{r3, r4, r5, pc}
 80084ec:	b118      	cbz	r0, 80084f6 <_fflush_r+0x1a>
 80084ee:	6983      	ldr	r3, [r0, #24]
 80084f0:	b90b      	cbnz	r3, 80084f6 <_fflush_r+0x1a>
 80084f2:	f000 f887 	bl	8008604 <__sinit>
 80084f6:	4b14      	ldr	r3, [pc, #80]	; (8008548 <_fflush_r+0x6c>)
 80084f8:	429c      	cmp	r4, r3
 80084fa:	d11b      	bne.n	8008534 <_fflush_r+0x58>
 80084fc:	686c      	ldr	r4, [r5, #4]
 80084fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008502:	2b00      	cmp	r3, #0
 8008504:	d0ef      	beq.n	80084e6 <_fflush_r+0xa>
 8008506:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8008508:	07d0      	lsls	r0, r2, #31
 800850a:	d404      	bmi.n	8008516 <_fflush_r+0x3a>
 800850c:	0599      	lsls	r1, r3, #22
 800850e:	d402      	bmi.n	8008516 <_fflush_r+0x3a>
 8008510:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008512:	f000 f915 	bl	8008740 <__retarget_lock_acquire_recursive>
 8008516:	4628      	mov	r0, r5
 8008518:	4621      	mov	r1, r4
 800851a:	f7ff ff5d 	bl	80083d8 <__sflush_r>
 800851e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008520:	4605      	mov	r5, r0
 8008522:	07da      	lsls	r2, r3, #31
 8008524:	d4e0      	bmi.n	80084e8 <_fflush_r+0xc>
 8008526:	89a3      	ldrh	r3, [r4, #12]
 8008528:	059b      	lsls	r3, r3, #22
 800852a:	d4dd      	bmi.n	80084e8 <_fflush_r+0xc>
 800852c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800852e:	f000 f908 	bl	8008742 <__retarget_lock_release_recursive>
 8008532:	e7d9      	b.n	80084e8 <_fflush_r+0xc>
 8008534:	4b05      	ldr	r3, [pc, #20]	; (800854c <_fflush_r+0x70>)
 8008536:	429c      	cmp	r4, r3
 8008538:	d101      	bne.n	800853e <_fflush_r+0x62>
 800853a:	68ac      	ldr	r4, [r5, #8]
 800853c:	e7df      	b.n	80084fe <_fflush_r+0x22>
 800853e:	4b04      	ldr	r3, [pc, #16]	; (8008550 <_fflush_r+0x74>)
 8008540:	429c      	cmp	r4, r3
 8008542:	bf08      	it	eq
 8008544:	68ec      	ldreq	r4, [r5, #12]
 8008546:	e7da      	b.n	80084fe <_fflush_r+0x22>
 8008548:	080090b0 	.word	0x080090b0
 800854c:	080090d0 	.word	0x080090d0
 8008550:	08009090 	.word	0x08009090

08008554 <std>:
 8008554:	2300      	movs	r3, #0
 8008556:	b510      	push	{r4, lr}
 8008558:	4604      	mov	r4, r0
 800855a:	e9c0 3300 	strd	r3, r3, [r0]
 800855e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8008562:	6083      	str	r3, [r0, #8]
 8008564:	8181      	strh	r1, [r0, #12]
 8008566:	6643      	str	r3, [r0, #100]	; 0x64
 8008568:	81c2      	strh	r2, [r0, #14]
 800856a:	6183      	str	r3, [r0, #24]
 800856c:	4619      	mov	r1, r3
 800856e:	2208      	movs	r2, #8
 8008570:	305c      	adds	r0, #92	; 0x5c
 8008572:	f7fd f913 	bl	800579c <memset>
 8008576:	4b05      	ldr	r3, [pc, #20]	; (800858c <std+0x38>)
 8008578:	6224      	str	r4, [r4, #32]
 800857a:	6263      	str	r3, [r4, #36]	; 0x24
 800857c:	4b04      	ldr	r3, [pc, #16]	; (8008590 <std+0x3c>)
 800857e:	62a3      	str	r3, [r4, #40]	; 0x28
 8008580:	4b04      	ldr	r3, [pc, #16]	; (8008594 <std+0x40>)
 8008582:	62e3      	str	r3, [r4, #44]	; 0x2c
 8008584:	4b04      	ldr	r3, [pc, #16]	; (8008598 <std+0x44>)
 8008586:	6323      	str	r3, [r4, #48]	; 0x30
 8008588:	bd10      	pop	{r4, pc}
 800858a:	bf00      	nop
 800858c:	08008949 	.word	0x08008949
 8008590:	0800896b 	.word	0x0800896b
 8008594:	080089a3 	.word	0x080089a3
 8008598:	080089c7 	.word	0x080089c7

0800859c <_cleanup_r>:
 800859c:	4901      	ldr	r1, [pc, #4]	; (80085a4 <_cleanup_r+0x8>)
 800859e:	f000 b8af 	b.w	8008700 <_fwalk_reent>
 80085a2:	bf00      	nop
 80085a4:	080084dd 	.word	0x080084dd

080085a8 <__sfmoreglue>:
 80085a8:	2268      	movs	r2, #104	; 0x68
 80085aa:	b570      	push	{r4, r5, r6, lr}
 80085ac:	1e4d      	subs	r5, r1, #1
 80085ae:	4355      	muls	r5, r2
 80085b0:	460e      	mov	r6, r1
 80085b2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80085b6:	f7fd f961 	bl	800587c <_malloc_r>
 80085ba:	4604      	mov	r4, r0
 80085bc:	b140      	cbz	r0, 80085d0 <__sfmoreglue+0x28>
 80085be:	2100      	movs	r1, #0
 80085c0:	e9c0 1600 	strd	r1, r6, [r0]
 80085c4:	300c      	adds	r0, #12
 80085c6:	60a0      	str	r0, [r4, #8]
 80085c8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80085cc:	f7fd f8e6 	bl	800579c <memset>
 80085d0:	4620      	mov	r0, r4
 80085d2:	bd70      	pop	{r4, r5, r6, pc}

080085d4 <__sfp_lock_acquire>:
 80085d4:	4801      	ldr	r0, [pc, #4]	; (80085dc <__sfp_lock_acquire+0x8>)
 80085d6:	f000 b8b3 	b.w	8008740 <__retarget_lock_acquire_recursive>
 80085da:	bf00      	nop
 80085dc:	200004dd 	.word	0x200004dd

080085e0 <__sfp_lock_release>:
 80085e0:	4801      	ldr	r0, [pc, #4]	; (80085e8 <__sfp_lock_release+0x8>)
 80085e2:	f000 b8ae 	b.w	8008742 <__retarget_lock_release_recursive>
 80085e6:	bf00      	nop
 80085e8:	200004dd 	.word	0x200004dd

080085ec <__sinit_lock_acquire>:
 80085ec:	4801      	ldr	r0, [pc, #4]	; (80085f4 <__sinit_lock_acquire+0x8>)
 80085ee:	f000 b8a7 	b.w	8008740 <__retarget_lock_acquire_recursive>
 80085f2:	bf00      	nop
 80085f4:	200004de 	.word	0x200004de

080085f8 <__sinit_lock_release>:
 80085f8:	4801      	ldr	r0, [pc, #4]	; (8008600 <__sinit_lock_release+0x8>)
 80085fa:	f000 b8a2 	b.w	8008742 <__retarget_lock_release_recursive>
 80085fe:	bf00      	nop
 8008600:	200004de 	.word	0x200004de

08008604 <__sinit>:
 8008604:	b510      	push	{r4, lr}
 8008606:	4604      	mov	r4, r0
 8008608:	f7ff fff0 	bl	80085ec <__sinit_lock_acquire>
 800860c:	69a3      	ldr	r3, [r4, #24]
 800860e:	b11b      	cbz	r3, 8008618 <__sinit+0x14>
 8008610:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008614:	f7ff bff0 	b.w	80085f8 <__sinit_lock_release>
 8008618:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800861c:	6523      	str	r3, [r4, #80]	; 0x50
 800861e:	4b13      	ldr	r3, [pc, #76]	; (800866c <__sinit+0x68>)
 8008620:	4a13      	ldr	r2, [pc, #76]	; (8008670 <__sinit+0x6c>)
 8008622:	681b      	ldr	r3, [r3, #0]
 8008624:	62a2      	str	r2, [r4, #40]	; 0x28
 8008626:	42a3      	cmp	r3, r4
 8008628:	bf08      	it	eq
 800862a:	2301      	moveq	r3, #1
 800862c:	4620      	mov	r0, r4
 800862e:	bf08      	it	eq
 8008630:	61a3      	streq	r3, [r4, #24]
 8008632:	f000 f81f 	bl	8008674 <__sfp>
 8008636:	6060      	str	r0, [r4, #4]
 8008638:	4620      	mov	r0, r4
 800863a:	f000 f81b 	bl	8008674 <__sfp>
 800863e:	60a0      	str	r0, [r4, #8]
 8008640:	4620      	mov	r0, r4
 8008642:	f000 f817 	bl	8008674 <__sfp>
 8008646:	2200      	movs	r2, #0
 8008648:	2104      	movs	r1, #4
 800864a:	60e0      	str	r0, [r4, #12]
 800864c:	6860      	ldr	r0, [r4, #4]
 800864e:	f7ff ff81 	bl	8008554 <std>
 8008652:	2201      	movs	r2, #1
 8008654:	2109      	movs	r1, #9
 8008656:	68a0      	ldr	r0, [r4, #8]
 8008658:	f7ff ff7c 	bl	8008554 <std>
 800865c:	2202      	movs	r2, #2
 800865e:	2112      	movs	r1, #18
 8008660:	68e0      	ldr	r0, [r4, #12]
 8008662:	f7ff ff77 	bl	8008554 <std>
 8008666:	2301      	movs	r3, #1
 8008668:	61a3      	str	r3, [r4, #24]
 800866a:	e7d1      	b.n	8008610 <__sinit+0xc>
 800866c:	08008c64 	.word	0x08008c64
 8008670:	0800859d 	.word	0x0800859d

08008674 <__sfp>:
 8008674:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008676:	4607      	mov	r7, r0
 8008678:	f7ff ffac 	bl	80085d4 <__sfp_lock_acquire>
 800867c:	4b1e      	ldr	r3, [pc, #120]	; (80086f8 <__sfp+0x84>)
 800867e:	681e      	ldr	r6, [r3, #0]
 8008680:	69b3      	ldr	r3, [r6, #24]
 8008682:	b913      	cbnz	r3, 800868a <__sfp+0x16>
 8008684:	4630      	mov	r0, r6
 8008686:	f7ff ffbd 	bl	8008604 <__sinit>
 800868a:	3648      	adds	r6, #72	; 0x48
 800868c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8008690:	3b01      	subs	r3, #1
 8008692:	d503      	bpl.n	800869c <__sfp+0x28>
 8008694:	6833      	ldr	r3, [r6, #0]
 8008696:	b30b      	cbz	r3, 80086dc <__sfp+0x68>
 8008698:	6836      	ldr	r6, [r6, #0]
 800869a:	e7f7      	b.n	800868c <__sfp+0x18>
 800869c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80086a0:	b9d5      	cbnz	r5, 80086d8 <__sfp+0x64>
 80086a2:	4b16      	ldr	r3, [pc, #88]	; (80086fc <__sfp+0x88>)
 80086a4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80086a8:	60e3      	str	r3, [r4, #12]
 80086aa:	6665      	str	r5, [r4, #100]	; 0x64
 80086ac:	f000 f847 	bl	800873e <__retarget_lock_init_recursive>
 80086b0:	f7ff ff96 	bl	80085e0 <__sfp_lock_release>
 80086b4:	2208      	movs	r2, #8
 80086b6:	4629      	mov	r1, r5
 80086b8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80086bc:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80086c0:	6025      	str	r5, [r4, #0]
 80086c2:	61a5      	str	r5, [r4, #24]
 80086c4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80086c8:	f7fd f868 	bl	800579c <memset>
 80086cc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80086d0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80086d4:	4620      	mov	r0, r4
 80086d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80086d8:	3468      	adds	r4, #104	; 0x68
 80086da:	e7d9      	b.n	8008690 <__sfp+0x1c>
 80086dc:	2104      	movs	r1, #4
 80086de:	4638      	mov	r0, r7
 80086e0:	f7ff ff62 	bl	80085a8 <__sfmoreglue>
 80086e4:	4604      	mov	r4, r0
 80086e6:	6030      	str	r0, [r6, #0]
 80086e8:	2800      	cmp	r0, #0
 80086ea:	d1d5      	bne.n	8008698 <__sfp+0x24>
 80086ec:	f7ff ff78 	bl	80085e0 <__sfp_lock_release>
 80086f0:	230c      	movs	r3, #12
 80086f2:	603b      	str	r3, [r7, #0]
 80086f4:	e7ee      	b.n	80086d4 <__sfp+0x60>
 80086f6:	bf00      	nop
 80086f8:	08008c64 	.word	0x08008c64
 80086fc:	ffff0001 	.word	0xffff0001

08008700 <_fwalk_reent>:
 8008700:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008704:	4606      	mov	r6, r0
 8008706:	4688      	mov	r8, r1
 8008708:	2700      	movs	r7, #0
 800870a:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800870e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8008712:	f1b9 0901 	subs.w	r9, r9, #1
 8008716:	d505      	bpl.n	8008724 <_fwalk_reent+0x24>
 8008718:	6824      	ldr	r4, [r4, #0]
 800871a:	2c00      	cmp	r4, #0
 800871c:	d1f7      	bne.n	800870e <_fwalk_reent+0xe>
 800871e:	4638      	mov	r0, r7
 8008720:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008724:	89ab      	ldrh	r3, [r5, #12]
 8008726:	2b01      	cmp	r3, #1
 8008728:	d907      	bls.n	800873a <_fwalk_reent+0x3a>
 800872a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800872e:	3301      	adds	r3, #1
 8008730:	d003      	beq.n	800873a <_fwalk_reent+0x3a>
 8008732:	4629      	mov	r1, r5
 8008734:	4630      	mov	r0, r6
 8008736:	47c0      	blx	r8
 8008738:	4307      	orrs	r7, r0
 800873a:	3568      	adds	r5, #104	; 0x68
 800873c:	e7e9      	b.n	8008712 <_fwalk_reent+0x12>

0800873e <__retarget_lock_init_recursive>:
 800873e:	4770      	bx	lr

08008740 <__retarget_lock_acquire_recursive>:
 8008740:	4770      	bx	lr

08008742 <__retarget_lock_release_recursive>:
 8008742:	4770      	bx	lr

08008744 <__swhatbuf_r>:
 8008744:	b570      	push	{r4, r5, r6, lr}
 8008746:	460e      	mov	r6, r1
 8008748:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800874c:	4614      	mov	r4, r2
 800874e:	2900      	cmp	r1, #0
 8008750:	461d      	mov	r5, r3
 8008752:	b096      	sub	sp, #88	; 0x58
 8008754:	da08      	bge.n	8008768 <__swhatbuf_r+0x24>
 8008756:	2200      	movs	r2, #0
 8008758:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800875c:	602a      	str	r2, [r5, #0]
 800875e:	061a      	lsls	r2, r3, #24
 8008760:	d410      	bmi.n	8008784 <__swhatbuf_r+0x40>
 8008762:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8008766:	e00e      	b.n	8008786 <__swhatbuf_r+0x42>
 8008768:	466a      	mov	r2, sp
 800876a:	f000 f953 	bl	8008a14 <_fstat_r>
 800876e:	2800      	cmp	r0, #0
 8008770:	dbf1      	blt.n	8008756 <__swhatbuf_r+0x12>
 8008772:	9a01      	ldr	r2, [sp, #4]
 8008774:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8008778:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800877c:	425a      	negs	r2, r3
 800877e:	415a      	adcs	r2, r3
 8008780:	602a      	str	r2, [r5, #0]
 8008782:	e7ee      	b.n	8008762 <__swhatbuf_r+0x1e>
 8008784:	2340      	movs	r3, #64	; 0x40
 8008786:	2000      	movs	r0, #0
 8008788:	6023      	str	r3, [r4, #0]
 800878a:	b016      	add	sp, #88	; 0x58
 800878c:	bd70      	pop	{r4, r5, r6, pc}
	...

08008790 <__smakebuf_r>:
 8008790:	898b      	ldrh	r3, [r1, #12]
 8008792:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008794:	079d      	lsls	r5, r3, #30
 8008796:	4606      	mov	r6, r0
 8008798:	460c      	mov	r4, r1
 800879a:	d507      	bpl.n	80087ac <__smakebuf_r+0x1c>
 800879c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80087a0:	6023      	str	r3, [r4, #0]
 80087a2:	6123      	str	r3, [r4, #16]
 80087a4:	2301      	movs	r3, #1
 80087a6:	6163      	str	r3, [r4, #20]
 80087a8:	b002      	add	sp, #8
 80087aa:	bd70      	pop	{r4, r5, r6, pc}
 80087ac:	466a      	mov	r2, sp
 80087ae:	ab01      	add	r3, sp, #4
 80087b0:	f7ff ffc8 	bl	8008744 <__swhatbuf_r>
 80087b4:	9900      	ldr	r1, [sp, #0]
 80087b6:	4605      	mov	r5, r0
 80087b8:	4630      	mov	r0, r6
 80087ba:	f7fd f85f 	bl	800587c <_malloc_r>
 80087be:	b948      	cbnz	r0, 80087d4 <__smakebuf_r+0x44>
 80087c0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80087c4:	059a      	lsls	r2, r3, #22
 80087c6:	d4ef      	bmi.n	80087a8 <__smakebuf_r+0x18>
 80087c8:	f023 0303 	bic.w	r3, r3, #3
 80087cc:	f043 0302 	orr.w	r3, r3, #2
 80087d0:	81a3      	strh	r3, [r4, #12]
 80087d2:	e7e3      	b.n	800879c <__smakebuf_r+0xc>
 80087d4:	4b0d      	ldr	r3, [pc, #52]	; (800880c <__smakebuf_r+0x7c>)
 80087d6:	62b3      	str	r3, [r6, #40]	; 0x28
 80087d8:	89a3      	ldrh	r3, [r4, #12]
 80087da:	6020      	str	r0, [r4, #0]
 80087dc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80087e0:	81a3      	strh	r3, [r4, #12]
 80087e2:	9b00      	ldr	r3, [sp, #0]
 80087e4:	6120      	str	r0, [r4, #16]
 80087e6:	6163      	str	r3, [r4, #20]
 80087e8:	9b01      	ldr	r3, [sp, #4]
 80087ea:	b15b      	cbz	r3, 8008804 <__smakebuf_r+0x74>
 80087ec:	4630      	mov	r0, r6
 80087ee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80087f2:	f000 f921 	bl	8008a38 <_isatty_r>
 80087f6:	b128      	cbz	r0, 8008804 <__smakebuf_r+0x74>
 80087f8:	89a3      	ldrh	r3, [r4, #12]
 80087fa:	f023 0303 	bic.w	r3, r3, #3
 80087fe:	f043 0301 	orr.w	r3, r3, #1
 8008802:	81a3      	strh	r3, [r4, #12]
 8008804:	89a0      	ldrh	r0, [r4, #12]
 8008806:	4305      	orrs	r5, r0
 8008808:	81a5      	strh	r5, [r4, #12]
 800880a:	e7cd      	b.n	80087a8 <__smakebuf_r+0x18>
 800880c:	0800859d 	.word	0x0800859d

08008810 <memchr>:
 8008810:	4603      	mov	r3, r0
 8008812:	b510      	push	{r4, lr}
 8008814:	b2c9      	uxtb	r1, r1
 8008816:	4402      	add	r2, r0
 8008818:	4293      	cmp	r3, r2
 800881a:	4618      	mov	r0, r3
 800881c:	d101      	bne.n	8008822 <memchr+0x12>
 800881e:	2000      	movs	r0, #0
 8008820:	e003      	b.n	800882a <memchr+0x1a>
 8008822:	7804      	ldrb	r4, [r0, #0]
 8008824:	3301      	adds	r3, #1
 8008826:	428c      	cmp	r4, r1
 8008828:	d1f6      	bne.n	8008818 <memchr+0x8>
 800882a:	bd10      	pop	{r4, pc}

0800882c <memmove>:
 800882c:	4288      	cmp	r0, r1
 800882e:	b510      	push	{r4, lr}
 8008830:	eb01 0402 	add.w	r4, r1, r2
 8008834:	d902      	bls.n	800883c <memmove+0x10>
 8008836:	4284      	cmp	r4, r0
 8008838:	4623      	mov	r3, r4
 800883a:	d807      	bhi.n	800884c <memmove+0x20>
 800883c:	1e43      	subs	r3, r0, #1
 800883e:	42a1      	cmp	r1, r4
 8008840:	d008      	beq.n	8008854 <memmove+0x28>
 8008842:	f811 2b01 	ldrb.w	r2, [r1], #1
 8008846:	f803 2f01 	strb.w	r2, [r3, #1]!
 800884a:	e7f8      	b.n	800883e <memmove+0x12>
 800884c:	4601      	mov	r1, r0
 800884e:	4402      	add	r2, r0
 8008850:	428a      	cmp	r2, r1
 8008852:	d100      	bne.n	8008856 <memmove+0x2a>
 8008854:	bd10      	pop	{r4, pc}
 8008856:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800885a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800885e:	e7f7      	b.n	8008850 <memmove+0x24>

08008860 <_realloc_r>:
 8008860:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008864:	4680      	mov	r8, r0
 8008866:	4614      	mov	r4, r2
 8008868:	460e      	mov	r6, r1
 800886a:	b921      	cbnz	r1, 8008876 <_realloc_r+0x16>
 800886c:	4611      	mov	r1, r2
 800886e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008872:	f7fd b803 	b.w	800587c <_malloc_r>
 8008876:	b92a      	cbnz	r2, 8008884 <_realloc_r+0x24>
 8008878:	f7fc ff98 	bl	80057ac <_free_r>
 800887c:	4625      	mov	r5, r4
 800887e:	4628      	mov	r0, r5
 8008880:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008884:	f000 f8fa 	bl	8008a7c <_malloc_usable_size_r>
 8008888:	4284      	cmp	r4, r0
 800888a:	4607      	mov	r7, r0
 800888c:	d802      	bhi.n	8008894 <_realloc_r+0x34>
 800888e:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8008892:	d812      	bhi.n	80088ba <_realloc_r+0x5a>
 8008894:	4621      	mov	r1, r4
 8008896:	4640      	mov	r0, r8
 8008898:	f7fc fff0 	bl	800587c <_malloc_r>
 800889c:	4605      	mov	r5, r0
 800889e:	2800      	cmp	r0, #0
 80088a0:	d0ed      	beq.n	800887e <_realloc_r+0x1e>
 80088a2:	42bc      	cmp	r4, r7
 80088a4:	4622      	mov	r2, r4
 80088a6:	4631      	mov	r1, r6
 80088a8:	bf28      	it	cs
 80088aa:	463a      	movcs	r2, r7
 80088ac:	f7fe fb70 	bl	8006f90 <memcpy>
 80088b0:	4631      	mov	r1, r6
 80088b2:	4640      	mov	r0, r8
 80088b4:	f7fc ff7a 	bl	80057ac <_free_r>
 80088b8:	e7e1      	b.n	800887e <_realloc_r+0x1e>
 80088ba:	4635      	mov	r5, r6
 80088bc:	e7df      	b.n	800887e <_realloc_r+0x1e>

080088be <_raise_r>:
 80088be:	291f      	cmp	r1, #31
 80088c0:	b538      	push	{r3, r4, r5, lr}
 80088c2:	4604      	mov	r4, r0
 80088c4:	460d      	mov	r5, r1
 80088c6:	d904      	bls.n	80088d2 <_raise_r+0x14>
 80088c8:	2316      	movs	r3, #22
 80088ca:	6003      	str	r3, [r0, #0]
 80088cc:	f04f 30ff 	mov.w	r0, #4294967295
 80088d0:	bd38      	pop	{r3, r4, r5, pc}
 80088d2:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80088d4:	b112      	cbz	r2, 80088dc <_raise_r+0x1e>
 80088d6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80088da:	b94b      	cbnz	r3, 80088f0 <_raise_r+0x32>
 80088dc:	4620      	mov	r0, r4
 80088de:	f000 f831 	bl	8008944 <_getpid_r>
 80088e2:	462a      	mov	r2, r5
 80088e4:	4601      	mov	r1, r0
 80088e6:	4620      	mov	r0, r4
 80088e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80088ec:	f000 b818 	b.w	8008920 <_kill_r>
 80088f0:	2b01      	cmp	r3, #1
 80088f2:	d00a      	beq.n	800890a <_raise_r+0x4c>
 80088f4:	1c59      	adds	r1, r3, #1
 80088f6:	d103      	bne.n	8008900 <_raise_r+0x42>
 80088f8:	2316      	movs	r3, #22
 80088fa:	6003      	str	r3, [r0, #0]
 80088fc:	2001      	movs	r0, #1
 80088fe:	e7e7      	b.n	80088d0 <_raise_r+0x12>
 8008900:	2400      	movs	r4, #0
 8008902:	4628      	mov	r0, r5
 8008904:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8008908:	4798      	blx	r3
 800890a:	2000      	movs	r0, #0
 800890c:	e7e0      	b.n	80088d0 <_raise_r+0x12>
	...

08008910 <raise>:
 8008910:	4b02      	ldr	r3, [pc, #8]	; (800891c <raise+0xc>)
 8008912:	4601      	mov	r1, r0
 8008914:	6818      	ldr	r0, [r3, #0]
 8008916:	f7ff bfd2 	b.w	80088be <_raise_r>
 800891a:	bf00      	nop
 800891c:	20000018 	.word	0x20000018

08008920 <_kill_r>:
 8008920:	b538      	push	{r3, r4, r5, lr}
 8008922:	2300      	movs	r3, #0
 8008924:	4d06      	ldr	r5, [pc, #24]	; (8008940 <_kill_r+0x20>)
 8008926:	4604      	mov	r4, r0
 8008928:	4608      	mov	r0, r1
 800892a:	4611      	mov	r1, r2
 800892c:	602b      	str	r3, [r5, #0]
 800892e:	f7f9 fed6 	bl	80026de <_kill>
 8008932:	1c43      	adds	r3, r0, #1
 8008934:	d102      	bne.n	800893c <_kill_r+0x1c>
 8008936:	682b      	ldr	r3, [r5, #0]
 8008938:	b103      	cbz	r3, 800893c <_kill_r+0x1c>
 800893a:	6023      	str	r3, [r4, #0]
 800893c:	bd38      	pop	{r3, r4, r5, pc}
 800893e:	bf00      	nop
 8008940:	200004d8 	.word	0x200004d8

08008944 <_getpid_r>:
 8008944:	f7f9 bec4 	b.w	80026d0 <_getpid>

08008948 <__sread>:
 8008948:	b510      	push	{r4, lr}
 800894a:	460c      	mov	r4, r1
 800894c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008950:	f000 f89c 	bl	8008a8c <_read_r>
 8008954:	2800      	cmp	r0, #0
 8008956:	bfab      	itete	ge
 8008958:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800895a:	89a3      	ldrhlt	r3, [r4, #12]
 800895c:	181b      	addge	r3, r3, r0
 800895e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8008962:	bfac      	ite	ge
 8008964:	6563      	strge	r3, [r4, #84]	; 0x54
 8008966:	81a3      	strhlt	r3, [r4, #12]
 8008968:	bd10      	pop	{r4, pc}

0800896a <__swrite>:
 800896a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800896e:	461f      	mov	r7, r3
 8008970:	898b      	ldrh	r3, [r1, #12]
 8008972:	4605      	mov	r5, r0
 8008974:	05db      	lsls	r3, r3, #23
 8008976:	460c      	mov	r4, r1
 8008978:	4616      	mov	r6, r2
 800897a:	d505      	bpl.n	8008988 <__swrite+0x1e>
 800897c:	2302      	movs	r3, #2
 800897e:	2200      	movs	r2, #0
 8008980:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008984:	f000 f868 	bl	8008a58 <_lseek_r>
 8008988:	89a3      	ldrh	r3, [r4, #12]
 800898a:	4632      	mov	r2, r6
 800898c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8008990:	81a3      	strh	r3, [r4, #12]
 8008992:	4628      	mov	r0, r5
 8008994:	463b      	mov	r3, r7
 8008996:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800899a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800899e:	f000 b817 	b.w	80089d0 <_write_r>

080089a2 <__sseek>:
 80089a2:	b510      	push	{r4, lr}
 80089a4:	460c      	mov	r4, r1
 80089a6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80089aa:	f000 f855 	bl	8008a58 <_lseek_r>
 80089ae:	1c43      	adds	r3, r0, #1
 80089b0:	89a3      	ldrh	r3, [r4, #12]
 80089b2:	bf15      	itete	ne
 80089b4:	6560      	strne	r0, [r4, #84]	; 0x54
 80089b6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80089ba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80089be:	81a3      	strheq	r3, [r4, #12]
 80089c0:	bf18      	it	ne
 80089c2:	81a3      	strhne	r3, [r4, #12]
 80089c4:	bd10      	pop	{r4, pc}

080089c6 <__sclose>:
 80089c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80089ca:	f000 b813 	b.w	80089f4 <_close_r>
	...

080089d0 <_write_r>:
 80089d0:	b538      	push	{r3, r4, r5, lr}
 80089d2:	4604      	mov	r4, r0
 80089d4:	4608      	mov	r0, r1
 80089d6:	4611      	mov	r1, r2
 80089d8:	2200      	movs	r2, #0
 80089da:	4d05      	ldr	r5, [pc, #20]	; (80089f0 <_write_r+0x20>)
 80089dc:	602a      	str	r2, [r5, #0]
 80089de:	461a      	mov	r2, r3
 80089e0:	f7f9 feb4 	bl	800274c <_write>
 80089e4:	1c43      	adds	r3, r0, #1
 80089e6:	d102      	bne.n	80089ee <_write_r+0x1e>
 80089e8:	682b      	ldr	r3, [r5, #0]
 80089ea:	b103      	cbz	r3, 80089ee <_write_r+0x1e>
 80089ec:	6023      	str	r3, [r4, #0]
 80089ee:	bd38      	pop	{r3, r4, r5, pc}
 80089f0:	200004d8 	.word	0x200004d8

080089f4 <_close_r>:
 80089f4:	b538      	push	{r3, r4, r5, lr}
 80089f6:	2300      	movs	r3, #0
 80089f8:	4d05      	ldr	r5, [pc, #20]	; (8008a10 <_close_r+0x1c>)
 80089fa:	4604      	mov	r4, r0
 80089fc:	4608      	mov	r0, r1
 80089fe:	602b      	str	r3, [r5, #0]
 8008a00:	f7f9 fec0 	bl	8002784 <_close>
 8008a04:	1c43      	adds	r3, r0, #1
 8008a06:	d102      	bne.n	8008a0e <_close_r+0x1a>
 8008a08:	682b      	ldr	r3, [r5, #0]
 8008a0a:	b103      	cbz	r3, 8008a0e <_close_r+0x1a>
 8008a0c:	6023      	str	r3, [r4, #0]
 8008a0e:	bd38      	pop	{r3, r4, r5, pc}
 8008a10:	200004d8 	.word	0x200004d8

08008a14 <_fstat_r>:
 8008a14:	b538      	push	{r3, r4, r5, lr}
 8008a16:	2300      	movs	r3, #0
 8008a18:	4d06      	ldr	r5, [pc, #24]	; (8008a34 <_fstat_r+0x20>)
 8008a1a:	4604      	mov	r4, r0
 8008a1c:	4608      	mov	r0, r1
 8008a1e:	4611      	mov	r1, r2
 8008a20:	602b      	str	r3, [r5, #0]
 8008a22:	f7f9 feba 	bl	800279a <_fstat>
 8008a26:	1c43      	adds	r3, r0, #1
 8008a28:	d102      	bne.n	8008a30 <_fstat_r+0x1c>
 8008a2a:	682b      	ldr	r3, [r5, #0]
 8008a2c:	b103      	cbz	r3, 8008a30 <_fstat_r+0x1c>
 8008a2e:	6023      	str	r3, [r4, #0]
 8008a30:	bd38      	pop	{r3, r4, r5, pc}
 8008a32:	bf00      	nop
 8008a34:	200004d8 	.word	0x200004d8

08008a38 <_isatty_r>:
 8008a38:	b538      	push	{r3, r4, r5, lr}
 8008a3a:	2300      	movs	r3, #0
 8008a3c:	4d05      	ldr	r5, [pc, #20]	; (8008a54 <_isatty_r+0x1c>)
 8008a3e:	4604      	mov	r4, r0
 8008a40:	4608      	mov	r0, r1
 8008a42:	602b      	str	r3, [r5, #0]
 8008a44:	f7f9 feb8 	bl	80027b8 <_isatty>
 8008a48:	1c43      	adds	r3, r0, #1
 8008a4a:	d102      	bne.n	8008a52 <_isatty_r+0x1a>
 8008a4c:	682b      	ldr	r3, [r5, #0]
 8008a4e:	b103      	cbz	r3, 8008a52 <_isatty_r+0x1a>
 8008a50:	6023      	str	r3, [r4, #0]
 8008a52:	bd38      	pop	{r3, r4, r5, pc}
 8008a54:	200004d8 	.word	0x200004d8

08008a58 <_lseek_r>:
 8008a58:	b538      	push	{r3, r4, r5, lr}
 8008a5a:	4604      	mov	r4, r0
 8008a5c:	4608      	mov	r0, r1
 8008a5e:	4611      	mov	r1, r2
 8008a60:	2200      	movs	r2, #0
 8008a62:	4d05      	ldr	r5, [pc, #20]	; (8008a78 <_lseek_r+0x20>)
 8008a64:	602a      	str	r2, [r5, #0]
 8008a66:	461a      	mov	r2, r3
 8008a68:	f7f9 feb0 	bl	80027cc <_lseek>
 8008a6c:	1c43      	adds	r3, r0, #1
 8008a6e:	d102      	bne.n	8008a76 <_lseek_r+0x1e>
 8008a70:	682b      	ldr	r3, [r5, #0]
 8008a72:	b103      	cbz	r3, 8008a76 <_lseek_r+0x1e>
 8008a74:	6023      	str	r3, [r4, #0]
 8008a76:	bd38      	pop	{r3, r4, r5, pc}
 8008a78:	200004d8 	.word	0x200004d8

08008a7c <_malloc_usable_size_r>:
 8008a7c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8008a80:	1f18      	subs	r0, r3, #4
 8008a82:	2b00      	cmp	r3, #0
 8008a84:	bfbc      	itt	lt
 8008a86:	580b      	ldrlt	r3, [r1, r0]
 8008a88:	18c0      	addlt	r0, r0, r3
 8008a8a:	4770      	bx	lr

08008a8c <_read_r>:
 8008a8c:	b538      	push	{r3, r4, r5, lr}
 8008a8e:	4604      	mov	r4, r0
 8008a90:	4608      	mov	r0, r1
 8008a92:	4611      	mov	r1, r2
 8008a94:	2200      	movs	r2, #0
 8008a96:	4d05      	ldr	r5, [pc, #20]	; (8008aac <_read_r+0x20>)
 8008a98:	602a      	str	r2, [r5, #0]
 8008a9a:	461a      	mov	r2, r3
 8008a9c:	f7f9 fe39 	bl	8002712 <_read>
 8008aa0:	1c43      	adds	r3, r0, #1
 8008aa2:	d102      	bne.n	8008aaa <_read_r+0x1e>
 8008aa4:	682b      	ldr	r3, [r5, #0]
 8008aa6:	b103      	cbz	r3, 8008aaa <_read_r+0x1e>
 8008aa8:	6023      	str	r3, [r4, #0]
 8008aaa:	bd38      	pop	{r3, r4, r5, pc}
 8008aac:	200004d8 	.word	0x200004d8

08008ab0 <_init>:
 8008ab0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008ab2:	bf00      	nop
 8008ab4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008ab6:	bc08      	pop	{r3}
 8008ab8:	469e      	mov	lr, r3
 8008aba:	4770      	bx	lr

08008abc <_fini>:
 8008abc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008abe:	bf00      	nop
 8008ac0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008ac2:	bc08      	pop	{r3}
 8008ac4:	469e      	mov	lr, r3
 8008ac6:	4770      	bx	lr
